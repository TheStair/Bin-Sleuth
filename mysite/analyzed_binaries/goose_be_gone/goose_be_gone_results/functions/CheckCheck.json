{
  "address": "0x17fb",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "read file on Linux",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "sub     rsp, 0x170",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x8 {var_10}], rax",
    "xor     eax, eax  {0x0}",
    "lea     rax, [rel data_2030]",
    "mov     rdi, rax  {data_2030, \"Please enter a SECOND super secr\u2026\"}",
    "mov     eax, 0x0",
    "call    printf",
    "mov     rdx, qword [rel __TMC_END__]",
    "lea     rax, [rbp-0x110 {buf}]",
    "mov     esi, 0x100",
    "mov     rdi, rax {buf}",
    "call    fgets",
    "test    rax, rax",
    "je      0x188b",
    "lea     rax, [rel data_2060]",
    "mov     rdi, rax  {data_2060, \"Error reading MFA Code.\"}",
    "call    puts",
    "jmp     0x1bbe",
    "lea     rax, [rbp-0x110 {buf}]",
    "lea     rdx, [rel data_205e]",
    "mov     rsi, rdx  {data_205e}",
    "mov     rdi, rax {buf}",
    "call    strcspn",
    "mov     byte [rbp+rax-0x110 {buf}], 0x0",
    "mov     eax, 0x0",
    "call    superdupersecret",
    "mov     qword [rbp-0x158 {var_160_1}], rax",
    "cmp     qword [rbp-0x158 {var_160_1}], 0x0",
    "jne     0x18b3",
    "mov     rax, qword [rbp-0x8 {var_10}]",
    "sub     rax, qword [fs:0x28]",
    "je      0x1bd2",
    "lea     rax, [rbp-0x110 {buf}]",
    "mov     rdi, rax {buf}",
    "call    strlen",
    "mov     qword [rbp-0x150 {var_158_1}], rax",
    "mov     rax, qword [rbp-0x150 {var_158_1}]",
    "add     rax, 0x1",
    "mov     rdi, rax",
    "call    malloc",
    "mov     qword [rbp-0x148 {var_150_1}], rax",
    "cmp     qword [rbp-0x148 {var_150_1}], 0x0",
    "jne     0x1910",
    "jmp     0x189f",
    "leave    {__saved_rbp}",
    "retn     {__return_addr}",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "mov     rdx, qword [rbp-0x148 {var_150_1}]",
    "mov     rcx, qword [rbp-0x158 {var_160_1}]",
    "lea     rax, [rbp-0x110 {buf}]",
    "mov     rsi, rcx",
    "mov     rdi, rax {buf}",
    "call    Honk",
    "mov     rdx, qword [rbp-0x150 {var_158_1}]",
    "mov     rax, qword [rbp-0x148 {var_150_1}]",
    "mov     rsi, rdx",
    "mov     rdi, rax",
    "call    to_hex_string_space",
    "mov     qword [rbp-0x140 {var_148_1}], rax",
    "cmp     qword [rbp-0x140 {var_148_1}], 0x0",
    "jne     0x198c",
    "lea     rax, [rel data_2098]",
    "mov     rdi, rax  {data_2098, \"Memory allocation failed for enc\u2026\"}",
    "call    puts",
    "mov     rax, qword [rbp-0x158 {var_160_1}]",
    "mov     rdi, rax",
    "call    free",
    "jmp     0x1bbe",
    "lea     rax, [rel data_2078]",
    "mov     rdi, rax  {data_2078, \"Error generating secret.\"}",
    "call    puts",
    "jmp     0x1bbe",
    "lea     rax, [rel data_20f8]  {\"09 30 27 3a 35 08 06 78 0d 1e 29\u2026\"}",
    "mov     qword [rbp-0x138 {var_140}], rax  {data_20f8, \"09 30 27 3a 35 08 06 78 0d 1e 29\u2026\"}",
    "lea     rax, [rel data_2148]  {\"17 3a 37 69 38 32 25 39 72 38 66\u2026\"}",
    "mov     qword [rbp-0x130 {var_138_1}], rax  {data_2148, \"17 3a 37 69 38 32 25 39 72 38 66\u2026\"}",
    "mov     rdx, qword [rbp-0x138 {var_140}]",
    "mov     rax, qword [rbp-0x140 {var_148_1}]",
    "mov     rsi, rdx  {data_20f8, \"09 30 27 3a 35 08 06 78 0d 1e 29\u2026\"}",
    "mov     rdi, rax",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x1b82",
    "lea     rax, [rel data_20c8]",
    "mov     rdi, rax  {data_20c8, \"Memory allocation failed for hex\u2026\"}",
    "call    puts",
    "mov     rax, qword [rbp-0x158 {var_160_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x148 {var_150_1}]",
    "mov     rdi, rax",
    "call    free",
    "jmp     0x1bbe",
    "lea     rax, [rel data_2426]",
    "mov     rdi, rax  {data_2426, \"MFA incorrect! Access denied.\"}",
    "call    puts",
    "lea     rax, [rel data_23ac]",
    "mov     rdi, rax  {data_23ac, \"MFA correct! Access granted.\"}",
    "call    puts",
    "lea     rdx, [rbp-0x168 {var_170}]",
    "mov     rax, qword [rbp-0x130 {var_138_1}]",
    "mov     rsi, rdx {var_170}",
    "mov     rdi, rax",
    "call    from_hex_string_space",
    "mov     qword [rbp-0x128 {var_130_1}], rax",
    "cmp     qword [rbp-0x128 {var_130_1}], 0x0",
    "jne     0x1a43",
    "mov     rax, qword [rbp-0x168 {var_170}]",
    "add     rax, 0x1",
    "mov     rdi, rax",
    "call    malloc",
    "mov     qword [rbp-0x120 {var_128_1}], rax",
    "cmp     qword [rbp-0x120 {var_128_1}], 0x0",
    "jne     0x1ab7",
    "lea     rax, [rel data_23d0]",
    "mov     rdi, rax  {data_23d0, \"Failed to convert hex string to \u2026\"}",
    "call    puts",
    "mov     rax, qword [rbp-0x158 {var_160_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x148 {var_150_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x140 {var_148_1}]",
    "mov     rdi, rax",
    "call    free",
    "jmp     0x1bbe",
    "mov     rax, qword [rbp-0x158 {var_160_1}]",
    "mov     rdi, rax",
    "call    strlen",
    "mov     qword [rbp-0x118 {var_120_1}], rax",
    "mov     qword [rbp-0x160 {i}], 0x0",
    "jmp     0x1b2f",
    "lea     rax, [rel data_23f8]",
    "mov     rdi, rax  {data_23f8, \"Memory allocation failed for dec\u2026\"}",
    "call    puts",
    "mov     rax, qword [rbp-0x158 {var_160_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x148 {var_150_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x140 {var_148_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x128 {var_130_1}]",
    "mov     rdi, rax",
    "call    free",
    "jmp     0x1bbe",
    "mov     rax, qword [rbp-0x168 {var_170}]",
    "cmp     qword [rbp-0x160 {i}], rax",
    "jb      0x1ada",
    "mov     rdx, qword [rbp-0x128 {var_130_1}]",
    "mov     rax, qword [rbp-0x160 {i}]",
    "add     rax, rdx",
    "movzx   eax, byte [rax]",
    "mov     esi, eax",
    "mov     rax, qword [rbp-0x160 {i}]",
    "mov     edx, 0x0",
    "div     qword [rbp-0x118 {var_120_1}]",
    "mov     rax, qword [rbp-0x158 {var_160_1}]",
    "add     rax, rdx",
    "movzx   ecx, byte [rax]",
    "mov     rdx, qword [rbp-0x120 {var_128_1}]",
    "mov     rax, qword [rbp-0x160 {i}]",
    "add     rax, rdx",
    "xor     esi, ecx",
    "mov     edx, esi",
    "mov     byte [rax], dl",
    "add     qword [rbp-0x160 {i}], 0x1",
    "mov     rdx, qword [rbp-0x168 {var_170}]",
    "mov     rax, qword [rbp-0x120 {var_128_1}]",
    "add     rax, rdx",
    "mov     byte [rax], 0x0",
    "mov     rax, qword [rbp-0x120 {var_128_1}]",
    "mov     rdi, rax",
    "call    puts",
    "mov     rax, qword [rbp-0x128 {var_130_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x120 {var_128_1}]",
    "mov     rdi, rax",
    "call    free",
    "jmp     0x1b91",
    "mov     rax, qword [rbp-0x158 {var_160_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x148 {var_150_1}]",
    "mov     rdi, rax",
    "call    free",
    "mov     rax, qword [rbp-0x140 {var_148_1}]",
    "mov     rdi, rax",
    "call    free"
  ],
  "high_level_IL": [
    "void* fsbase",
    "int64_t rax = *(fsbase + 0x28)",
    "printf(\"Please enter a SECOND super secr\u2026\")",
    "void buf",
    "if (fgets(&buf, 0x100, __TMC_END__) == 0)",
    "puts(\"Error reading MFA Code.\")",
    "*(&buf + strcspn(&buf, u\"\\n\u2026\")) = 0",
    "char* rax_5 = superdupersecret()",
    "if (rax_5 != 0)",
    "uint64_t rax_6 = strlen(&buf)",
    "int64_t rax_9 = malloc(rax_6 + 1)",
    "if (rax_9 != 0)",
    "Honk(&buf, rax_5, rax_9)",
    "char* rax_12 = to_hex_string_space(rax_9, rax_6)",
    "if (rax_12 != 0)",
    "void* const var_138_1 = \"17 3a 37 69 38 32 25 39 72 38 66\u2026\"",
    "if (strcmp(rax_12, \"09 30 27 3a 35 08 06 78 0d 1e 29\u2026\") != 0)",
    "puts(\"MFA incorrect! Access denied.\")",
    "label_1b9b:",
    "free(rax_5)",
    "free(rax_9)",
    "free(rax_12)",
    "puts(\"MFA correct! Access granted.\")",
    "int64_t var_170",
    "int64_t rax_18 = from_hex_string_space(var_138_1, &var_170)",
    "if (rax_18 != 0)",
    "char* str = malloc(var_170 + 1)",
    "if (str != 0)",
    "uint64_t rax_29 = strlen(rax_5)",
    "void* i = nullptr",
    "while (i u< var_170)",
    "*(i + str) = *(i + rax_18) ^ rax_5[modu.dp.q(0:i, rax_29)]",
    "i += 1",
    "str[var_170] = 0",
    "puts(str)",
    "free(rax_18)",
    "free(str)",
    "goto label_1b9b",
    "puts(\"Memory allocation failed for dec\u2026\")",
    "free(rax_5)",
    "free(rax_9)",
    "free(rax_12)",
    "free(rax_18)",
    "puts(\"Failed to convert hex string to \u2026\")",
    "free(rax_5)",
    "free(rax_9)",
    "free(rax_12)",
    "puts(\"Memory allocation failed for hex\u2026\")",
    "free(rax_5)",
    "free(rax_9)",
    "puts(\"Memory allocation failed for enc\u2026\")",
    "free(rax_5)",
    "puts(\"Error generating secret.\")",
    "if (rax == *(fsbase + 0x28))",
    "return rax - *(fsbase + 0x28)",
    "__stack_chk_fail()",
    "noreturn"
  ]
}