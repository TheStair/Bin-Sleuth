{
  "address": "0x7740",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23"
  ],
  "disassembly": [
    "endbr64 ",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     edi, dword [rsi+0xa8]",
    "mov     eax, dword [rdx+0xa8]",
    "cmp     eax, 0x3",
    "sete    sil",
    "cmp     eax, 0x9",
    "sete    al",
    "or      esi, eax",
    "cmp     edi, 0x3",
    "je      0x7798",
    "mov     eax, 0x1",
    "test    sil, sil",
    "je      0x77e8",
    "cmp     edi, 0x9",
    "je      0x7798",
    "mov     esi, dword [rdx+0xac]",
    "xor     edi, edi",
    "and     esi, 0xf000",
    "cmp     esi, 0x4000",
    "sete    dil",
    "sub     eax, edi",
    "jne     0x7793",
    "mov     rax, qword [rdx+0x60]",
    "xor     esi, esi",
    "cmp     qword [rcx+0x60], rax",
    "setg    al",
    "setl    sil",
    "movzx   eax, al",
    "sub     esi, eax",
    "mov     rax, qword [rdx+0x68]",
    "cmp     qword [rcx+0x68], rax",
    "setl    al",
    "setg    dil",
    "movzx   eax, al",
    "movzx   edi, dil",
    "sub     eax, edi",
    "lea     eax, [rax+rsi*2]",
    "test    eax, eax",
    "jne     0x7793",
    "mov     eax, dword [rcx+0xac]",
    "mov     edi, 0x1",
    "and     eax, 0xf000",
    "cmp     eax, 0x4000",
    "sete    al",
    "movzx   eax, al",
    "test    sil, sil",
    "je      0x77e8",
    "retn    ",
    "jmp     0x77a2",
    "mov     rsi, qword [rdx]",
    "mov     rdi, qword [rcx]",
    "jmp     strcmp",
    "sub     eax, edi",
    "je      0x77a2"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}