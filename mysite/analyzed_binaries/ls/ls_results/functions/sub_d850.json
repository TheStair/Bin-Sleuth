{
  "address": "0xd850",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "contain loop",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "check OS version/0dbc6332c9724004b686b44a39c40b94"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x2a8",
    "movzx   r13d, byte [rel data_23348]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "cmp     byte [rel data_23349], 0x0",
    "je      0xd930",
    "xor     ebx, ebx",
    "test    r13b, r13b",
    "je      0xd8b6",
    "cmp     dword [rel data_23344], 0x4",
    "je      0xd9f0",
    "cmp     byte [rel data_23333], 0x0",
    "jne     0xd990",
    "cmp     dword [rel data_23344], 0x4",
    "jne     0xd8a8",
    "mov     byte [rbp-0x2ac], 0x0",
    "mov     rcx, qword [rdi+0x20]",
    "mov     r8, 0xcccccccccccccccd",
    "lea     rdi, [rbp-0x2ac]",
    "nop     dword [rax]",
    "movsxd  rbx, dword [rel data_232c4]",
    "add     rbx, 0x1",
    "test    r13b, r13b",
    "je      0xd9e0",
    "cmp     dword [rel data_23344], 0x4",
    "je      0xda60",
    "mov     rax, qword [r12+0xc8]",
    "test    rax, rax",
    "je      0xd9bc",
    "movsxd  rax, dword [rel data_232c0]",
    "add     rax, 0x1",
    "cmp     byte [r12+0xb8], 0x0",
    "mov     eax, 0x2",
    "je      0xd8b3",
    "mov     rax, rcx",
    "sub     rdi, 0x1",
    "mul     r8",
    "mov     rax, rcx",
    "shr     rdx, 0x3",
    "lea     rsi, [rdx+rdx*4]",
    "add     rsi, rsi",
    "sub     rax, rsi",
    "add     eax, 0x30",
    "mov     byte [rdi], al",
    "mov     rax, rcx",
    "mov     rcx, rdx",
    "cmp     rax, 0x9",
    "ja      0xda10",
    "call    strlen",
    "lea     rbx, [rax+0x1]",
    "test    r13b, r13b",
    "jne     0xd948",
    "cmp     byte [rel data_23333], 0x0",
    "jne     0xd99d",
    "mov     rdi, qword [r12+0xb0]",
    "call    strlen",
    "add     rax, 0x1",
    "jmp     0xd9a8",
    "movsxd  rax, dword [rel data_232ac]",
    "add     rax, 0x1",
    "mov     edx, dword [r12+0xc4]",
    "mov     rdi, qword [r12]",
    "mov     rsi, qword [rel data_235a0]",
    "call    sub_b040",
    "jmp     0xd8d4",
    "add     rbx, rax",
    "mov     eax, dword [rel data_23334]",
    "test    eax, eax",
    "je      0xd902",
    "add     rbx, rax",
    "mov     rdi, qword [r12+0x58]",
    "mov     r8, qword [rel data_232d0]",
    "lea     rsi, [rbp-0x2c0]",
    "mov     ecx, 0x200",
    "mov     edx, dword [rel data_232dc]",
    "call    sub_cb80",
    "mov     rdi, rax",
    "call    strlen",
    "add     rax, 0x1",
    "jmp     0xd8b3",
    "cmp     byte [rel data_23333], 0x0",
    "je      0xd8c3",
    "jmp     0xd8c3",
    "add     rbx, rax",
    "mov     rax, qword [r12+0xc8]",
    "test    rax, rax",
    "jne     0xd8d4",
    "mov     rax, qword [rbp-0x28]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xda76",
    "mov     edx, dword [r12+0xa8]",
    "mov     esi, dword [r12+0x30]",
    "movzx   edi, byte [r12+0xb8]",
    "call    sub_bd80",
    "cmp     al, 0x1",
    "sbb     rbx, 0xffffffffffffffff",
    "nop     dword [rax+rax]",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x2a8",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     rbp",
    "retn    "
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}