{
  "address": "0xe910",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x1000",
    "or      qword [rsp], 0x0",
    "sub     rsp, 0x1000",
    "or      qword [rsp], 0x0",
    "sub     rsp, 0x68",
    "mov     r13, qword [rbp+0x10]",
    "mov     qword [rbp-0x2068], rdi",
    "mov     rbx, rdi",
    "mov     r12, rcx",
    "mov     r14d, r8d",
    "mov     qword [rbp-0x2058], r9",
    "lea     rax, [rbp-0x2040]",
    "xor     r8d, r8d",
    "lea     rdi, [rbp-0x2048]",
    "lea     r9, [rbp-0x2049]",
    "mov     rcx, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rcx",
    "xor     ecx, ecx",
    "mov     ecx, edx",
    "mov     rdx, rsi",
    "mov     rsi, rbx",
    "mov     qword [rbp-0x2080], rax",
    "mov     qword [rbp-0x2048], rax",
    "call    sub_14230",
    "movzx   r15d, byte [rbp-0x2049]",
    "mov     rbx, rax",
    "test    r15b, r15b",
    "je      0xe9af",
    "mov     r14, qword [rel stdout]",
    "test    r14b, r14b",
    "jne     0xec10",
    "test    r13, r13",
    "je      0xebf0",
    "mov     edi, 0x4",
    "call    sub_bbb0",
    "mov     edx, eax",
    "lea     rax, [rel data_230c0]",
    "test    dl, dl",
    "jne     0xec40",
    "mov     r14, qword [rel stdout]",
    "add     qword [rel data_23350], 0x1",
    "mov     rdi, qword [r14]",
    "mov     rax, qword [rdi+0x28]",
    "cmp     rax, qword [rdi+0x30]",
    "jae     0xeca9",
    "mov     qword [rbp-0x2070], rbx",
    "xor     r12d, r12d",
    "mov     qword [rbp-0x2078], 0x0",
    "jmp     0xea91",
    "movzx   r12d, byte [rel data_232ca]",
    "test    r12b, r12b",
    "jne     0xeb90",
    "mov     rdi, rax",
    "call    sub_be90",
    "lea     rdi, [rel data_230d0]",
    "call    sub_be90",
    "lea     rax, [rel data_230c0]",
    "jmp     0xe9d6",
    "mov     rdi, rax",
    "call    sub_be90",
    "mov     rdi, r12",
    "call    sub_be90",
    "lea     rdi, [rel data_230d0]",
    "call    sub_be90",
    "mov     esi, 0x20",
    "call    __overflow",
    "jmp     0xe9b6",
    "lea     rdx, [rax+0x1]",
    "mov     qword [rdi+0x28], rdx",
    "mov     byte [rax], 0x20",
    "jmp     0xe9b6",
    "mov     rax, qword [rbp-0x2058]",
    "test    rax, rax",
    "je      0xebc0",
    "cmp     byte [rel data_232c9], 0x1",
    "jne     0xeba2",
    "mov     qword [rbp-0x2070], rbx",
    "mov     qword [rbp-0x2078], 0x0",
    "test    r12, r12",
    "je      0xe9f2",
    "mov     rcx, qword [r14]",
    "mov     rdx, qword [rbp-0x2070]",
    "mov     esi, 0x1",
    "mov     rdi, qword [rbp-0x2078]",
    "add     rdi, qword [rbp-0x2048]",
    "call    fwrite_unlocked",
    "add     qword [rel data_23350], rbx",
    "jmp     0xeaf0",
    "cmp     byte [rel data_23678], 0x0",
    "je      0xeab2",
    "mov     qword [rbp-0x2070], rbx",
    "xor     r12d, r12d",
    "mov     qword [rbp-0x2078], 0x0",
    "jmp     0xea1e",
    "test    r15b, r15b",
    "je      0xec60",
    "test    r13, r13",
    "je      0xeb3a",
    "mov     rcx, qword [r14]",
    "mov     rdx, qword [rbp-0x2070]",
    "mov     esi, 0x1",
    "mov     rdi, qword [rbp-0x2078]",
    "add     rdi, qword [rbp-0x2048]",
    "call    fwrite_unlocked",
    "add     qword [rel data_23350], rbx",
    "cmp     byte [rel data_23678], 0x0",
    "je      0xeaf0",
    "mov     rdi, rax",
    "call    sub_dde0",
    "mov     rdi, qword [rel data_235a8]",
    "xor     esi, esi",
    "call    sub_e7a0",
    "mov     esi, 0x1",
    "mov     rdi, r13",
    "mov     qword [rbp-0x2060], rax",
    "call    sub_e7a0",
    "lea     rcx, [rel data_1b1e5[8]]  {\"/\"}",
    "mov     edi, 0x2",
    "mov     rdx, qword [rbp-0x2060]",
    "cmp     byte [rax], 0x2f",
    "mov     r8, rax",
    "lea     rax, [rel data_1af54]",
    "cmove   rcx, rax",
    "lea     rsi, [rel data_1af3a]",
    "xor     eax, eax",
    "mov     qword [rbp-0x2088], r8",
    "call    __printf_chk",
    "mov     rdi, qword [rbp-0x2060]",
    "call    free",
    "mov     rdi, qword [rbp-0x2088]",
    "call    free",
    "mov     rax, qword [rbp-0x2048]",
    "mov     rdi, qword [r14]",
    "movzx   edx, byte [rax]",
    "mov     rax, qword [rdi+0x28]",
    "cmp     rax, qword [rdi+0x30]",
    "jae     0xecb8",
    "mov     rdi, qword [rbp-0x2048]",
    "mov     rax, qword [rbp-0x2068]",
    "cmp     rdi, rax",
    "je      0xeb5e",
    "mov     rcx, qword [r14]",
    "mov     edx, 0x6",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_1af4e]",
    "call    fwrite_unlocked",
    "test    r12b, r12b",
    "je      0xeb3a",
    "mov     rdi, qword [rbp-0x2058]",
    "call    sub_dde0",
    "movzx   esi, dl",
    "call    __overflow",
    "jmp     0xec81",
    "lea     rcx, [rax+0x1]",
    "mov     qword [rdi+0x28], rcx",
    "mov     byte [rax], dl",
    "movzx   eax, r15b",
    "add     rax, rbx",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xecc2",
    "mov     rax, qword [rbp-0x2080]",
    "cmp     rdi, rax",
    "je      0xeb5e",
    "mov     rax, qword [rbp-0x2048]",
    "mov     rdi, qword [r14]",
    "movzx   edx, byte [rax+rbx-0x1]",
    "mov     rax, qword [rdi+0x28]",
    "cmp     rax, qword [rdi+0x30]",
    "jae     0xec9c",
    "mov     qword [rbp-0x2078], 0x1",
    "lea     rax, [rbx-0x2]",
    "mov     qword [rbp-0x2070], rax",
    "jmp     0xea1e",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x2068",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "call    free",
    "movzx   esi, dl",
    "call    __overflow",
    "jmp     0xeb3a",
    "lea     rcx, [rax+0x1]",
    "mov     qword [rdi+0x28], rcx",
    "mov     byte [rax], dl"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}