{
  "address": "0x4da0",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "terminate process",
    "get hostname",
    "parse credit card information/ec3c9303e8bc46be9fce39fa86e0e7e3",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/14b9db6dcaf34a3e86e9217d3cc476a8",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "decompress data using LZO/87c7a2ec75aa43fe877541de4275123a",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/7a997b34591146dbbd4411d920ff141c",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/5d37b64795ca4da78dcc19574a757de4",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check for software breakpoints/eab8e97e968348cd9975bb039b618db9",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/88b7572ed916436d804701d7ca2c8848",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "search for credit card data/e92219581e504df894450f60474cb51f",
    "load shellcode via donut/c9a72a5fdf6e462ea071ab99fb8585e2/5c9bba15e9b64c668b01383d9c9afe0e",
    "encode data using XOR",
    "write file on Linux",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "hash data using aphash/98bdcb90423346b7a1fc9c166925c881",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/2ee106c7c5d34df799b377fb04fb2ee1",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/dec108a2f8464ac388ec29affb61c4d8",
    "encode data using Base64",
    "query environment variable",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "encrypt data using speck/4b1f3c27d17344b39cf9dede3bcf8b4b",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "contain loop",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/1d2aacee85cc43a0a1c1ba47e394ae52",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp {__saved_rbp}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x108",
    "mov     dword [rbp-0xe4 {var_ec}], edi",
    "mov     rbx, qword [rsi]",
    "mov     qword [rbp-0xf0 {var_f8}], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "test    rbx, rbx",
    "je      0x6d03",
    "mov     rax, qword [rel stderr]",
    "mov     edx, 0x37",
    "mov     esi, 0x1",
    "lea     rdi, [rel data_1d5d8]  {\"A NULL argv[0] was passed throug\u2026\"}",
    "mov     rcx, qword [rax]",
    "call    fwrite",
    "call    abort",
    "{ Does not return }",
    "mov     esi, 0x2f",
    "mov     rdi, rbx",
    "call    strrchr",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x4e23",
    "mov     rax, qword [rel program_invocation_name]",
    "mov     qword [rel data_23460], rbx",
    "lea     rsi, [rel data_1af54]",
    "mov     edi, 0x6",
    "lea     r12, [rbp-0xd4 {opt_index}]",
    "lea     r15, [rel data_22340]",
    "mov     qword [rax], rbx",
    "lea     rbx, [rel data_1ae4e[4]]",
    "lea     r14, [rel data_1d610]",
    "call    setlocale",
    "lea     rsi, [rel data_1b029]  {\"/usr/share/locale\"}",
    "mov     rdi, rbx  {data_1ae4e[4], \"coreutils\"}",
    "call    bindtextdomain",
    "mov     rdi, rbx  {data_1ae4e[4], \"coreutils\"}",
    "lea     rbx, [rel jump_table_19194]",
    "call    textdomain",
    "lea     rdi, [rel sub_b880]",
    "mov     dword [rel data_23088], 0x2",
    "call    sub_18d90",
    "movdqa  xmm0, xmmword [rel data_1daf0]",
    "mov     dword [rel data_2372c], 0x0",
    "mov     byte [rel data_23728], 0x1",
    "mov     qword [rel data_23720], 0x0",
    "mov     qword [rbp-0x118 {var_120_1}], 0xffffffffffffffff",
    "mov     qword [rbp-0x120 {var_128_1}], 0xffffffffffffffff",
    "mov     dword [rbp-0xf8 {var_100_1}], 0xffffffff  {0xffffffff}",
    "mov     dword [rbp-0x100 {var_108_1}], 0xffffffff  {0xffffffff}",
    "mov     dword [rbp-0x104 {var_10c_1}], 0xffffffff  {0xffffffff}",
    "mov     dword [rbp-0xe8 {var_f0_1}], 0xffffffff  {0xffffffff}",
    "mov     byte [rbp-0x105 {var_10d_1}], 0x0",
    "mov     qword [rbp-0x110 {var_118_1}], 0x0",
    "movaps  xmmword [rel data_23710], xmm0",
    "lea     r13, [rax+0x1]",
    "mov     rax, r13",
    "sub     rax, rbx",
    "cmp     rax, 0x6",
    "jle     0x4e23",
    "cmp     qword [rel data_232d0], 0x0",
    "je      0x6151  {data_232d0}",
    "add     eax, 0x83",
    "cmp     eax, 0x114",
    "ja      0x6902",
    "lea     rdi, [r12-0x6]",
    "mov     edx, 0x7",
    "lea     rsi, [rel data_1b01d]  {\"/.libs/\"}",
    "call    strncmp",
    "test    eax, eax",
    "je      0x4f8e",
    "lea     rdi, [rel data_1b0ea]  {\"LS_BLOCK_SIZE\"}",
    "call    getenv",
    "mov     rbx, rax",
    "mov     rdi, rax",
    "call    sub_12420",
    "test    rbx, rbx",
    "je      0x6a60",
    "mov     eax, dword [rbp-0xe8 {var_f0_1}]",
    "test    eax, eax",
    "js      0x6a33",
    "{Case 0x2-0x81, 0x83-0xb3, 0xb5-0xc3, 0xc8, 0xcd-0xce, 0xd0, 0xd2-0xd3, 0xd9-0xda, 0xdc, 0xde-0xe3, 0xe8, 0xed, 0xfc-0x102}",
    "mov     edi, 0x2",
    "call    sub_90e0",
    "{ Does not return }",
    "movsxd  rax, dword [rbx+rax*4]",
    "add     rax, rbx",
    "\u2753jmp     rax",
    "mov     edx, 0x3",
    "lea     rsi, [rel data_1b025]",
    "mov     rdi, r13",
    "mov     rbx, r13",
    "call    strncmp",
    "test    eax, eax",
    "jne     0x4e23",
    "lea     rdi, [rel data_1b0ea[3]]  {\"BLOCK_SIZE\"}",
    "call    getenv",
    "test    rax, rax",
    "jne     0x6171",
    "mov     eax, dword [rel data_232dc]",
    "mov     dword [rel data_232d8], eax",
    "mov     rax, qword [rel data_232d0]",
    "mov     qword [rel data_23080], rax",
    "call    sub_9ee0",
    "movzx   eax, al",
    "add     eax, 0x1",
    "jmp     0x570b",
    "mov     dword [rel data_23344], eax",
    "sub     eax, 0x2",
    "cmp     eax, 0x2",
    "jbe     0x5726",
    "{Case 0x114}",
    "xor     eax, eax  {0x0}",
    "cmp     dword [rbp-0xe8 {var_f0_1}], 0x0",
    "mov     byte [rel data_23078], 0x0",
    "setne   al",
    "xor     r8d, r8d  {0x0}",
    "mov     byte [rel data_23342], 0x0",
    "mov     dword [rbp-0xe8 {var_f0_1}], eax",
    "mov     dword [rbp-0x100 {var_108_1}], r8d  {0x0}",
    "{Case 0x10f}",
    "mov     dword [rbp-0x104 {var_10c_1}], 0x0",
    "jmp     0x4f10",
    "{Case 0xea}",
    "mov     byte [rel data_2308d], 0x0",
    "{Case 0xef}",
    "xor     eax, eax  {0x0}",
    "mov     dword [rbp-0xe8 {var_f0_1}], eax  {0x0}",
    "jmp     0x4f10",
    "{Case 0x113}",
    "mov     rax, qword [rel optarg]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x110 {var_118_1}], rax",
    "jmp     0x4f10",
    "{Case 0x112}",
    "mov     rax, qword [rel optarg]",
    "lea     r13, [rel data_19740]",
    "lea     r8, [rel sub_99e0]",
    "mov     rcx, r13  {data_19740}",
    "lea     rdx, [rel data_22240]",
    "lea     rdi, [rel data_1b07c]  {\"--time\"}",
    "mov     rsi, qword [rax]",
    "call    sub_13ec0",
    "mov     eax, dword [r13+rax*4]",
    "mov     dword [rel data_243e4], eax",
    "jmp     0x4f10",
    "{Case 0x111}",
    "mov     rax, qword [rel optarg]",
    "lea     r13, [rel data_19770]",
    "lea     r8, [rel sub_99e0]",
    "mov     rcx, r13  {data_19770}",
    "lea     rdx, [rel data_222a0]",
    "lea     rdi, [rel data_1b075]  {\"--sort\"}",
    "mov     rsi, qword [rax]",
    "call    sub_13ec0",
    "mov     eax, dword [r13+rax*4]",
    "mov     dword [rbp-0xf8 {var_100_1}], eax",
    "jmp     0x4f10",
    "{Case 0x110}",
    "mov     dword [rel data_232dc], 0x90",
    "mov     dword [rel data_232d8], 0x90",
    "mov     qword [rel data_232d0], 0x1",
    "mov     qword [rel data_23080], 0x1",
    "jmp     0x4f10",
    "{Case 0x10e}",
    "mov     rax, qword [rel optarg]",
    "lea     r13, [rel data_196e0]",
    "lea     r8, [rel sub_99e0]",
    "mov     rcx, r13  {data_196e0}",
    "lea     rdx, [rel data_229c0]",
    "lea     rdi, [rel data_1b0b2]  {\"--quoting-style\"}",
    "mov     rsi, qword [rax]",
    "call    sub_13ec0",
    "mov     eax, dword [r13+rax*4]",
    "mov     dword [rbp-0x100 {var_108_1}], eax",
    "jmp     0x4f10",
    "{Case 0x10d}",
    "mov     rax, qword [rel optarg]",
    "lea     r13, [rel data_19710]",
    "lea     r8, [rel sub_99e0]",
    "mov     rcx, r13  {data_19710}",
    "lea     rdx, [rel data_221c0]",
    "lea     rdi, [rel data_1b0a0]  {\"--indicator-style\"}",
    "mov     rsi, qword [rax]",
    "call    sub_13ec0",
    "mov     eax, dword [r13+rax*4]",
    "mov     dword [rel data_23334], eax",
    "jmp     0x4f10",
    "{Case 0x10c}",
    "mov     rax, qword [rel optarg]",
    "mov     rsi, qword [rax]",
    "test    rsi, rsi",
    "je      0x5160",
    "{Case 0x10b}",
    "mov     edi, 0x10",
    "call    malloc",
    "test    rax, rax",
    "je      0x641a",
    "{Case 0x10a}",
    "mov     byte [rel data_23701], 0x1",
    "jmp     0x4f10",
    "{Case 0x109}",
    "xor     r9d, r9d  {0x0}",
    "lea     rax, [rel data_1b011]  {\"full-iso\"}",
    "mov     dword [rbp-0xe8 {var_f0_1}], r9d  {0x0}",
    "mov     qword [rbp-0x110 {var_118_1}], rax  {data_1b011, \"full-iso\"}",
    "jmp     0x4f10",
    "{Case 0x108}",
    "mov     rax, qword [rel optarg]",
    "lea     r13, [rel data_19720]",
    "lea     r8, [rel sub_99e0]",
    "mov     rcx, r13  {data_19720}",
    "lea     rdx, [rel data_22200]",
    "lea     rdi, [rel data_1b083]  {\"--format\"}",
    "mov     rsi, qword [rax]",
    "call    sub_13ec0",
    "mov     eax, dword [r13+rax*4]",
    "mov     dword [rbp-0xe8 {var_f0_1}], eax",
    "jmp     0x4f10",
    "{Case 0x107}",
    "mov     dword [rel data_23334], 0x2",
    "jmp     0x4f10",
    "{Case 0x106}",
    "mov     dword [rel data_2333c], 0x3",
    "jmp     0x4f10",
    "{Case 0x105}",
    "mov     rax, qword [rel optarg]",
    "mov     rsi, qword [rax]",
    "test    rsi, rsi",
    "je      0x527e",
    "{Case 0x104}",
    "mov     r13, qword [rel optarg]",
    "mov     rdi, qword [r13]",
    "call    sub_12420",
    "test    eax, eax",
    "jne     0x6c17",
    "{Case 0x103}",
    "mov     byte [rel data_23343], 0x1",
    "jmp     0x4f10",
    "{Case 0xfb}",
    "mov     dword [rbp-0xe8 {var_f0_1}], 0x3",
    "jmp     0x4f10",
    "{Case 0xfa}",
    "mov     r13, qword [rel optarg]",
    "mov     rdi, qword [r13]",
    "call    sub_9070",
    "mov     qword [rbp-0x118 {var_120_1}], rax",
    "test    rax, rax",
    "jns     0x4f10",
    "{Case 0xf9}",
    "mov     dword [rbp-0xf8 {var_100_1}], 0x4",
    "jmp     0x4f10",
    "{Case 0xf8}",
    "mov     dword [rel data_243e4], 0x2",
    "jmp     0x4f10",
    "{Case 0xf7}",
    "mov     dword [rbp-0xf8 {var_100_1}], 0x5",
    "jmp     0x4f10",
    "{Case 0xf6}",
    "mov     byte [rel data_23348], 0x1",
    "jmp     0x4f10",
    "{Case 0xf5}",
    "mov     byte [rel data_23488], 0x1",
    "jmp     0x4f10",
    "{Case 0xf4}",
    "mov     dword [rbp-0x104 {var_10c_1}], 0x1",
    "jmp     0x4f10",
    "{Case 0xf3}",
    "mov     dword [rel data_23334], 0x1",
    "jmp     0x4f10",
    "{Case 0xf2}",
    "xor     r13d, r13d  {0x0}",
    "mov     byte [rel data_2308c], 0x0",
    "mov     dword [rbp-0xe8 {var_f0_1}], r13d  {0x0}",
    "jmp     0x4f10",
    "{Case 0xf1}",
    "xor     eax, eax  {0x0}",
    "mov     byte [rel data_232cc], 0x1",
    "mov     dword [rbp-0xe8 {var_f0_1}], eax  {0x0}",
    "jmp     0x4f10",
    "{Case 0xf0}",
    "mov     dword [rbp-0xe8 {var_f0_1}], 0x4",
    "jmp     0x4f10",
    "{Case 0xec}",
    "mov     byte [rel data_23349], 0x1",
    "jmp     0x4f10",
    "{Case 0xeb}",
    "mov     dword [rel data_232dc], 0xb0",
    "mov     dword [rel data_232d8], 0xb0",
    "mov     qword [rel data_232d0], 0x1",
    "mov     qword [rel data_23080], 0x1",
    "jmp     0x4f10",
    "{Case 0xe9}",
    "cmp     dword [rbp-0xe8 {var_f0_1}], 0x0",
    "mov     dword [rel data_2348c], 0x2",
    "jne     0x5435",
    "{Case 0xe7}",
    "mov     byte [rel data_23338], 0x1",
    "jmp     0x4f10",
    "{Case 0xe6}",
    "mov     dword [rel data_243e4], 0x1",
    "jmp     0x4f10",
    "{Case 0xe5}",
    "mov     dword [rbp-0x100 {var_108_1}], 0x7",
    "jmp     0x4f10",
    "{Case 0xe4}",
    "mov     dword [rel data_2348c], 0x2",
    "jmp     0x4f10",
    "{Case 0xdd}",
    "mov     byte [rel data_23333], 0x1",
    "jmp     0x4f10",
    "{Case 0xdb}",
    "mov     dword [rbp-0xf8 {var_100_1}], 0x1",
    "jmp     0x4f10",
    "{Case 0xd8}",
    "mov     dword [rbp-0xf8 {var_100_1}], 0x6",
    "jmp     0x4f10",
    "{Case 0xd7}",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1b064]  {\"invalid tab size\"}",
    "call    dcgettext",
    "xor     esi, esi  {0x0}",
    "lea     rdx, [rbp-0xc0 {var_c8}]",
    "lea     rcx, [rel data_1af54]",
    "mov     qword [rbp-0x128 {var_130}], rax",
    "mov     rax, qword [rel optarg]",
    "mov     r13, qword [rax]",
    "mov     rdi, r13",
    "call    sub_11f60",
    "test    eax, eax",
    "jne     0x5cf6",
    "{Case 0xd6}",
    "mov     dword [rbp-0xf8 {var_100_1}], 0x3",
    "jmp     0x4f10",
    "{Case 0xd5}",
    "mov     byte [rel data_23700], 0x1",
    "jmp     0x4f10",
    "{Case 0xd4}",
    "mov     dword [rbp-0x100 {var_108_1}], 0x5",
    "jmp     0x4f10",
    "{Case 0xd1}",
    "xor     r11d, r11d  {0x0}",
    "mov     dword [rbp-0x100 {var_108_1}], r11d  {0x0}",
    "jmp     0x4f10",
    "{Case 0xcf}",
    "mov     dword [rel data_2333c], 0x4",
    "jmp     0x4f10",
    "{Case 0xcc}",
    "mov     rax, qword [rel optarg]",
    "mov     rdi, qword [rax]",
    "call    sub_e470",
    "jmp     0x4f10",
    "{Case 0xcb}",
    "mov     dword [rel data_2333c], 0x2",
    "jmp     0x4f10",
    "{Case 0xca}",
    "mov     byte [rel data_2308c], 0x0",
    "jmp     0x4f10",
    "{Case 0xc9}",
    "mov     rax, qword [rel optarg]",
    "mov     rsi, qword [rax]",
    "test    rsi, rsi",
    "je      0x562b",
    "{Case 0xc7}",
    "mov     byte [rel data_23678], 0x1",
    "jmp     0x4f10",
    "{Case 0xc6}",
    "mov     dword [rbp-0xe8 {var_f0_1}], 0x2",
    "jmp     0x4f10",
    "{Case 0xc5}",
    "lea     rdi, [rel data_1b056]",
    "call    sub_e470",
    "lea     rdi, [rel data_1b055]",
    "call    sub_e470",
    "jmp     0x4f10",
    "{Case 0xc4}",
    "mov     dword [rel data_2348c], 0x1",
    "jmp     0x4f10",
    "{Case 0xb4}",
    "xor     eax, eax  {0x0}",
    "cmp     dword [rbp-0xe8 {var_f0_1}], 0x0",
    "setne   al",
    "mov     dword [rbp-0xe8 {var_f0_1}], eax",
    "jmp     0x4f10",
    "{Case 0x0}",
    "lea     rdi, [rel data_1b0c2]  {\"David MacKenzie\"}",
    "mov     rsi, rdi  {data_1b0c2, \"David MacKenzie\"}",
    "call    sub_8c20",
    "lea     rdi, [rel data_1b0d2]  {\"Richard M. Stallman\"}",
    "mov     rsi, rdi  {data_1b0d2, \"Richard M. Stallman\"}",
    "mov     rbx, rax",
    "call    sub_8c20",
    "mov     r9, rbx",
    "lea     rcx, [rel data_1b0e6]",
    "lea     rdx, [rel data_1ae4e]  {\"GNU coreutils\"}",
    "mov     r8, rax",
    "mov     rax, qword [rel stdout]",
    "push    rdi {var_140}",
    "lea     rsi, [rel data_1ae4e[0xb]]  {\"ls\"}",
    "push    0x0 {var_148}",
    "mov     rdi, qword [rax]",
    "xor     eax, eax  {0x0}",
    "call    sub_11790",
    "xor     edi, edi  {0x0}",
    "call    exit",
    "{ Does not return }",
    "{Case 0xee}",
    "mov     byte [rbp-0x105 {var_10d_1}], 0x1",
    "jmp     0x4f10",
    "{Case 0x1}",
    "xor     edi, edi  {0x0}",
    "call    sub_90e0",
    "{ Does not return }",
    "mov     rax, qword [rel program_invocation_short_name]",
    "lea     rbx, [r12+0x4]",
    "mov     qword [rax], rbx",
    "jmp     0x4e23",
    "jmp     0x618b",
    "mov     qword [rel data_232d0], 0x400",
    "xor     esi, esi  {0x0}",
    "mov     dword [rel data_232dc], esi  {0x0}",
    "jmp     0x56fd",
    "cmp     qword [rbp-0x118 {var_120_1}], 0x0",
    "js      0x658c",
    "cmp     byte [rel data_23342], 0x0",
    "je      0x5d98  {data_23342}",
    "mov     rsi, qword [rbp-0xf0 {var_f8}]",
    "mov     r8, r12 {opt_index}",
    "mov     rcx, r15  {data_22340}",
    "mov     rdx, r14  {data_1d610, \"abcdfghiklmnopqrstuvw:xABCDFGHI:\u2026\"}",
    "mov     dword [rbp-0xd4 {opt_index}], 0xffffffff  {0xffffffff}",
    "mov     edi, dword [rbp-0xe4 {var_ec}]",
    "call    getopt_long",
    "cmp     eax, 0xffffffff",
    "je      0x56ef",
    "mov     eax, 0x1",
    "lea     r13, [rel data_197a0]",
    "lea     rdx, [rel data_222e0]",
    "lea     r8, [rel sub_99e0]",
    "mov     rcx, r13  {data_197a0}",
    "lea     rdi, [rel data_1b094]  {\"--hyperlink\"}",
    "call    sub_13ec0",
    "mov     edx, dword [r13+rax*4]",
    "cmp     edx, 0x1",
    "je      0x5160",
    "call    sub_e430",
    "{ Does not return }",
    "mov     rdx, qword [rel optarg]",
    "movq    xmm0, qword [rdx]",
    "movhps  xmm0, qword [rel data_23480]",
    "mov     qword [rel data_23480], rax",
    "movups  xmmword [rax], xmm0",
    "jmp     0x4f10",
    "mov     eax, 0x1",
    "lea     r13, [rel data_197a0]",
    "lea     rdx, [rel data_222e0]",
    "lea     r8, [rel sub_99e0]",
    "mov     rcx, r13  {data_197a0}",
    "lea     rdi, [rel data_1b08c]  {\"--color\"}",
    "call    sub_13ec0",
    "mov     edx, dword [r13+rax*4]",
    "cmp     edx, 0x1",
    "je      0x527e",
    "mov     r13, qword [r13]",
    "mov     edx, dword [rbp-0xd4 {opt_index}]",
    "mov     r12d, dword [rel data_23088]",
    "cmp     eax, 0x3",
    "ja      0x6c9d",
    "mov     eax, dword [rel data_232dc]",
    "mov     dword [rel data_232d8], eax",
    "mov     rax, qword [rel data_232d0]",
    "mov     qword [rel data_23080], rax",
    "jmp     0x4f10",
    "mov     rdi, qword [r13]",
    "call    sub_9cf0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1b03b]  {\"invalid line width\"}",
    "xor     edi, edi  {0x0}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     r8, rbx",
    "xor     esi, esi  {0x0}",
    "mov     edi, 0x2",
    "mov     rcx, rax",
    "lea     rdx, [rel data_1b04e]  {\"%s: %s\"}",
    "xor     eax, eax  {0x0}",
    "call    error",
    "mov     byte [rel data_23342], 0x0",
    "mov     byte [rel data_23330], 0x0",
    "mov     byte [rel data_23348], 0x0",
    "mov     dword [rbp-0xf8 {var_100_1}], 0x6",
    "jmp     0x4f10",
    "mov     dword [rbp-0xe8 {var_f0_1}], 0xffffffff  {0xffffffff}",
    "cmp     eax, 0x1",
    "je      0x5517",
    "mov     rax, qword [rbp-0xc0 {var_c8}]",
    "mov     qword [rbp-0x120 {var_128_1}], rax",
    "test    rax, rax",
    "jns     0x4f10",
    "mov     dword [rel data_23334], 0x3",
    "jmp     0x4f10",
    "lea     r13, [rel data_197a0]",
    "lea     r8, [rel sub_99e0]",
    "mov     rcx, r13  {data_197a0}",
    "lea     rdx, [rel data_222e0]",
    "lea     rdi, [rel data_1b059]  {\"--classify\"}",
    "call    sub_13ec0",
    "mov     eax, dword [r13+rax*4]",
    "cmp     eax, 0x1",
    "je      0x562b",
    "cmp     byte [rbp-0x105 {var_10d_1}], 0x0",
    "je      0x56fd",
    "call    sub_9ee0",
    "test    al, al",
    "je      0x65c9",
    "mov     rax, qword [rbp-0x118 {var_120_1}]",
    "cmp     qword [rbp-0x118 {var_120_1}], 0x0",
    "jns     0x5734",
    "xor     eax, eax  {0x0}",
    "cmp     edx, 0x2",
    "jne     0x5165",
    "xor     eax, eax  {0x0}",
    "cmp     edx, 0x2",
    "jne     0x5283",
    "lea     rsi, [rel data_1afd6]  {\"invalid %s%s argument '%s'\"}",
    "cmp     eax, 0x4",
    "je      0x6c42",
    "sub     eax, 0x1",
    "lea     rsi, [rel data_1d5b0]  {\"invalid suffix in %s%s argument \u2026\"}",
    "lea     rax, [rel data_1aff1]",
    "cmove   rsi, rax  {data_1aff1, \"%s%s argument '%s' too large\"}",
    "call    __errno_location",
    "mov     dword [rax], 0x4b",
    "cmp     eax, 0x3",
    "jne     0x5522",
    "cmp     eax, 0x2",
    "jne     0x4f10",
    "lea     rdi, [rel data_1b0f8]  {\"COLUMNS\"}",
    "call    getenv",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x65e6",
    "xor     eax, eax  {0x0}",
    "mov     esi, 0x5413",
    "mov     edi, 0x1",
    "lea     rdx, [rbp-0xc0 {var_c8}]",
    "call    ioctl",
    "test    eax, eax",
    "js      0x65c9",
    "cmp     dword [rbp-0x104 {var_10c_1}], 0x0",
    "js      0x5f8b",
    "mov     rax, qword [rbp-0x120 {var_128_1}]",
    "test    rax, rax",
    "js      0x5e19",
    "jmp     0x65e6",
    "mov     byte [rel data_23330], al",
    "and     byte [rel data_23330], 0x1",
    "jmp     0x4f10",
    "call    sub_9ee0",
    "movzx   eax, al",
    "jmp     0x5165",
    "mov     byte [rel data_23342], al",
    "and     byte [rel data_23342], 0x1",
    "jmp     0x4f10",
    "call    sub_9ee0",
    "movzx   eax, al",
    "jmp     0x5283",
    "movsxd  rax, edx",
    "test    edx, edx",
    "js      0x6c81",
    "jmp     0x6c7c",
    "lea     rbx, [rel data_1b00e]",
    "lea     r14, [rbp-0xa0 {var_a8}]",
    "mov     word [rbp-0xa0 {var_a8}], 0x0",
    "sub     rbx, rax",
    "jmp     0x6c58",
    "shl     rax, 0x5",
    "lea     rbx, [rel data_1b00e]",
    "mov     r14, qword [r15+rax]",
    "mov     rcx, qword [rbp-0x128 {var_130}]",
    "mov     r8, rbx",
    "mov     edi, 0x2",
    "xor     eax, eax  {0x0}",
    "lea     rdx, [rel data_1b04e]  {\"%s: %s\"}",
    "call    error",
    "xor     esi, esi  {0x0}",
    "mov     rsi, r13",
    "lea     rdx, [rel data_23040]",
    "xor     edi, edi  {0x0}",
    "call    sub_13ce0",
    "mov     rbx, rax",
    "call    __errno_location",
    "mov     esi, dword [rax]",
    "cmp     esi, 0x16",
    "jne     0x5544",
    "call    __errno_location",
    "xor     r10d, r10d  {0x0}",
    "mov     dword [rax], r10d  {0x0}",
    "jmp     0x5522",
    "call    sub_9ee0",
    "test    al, al",
    "je      0x4f10",
    "mov     eax, 0x50",
    "jmp     0x573b",
    "cmp     byte [rax], 0x0",
    "jne     0x6a86",
    "movzx   eax, word [rbp-0xbe {var_c8+0x2}]",
    "test    ax, ax",
    "je      0x65c9",
    "call    sub_9ee0",
    "jmp     0x5790",
    "setne   al",
    "lea     rdi, [rel data_1b100]  {\"TABSIZE\"}",
    "mov     qword [rel data_23708], 0x8",
    "call    getenv",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x5780",
    "mov     qword [rel data_23708], rax",
    "call    abort",
    "{ Does not return }",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     r9, r13",
    "mov     r8, r14",
    "mov     rcx, rbx",
    "mov     rdx, rax",
    "xor     esi, esi  {0x0}",
    "mov     edi, r12d",
    "xor     eax, eax  {0x0}",
    "call    error",
    "xor     edx, edx  {0x0}",
    "mov     ecx, 0x3",
    "mov     qword [rel data_23478], rax",
    "div     rcx  {0x3}",
    "cmp     rdx, 0x1",
    "sbb     rax, 0xffffffffffffffff",
    "mov     qword [rel data_23470], rax",
    "mov     eax, dword [rel data_23344]",
    "sub     eax, 0x2",
    "cmp     eax, 0x2",
    "ja      0x5780",
    "mov     rdi, rax",
    "call    sub_9070",
    "mov     qword [rbp-0x118 {var_120_1}], rax",
    "test    rax, rax",
    "jns     0x5734",
    "mov     qword [rbp-0x118 {var_120_1}], rax",
    "jmp     0x5734",
    "cmp     dword [rbp-0x100 {var_108_1}], 0x0",
    "mov     byte [rel data_232cb], al",
    "js      0x5f26",
    "lea     rdi, [rel data_1b108]  {\"QUOTING_STYLE\"}",
    "call    getenv",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x5f6f",
    "mov     eax, dword [rbp-0x100 {var_108_1}]",
    "mov     dword [rel data_232e0], eax",
    "xor     esi, esi  {0x0}",
    "lea     rdx, [rbp-0xc0 {var_c8}]",
    "lea     rcx, [rel data_1af54]",
    "mov     rdi, rax",
    "call    sub_11f60",
    "test    eax, eax",
    "jne     0x6cab",
    "mov     rdi, rbx",
    "call    sub_9cf0",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1d640]  {\"ignoring invalid width in enviro\u2026\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rcx, rbx",
    "xor     esi, esi  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    error",
    "jmp     0x65e6",
    "call    sub_9ee0",
    "test    al, al",
    "je      0x57af",
    "lea     r12, [rel data_196e0]",
    "lea     rsi, [rel data_229c0]",
    "mov     rdi, rax",
    "mov     rdx, r12  {data_196e0}",
    "call    sub_11e70",
    "test    eax, eax",
    "js      0x6b8d",
    "cmp     r12d, 0x6",
    "ja      0x57d0",
    "lea     eax, [rbx-0x2]",
    "cmp     eax, 0x1",
    "jbe     0x5cb7",
    "mov     rdi, rbx",
    "call    sub_9cf0",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1d680]  {\"ignoring invalid tab size in env\u2026\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rcx, rbx",
    "xor     esi, esi  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    error",
    "jmp     0x5780",
    "mov     rax, qword [rbp-0xc0 {var_c8}]",
    "jmp     0x5779",
    "mov     ebx, dword [rel data_23344]",
    "mov     r12d, dword [rel data_232e0]",
    "test    ebx, ebx",
    "je      0x5cc5",
    "mov     dword [rbp-0x100 {var_108_1}], 0x3",
    "jmp     0x57a3",
    "mov     rdi, rbx",
    "call    sub_9cf0",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1d6c0]  {\"ignoring invalid value of enviro\u2026\"}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rcx, rbx",
    "xor     esi, esi  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    error",
    "jmp     0x5f6f",
    "cdqe    ",
    "mov     eax, dword [r12+rax*4]",
    "mov     dword [rbp-0x100 {var_108_1}], eax",
    "test    eax, eax",
    "jns     0x57a3",
    "mov     byte [rel data_232ca], 0x0",
    "call    sub_11e10",
    "mov     qword [rel data_235a0], rax",
    "cmp     r12d, 0x7",
    "je      0x5e04",
    "mov     eax, 0x4a",
    "bt      rax, r12",
    "jae     0x6728",
    "cmp     qword [rel data_23478], 0x0",
    "je      0x57d0  {data_23478}",
    "or      dword [rax+0xc], 0x1",
    "jmp     0x57ed",
    "mov     edx, dword [rel data_23334]",
    "cmp     edx, 0x1",
    "jbe     0x5845",
    "mov     byte [rel data_232ca], 0x0",
    "call    sub_11e10",
    "mov     qword [rel data_235a0], rax",
    "jmp     0x57ed",
    "mov     byte [rel data_232ca], 0x1",
    "call    sub_11e10",
    "mov     qword [rel data_235a0], rax",
    "jmp     0x57ed",
    "call    sub_11e10",
    "mov     ecx, dword [rax+0xc]",
    "mov     qword [rel data_23468], rax",
    "mov     edx, ecx",
    "not     edx",
    "and     edx, 0x4000000",
    "xor     edx, ecx",
    "mov     dword [rax+0xc], edx",
    "movzx   eax, byte [rel data_23330]",
    "xor     eax, 0x1",
    "test    ebx, ebx",
    "sete    dl",
    "and     eax, edx",
    "movsx   edx, byte [rel data_23078]",
    "and     al, byte [rel data_23678]",
    "mov     byte [rel data_23678], al",
    "movzx   eax, al",
    "cmp     edx, eax",
    "jl      0x6cdf",
    "sub     edx, 0x2",
    "lea     rcx, [rel data_1b116]  {\"*=>@|\"}",
    "lea     rdi, [rdx+rcx]",
    "movzx   ecx, byte [rcx+rdx]",
    "test    cl, cl",
    "je      0x5845",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1d708]  {\"--dired and --zero are incompati\u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "xor     esi, esi  {0x0}",
    "mov     edi, 0x2",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    error",
    "mov     eax, dword [rbp-0xf8 {var_100_1}]",
    "test    eax, eax",
    "js      0x5f95",
    "lea     rsi, [rax+0x8]",
    "nop     word [rax+rax]",
    "xor     eax, eax  {0x0}",
    "test    ebx, ebx",
    "je      0x58a0",
    "mov     dword [rel data_243e0], eax",
    "test    ebx, ebx",
    "jne     0x58fa",
    "mov     eax, ecx",
    "and     ecx, 0x1f",
    "shr     al, 0x5",
    "movzx   eax, al",
    "lea     rdx, [rsi+rax*4]",
    "xor     eax, eax  {0x0}",
    "mov     r8d, dword [rdx]",
    "bt      r8d, ecx",
    "setae   al",
    "add     rdi, 0x1",
    "shl     eax, cl",
    "movzx   ecx, byte [rdi]",
    "xor     eax, r8d",
    "mov     dword [rdx], eax",
    "test    cl, cl",
    "jne     0x5818",
    "mov     eax, dword [rel data_243e4]",
    "sub     eax, 0x1",
    "cmp     eax, 0x3",
    "sbb     eax, eax",
    "and     eax, 0x5",
    "jmp     0x58a0",
    "mov     rax, qword [rel optind]",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0xe8 {var_f0_2}], eax",
    "movzx   eax, byte [rel data_23342]",
    "mov     byte [rbp-0x104 {var_10c_1}], al",
    "test    al, al",
    "jne     0x61b0",
    "cmp     qword [rbp-0x110 {var_118_1}], 0x0",
    "je      0x6913",
    "lea     rdi, [rel data_1b1a6]  {\"LS_COLORS\"}",
    "call    getenv",
    "mov     qword [rbp-0xd0 {var_d8}], rax",
    "test    rax, rax",
    "je      0x65f0",
    "cmp     byte [rel data_23701], 0x0",
    "je      0x592e  {data_23701}",
    "lea     rdi, [rel data_1b11c]  {\"TIME_STYLE\"}",
    "call    getenv",
    "mov     qword [rbp-0x110 {var_118_1}], rax",
    "test    rax, rax",
    "jne     0x58b8",
    "mov     r12, qword [rbp-0x110 {var_118_1}]",
    "lea     rbx, [rel data_196d0]",
    "jmp     0x58d4",
    "lea     rdi, [rel data_1b1b0]  {\"COLORTERM\"}",
    "call    getenv",
    "test    rax, rax",
    "je      0x6606",
    "cmp     byte [rax], 0x0",
    "je      0x65f0",
    "cmp     dword [rel data_2333c], 0x0",
    "jne     0x594f  {data_2333c}",
    "mov     byte [rel data_23341], 0x1",
    "lea     rax, [rel data_1b029[0xb]]  {\"locale\"}",
    "mov     qword [rbp-0x110 {var_118_2}], rax  {data_1b029[0xb], \"locale\"}",
    "jmp     0x649d",
    "mov     edx, 0x6",
    "mov     rsi, rbx  {data_196d0, \"posix-\"}",
    "mov     rdi, r12",
    "call    strncmp",
    "test    eax, eax",
    "jne     0x6496",
    "lea     rdi, [rel data_1b1b0[5]]  {\"TERM\"}",
    "call    getenv",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x6a7a",
    "cmp     byte [rax], 0x0",
    "jne     0x667f",
    "mov     rdi, rax",
    "mov     byte [rbp-0xa1 {var_a9_1}], 0x0",
    "lea     r15, [rel data_1b01a]",
    "lea     rbx, [rel data_228e0]",
    "mov     word [rbp-0xa3 {var_ab}], 0x3f3f",
    "lea     r14, [rel data_230c0]",
    "call    sub_10b30",
    "mov     qword [rel data_23498], rax",
    "mov     qword [rbp-0xc8 {var_d0}], rax",
    "cmp     byte [rel data_23700], 0x0",
    "je      0x59a5  {data_23700}",
    "cmp     byte [rel data_23338], 0x0",
    "mov     eax, 0x1",
    "je      0x5d77",
    "mov     rax, qword [rbp-0x110 {var_118_2}]",
    "cmp     byte [rax], 0x2b",
    "je      0x69e3",
    "mov     qword [rbp-0x110 {var_118_2}], r12",
    "mov     edi, 0x2",
    "call    sub_c6a0",
    "test    al, al",
    "jne     0x58d0",
    "mov     byte [rel data_23342], 0x0",
    "jmp     0x667f",
    "cmp     byte [rax], 0x0",
    "je      0x6a7a",
    "cmp     byte [rel data_23342], 0x0",
    "movzx   eax, byte [rel data_23701]",
    "je      0x591e",
    "mov     edi, 0x30",
    "call    malloc",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x641a",
    "cmp     al, 0x3a",
    "je      0x67aa",
    "lea     rdi, [rel data_1af0d]",
    "call    getenv",
    "mov     rdi, rax",
    "call    sub_8fc0",
    "mov     qword [rel data_23680], rax",
    "mov     eax, dword [rel data_243e0]",
    "sub     eax, 0x3",
    "and     eax, 0xfffffffd",
    "je      0x59db",
    "lea     rcx, [rel sub_6e90]",
    "lea     rdx, [rel sub_6e30]",
    "mov     edi, 0x1e",
    "lea     rsi, [rel sub_6e20]",
    "call    sub_16a40",
    "mov     qword [rel data_236f8], rax",
    "test    rax, rax",
    "je      0x641a",
    "cmp     dword [rel data_23334], 0x3",
    "je      0x5949  {data_23334}",
    "mov     dword [rel data_2333c], eax",
    "mov     r12, rax",
    "mov     esi, 0xa",
    "add     r12, 0x1",
    "mov     rdi, r12",
    "call    strchr",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x6b66",
    "lea     rbx, [rel data_22180]",
    "mov     rdi, qword [rbp-0x110 {var_118_2}]",
    "lea     rdx, [rel data_196c0]",
    "mov     rsi, rbx  {data_22180}",
    "call    sub_11e70",
    "test    rax, rax",
    "js      0x687a",
    "add     r12, 0x6",
    "lea     r12, [rel data_197e0]  {\"# Configuration file for dircolo\u2026\"}",
    "lea     rbx, [rel data_1b1ba]",
    "mov     r14, r12  {data_197e0, \"# Configuration file for dircolo\u2026\"}",
    "jmp     0x6647",
    "xor     ecx, ecx  {0x0}",
    "mov     qword [rel data_23708], rcx  {0x0}",
    "test    al, al",
    "jne     0x5927",
    "mov     rax, qword [rel data_23490]",
    "mov     byte [r13+0x20], 0x0",
    "add     r12, 0x1",
    "lea     rsi, [rbp-0xd0 {var_d8}]",
    "lea     rdi, [rbp-0xc8 {var_d0}]",
    "mov     rcx, r13",
    "mov     edx, 0x1",
    "mov     qword [rbp-0x100 {var_108_1}], rsi {var_d8}",
    "mov     qword [r13+0x28], rax",
    "mov     rax, qword [rbp-0xc8 {var_d0}]",
    "mov     qword [rbp-0xf8 {var_100_1}], rdi {var_d0}",
    "mov     qword [r13+0x8], rax",
    "mov     qword [rel data_23490], r13",
    "mov     qword [rbp-0xd0 {var_d8}], r12",
    "call    sub_6ea0",
    "mov     rdi, qword [rbp-0xf8 {var_100_1}]",
    "mov     rsi, qword [rbp-0x100 {var_108_1}]",
    "test    al, al",
    "je      0x63c2",
    "add     r12, 0x1",
    "mov     qword [rbp-0xd0 {var_d8}], r12",
    "jmp     0x6210",
    "test    al, al",
    "jne     0x62f5",
    "mov     byte [rel data_23332], 0x1",
    "xor     eax, eax  {0x0}",
    "cmp     dword [rel data_23344], 0x0",
    "jne     0x5dab  {data_23344}",
    "mov     r8, qword [rel free]",
    "mov     rcx, qword [rel malloc]",
    "xor     edx, edx  {0x0}",
    "xor     esi, esi  {0x0}",
    "lea     rdi, [rel data_236a0]",
    "call    _obstack_begin",
    "cmp     dword [rel data_23344], 0x1",
    "sbb     eax, eax",
    "and     eax, 0xfffffffe",
    "add     eax, 0x3",
    "jmp     0x5949",
    "mov     r13, r12",
    "jmp     0x6a20",
    "lea     r13, [rax+0x1]",
    "mov     esi, 0xa",
    "mov     rdi, r13",
    "call    strchr",
    "test    rax, rax",
    "jne     0x6be5",
    "mov     rsi, qword [rbp-0x110 {var_118_2}]",
    "mov     rdx, rax",
    "lea     rdi, [rel data_1b144]  {\"time style\"}",
    "lea     r14, [rel data_1b165]",
    "call    sub_c040",
    "mov     r12, qword [rel stderr]",
    "mov     edx, 0x5",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_1b14f]  {\"Valid arguments are:\\n\"}",
    "mov     r13, qword [r12]",
    "call    dcgettext",
    "mov     rdi, rax",
    "mov     rsi, r13",
    "call    fputs_unlocked",
    "jmp     0x68d8",
    "cmp     rax, 0x2",
    "je      0x6b0b",
    "mov     rax, r14",
    "sub     rax, r12",
    "cmp     rax, 0x1568  {\"ibselinux.so.1\"}",
    "ja      0x6a7a",
    "mov     edi, 0xd",
    "call    sub_bbb0",
    "test    al, al",
    "jne     0x5927",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1d768]  {\"unparsable value for LS_COLORS e\u2026\"}",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "xor     esi, esi  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    error",
    "mov     rdi, qword [rel data_23498]",
    "call    free",
    "mov     rdi, qword [rel data_23490]",
    "jmp     0x674c",
    "mov     rax, qword [rbp-0xd0 {var_d8}]",
    "lea     rdx, [rax+0x1]",
    "cmp     byte [rax], 0x3d",
    "mov     qword [rbp-0xd0 {var_d8}], rdx",
    "jne     0x63c2",
    "mov     r12, qword [rbp-0xd0 {var_d8}]",
    "movzx   eax, byte [r12]",
    "cmp     al, 0x2a",
    "je      0x67ba",
    "mov     byte [rbp-0xa3 {var_ab}], al",
    "movzx   eax, byte [r12+0x1]",
    "lea     rdx, [r12+0x1]",
    "mov     qword [rbp-0xd0 {var_d8}], rdx",
    "test    al, al",
    "je      0x63c2",
    "mov     r12, qword [rel data_23490]",
    "test    r12, r12",
    "je      0x6758",
    "mov     rbx, qword [rel free]",
    "mov     r12, qword [rel malloc]",
    "xor     edx, edx  {0x0}",
    "xor     esi, esi  {0x0}",
    "lea     rdi, [rel data_23620]",
    "mov     r8, rbx",
    "mov     rcx, r12",
    "call    _obstack_begin",
    "mov     r8, rbx",
    "mov     rcx, r12",
    "xor     edx, edx  {0x0}",
    "xor     esi, esi  {0x0}",
    "lea     rdi, [rel data_235c0]",
    "call    _obstack_begin",
    "jmp     0x59fe",
    "cmp     byte [rel data_23330], 0x0",
    "jne     0x5ff4  {data_23330}",
    "cmp     byte [rel data_23333], 0x0",
    "jne     0x59db  {data_23333}",
    "mov     qword [rel data_23240], r12",
    "mov     qword [rel data_23248], r13",
    "jmp     0x6503",
    "mov     rdi, r12",
    "call    sub_9cf0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1b127]  {\"invalid time style format %s\"}",
    "xor     edi, edi  {0x0}",
    "mov     rbx, rax",
    "call    dcgettext",
    "mov     rcx, rbx",
    "xor     esi, esi  {0x0}",
    "mov     edi, 0x2",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    error",
    "mov     byte [rbx], 0x0",
    "mov     rcx, qword [rbx]",
    "mov     r13, qword [r12]",
    "test    rcx, rcx",
    "jne     0x68c2",
    "lea     rax, [rel data_1b18d[3]]  {\"%m-%d %H:%M\"}",
    "lea     rcx, [rel data_1b19c]  {\"%Y-%m-%d \"}",
    "movq    xmm0, rcx",
    "movq    xmm2, rax",
    "punpcklqdq xmm0, xmm2",
    "movaps  xmmword [rel data_23240], xmm0",
    "jmp     0x6503",
    "jg      0x695e",
    "mov     edx, 0x5",
    "mov     rsi, rbx  {data_1b1ba, \"TERM \"}",
    "mov     rdi, r14",
    "call    strncmp",
    "test    eax, eax",
    "jne     0x663a",
    "mov     edi, 0xe",
    "call    sub_bbb0",
    "test    al, al",
    "jne     0x694c",
    "test    rdi, rdi",
    "jne     0x6740",
    "mov     rax, qword [rbp-0xc8 {var_d0}]",
    "xor     edx, edx  {0x0}",
    "lea     rcx, [r13+0x10]",
    "mov     qword [r13+0x18], rax",
    "call    sub_6ea0",
    "test    al, al",
    "jne     0x6210",
    "mov     byte [rbp-0xa2 {var_ab+0x1}], al",
    "cmp     byte [r12+0x2], 0x3d",
    "lea     rax, [r12+0x3]",
    "mov     qword [rbp-0xd0 {var_d8}], rax",
    "jne     0x63c2",
    "cmp     qword [rel data_23130], 0x6",
    "jne     0x667f  {data_23130}",
    "mov     r14, r12",
    "mov     r12, qword [r12+0x28]",
    "test    r12, r12",
    "je      0x6758",
    "xor     eax, eax  {0x0}",
    "lea     rcx, [rel data_234a0]",
    "nop     dword [rax]",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0xd0",
    "mov     esi, 0x64",
    "mov     qword [rel data_23328], 0x64",
    "call    reallocarray",
    "test    rax, rax",
    "je      0x641a",
    "cmp     byte [rel data_23348], 0x0",
    "jne     0x59db  {data_23348}",
    "call    sub_8280",
    "jmp     0x58fa",
    "mov     rdx, r14  {data_1b165, \"  - [posix-]%s\\n\"}",
    "mov     esi, 0x2",
    "mov     rdi, r13",
    "xor     eax, eax  {0x0}",
    "add     rbx, 0x8",
    "call    __fprintf_chk",
    "lea     rsi, [rel data_1d730]  {\"  - +FORMAT (e.g., +%H:%M) for a\u2026\"}",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x5",
    "call    dcgettext",
    "mov     rsi, r13",
    "mov     rdi, rax",
    "call    fputs_unlocked",
    "cmp     rax, 0x3",
    "jne     0x6503",
    "test    rax, rax",
    "je      0x6b33",
    "mov     rdi, r14",
    "call    strlen",
    "lea     r14, [r14+rax+0x1]",
    "xor     edx, edx  {0x0}",
    "lea     rdi, [r14+0x5]",
    "mov     rsi, r13",
    "call    fnmatch",
    "test    eax, eax",
    "jne     0x663a",
    "cmp     byte [rel data_23340], 0x0",
    "jne     0x5927  {data_23340}",
    "mov     edi, 0xc",
    "call    sub_bbb0",
    "test    al, al",
    "je      0x592e",
    "mov     rbx, qword [rdi+0x28]",
    "call    free",
    "mov     rdi, rbx",
    "mov     byte [rel data_23342], 0x0",
    "jmp     0x63c2",
    "xor     r13d, r13d  {0x0}",
    "mov     rsi, r15  {data_1b01a}",
    "lea     r12, [rbp-0xa3 {var_ab}]",
    "jmp     0x6355",
    "mov     rdi, qword [rel data_23138]",
    "mov     edx, 0x6",
    "lea     rsi, [rel data_1b1d8]  {\"target\"}",
    "call    strncmp",
    "test    eax, eax",
    "jne     0x667f",
    "mov     byte [rbp-0x100 {var_108_1}], 0x0",
    "mov     rbx, r12",
    "mov     qword [rbp-0xf8 {var_100_1}], r12",
    "jmp     0x6279",
    "lea     esi, [rax-0x61]",
    "mov     edx, 0x1",
    "cmp     esi, 0x19",
    "ja      0x6022",
    "cmp     rax, 0x40",
    "ja      0x60f0",
    "xor     edx, edx  {0x0}",
    "mov     qword [rel data_23320], rax",
    "mov     qword [rel data_23318], rdx  {0x0}",
    "call    sub_9f10",
    "mov     r12d, dword [rbp-0xe4 {var_ec}]",
    "mov     eax, dword [rbp-0xe8 {var_f0_2}]",
    "sub     r12d, eax",
    "test    r12d, r12d",
    "jle     0x5d18",
    "cmp     byte [rel data_23700], 0x0",
    "mov     byte [rel data_23332], 0x0",
    "mov     eax, 0x1",
    "jne     0x59e4",
    "mov     edi, 0x2",
    "call    sub_c6a0",
    "test    al, al",
    "je      0x6503",
    "lea     rax, [rel data_1b175]  {\"%Y-%m-%d %H:%M:%S.%N %z\"}",
    "movq    xmm0, rax",
    "punpcklqdq xmm0, xmm0",
    "movaps  xmmword [rel data_23240], xmm0",
    "jmp     0x6503",
    "lea     rax, [rel data_1b18d]  {\"%Y-%m-%d %H:%M\"}",
    "movq    xmm0, rax",
    "punpcklqdq xmm0, xmm0",
    "movaps  xmmword [rel data_23240], xmm0",
    "jmp     0x66c8",
    "cmp     dword [rel data_23344], 0x0",
    "je      0x5927  {data_23344}",
    "mov     rdi, r12 {var_ab}",
    "call    strcmp",
    "test    eax, eax",
    "jne     0x6348",
    "mov     byte [rel data_23340], 0x1",
    "jmp     0x667f",
    "mov     r13, qword [rbx]",
    "cmp     r13, 0xffffffffffffffff",
    "je      0x6270",
    "cmp     eax, 0x7e",
    "je      0x60f0",
    "jmp     0x6043",
    "or      byte [rcx+rax], 0x1",
    "add     rax, 0x1",
    "mov     edx, eax",
    "cmp     rax, 0x5a",
    "jbe     0x600c",
    "sub     edx, 0x30",
    "cmp     edx, 0x9",
    "jbe     0x60f0",
    "cmp     byte [rel data_23338], 0x0",
    "je      0x6792  {data_23338}",
    "movsxd  rbx, dword [rbp-0xe8 {var_f0_2}]",
    "mov     r13d, dword [rbp-0xe4 {var_ec}]",
    "mov     r14, qword [rbp-0xf0 {var_f8}]",
    "nop     dword [rax+rax]",
    "mov     byte [rel data_23331], al",
    "and     byte [rel data_23331], 0x1",
    "cmp     byte [rel data_23678], 0x0",
    "jne     0x5fb5  {data_23678}",
    "cmp     byte [rel data_23342], 0x0",
    "jne     0x59e4  {data_23342}",
    "mov     rsi, qword [rel data_23240]",
    "mov     edx, 0x2",
    "xor     edi, edi  {0x0}",
    "call    dcgettext",
    "mov     rsi, qword [rel data_23248]",
    "mov     edx, 0x2",
    "xor     edi, edi  {0x0}",
    "mov     qword [rel data_23240], rax",
    "call    dcgettext",
    "mov     qword [rel data_23248], rax",
    "jmp     0x6503",
    "jmp     0x592e",
    "add     r13, 0x1",
    "mov     rsi, qword [rbx+r13*8]",
    "test    rsi, rsi",
    "je      0x6393",
    "movsxd  rcx, r13d",
    "mov     rax, qword [rbp-0xc8 {var_d0}]",
    "xor     edx, edx  {0x0}",
    "lea     rsi, [rbp-0xd0 {var_d8}]",
    "shl     rcx, 0x4",
    "lea     rdi, [rbp-0xc8 {var_d0}]",
    "add     rcx, r14",
    "mov     qword [rcx+0x8], rax",
    "call    sub_6ea0",
    "test    al, al",
    "jne     0x6210",
    "mov     rbx, qword [rbx+0x28]",
    "test    rbx, rbx",
    "je      0x62e9",
    "cmp     r13, qword [r14]",
    "jne     0x6270",
    "cmp     eax, 0x2d",
    "je      0x60f0",
    "or      byte [rcx+rax], dl",
    "add     rax, 0x1",
    "cmp     rax, 0x100",
    "jne     0x6000",
    "mov     edx, 0x1",
    "xor     esi, esi  {0x0}",
    "lea     rdi, [rel data_1aedc]",
    "call    sub_10b70",
    "jmp     0x5d42",
    "lea     rcx, [rel data_1af54]",
    "mov     edx, 0x1",
    "mov     esi, 0x3",
    "lea     rdi, [rel data_1aedc]",
    "call    sub_17490",
    "mov     rdi, qword [r14+rbx*8]",
    "lea     rcx, [rel data_1af54]",
    "mov     edx, 0x1",
    "xor     esi, esi  {0x0}",
    "add     rbx, 0x1",
    "\ud83d\udeab\ud83d\udeabcall    sub_17490",
    "cmp     r13d, ebx",
    "jg      0x5a78",
    "cmp     qword [rel data_23318], 0x0",
    "jne     0x650d  {data_23318}",
    "cmp     dword [rel data_23334], 0x0",
    "jne     0x59e4  {data_23334}",
    "mov     rdi, r12 {var_ab}",
    "call    sub_9cf0",
    "mov     edx, 0x5",
    "lea     rsi, [rel data_1b1c0]  {\"unrecognized prefix: %s\"}",
    "xor     edi, edi  {0x0}",
    "mov     r12, rax",
    "call    dcgettext",
    "mov     rcx, r12",
    "xor     esi, esi  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     rdx, rax",
    "xor     eax, eax  {0x0}",
    "call    error",
    "mov     r12, qword [rbp-0xf8 {var_100_1}]",
    "jmp     0x6244",
    "mov     r12, qword [rbx+0x8]",
    "mov     r15, qword [r14+0x8]",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "call    memcmp",
    "test    eax, eax",
    "jne     0x62aa",
    "cmp     eax, 0x2e",
    "sete    dl",
    "cmp     eax, 0x5f",
    "sete    sil",
    "or      edx, esi",
    "mov     edx, eax",
    "cmp     rax, 0x5a",
    "ja      0x6104",
    "mov     qword [rbp-0xc0 {var_c8}], 0x64",
    "xor     r15d, r15d  {0x0}",
    "lea     rbx, [rbp-0xa0 {var_a8}]",
    "mov     r14, 0xffffffefffbfeffe",
    "call    __errno_location",
    "mov     r12, rax",
    "nop     dword [rax]",
    "cmp     qword [rel data_23318], 0x0",
    "mov     rbx, qword [rel data_23720]",
    "jne     0x650d",
    "call    sub_e4b0",
    "cmp     byte [rel data_23338], 0x0",
    "je      0x6a43  {data_23338}",
    "test    rbx, rbx",
    "je      0x5bc9",
    "sub     r12d, 0x1",
    "mov     rbx, qword [rel data_23720]",
    "jle     0x5d57",
    "movzx   eax, byte [rel data_23701]",
    "jmp     0x59e4",
    "cmp     r12, r15",
    "je      0x62c6",
    "mov     qword [rbx], 0xffffffffffffffff",
    "jmp     0x6270",
    "mov     rdi, r15",
    "call    free",
    "mov     eax, dword [r12]",
    "cmp     eax, 0x24",
    "jbe     0x6120",
    "mov     rdi, rbx",
    "call    strlen",
    "lea     rdx, [rax+0x1]",
    "cmp     r13, rdx",
    "jg      0x6577",
    "mov     esi, 0x1",
    "xor     edi, edi  {0x0}",
    "call    sub_10bf0",
    "jmp     0x651f",
    "cmp     qword [rel data_23318], 0x0",
    "je      0x5aa6  {data_23318}",
    "cmp     byte [rel data_23342], 0x0",
    "je      0x5c66  {data_23342}",
    "cmp     qword [rbx+0x18], 0x0",
    "jne     0x5ac0",
    "test    rbx, rbx",
    "je      0x5bc9",
    "cmp     byte [rbp-0x100 {var_108}], 0x0",
    "je      0x641f  {0x1}",
    "test    r13, r13",
    "je      0x62c6",
    "bt      r14, rax",
    "jb      0x60d5",
    "lea     rax, [rel data_1af54]",
    "mov     qword [rel data_235a8], rax  {data_1af54}",
    "jmp     0x5a0b",
    "test    r15, r15",
    "je      0x6ad2",
    "mov     dword [r12], 0x0",
    "call    sub_105e0",
    "cmp     qword [rel data_23720], 0x0",
    "je      0x5bc9  {data_23720}",
    "cmp     byte [rel data_23678], 0x0",
    "jne     0x643b  {data_23678}",
    "cmp     byte [rel data_237c0], 0x0",
    "je      0x5c66  {data_237c0}",
    "lea     r13, [rbp-0xc8 {var_d0}]",
    "jmp     0x5b0d",
    "mov     byte [rel data_23728], 0x0",
    "jmp     0x5ac0",
    "mov     rdx, qword [r14+0x10]",
    "cmp     rdx, qword [rbx+0x10]",
    "je      0x69c9",
    "movzx   eax, byte [rbp-0x104 {var_10c_1}]",
    "mov     qword [rbx], 0xffffffffffffffff",
    "mov     byte [rbp-0x100 {var_108_1}], al",
    "jmp     0x6270",
    "mov     rdx, r13",
    "mov     rsi, r12",
    "mov     rdi, r15",
    "call    sub_7d70",
    "test    eax, eax",
    "jne     0x6270",
    "lea     rsi, [rbp-0xc0 {var_c8}]",
    "mov     r8d, 0x1",
    "mov     rcx, 0xffffffffffffffff",
    "xor     edi, edi  {0x0}",
    "mov     edx, 0x1",
    "call    sub_10a20",
    "mov     r15, rax",
    "mov     rbx, rax",
    "jmp     0x6080",
    "mov     rdi, rdx",
    "mov     qword [rbp-0xf8 {var_100_1}], rdx",
    "call    malloc",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x641a",
    "mov     qword [rel data_235a8], r15",
    "jmp     0x5a0b",
    "mov     rax, qword [rel stdout]",
    "add     qword [rel data_23350], 0x1",
    "mov     rdi, qword [rax]",
    "mov     rax, qword [rdi+0x28]",
    "cmp     rax, qword [rdi+0x30]",
    "jae     0x69b3",
    "lea     rsi, [rel data_23620]",
    "lea     rdi, [rel data_1b1e5]  {\"//DIRED//\"}",
    "call    sub_8190",
    "lea     rsi, [rel data_235c0]",
    "lea     rdi, [rel data_1b1ef]  {\"//SUBDIRED//\"}",
    "call    sub_8190",
    "mov     rax, qword [rel data_235a0]",
    "test    rax, rax",
    "je      0x6a54",
    "mov     rdi, qword [rel data_236f8]",
    "test    rdi, rdi",
    "je      0x5c8f",
    "cmp     qword [rel data_230c0], 0x2",
    "jne     0x5c11  {data_230c0}",
    "mov     rax, qword [rbx+0x18]",
    "mov     r12, qword [rel data_236f8]",
    "mov     rdi, qword [rbx]",
    "mov     qword [rel data_23720], rax",
    "test    r12, r12",
    "je      0x5ad0",
    "mov     rsi, qword [rbx+0x18]",
    "mov     rdi, qword [r14+0x18]",
    "call    memcmp",
    "test    eax, eax",
    "jne     0x642d",
    "mov     byte [r14+0x20], 0x1",
    "mov     byte [rbx+0x20], 0x1",
    "jmp     0x6270",
    "mov     rax, qword [rbp-0xc0 {var_c8}]",
    "mov     rdi, rbx",
    "mov     byte [rbx+rax-0x1], 0x0",
    "lea     r13, [rax-0x1]",
    "mov     dword [r12], 0x0",
    "mov     rsi, r13",
    "call    gethostname",
    "test    eax, eax",
    "jne     0x60c4",
    "mov     rdx, qword [rbp-0xf8 {var_100_1}]",
    "mov     rsi, rbx",
    "mov     rcx, rdx",
    "call    __memcpy_chk",
    "mov     qword [rel data_235a8], rax",
    "jmp     0x5a0b",
    "mov     esi, 0xa",
    "call    __overflow",
    "mov     rbx, qword [rel data_23720]",
    "jmp     0x5ab7",
    "lea     rdx, [rax+0x1]",
    "mov     rbx, qword [rel data_23720]",
    "mov     qword [rdi+0x28], rdx",
    "mov     byte [rax], 0xa",
    "jmp     0x5ac0",
    "lea     rax, [rel data_232e0]",
    "jmp     0x6471",
    "mov     edx, dword [rax]",
    "lea     rax, [rel data_229c0]",
    "lea     rsi, [rel data_1d828]  {\"//DIRED-OPTIONS// --quoting-styl\u2026\"}",
    "mov     edi, 0x2",
    "mov     rdx, qword [rax+rdx*8]",
    "xor     eax, eax  {0x0}",
    "call    __printf_chk",
    "jmp     0x5c73",
    "mov     eax, dword [rel data_2372c]",
    "mov     rdx, qword [rbp-0x38 {var_40}]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x6bc1",
    "cmp     qword [rdi+0x20], 0x0",
    "jne     0x6b6e",
    "lea     rdi, [rel data_230c0]",
    "call    sub_be90",
    "lea     rdi, [rel data_230d0]",
    "call    sub_be90",
    "mov     rax, qword [rel data_230c8]",
    "cmp     word [rax], 0x5b1b",
    "jne     0x5c11",
    "movzx   edx, byte [rbx+0x10]",
    "mov     rsi, qword [rbx+0x8]",
    "call    sub_10fc0",
    "mov     rdi, qword [rbx]",
    "call    free",
    "mov     rdi, qword [rbx+0x8]",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "mov     rbx, qword [rel data_23720]",
    "mov     byte [rel data_23728], 0x1",
    "test    rbx, rbx",
    "je      0x5bc9",
    "test    rdi, rdi",
    "jne     0x5ad0",
    "jmp     0x62d3",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "lea     rcx, [rel data_1ad5c]  {\"main\"}",
    "mov     edx, 0x740",
    "lea     rsi, [rel data_1af10]  {\"src/ls.c\"}",
    "lea     rdi, [rel data_1d850]  {\"hash_get_n_entries (active_dir_s\u2026\"}",
    "call    __assert_fail",
    "{ Does not return }",
    "call    sub_c840",
    "test    ebx, ebx",
    "jne     0x5c47",
    "cmp     qword [rel data_230d0], 0x1",
    "jne     0x5c11  {data_230d0}",
    "mov     rax, qword [rel data_236b8]",
    "mov     rdx, rax",
    "sub     rdx, qword [rel data_236b0]",
    "cmp     rdx, 0xf",
    "jbe     0x6bc6",
    "mov     edi, 0x13",
    "sub     ebx, 0x1",
    "call    raise",
    "mov     edi, dword [rel data_237c8]",
    "test    edi, edi",
    "jne     0x6942",
    "mov     rax, qword [rel data_230d8]",
    "cmp     byte [rax], 0x6d",
    "je      0x5c29",
    "lea     rcx, [rel data_1ad50]  {\"dev_ino_pop\"}",
    "mov     edx, 0x41d",
    "lea     rsi, [rel data_1af10]  {\"src/ls.c\"}",
    "lea     rdi, [rel data_1d7a0]  {\"dev_ino_size <= __extension__ ({\u2026\"}",
    "call    __assert_fail",
    "{ Does not return }",
    "lea     rdx, [rax-0x10]",
    "movdqu  xmm1, xmmword [rax-0x10]",
    "mov     ecx, 0x1",
    "mov     rdi, r12",
    "mov     qword [rel data_236b8], rdx",
    "lea     rsi, [rbp-0xc0 {var_c8}]",
    "mov     rdx, r13 {var_d0}",
    "movaps  xmmword [rbp-0xc0 {var_c8}], xmm1",
    "call    sub_9a50",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x63fb",
    "call    raise",
    "jmp     0x5c66",
    "mov     rax, qword [rel stdout]",
    "mov     rdi, qword [rax]",
    "call    fflush_unlocked",
    "xor     edi, edi  {0x0}",
    "call    sub_8a60",
    "mov     ebx, dword [rel data_237c4]",
    "jmp     0x5c54",
    "lea     rcx, [rel data_1ad5c]  {\"main\"}",
    "mov     edx, 0x70c",
    "lea     rsi, [rel data_1af10]  {\"src/ls.c\"}",
    "lea     rdi, [rel data_1b1df]  {\"found\"}",
    "call    __assert_fail",
    "{ Does not return }",
    "mov     rax, qword [rbp-0xc8 {var_d0}]",
    "sub     qword [r12+0x20], 0x1",
    "cmp     qword [rax], 0x0",
    "je      0x5e68",
    "mov     rax, qword [r12+0x18]",
    "sub     rax, 0x1",
    "mov     qword [r12+0x18], rax",
    "js      0x670a",
    "mov     rdi, r14",
    "call    free",
    "mov     rdi, qword [rbx]",
    "call    free",
    "mov     rdi, qword [rbx+0x8]",
    "call    free",
    "mov     rdi, rbx",
    "call    free",
    "mov     rbx, qword [rel data_23720]",
    "test    rbx, rbx",
    "jne     0x5b0d",
    "mov     rdx, rax",
    "and     eax, 0x1",
    "pxor    xmm5, xmm5",
    "shr     rdx, 0x1",
    "or      rdx, rax",
    "cvtsi2ss xmm5, rdx",
    "addss   xmm5, xmm5",
    "jmp     0x5e85",
    "pxor    xmm5, xmm5",
    "cvtsi2ss xmm5, rax",
    "mov     rax, qword [r12+0x10]",
    "test    rax, rax",
    "js      0x66ec",
    "mov     rdx, rax",
    "and     eax, 0x1",
    "pxor    xmm4, xmm4",
    "shr     rdx, 0x1",
    "or      rdx, rax",
    "cvtsi2ss xmm4, rdx",
    "addss   xmm4, xmm4",
    "jmp     0x5e9c",
    "pxor    xmm4, xmm4",
    "cvtsi2ss xmm4, rax",
    "mov     rax, qword [r12+0x28]",
    "movss   xmm0, dword [rax]",
    "mulss   xmm0, xmm4",
    "comiss  xmm0, xmm5",
    "jbe     0x5b98",
    "mov     rdi, r12",
    "call    sub_c7b0",
    "mov     rax, qword [r12+0x28]",
    "movss   xmm0, dword [rax]",
    "mulss   xmm0, xmm4",
    "comiss  xmm0, xmm5",
    "jbe     0x5b98",
    "mulss   xmm4, dword [rax+0x4]",
    "cmp     byte [rax+0x10], 0x0",
    "jne     0x5ee0",
    "comiss  xmm4, dword [rel data_19018]",
    "jae     0x6b4f  {data_19018}",
    "mulss   xmm4, dword [rax+0x8]",
    "subss   xmm4, dword [rel data_19018]",
    "cvttss2si rsi, xmm4",
    "btc     rsi, 0x3f",
    "jmp     0x5ef2",
    "cvttss2si rsi, xmm4",
    "mov     rdi, r12",
    "call    sub_b590",
    "test    al, al",
    "jne     0x5b98",
    "mov     rdi, qword [r12+0x48]",
    "jmp     0x5f15",
    "test    rdi, rdi",
    "jne     0x5f09",
    "mov     r15, qword [rdi+0x8]",
    "call    free",
    "mov     rdi, r15",
    "xor     eax, eax  {0x0}",
    "mov     qword [r12+0x48], rax  {0x0}",
    "jmp     0x5b98"
  ],
  "high_level_IL": [
    "char* rbx = *argv",
    "void* fsbase",
    "int64_t rax = *(fsbase + 0x28)",
    "if (rbx != 0)",
    "char* rax_2",
    "int64_t rcx_1",
    "int64_t rdx",
    "uint64_t r8_1",
    "ssize_t r9_1",
    "rax_2, rcx_1, rdx, r8_1, r9_1 = strrchr(rbx, 0x2f)",
    "if (rax_2 != 0 && &rax_2[1] - rbx s> 6)",
    "int32_t rax_5",
    "rax_5, rcx_1, rdx, r8_1, r9_1 = strncmp(&rax_2[-6], \"/.libs/\", 7)",
    "if (rax_5 == 0)",
    "rbx = &rax_2[1]",
    "int32_t rax_11",
    "rax_11, rcx_1, rdx, r8_1, r9_1 = strncmp(&rax_2[1], \"lt-\", 3)",
    "if (rax_11 == 0)",
    "rbx = &rax_2[4]",
    "*program_invocation_short_name = rbx",
    "data_23460 = rbx",
    "*program_invocation_name = rbx",
    "void category",
    "int32_t category_1",
    "setlocale(6, &data_1af54, rdx, rcx_1, r8_1, r9_1, category, category_1)",
    "bindtextdomain(\"coreutils\", \"/usr/share/locale\")",
    "uint32_t* const rbx_1 = &jump_table_19194",
    "textdomain(\"coreutils\")",
    "data_23088 = 2",
    "sub_18d90(sub_b880)",
    "int128_t zmm0_1 = data_1daf0",
    "data_2372c = 0",
    "data_23728 = 1",
    "data_23720 = 0",
    "int64_t var_120_1 = -1",
    "uint64_t var_128_1 = -1",
    "int32_t var_100_1 = 0xffffffff",
    "int32_t var_108_1 = 0xffffffff",
    "int32_t var_10c_1 = 0xffffffff",
    "int32_t var_f0_1 = 0xffffffff",
    "char var_10d_1 = 0",
    "char* var_118_1 = nullptr",
    "data_23710.o = zmm0_1",
    "while (true)",
    "int32_t opt_index = 0xffffffff",
    "int32_t rax_6 = getopt_long(argc, argv, \"abcdfghiklmnopqrstuvw:xABCDFGHI:\u2026\", &data_22340, &opt_index)",
    "uint64_t var_c8",
    "int32_t rax_30",
    "int64_t (* const r13_2)()",
    "if (rax_6 == 0xffffffff)",
    "if (data_232d0 == 0)",
    "char* rax_115 = getenv(\"LS_BLOCK_SIZE\")",
    "sub_12420(rax_115)",
    "char* rax_175",
    "if (rax_115 == 0)",
    "rax_175 = getenv(\"BLOCK_SIZE\")",
    "if (rax_115 != 0 || rax_175 != 0)",
    "data_232d8 = data_232dc",
    "data_23080 = data_232d0",
    "if (var_10d_1 != 0)",
    "data_232d0 = 0x400",
    "data_232dc = 0",
    "int32_t rax_50 = var_f0_1",
    "if (rax_50 s< 0)",
    "rax_50 = zx.d(sub_9ee0()) + 1",
    "data_23344 = rax_50",
    "int64_t rax_52",
    "if (rax_50 - 2 u<= 2 || data_23342 != 0)",
    "if (var_120_1 s< 0)",
    "if (sub_9ee0() == 0)",
    "label_65d0:",
    "char* rax_142 = getenv(\"COLUMNS\")",
    "if (rax_142 == 0 || *rax_142 == 0)",
    "rax_52 = 0x50",
    "int64_t rax_176 = sub_9070(rax_142)",
    "if (rax_176 s>= 0)",
    "rax_52 = rax_176",
    "int64_t rax_177 = sub_9cf0(rax_142)",
    "error(0, 0, dcgettext(nullptr, \"ignoring invalid width in enviro\u2026\", 5), rax_177)",
    "rax_52 = 0x50",
    "if (ioctl(1, 0x5413, &var_c8) s< 0)",
    "goto label_65d0",
    "int64_t rax_141 = zx.q(var_c8:2.w)",
    "if (rax_141.w == 0)",
    "goto label_65d0",
    "rax_52 = rax_141",
    "rax_52 = var_120_1",
    "if (var_120_1 s>= 0)",
    "rax_52 = var_120_1",
    "rax_52 = 0x50",
    "int64_t rdx_4 = 0",
    "data_23478 = rax_52",
    "data_23470 = sbb.q(divu.dp.q(rdx_4:rax_52, 3), -1, modu.dp.q(rdx_4:rax_52, 3) u< 1)",
    "uint64_t rax_56",
    "if (data_23344 - 2 u<= 2)",
    "if (var_128_1 s< 0)",
    "data_23708 = 8",
    "rax_56 = getenv(\"TABSIZE\")",
    "if (rax_56 != 0)",
    "if (sub_11f60(rax_56, nullptr, &var_c8, &data_1af54) != 0)",
    "int64_t rax_191 = sub_9cf0(rax_56)",
    "error(0, 0, dcgettext(nullptr, \"ignoring invalid tab size in env\u2026\", 5), rax_191)",
    "data_23708 = var_c8",
    "data_23708 = var_128_1",
    "if (var_10c_1 s< 0)",
    "rax_56 = sub_9ee0()",
    "rax_56.b = var_10c_1 != 0",
    "data_232cb = rax_56.b",
    "if (var_108_1 s< 0)",
    "char* rax_102 = getenv(\"QUOTING_STYLE\")",
    "if (rax_102 == 0)",
    "goto label_5f6f",
    "int32_t rax_103 = sub_11e70(rax_102, &data_229c0, &data_196e0)",
    "if (rax_103 s< 0)",
    "int64_t rax_182 = sub_9cf0(rax_102)",
    "error(0, 0, dcgettext(nullptr, \"ignoring invalid value of enviro\u2026\", 5), rax_182)",
    "label_5f6f:",
    "if (sub_9ee0() != 0)",
    "data_232e0.d = 3",
    "int32_t rax_105 = *(&data_196e0 + (sx.q(rax_103) << 2))",
    "if (rax_105 s< 0)",
    "goto label_5f6f",
    "data_232e0.d = rax_105",
    "data_232e0.d = var_108_1",
    "int32_t rbx_3 = data_23344",
    "uint64_t r12_2 = zx.q(data_232e0.d)",
    "int128_t* rax_59",
    "if ((rbx_3 != 0 && (rbx_3 - 2 u> 1 || data_23478 == 0)) || r12_2.d u> 6)",
    "data_232ca = 0",
    "rax_59 = sub_11e10()",
    "data_235a0 = rax_59",
    "if (r12_2.d == 7)",
    "*(rax_59 + 0xc) |= 1",
    "if (not(test_bit(0x4a, r12_2)))",
    "data_232ca = 0",
    "rax_59 = sub_11e10()",
    "data_235a0 = rax_59",
    "data_232ca = 1",
    "rax_59 = sub_11e10()",
    "data_235a0 = rax_59",
    "int32_t rdx_6 = data_23334",
    "if (rdx_6 u> 1)",
    "uint64_t rdx_7 = zx.q(rdx_6 - 2)",
    "void* rdi_11 = &(*\"*=>@|\")[rdx_7]",
    "uint32_t rcx_4 = zx.d((*\"*=>@|\")[rdx_7])",
    "while (rcx_4.b != 0)",
    "int32_t rcx_5 = rcx_4 & 0x1f",
    "void* rdx_8 = rax_59 + 8 + (zx.q(rcx_4.b u>> 5) << 2)",
    "int32_t r8_6 = *rdx_8",
    "int32_t rax_62",
    "rax_62.b = not(test_bit(r8_6, rcx_5))",
    "rdi_11 += 1",
    "rcx_4 = zx.d(*rdi_11)",
    "*rdx_8 = rax_62 << rcx_5.b ^ r8_6",
    "int128_t* rax_65 = sub_11e10()",
    "int32_t rcx_6 = *(rax_65 + 0xc)",
    "data_23468 = rax_65",
    "*(rax_65 + 0xc) = (not.d(rcx_6) & 0x4000000) ^ rcx_6",
    "int32_t rdx_12",
    "rdx_12.b = rbx_3 == 0",
    "int32_t rdx_13 = sx.d(data_23078)",
    "char rax_68 = (data_23330 ^ 1) & rdx_12.b & data_23678",
    "data_23678 = rax_68",
    "if (rdx_13 s< zx.d(rax_68))",
    "error(2, 0, dcgettext(nullptr, \"--dired and --zero are incompati\u2026\", 5))",
    "break",
    "int32_t rax_70 = var_100_1",
    "if (rax_70 s< 0)",
    "rax_70 = 0",
    "if (rbx_3 != 0)",
    "int32_t rax_108 = data_243e4 - 1",
    "rax_70 = sbb.d(rax_108, rax_108, rax_108 u< 3) & 5",
    "data_243e0 = rax_70",
    "if (rbx_3 != 0)",
    "goto label_5901",
    "char* var_118_2",
    "if (var_118_1 == 0)",
    "char* rax_166 = getenv(\"TIME_STYLE\")",
    "var_118_1 = rax_166",
    "if (rax_166 != 0)",
    "goto label_58b8",
    "var_118_2 = \"locale\"",
    "label_58b8:",
    "char* r12_3 = var_118_1",
    "while (true)",
    "if (strncmp(r12_3, \"posix-\", 6) != 0)",
    "var_118_2 = r12_3",
    "break",
    "if (sub_c6a0() == 0)",
    "goto label_5901",
    "r12_3 = &r12_3[6]",
    "if (*var_118_2 != 0x2b)",
    "char const (** const rbx_9)[0x9] = &data_22180",
    "int64_t rax_137 = sub_11e70(var_118_2, &data_22180, &data_196c0)",
    "if (rax_137 s< 0)",
    "sub_c040(\"time style\", var_118_2, rax_137)",
    "fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\\n\", 5), *stderr)",
    "FILE* fp",
    "while (true)",
    "char const (* rcx_16)[0x9] = *rbx_9",
    "fp = *stderr",
    "if (rcx_16 == 0)",
    "break",
    "rbx_9 = &rbx_9[1]",
    "__fprintf_chk(fp, 2, \"  - [posix-]%s\\n\", rcx_16)",
    "fputs_unlocked(dcgettext(nullptr, \"  - +FORMAT (e.g., +%H:%M) for a\u2026\", 5), fp)",
    "sub_90e0(2)",
    "noreturn",
    "if (rax_137 == 2)",
    "data_23240.o = _mm_unpacklo_epi64(zx.o(\"%Y-%m-%d \"), &data_1b18d[3])",
    "if (rax_137 s> 2)",
    "if (rax_137 == 3 && sub_c6a0() != 0)",
    "char* rax_168 = dcgettext(nullptr, data_23240, 2)",
    "char const (* msgid)[0xc] = data_23248",
    "data_23240 = rax_168",
    "data_23248 = dcgettext(nullptr, msgid, 2)",
    "uint128_t zmm0_5",
    "if (rax_137 == 0)",
    "zmm0_5 = zx.o(\"%Y-%m-%d %H:%M:%S.%N %z\")",
    "data_23240.o = _mm_unpacklo_epi64(zmm0_5, zmm0_5.q)",
    "zmm0_5 = zx.o(\"%Y-%m-%d %H:%M\")",
    "data_23240.o = _mm_unpacklo_epi64(zmm0_5, zmm0_5.q)",
    "goto label_6503",
    "char* rax_171 = strchr(&var_118_2[1], 0xa)",
    "int16_t var_a8",
    "if (rax_171 != 0)",
    "r13_2 = &rax_171[1]",
    "if (strchr(r13_2, 0xa) != 0)",
    "int64_t rax_185 = sub_9cf0(&var_118_2[1])",
    "rax_30 = error(2, 0, dcgettext(nullptr, \"invalid time style format %s\", 5), rax_185)",
    "label_6c17:",
    "int64_t r13_11 = *r13_2",
    "int32_t opt_index_1 = opt_index",
    "int32_t r12_17 = data_23088",
    "char* msgid_1",
    "if (rax_30 u<= 3)",
    "msgid_1 = \"invalid suffix in %s%s argument \u2026\"",
    "if (rax_30 == 1)",
    "msgid_1 = \"%s%s argument '%s' too large\"",
    "goto label_6c42",
    "msgid_1 = \"invalid %s%s argument '%s'\"",
    "if (rax_30 == 4)",
    "label_6c42:",
    "int64_t opt_index_2 = sx.q(opt_index_1)",
    "void* rbx_15",
    "int16_t* r14_5",
    "if (opt_index_1 s< 0)",
    "r14_5 = &var_a8",
    "var_a8 = 0",
    "rbx_15 = &data_1b00e - opt_index_2",
    "rbx_15 = &data_1b00e",
    "r14_5 = (&data_22340)[opt_index_2 * 4]",
    "error(zx.q(r12_17), 0, dcgettext(nullptr, msgid_1, 5), rbx_15, r14_5, r13_11)",
    "abort()",
    "noreturn",
    "*rax_171 = 0",
    "goto label_6a20",
    "r13_2 = &var_118_2[1]",
    "label_6a20:",
    "data_23240 = &var_118_2[1]",
    "data_23248 = r13_2",
    "label_6503:",
    "sub_8280()",
    "label_5901:",
    "int32_t rax_73 = *optind",
    "char rax_74 = data_23342",
    "var_10c_1.b = rax_74",
    "int64_t* var_d0",
    "if (rax_74 != 0)",
    "char* rax_118 = getenv(\"LS_COLORS\")",
    "char* var_d8 = rax_118",
    "if (rax_118 == 0 || *rax_118 == 0)",
    "char* rax_143 = getenv(\"COLORTERM\")",
    "if (rax_143 == 0 || *rax_143 == 0)",
    "char* string = getenv(\"TERM\")",
    "if (string != 0 && *string != 0)",
    "char const* const r14_4 = \"# Configuration file for dircolo\u2026\"",
    "while (r14_4 - \"# Configuration file for dircolo\u2026\" u<= \"ibselinux.so.1\")",
    "if (strncmp(r14_4, \"TERM \", 5) == 0 && fnmatch(&r14_4[5], string, 0) == 0)",
    "goto label_6686",
    "r14_4 = &r14_4[strlen(r14_4) + 1]",
    "data_23342 = 0",
    "char var_a9_1 = 0",
    "int16_t var_ab = 0x3f3f",
    "int64_t* rax_119 = sub_10b30(rax_118)",
    "data_23498 = rax_119",
    "var_d0 = rax_119",
    "while (true)",
    "label_6210:",
    "char* r12_9 = var_d8",
    "char rax_120 = *r12_9",
    "if (rax_120 == 0x2a)",
    "int64_t* rax_156 = malloc(0x30)",
    "if (rax_156 == 0)",
    "goto label_641a",
    "rax_156[4].b = 0",
    "var_108_1.q = &var_d8",
    "rax_156[5] = data_23490",
    "var_100_1.q = &var_d0",
    "rax_156[1] = var_d0",
    "data_23490 = rax_156",
    "var_d8 = &r12_9[1]",
    "if (sub_6ea0(&var_d0, &var_d8, 1, rax_156) != 0)",
    "char* rax_160 = var_d8",
    "bool cond:7_1 = *rax_160 != 0x3d",
    "var_d8 = &rax_160[1]",
    "if (not(cond:7_1))",
    "rax_156[3] = var_d0",
    "if (sub_6ea0(var_100_1.q, var_108_1.q, 0, &rax_156[2]) != 0)",
    "continue",
    "goto label_63de",
    "if (rax_120 == 0x3a)",
    "var_d8 = &r12_9[1]",
    "continue",
    "if (rax_120 != 0)",
    "var_ab.b = rax_120",
    "char rax_124 = r12_9[1]",
    "var_d8 = &r12_9[1]",
    "if (rax_124 != 0)",
    "var_ab:1.b = rax_124",
    "bool cond:9_1 = r12_9[2] != 0x3d",
    "var_d8 = &r12_9[3]",
    "if (not(cond:9_1))",
    "int64_t r13_7 = 0",
    "void* const i = &data_1b01a",
    "while (i != 0)",
    "if (strcmp(&var_ab, i) == 0)",
    "(&data_230c8)[sx.q(r13_7.d) * 2] = var_d0",
    "if (sub_6ea0(&var_d0, &var_d8, 0, &(&data_230c0)[sx.q(r13_7.d) * 2]) != 0)",
    "goto label_6210",
    "goto label_6396",
    "r13_7 += 1",
    "i = (&data_228e0)[r13_7]",
    "label_6396:",
    "int64_t rax_129 = sub_9cf0(&var_ab)",
    "error(0, 0, dcgettext(nullptr, \"unrecognized prefix: %s\", 5), rax_129)",
    "label_63de:",
    "error(0, 0, dcgettext(nullptr, \"unparsable value for LS_COLORS e\u2026\", 5))",
    "free(data_23498)",
    "void* i_6",
    "void* i_1 = data_23490",
    "while (i_1 != 0)",
    "i_6 = *(i_1 + 0x28)",
    "free(i_1)",
    "i_1 = i_6",
    "data_23342 = 0",
    "int64_t* r12_10 = data_23490",
    "if (r12_10 != 0)",
    "while (true)",
    "int64_t* i_7 = r12_10[5]",
    "if (i_7 == 0)",
    "break",
    "var_108_1.b = 0",
    "int64_t* i_2 = i_7",
    "var_100_1.q = i_7",
    "uint64_t r13_6 = *i_2",
    "if (r13_6 != -1 && r13_6 == *r12_10)",
    "void* r12_11 = i_2[1]",
    "void* r15_1 = r12_10[1]",
    "if (memcmp(r15_1, r12_11, r13_6) != 0)",
    "int32_t rax_122",
    "if (r12_11 != r15_1 && r13_6 != 0)",
    "rax_122 = sub_7d70(r15_1, r12_11, r13_6)",
    "if (r12_11 == r15_1 || r13_6 == 0 || rax_122 == 0)",
    "uint64_t rdx_29 = r12_10[2]",
    "int32_t rax_170",
    "if (rdx_29 == i_2[2])",
    "rax_170 = memcmp(r12_10[3], i_2[3], rdx_29)",
    "if (rdx_29 != i_2[2] || rax_170 != 0)",
    "r12_10[4].b = 1",
    "i_2[4].b = 1",
    "*i_2 = -1",
    "var_108_1.b = var_10c_1.b",
    "*i_2 = -1",
    "i_2 = i_2[5]",
    "do while (i_2 != 0)",
    "r12_10 = var_100_1.q",
    "if (data_23130 != 6)",
    "break",
    "if (strncmp(data_23138, \"target\", 6) == 0)",
    "data_23340 = 1",
    "break",
    "label_6686:",
    "char rax_149 = data_23701",
    "if (data_23342 == 0)",
    "goto label_591e",
    "data_23708 = 0",
    "if (rax_149 != 0)",
    "data_23341 = 1",
    "if (sub_bbb0(0xd) != 0)",
    "data_23341 = 1",
    "if (sub_bbb0(0xe) != 0 && data_23340 != 0)",
    "data_23341 = 1",
    "if (sub_bbb0(0xc) != 0 && data_23344 == 0)",
    "data_23341 = 1",
    "label_591e:",
    "if (data_23701 != 0)",
    "data_23341 = 1",
    "if (data_2333c == 0)",
    "int32_t rax_75 = 1",
    "if (data_23338 == 0 && data_23334 != 3)",
    "rax_75 = (sbb.d(1, 1, data_23344 u< 1) & 0xfffffffe) + 3",
    "data_2333c = rax_75",
    "if (data_23700 == 0)",
    "goto label_59b4",
    "int64_t* rax_76 = sub_16a40(0x1e, sub_6e20, sub_6e30, sub_6e90)",
    "data_236f8 = rax_76",
    "if (rax_76 != 0)",
    "_obstack_begin(&data_236a0, 0, 0, malloc, free)",
    "label_59b4:",
    "int64_t* rax_78",
    "int32_t rsi_11",
    "rax_78, rsi_11 = sub_8fc0(getenv(\"TZ\"))",
    "data_23680 = rax_78",
    "char rax_82",
    "if (((data_243e0 - 3) & 0xfffffffd) == 0 || data_23344 == 0 || data_23333 != 0 || data_23348 != 0)",
    "data_23332 = 1",
    "rax_82 = 0",
    "bool cond:10_1 = data_23700 != 0",
    "data_23332 = 0",
    "rax_82 = 1",
    "if (not(cond:10_1) && data_23342 == 0 && data_23334 == 0)",
    "rax_82 = data_23701",
    "data_23331 = rax_82",
    "data_23331 &= 1",
    "if (data_23678 != 0)",
    "_obstack_begin(&data_23620, 0, 0, malloc, free)",
    "_obstack_begin(&data_235c0, 0, 0, malloc, free)",
    "if (data_23330 == 0)",
    "goto label_5a17",
    "int64_t i_3 = 0",
    "while (i_3 != 0x100)",
    "int32_t rdx_22 = i_3.d",
    "int32_t rdx_23",
    "if (i_3 u> 0x5a)",
    "label_6107:",
    "rdx_23 = 1",
    "if ((i_3 - 0x61).d u> 0x19)",
    "goto label_6022",
    "while (true)",
    "if (i_3 u<= 0x40 && rdx_22 - 0x30 u> 9)",
    "label_6022:",
    "if (i_3.d != 0x7e && i_3.d != 0x2d)",
    "rdx_23.b = i_3.d == 0x2e",
    "rsi_11.b = i_3.d == 0x5f",
    "rdx_23 |= rsi_11",
    "break",
    "*(&data_234a0 + i_3) |= 1",
    "i_3 += 1",
    "rdx_22 = i_3.d",
    "if (i_3 u> 0x5a)",
    "goto label_6107",
    "*(&data_234a0 + i_3) |= rdx_23.b",
    "i_3 += 1",
    "var_c8 = 0x64",
    "int16_t* name_2 = nullptr",
    "int16_t* name = &var_a8",
    "int32_t* rax_110 = __errno_location()",
    "uint64_t bytes",
    "while (true)",
    "uint64_t rax_111 = var_c8",
    "*(name + rax_111 - 1) = 0",
    "*rax_110 = 0",
    "if (gethostname(name, rax_111 - 1) == 0)",
    "bytes = strlen(name) + 1",
    "if (rax_111 - 1 s> bytes)",
    "break",
    "*rax_110 = 0",
    "free(name_2)",
    "uint64_t rax_114 = zx.q(*rax_110)",
    "if (rax_114.d u> 0x24 || test_bit(-0x1000401002, rax_114))",
    "data_235a8 = &data_1af54",
    "goto label_5a17",
    "int16_t* name_1 = sub_10a20(0, &var_c8, 1, -1, 1)",
    "name_2 = name_1",
    "name = name_1",
    "continue",
    "if (name_2 == 0)",
    "var_100_1.q = bytes",
    "int64_t rax_180 = malloc(bytes)",
    "if (rax_180 != 0)",
    "uint64_t rdx_43 = var_100_1.q",
    "data_235a8 = __memcpy_chk(rax_180, name, rdx_43, rdx_43)",
    "goto label_5a17",
    "data_235a8 = name_2",
    "label_5a17:",
    "data_23328 = 0x64",
    "int64_t rax_83 = reallocarray(nullptr, 0x64, 0xd0)",
    "if (rax_83 != 0)",
    "data_23320 = rax_83",
    "data_23318 = 0",
    "sub_9f10()",
    "int32_t r12_5 = argc - rax_73",
    "int64_t* rbx_5",
    "if (r12_5 s> 0)",
    "int64_t rbx_4 = sx.q(rax_73)",
    "char* rdi_15 = argv[rbx_4]",
    "rbx_4 += 1",
    "sub_17490(rdi_15, 0, 1, &data_1af54)",
    "int16_t top = top - 1",
    "unimplemented  {call 0x17490}",
    "do while (argc s> rbx_4.d)",
    "if (data_23318 != 0)",
    "goto label_650d",
    "label_5aaa:",
    "rbx_5 = data_23720",
    "if (r12_5 s<= 1)",
    "goto label_5d57",
    "goto label_5ab7",
    "if (data_23338 == 0)",
    "sub_10b70(u\".\u2026\", nullptr, 1)",
    "sub_17490(u\".\u2026\", 3, 1, &data_1af54)",
    "rbx_5 = data_23720",
    "if (data_23318 != 0)",
    "label_650d:",
    "sub_e4b0()",
    "if (data_23338 == 0)",
    "sub_10bf0(nullptr, 1)",
    "if (data_23318 == 0)",
    "goto label_5aaa",
    "sub_105e0()",
    "if (data_23720 != 0)",
    "data_23350 += 1",
    "FILE* f = *stdout",
    "char* _IO_write_ptr = f->_IO_write_ptr",
    "if (_IO_write_ptr u>= f->_IO_write_end)",
    "__overflow(f, 0xa)",
    "rbx_5 = data_23720",
    "label_5ab7:",
    "if (rbx_5 != 0)",
    "goto label_5b11",
    "rbx_5 = data_23720",
    "f->_IO_write_ptr = &_IO_write_ptr[1]",
    "*_IO_write_ptr = 0xa",
    "label_5b11:",
    "while (true)",
    "int64_t* r12_7 = data_236f8",
    "int64_t rdi_19 = *rbx_5",
    "data_23720 = rbx_5[3]",
    "if (r12_7 != 0 && rdi_19 == 0)",
    "void* rax_86 = data_236b8",
    "if (rax_86 - data_236b0 u<= 0xf)",
    "__assert_fail(\"dev_ino_size <= __extension__ ({\u2026\", \"src/ls.c\", 0x41d, \"dev_ino_pop\")",
    "noreturn",
    "int128_t zmm1_1 = *(rax_86 - 0x10)",
    "data_236b8 = rax_86 - 0x10",
    "var_c8.o = zmm1_1",
    "int64_t rax_87 = sub_9a50(r12_7, &var_c8, &var_d0, 1)",
    "if (rax_87 == 0)",
    "__assert_fail(\"found\", \"src/ls.c\", 0x70c, \"main\")",
    "noreturn",
    "int64_t* rax_88 = var_d0",
    "r12_7[4] -= 1",
    "if (*rax_88 == 0)",
    "int64_t rax_96 = r12_7[3]",
    "r12_7[3] = rax_96 - 1",
    "int32_t zmm5_1",
    "if (rax_96 - 1 s< 0)",
    "zmm5_1 = float.s((rax_96 - 1) u>> 1 | (zx.q((rax_96 - 1).d) & 1))",
    "zmm5_1 = zmm5_1 f+ zmm5_1",
    "zmm5_1 = float.s(rax_96 - 1)",
    "int64_t rax_98 = r12_7[2]",
    "float zmm4_1",
    "if (rax_98 s< 0)",
    "zmm4_1 = float.s(rax_98 u>> 1 | (zx.q(rax_98.d) & 1))",
    "zmm4_1 = zmm4_1 + zmm4_1",
    "zmm4_1 = float.s(rax_98)",
    "if (not(*r12_7[5] * zmm4_1 f<= zmm5_1))",
    "sub_c7b0(r12_7)",
    "int32_t* rax_100 = r12_7[5]",
    "if (not(*rax_100 * zmm4_1 f<= zmm5_1))",
    "zmm4_1 = zmm4_1 f* rax_100[1]",
    "if (rax_100[4].b == 0)",
    "zmm4_1 = zmm4_1 f* rax_100[2]",
    "int64_t rsi_14",
    "if (zmm4_1 >= 9.22337204e+18f)",
    "rsi_14 = int.q(zmm4_1 - 9.22337204e+18f) ^ 0x8000000000000000",
    "rsi_14 = int.q(zmm4_1)",
    "if (sub_b590(r12_7, rsi_14) == 0)",
    "void* i_8",
    "void* i_4 = r12_7[9]",
    "while (i_4 != 0)",
    "i_8 = *(i_4 + 8)",
    "free(i_4)",
    "i_4 = i_8",
    "r12_7[9] = 0",
    "free(rax_87)",
    "free(*rbx_5)",
    "free(rbx_5[1])",
    "free(rbx_5)",
    "rbx_5 = data_23720",
    "if (rbx_5 == 0)",
    "break",
    "continue",
    "sub_10fc0(rdi_19, rbx_5[1], rbx_5[2].b)",
    "free(*rbx_5)",
    "free(rbx_5[1])",
    "free(rbx_5)",
    "rbx_5 = data_23720",
    "data_23728 = 1",
    "if (rbx_5 == 0)",
    "break",
    "label_5d57:",
    "if (rbx_5 != 0)",
    "if (rbx_5[3] == 0)",
    "data_23728 = 0",
    "goto label_5b11",
    "if (data_23342 != 0 && data_237c0 != 0)",
    "if (data_230c0 != 2 || *data_230c8 != 0x5b1b || data_230d0 != 1 || *data_230d8 != 0x6d)",
    "sub_be90(&data_230c0)",
    "sub_be90(&data_230d0)",
    "fflush_unlocked(*stdout)",
    "sub_8a60(0)",
    "int32_t i_5 = data_237c4",
    "while (i_5 != 0)",
    "i_5 -= 1",
    "raise(0x13)",
    "int32_t sig = data_237c8",
    "if (sig != 0)",
    "raise(sig)",
    "if (data_23678 != 0)",
    "sub_8190(\"//DIRED//\", &data_23620)",
    "sub_8190(\"//SUBDIRED//\", &data_235c0)",
    "int32_t* rax_134 = data_235a0",
    "if (rax_134 == 0)",
    "rax_134 = &data_232e0",
    "__printf_chk(2, \"//DIRED-OPTIONS// --quoting-styl\u2026\", (&data_229c0)[zx.q(*rax_134)])",
    "int64_t* rdi_26 = data_236f8",
    "if (rdi_26 != 0)",
    "if (rdi_26[4] != 0)",
    "__assert_fail(\"hash_get_n_entries (active_dir_s\u2026\", \"src/ls.c\", 0x740, \"main\")",
    "noreturn",
    "sub_c840(rdi_26)",
    "*(fsbase + 0x28)",
    "if (rax == *(fsbase + 0x28))",
    "return data_2372c",
    "__stack_chk_fail()",
    "noreturn",
    "label_641a:",
    "sub_e430()",
    "noreturn",
    "uint64_t rax_7 = zx.q(rax_6 + 0x83)",
    "if (rax_7.d u> 0x114)",
    "sub_90e0(2)",
    "noreturn",
    "switch (sx.q(rbx_1[rax_7]) + rbx_1)",
    "case 0x4f58",
    "data_23078 = 0",
    "int32_t rax_10",
    "rax_10.b = var_f0_1 != 0",
    "data_23342 = 0",
    "var_f0_1 = rax_10",
    "var_108_1 = 0",
    "var_10c_1 = 0",
    "continue",
    "case 0x4f82",
    "var_10c_1 = 0",
    "continue",
    "case 0x4fc1",
    "data_2308d = 0",
    "var_f0_1 = 0",
    "continue",
    "case 0x4fc8",
    "var_f0_1 = 0",
    "continue",
    "case 0x4fd5",
    "var_118_1 = *optarg",
    "continue",
    "case 0x4feb",
    "data_243e4 = *(&data_19740 + (sub_13ec0(\"--time\", *optarg, &data_22240, &data_19740, sub_99e0) << 2))",
    "continue",
    "case 0x5029",
    "var_100_1 = *(&data_19770 + (sub_13ec0(\"--sort\", *optarg, &data_222a0, &data_19770, sub_99e0) << 2))",
    "continue",
    "case 0x5067",
    "data_232dc = 0x90",
    "data_232d8 = 0x90",
    "data_232d0 = 1",
    "data_23080 = 1",
    "continue",
    "case 0x5096",
    "var_108_1 = *(&data_196e0 + (sub_13ec0(\"--quoting-style\", *optarg, &data_229c0, &data_196e0, sub_99e0) << 2))",
    "continue",
    "case 0x50d4",
    "data_23334 = *(&data_19710 + (sub_13ec0(\"--indicator-style\", *optarg, &data_221c0, &data_19710, sub_99e0) << 2))",
    "continue",
    "case 0x5112",
    "char* rsi_5 = *optarg",
    "int32_t rdx_1",
    "if (rsi_5 != 0)",
    "rdx_1 = *(&data_197a0 + (sub_13ec0(\"--hyperlink\", rsi_5, &data_222e0, &data_197a0, sub_99e0) << 2))",
    "char rax_22",
    "if (rsi_5 == 0 || rdx_1 == 1)",
    "rax_22 = 1",
    "rax_22 = 0",
    "if (rdx_1 == 2)",
    "rax_22 = sub_9ee0()",
    "data_23330 = rax_22",
    "data_23330 &= 1",
    "continue",
    "case 0x5177",
    "uint128_t* rax_24 = malloc(0x10)",
    "if (rax_24 == 0)",
    "goto label_641a",
    "uint128_t zmm0_2 = *optarg | data_23480 << 0x40",
    "data_23480 = rax_24",
    "*rax_24 = zmm0_2",
    "continue",
    "case 0x51ab",
    "data_23701 = 1",
    "continue",
    "case 0x51b7",
    "var_f0_1 = 0",
    "var_118_1 = \"full-iso\"",
    "continue",
    "case 0x51d4",
    "var_f0_1 = *(&data_19720 + (sub_13ec0(\"--format\", *optarg, &data_22200, &data_19720, sub_99e0) << 2))",
    "continue",
    "case 0x5212",
    "data_23334 = 2",
    "continue",
    "case 0x5221",
    "data_2333c = 3",
    "continue",
    "case 0x5230",
    "char* rsi_7 = *optarg",
    "int32_t rdx_2",
    "if (rsi_7 != 0)",
    "rdx_2 = *(&data_197a0 + (sub_13ec0(\"--color\", rsi_7, &data_222e0, &data_197a0, sub_99e0) << 2))",
    "char rax_28",
    "if (rsi_7 == 0 || rdx_2 == 1)",
    "rax_28 = 1",
    "rax_28 = 0",
    "if (rdx_2 == 2)",
    "rax_28 = sub_9ee0()",
    "data_23342 = rax_28",
    "data_23342 &= 1",
    "continue",
    "case 0x5295",
    "r13_2 = optarg",
    "rax_30 = sub_12420(*optarg)",
    "if (rax_30 != 0)",
    "goto label_6c17",
    "data_232d8 = data_232dc",
    "data_23080 = data_232d0",
    "continue",
    "case 0x52cc",
    "data_23343 = 1",
    "continue",
    "case 0x52d8",
    "var_f0_1 = 3",
    "continue",
    "case 0x52e7",
    "int64_t rax_33 = sub_9070(*optarg)",
    "var_120_1 = rax_33",
    "if (rax_33 s>= 0)",
    "continue",
    "rbx_1 = sub_9cf0(*optarg)",
    "error(2, 0, \"%s: %s\", dcgettext(nullptr, \"invalid line width\", 5), rbx_1)",
    "var_100_1 = 4",
    "continue",
    "case 0x5341",
    "var_100_1 = 4",
    "continue",
    "case 0x5350",
    "data_243e4 = 2",
    "continue",
    "case 0x535f",
    "var_100_1 = 5",
    "continue",
    "case 0x536e",
    "data_23348 = 1",
    "continue",
    "case 0x537a",
    "data_23488 = 1",
    "continue",
    "case 0x5386",
    "var_10c_1 = 1",
    "continue",
    "case 0x5395",
    "data_23334 = 1",
    "continue",
    "case 0x53a4",
    "data_2308c = 0",
    "var_f0_1 = 0",
    "continue",
    "case 0x53ba",
    "data_232cc = 1",
    "var_f0_1 = 0",
    "continue",
    "case 0x53ce",
    "var_f0_1 = 4",
    "continue",
    "case 0x53dd",
    "data_23349 = 1",
    "continue",
    "case 0x53e9",
    "data_232dc = 0xb0",
    "data_232d8 = 0xb0",
    "data_232d0 = 1",
    "data_23080 = 1",
    "continue",
    "case 0x5418",
    "data_2348c = 2",
    "if (var_f0_1 == 0)",
    "var_f0_1 = 0xffffffff",
    "data_23342 = 0",
    "data_23330 = 0",
    "data_23348 = 0",
    "var_100_1 = 6",
    "continue",
    "case 0x5459",
    "data_23338 = 1",
    "continue",
    "case 0x5465",
    "data_243e4 = 1",
    "continue",
    "case 0x5474",
    "var_108_1 = 7",
    "continue",
    "case 0x5483",
    "data_2348c = 2",
    "continue",
    "case 0x5492",
    "data_23333 = 1",
    "continue",
    "case 0x549e",
    "var_100_1 = 1",
    "continue",
    "case 0x54ad",
    "var_100_1 = 6",
    "continue",
    "case 0x54bc",
    "char* rax_37 = dcgettext(nullptr, \"invalid tab size\", 5)",
    "void* r13_3 = *optarg",
    "int32_t rax_38 = sub_11f60(r13_3, nullptr, &var_c8, &data_1af54)",
    "if (rax_38 == 0)",
    "uint64_t rax_39 = var_c8",
    "var_128_1 = rax_39",
    "if (rax_39 s>= 0)",
    "continue",
    "*__errno_location() = 0x4b",
    "if (rax_38 == 1)",
    "*__errno_location() = 0x4b",
    "if (rax_38 == 3)",
    "*__errno_location() = 0",
    "rbx_1 = sub_13ce0(0, r13_3, &data_23040)",
    "int32_t errnum = *__errno_location()",
    "if (errnum == 0x16)",
    "errnum = 0",
    "error(2, errnum, \"%s: %s\", rax_37, rbx_1)",
    "var_100_1 = 3",
    "continue",
    "case 0x5561",
    "var_100_1 = 3",
    "continue",
    "case 0x5570",
    "data_23700 = 1",
    "continue",
    "case 0x557c",
    "var_108_1 = 5",
    "continue",
    "case 0x558b",
    "var_108_1 = 0",
    "continue",
    "case 0x559a",
    "data_2333c = 4",
    "continue",
    "case 0x55a9",
    "sub_e470(*optarg)",
    "continue",
    "case 0x55bd",
    "data_2333c = 2",
    "continue",
    "case 0x55cc",
    "data_2308c = 0",
    "continue",
    "case 0x55d8",
    "char* rsi_9 = *optarg",
    "if (rsi_9 != 0)",
    "int32_t rax_45 = *(&data_197a0 + (sub_13ec0(\"--classify\", rsi_9, &data_222e0, &data_197a0, sub_99e0) << 2))",
    "if (rax_45 != 1)",
    "if (rax_45 != 2)",
    "continue",
    "if (sub_9ee0() == 0)",
    "continue",
    "data_23334 = 3",
    "continue",
    "case 0x563a",
    "data_23678 = 1",
    "continue",
    "case 0x5646",
    "var_f0_1 = 2",
    "continue",
    "case 0x5655",
    "sub_e470(&data_1b056)",
    "sub_e470(&data_1b055)",
    "continue",
    "case 0x5672",
    "data_2348c = 1",
    "continue",
    "case 0x5681",
    "int32_t rax_47",
    "rax_47.b = var_f0_1 != 0",
    "var_f0_1 = rax_47",
    "continue",
    "case 0x5698",
    "sub_8c20(\"David MacKenzie\", \"David MacKenzie\")",
    "char* rax_49",
    "int64_t rdi_9",
    "rax_49, rdi_9 = sub_8c20(\"Richard M. Stallman\", \"Richard M. Stallman\")",
    "int64_t var_140 = rdi_9",
    "int64_t var_148 = 0",
    "sub_11790(*stdout, \"ls\", \"GNU coreutils\", &data_1b0e6, 0)",
    "exit(0)",
    "noreturn",
    "case 0x5e0d",
    "var_10d_1 = 1",
    "continue",
    "case 0x6902",
    "sub_90e0(2)",
    "noreturn",
    "case 0x690c",
    "sub_90e0(0)",
    "noreturn",
    "fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, *stderr)",
    "abort()",
    "noreturn"
  ]
}