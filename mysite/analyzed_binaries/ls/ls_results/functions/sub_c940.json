{
  "address": "0xc940",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x10",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x28], rax",
    "xor     eax, eax",
    "test    rsi, rsi",
    "je      0x4d7f",
    "call    abort",
    "{ Does not return }",
    "lea     r14, [rbp-0x30]",
    "mov     r13, rdx",
    "xor     ecx, ecx",
    "mov     rbx, rdi",
    "mov     rdx, r14",
    "mov     r12, rsi",
    "call    sub_9a50",
    "test    rax, rax",
    "je      0xc9b0",
    "mov     rax, qword [rbx+0x18]",
    "test    rax, rax",
    "js      0xca38",
    "mov     qword [r13], rax",
    "xor     eax, eax",
    "mov     rdx, rax",
    "and     eax, 0x1",
    "pxor    xmm5, xmm5",
    "shr     rdx, 0x1",
    "or      rdx, rax",
    "mov     rax, qword [rbx+0x10]",
    "cvtsi2ss xmm5, rdx",
    "addss   xmm5, xmm5",
    "test    rax, rax",
    "jns     0xc9cf",
    "pxor    xmm5, xmm5",
    "cvtsi2ss xmm5, rax",
    "mov     rax, qword [rbx+0x10]",
    "test    rax, rax",
    "js      0xca5e",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x10",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     rbp",
    "retn    ",
    "pxor    xmm4, xmm4",
    "cvtsi2ss xmm4, rax",
    "mov     rdx, rax",
    "and     eax, 0x1",
    "pxor    xmm4, xmm4",
    "shr     rdx, 0x1",
    "or      rdx, rax",
    "cvtsi2ss xmm4, rdx",
    "addss   xmm4, xmm4",
    "jmp     0xc9d8",
    "mov     rdi, rbx",
    "call    sub_c7b0",
    "mov     rax, qword [rbx+0x28]",
    "movaps  xmm1, xmm4",
    "movss   xmm0, dword [rax+0x8]",
    "mulss   xmm1, xmm0",
    "comiss  xmm5, xmm1",
    "jbe     0xc9ee",
    "mov     r13, qword [rbp-0x30]",
    "cmp     qword [r13], 0x0",
    "je      0xcad0",
    "mov     rax, qword [rbx+0x28]",
    "movss   xmm0, dword [rax+0x8]",
    "mulss   xmm0, xmm4",
    "comiss  xmm5, xmm0",
    "ja      0xca80",
    "mulss   xmm4, dword [rax+0xc]",
    "cmp     byte [rax+0x10], 0x0",
    "je      0xcaf0",
    "movdqu  xmm0, xmmword [rbx+0x18]",
    "paddq   xmm0, xmmword [rel data_1dad0]",
    "mov     qword [r13], r12",
    "movups  xmmword [rbx+0x18], xmm0",
    "jmp     0xca28",
    "mov     rax, qword [rbx+0x48]",
    "test    rax, rax",
    "je      0xcb40",
    "mulss   xmm4, xmm0",
    "jmp     0xcaac",
    "comiss  xmm4, dword [rel data_19014]",
    "jb      0xcb00",
    "mov     eax, 0x1",
    "jmp     0xc98d",
    "mov     edi, 0x10",
    "call    malloc",
    "test    rax, rax",
    "jne     0xca12",
    "mov     rdx, qword [rax+0x8]",
    "mov     qword [rbx+0x48], rdx",
    "comiss  xmm4, dword [rel data_19018]",
    "jae     0xcb60",
    "call    __errno_location",
    "mov     dword [rax], 0xc",
    "mov     rdx, qword [rbp-0x28]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0xcb74",
    "movq    xmm0, r12",
    "movhps  xmm0, qword [r13+0x8]",
    "movups  xmmword [rax], xmm0",
    "mov     qword [r13+0x8], rax",
    "add     qword [rbx+0x20], 0x1",
    "jmp     0xcac0",
    "subss   xmm4, dword [rel data_19018]",
    "cvttss2si rsi, xmm4",
    "btc     rsi, 0x3f",
    "jmp     0xcb0e",
    "cvttss2si rsi, xmm4",
    "mov     eax, 0xffffffff",
    "jmp     0xc98d",
    "mov     rdi, rbx",
    "call    sub_b590",
    "test    al, al",
    "je      0xcac0",
    "xor     ecx, ecx",
    "mov     rdx, r14",
    "mov     rsi, r12",
    "mov     rdi, rbx",
    "call    sub_9a50",
    "test    rax, rax",
    "je      0xc9ee",
    "jmp     0x4d7f"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}