{
  "address": "0x8ce0",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check for software breakpoints/eab8e97e968348cd9975bb039b618db9",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using speck/4b1f3c27d17344b39cf9dede3bcf8b4b",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2",
    "decompress data using LZO/4cde8899b401464e87ec185666d6508a",
    "load shellcode via donut/c9a72a5fdf6e462ea071ab99fb8585e2/5c9bba15e9b64c668b01383d9c9afe0e",
    "hash data using jshash/f142a7a7597843a791ba4ccc676b6fb1",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "check OS version/0dbc6332c9724004b686b44a39c40b94"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rax, rsi",
    "shr     rax, 0x1",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x48",
    "mov     qword [rbp-0x58], rsi",
    "sub     rsi, rax",
    "mov     qword [rbp-0x50], rax",
    "lea     rax, [rdi+rax*8]",
    "mov     qword [rbp-0x60], rdx",
    "mov     qword [rbp-0x48], rcx",
    "mov     qword [rbp-0x70], rax",
    "cmp     rsi, 0x2",
    "ja      0x8f10",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     rdi, qword [rbp-0x70]",
    "call    sub_8ce0",
    "jmp     0x8d25",
    "je      0x8dd8",
    "cmp     qword [rbp-0x58], 0x3",
    "jne     0x8e18",
    "movdqu  xmm0, xmmword [rax]",
    "mov     r14, rax",
    "movhlps xmm1, xmm0",
    "movq    rdi, xmm0",
    "movaps  xmmword [rbp-0x40], xmm0",
    "movq    rsi, xmm1",
    "call    rcx",
    "test    eax, eax",
    "jle     0x8d25",
    "mov     rax, qword [rbp-0x58]",
    "mov     rsi, qword [rbp-0x50]",
    "shr     rax, 0x2",
    "sub     rsi, rax",
    "mov     qword [rbp-0x68], rax",
    "lea     r12, [rbx+rax*8]",
    "cmp     rsi, 0x2",
    "ja      0x8f46",
    "mov     rax, qword [rbx]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     qword [rbp-0x40], rax",
    "mov     qword [rdx], rax",
    "movdqa  xmm0, xmmword [rbp-0x40]",
    "cmp     qword [rbp-0x58], 0x3",
    "shufpd  xmm0, xmm0, 0x1",
    "movups  xmmword [r14], xmm0",
    "je      0x8d30",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     rdi, r12",
    "call    sub_8ce0",
    "jmp     0x8e3f",
    "je      0x8f84",
    "mov     rax, qword [rbp-0x40]",
    "add     r14, 0x1",
    "mov     qword [rbx+r13*8-0x8], rax",
    "cmp     qword [rbp-0x50], r14",
    "je      0x8ef8",
    "mov     qword [rbx+r13*8-0x8], r12",
    "add     r15, 0x1",
    "cmp     qword [rbp-0x58], r15",
    "je      0x8da8",
    "nop     dword [rax+rax]",
    "cmp     qword [rbp-0x68], 0x2",
    "ja      0x8f26",
    "movdqu  xmm0, xmmword [r12]",
    "mov     rax, qword [rbp-0x48]",
    "movhlps xmm2, xmm0",
    "movq    rdi, xmm0",
    "movaps  xmmword [rbp-0x40], xmm0",
    "movq    rsi, xmm2",
    "call    rax",
    "test    eax, eax",
    "jle     0x8e3f",
    "add     rsp, 0x48",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbp-0x60]",
    "mov     rax, qword [rax+r14*8]",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x8d50",
    "mov     rdx, qword [rbp-0x50]",
    "mov     rax, qword [rbp-0x60]",
    "add     rsp, 0x48",
    "lea     rdi, [rbx+r13*8]",
    "pop     rbx",
    "pop     r12",
    "sub     rdx, r14",
    "pop     r13",
    "lea     rsi, [rax+r14*8]",
    "pop     r14",
    "shl     rdx, 0x3",
    "pop     r15",
    "pop     rbp",
    "jmp     memcpy",
    "mov     r12, qword [rbx+r15*8]",
    "jmp     0x8d50",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rdx, qword [rbp-0x60]",
    "mov     rdi, rbx",
    "mov     rsi, qword [rbp-0x68]",
    "call    sub_8ce0",
    "mov     rax, qword [rbx]",
    "mov     qword [rbp-0x40], rax",
    "je      0x8f5b",
    "movdqa  xmm0, xmmword [rbp-0x40]",
    "shufpd  xmm0, xmm0, 0x1",
    "movups  xmmword [r12], xmm0",
    "jmp     0x8e3f",
    "mov     rdi, qword [rbp-0x40]",
    "mov     rcx, qword [rbp-0x48]",
    "mov     rsi, r12",
    "add     r13, 0x1",
    "call    rcx",
    "test    eax, eax",
    "jle     0x8d80",
    "mov     r12, qword [r12]",
    "mov     r14, qword [rbp-0x68]",
    "xor     r13d, r13d",
    "mov     r15, qword [rbp-0x60]",
    "nop     word [rax+rax]",
    "mov     r13, qword [rbx+0x8]",
    "mov     rdi, rax",
    "mov     rax, qword [rbp-0x48]",
    "mov     rsi, r13",
    "call    rax",
    "test    eax, eax",
    "jle     0x8f3a",
    "mov     rax, qword [rbp-0x40]",
    "add     r13, 0x1",
    "mov     qword [r15-0x8], rax",
    "cmp     qword [rbp-0x68], r13",
    "je      0x8ec0",
    "mov     qword [r15-0x8], r12",
    "add     r14, 0x1",
    "cmp     qword [rbp-0x50], r14",
    "je      0x8ecb",
    "mov     rax, qword [rbx]",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x8e57",
    "movq    xmm0, r13",
    "movhps  xmm0, qword [rbp-0x40]",
    "mov     qword [rbp-0x40], r13",
    "movups  xmmword [rbx], xmm0",
    "jmp     0x8e57",
    "mov     rax, qword [rbp-0x50]",
    "mov     r13, r14",
    "mov     qword [rbp-0x68], rax",
    "mov     rax, qword [rbx+r13*8]",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x8e70",
    "mov     rdx, qword [rbp-0x68]",
    "lea     rsi, [rbx+r13*8]",
    "mov     rdi, r15",
    "sub     rdx, r13",
    "shl     rdx, 0x3",
    "call    memcpy",
    "mov     rax, qword [rbp-0x60]",
    "mov     rax, qword [rax]",
    "mov     qword [rbp-0x40], rax",
    "jmp     0x8d3e",
    "mov     r12, qword [rbx+r14*8]",
    "jmp     0x8e70",
    "mov     rax, qword [rbp-0x70]",
    "mov     r15, qword [rbp-0x50]",
    "xor     r14d, r14d",
    "xor     r13d, r13d",
    "mov     r12, qword [rax]",
    "nop     ",
    "mov     rdi, qword [rbp-0x40]",
    "mov     rdx, qword [rbp-0x48]",
    "mov     rsi, r12",
    "add     r15, 0x8",
    "call    rdx",
    "test    eax, eax",
    "jle     0x8ea0"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}