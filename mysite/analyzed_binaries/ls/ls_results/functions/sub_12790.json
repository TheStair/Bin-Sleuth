{
  "address": "0x12790",
  "rules": [
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/14b9db6dcaf34a3e86e9217d3cc476a8",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/7a997b34591146dbbd4411d920ff141c",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/5d37b64795ca4da78dcc19574a757de4",
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "hash data using aphash/98bdcb90423346b7a1fc9c166925c881",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/2ee106c7c5d34df799b377fb04fb2ee1",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2",
    "contain loop",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r11, rsi",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15d, ecx",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0xb8",
    "mov     qword [rbp-0x78], r9",
    "mov     r14, qword [rbp+0x10]",
    "mov     r9, 0xffffffffffffffff",
    "mov     qword [rbp-0x68], rdx",
    "mov     r13, qword [rbp+0x18]",
    "mov     dword [rbp-0xb4], r8d",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0xd8], r14",
    "mov     r14, r9",
    "mov     qword [rbp-0xd0], r13",
    "mov     r13, rdi",
    "nop     ",
    "call    abort",
    "{ Does not return }",
    "lea     rsi, [rel jump_table_1dc20]",
    "mov     eax, r15d",
    "mov     r11, qword [rbp-0x58]",
    "movsxd  rax, dword [rsi+rax*4]",
    "add     rax, rsi",
    "jmp     rax",
    "{Case 0x8-0xa}",
    "cmp     r15d, 0xa",
    "je      0x1289a",
    "{Case 0x7}",
    "mov     byte [rbp-0x58], 0x1",
    "xor     ebx, ebx",
    "mov     byte [rbp-0x5c], 0x0",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     qword [rbp-0xb0], 0x0",
    "mov     byte [rbp-0x59], 0x0",
    "mov     byte [rbp-0x5b], 0x1",
    "mov     qword [rbp-0x70], 0x0",
    "mov     qword [rbp-0xa8], 0x0",
    "jmp     0x128e8",
    "{Case 0x4}",
    "test    r12d, r12d",
    "jne     0x13082",
    "{Case 0x0}",
    "mov     byte [rbp-0x58], 0x1",
    "xor     ebx, ebx",
    "mov     byte [rbp-0x5c], 0x0",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     qword [rbp-0xb0], 0x0",
    "mov     byte [rbp-0x59], 0x0",
    "mov     byte [rbp-0x5b], 0x0",
    "mov     qword [rbp-0x70], 0x0",
    "mov     qword [rbp-0xa8], 0x0",
    "jmp     0x128e8",
    "{Case 0x5}",
    "test    r12d, r12d",
    "jne     0x13b8f",
    "{Case 0x6}",
    "lea     rax, [rel data_1aef1]",
    "mov     byte [rbp-0x58], 0x1",
    "xor     ebx, ebx",
    "mov     r15d, 0x5",
    "mov     byte [rbp-0x5c], 0x0",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     qword [rbp-0xb0], 0x0",
    "mov     byte [rbp-0x59], 0x1",
    "mov     byte [rbp-0x5b], 0x1",
    "mov     qword [rbp-0x70], 0x1",
    "mov     qword [rbp-0xa8], rax",
    "jmp     0x128e8",
    "{Case 0x3}",
    "mov     byte [rbp-0x58], 0x1",
    "mov     byte [rbp-0x5c], 0x0",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     qword [rbp-0xb0], 0x0",
    "mov     byte [rbp-0x59], 0x1",
    "mov     byte [rbp-0x5b], 0x1",
    "{Case 0x1}",
    "mov     byte [rbp-0x58], 0x1",
    "mov     byte [rbp-0x5c], 0x0",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     qword [rbp-0xb0], 0x0",
    "mov     byte [rbp-0x59], 0x1",
    "mov     byte [rbp-0x5b], 0x0",
    "jmp     0x1305f",
    "{Case 0x2}",
    "movzx   eax, byte [rbp-0x59]",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     edx, 0x1",
    "mov     byte [rbp-0x5b], 0x0",
    "mov     byte [rbp-0x58], al",
    "xor     eax, eax",
    "mov     qword [rbp-0xb0], 0x0",
    "jmp     0x13933",
    "xor     ebx, ebx",
    "test    r12d, r12d",
    "je      0x13aba",
    "lea     rbx, [rel data_1b542]",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "mov     qword [rbp-0x58], r11",
    "mov     rsi, rbx",
    "call    dcgettext",
    "mov     r11, qword [rbp-0x58]",
    "cmp     rax, rbx",
    "mov     qword [rbp-0xd8], rax",
    "je      0x13be6",
    "xor     r12d, r12d",
    "nop     dword [rax+rax]",
    "mov     qword [rbp-0xb0], r11",
    "xor     eax, eax",
    "xor     edx, edx",
    "mov     byte [rbp-0x58], 0x1",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     byte [rbp-0x5b], 0x1",
    "lea     rax, [rel data_1aef1]",
    "mov     byte [rbp-0x58], 0x1",
    "xor     ebx, ebx",
    "mov     byte [rbp-0x5c], 0x0",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     qword [rbp-0xb0], 0x0",
    "mov     byte [rbp-0x59], 0x1",
    "mov     byte [rbp-0x5b], 0x1",
    "mov     qword [rbp-0x70], 0x1",
    "mov     qword [rbp-0xa8], rax",
    "jmp     0x128e8",
    "test    r11, r11",
    "je      0x12fbf",
    "lea     rax, [rel data_1afd6[0x19]]  {\"'\"}",
    "mov     qword [rbp-0x70], 0x1",
    "xor     ebx, ebx",
    "mov     r15d, 0x2",
    "mov     qword [rbp-0xa8], rax",
    "jmp     0x128e8",
    "xor     ebx, ebx",
    "cmp     byte [rbp-0x58], 0x0",
    "lea     rsi, [rel data_1afd6[0x19]]  {\"'\"}",
    "mov     qword [rbp-0x70], 0x1",
    "mov     qword [rbp-0xa8], rsi",
    "mov     r15d, 0x2",
    "je      0x13cc3",
    "mov     rdx, qword [rbp-0xd8]",
    "movzx   eax, byte [rdx]",
    "test    al, al",
    "je      0x128a5",
    "mov     r12, qword [rbp-0xd0]",
    "mov     qword [rbp-0x80], r11",
    "mov     rdi, r12",
    "call    strlen",
    "mov     qword [rbp-0xa8], r12",
    "mov     r11, qword [rbp-0x80]",
    "mov     qword [rbp-0x70], rax",
    "mov     byte [rbp-0x58], 0x1",
    "mov     byte [rbp-0x5c], 0x0",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     qword [rbp-0xb0], 0x0",
    "mov     byte [rbp-0x5b], 0x1",
    "nop     word [rax+rax]",
    "mov     esi, r15d",
    "mov     rdi, rax",
    "call    sub_df40",
    "mov     r11, qword [rbp-0x58]",
    "mov     qword [rbp-0xd8], rax",
    "jmp     0x1286c",
    "lea     rbx, [rel data_1afd6[0x19]]  {\"'\"}",
    "xor     edi, edi",
    "mov     edx, 0x5",
    "mov     qword [rbp-0x58], r11",
    "mov     rsi, rbx",
    "call    dcgettext",
    "mov     r11, qword [rbp-0x58]",
    "cmp     rax, rbx",
    "mov     qword [rbp-0xd0], rax",
    "je      0x13bcb",
    "test    r9b, r9b",
    "je      0x13706",
    "mov     rax, qword [rbp-0x68]",
    "cmp     byte [rax+r12], 0x0",
    "setne   r9b",
    "mov     byte [rbp-0x5c], al",
    "lea     rax, [rel data_1afd6[0x19]]  {\"'\"}",
    "mov     r11, qword [rbp-0xb0]",
    "mov     ebx, 0x1",
    "mov     qword [rbp-0xb0], rdx",
    "mov     r15d, 0x2",
    "mov     byte [rbp-0x59], 0x0",
    "mov     qword [rbp-0x70], 0x1",
    "mov     qword [rbp-0xa8], rax",
    "jmp     0x128e8",
    "mov     byte [r13], 0x27",
    "lea     rax, [rel data_1aef1]",
    "mov     byte [rbp-0x58], 0x1",
    "mov     ebx, 0x1",
    "mov     byte [rbp-0x5c], 0x0",
    "mov     byte [rbp-0x5a], 0x0",
    "mov     qword [rbp-0xb0], 0x0",
    "mov     byte [rbp-0x59], 0x0",
    "mov     byte [rbp-0x5b], 0x1",
    "mov     qword [rbp-0x70], 0x1",
    "mov     qword [rbp-0xa8], rax",
    "jmp     0x128e8",
    "mov     byte [r13], 0x22",
    "mov     byte [rbp-0x58], dl",
    "mov     rdx, qword [rbp-0xb0]",
    "mov     qword [rbp-0xb0], r11",
    "jmp     0x12f29",
    "mov     byte [rbp-0x5c], al",
    "movzx   eax, byte [rbp-0x58]",
    "mov     byte [rbp-0x58], dl",
    "mov     byte [rbp-0x59], al",
    "jmp     0x128e8",
    "nop     dword [rax]",
    "mov     esi, r15d",
    "mov     rdi, rax",
    "call    sub_df40",
    "mov     r11, qword [rbp-0x58]",
    "mov     qword [rbp-0xd0], rax",
    "jmp     0x1289a",
    "cmp     r15d, 0x2",
    "sete    dl",
    "test    rbx, rbx",
    "sete    al",
    "and     al, dl",
    "je      0x13880",
    "cmp     r15d, 0x2",
    "setne   al",
    "and     al, byte [rbp-0x5b]",
    "cmp     qword [rbp-0x70], 0x0",
    "mov     r10d, eax",
    "mov     rax, qword [rbp-0x68]",
    "setne   r8b",
    "lea     rcx, [rax+r12]",
    "and     r8b, r10b",
    "jne     0x130a8",
    "cmp     qword [rbp-0xb0], 0x0",
    "je      0x12f38",
    "add     rbx, 0x1",
    "movzx   eax, byte [rdx+rbx]",
    "test    al, al",
    "jne     0x13ad0",
    "mov     byte [r13+rbx], al",
    "movzx   eax, byte [rbp-0x59]",
    "xor     eax, 0x1",
    "and     dl, al",
    "jne     0x138fd",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x12e82",
    "mov     rax, qword [rbp-0x70]",
    "lea     rdx, [rax+r12]",
    "cmp     r14, 0xffffffffffffffff",
    "jne     0x13113",
    "movzx   edx, byte [rcx]",
    "cmp     dl, 0x3f",
    "jg      0x13490",
    "cmp     rbx, r11",
    "jae     0x13ada",
    "jmp     0x128a5",
    "cmp     byte [rbp-0x5c], 0x0",
    "je      0x13c86",
    "mov     r15, r11",
    "mov     r10, r13",
    "mov     r11, rbx",
    "mov     r15d, 0x2",
    "cmp     byte [rbp-0x5c], 0x0",
    "je      0x13c78",
    "cmp     r14, rdx",
    "jb      0x132d8",
    "cmp     rax, 0x1",
    "jbe     0x13113",
    "cmp     dl, 0x7a",
    "jg      0x134f0",
    "test    dl, dl",
    "js      0x12aa8",
    "mov     r15, r11",
    "mov     r10, r13",
    "mov     r11, rbx",
    "mov     eax, edx",
    "jmp     0x13894",
    "cmp     byte [rbp-0x58], 0x0",
    "jne     0x13c66",
    "cmp     r11, r15",
    "jb      0x13c24",
    "test    al, al",
    "je      0x138cc",
    "mov     qword [rbp-0x58], r11",
    "call    __ctype_get_mb_cur_max",
    "mov     r12d, dword [rbp-0xb4]",
    "mov     qword [rbp-0xc0], rax",
    "and     r12d, 0x2",
    "setne   byte [rbp-0x59]",
    "cmp     r15d, 0xa",
    "ja      0x4d89",
    "mov     r15, r11",
    "mov     r10, r13",
    "xor     r11d, r11d",
    "jmp     0x13894",
    "cmp     byte [rbp-0x58], 0x0",
    "jne     0x13c66",
    "movzx   edx, byte [rcx]",
    "cmp     dl, 0x3f",
    "jg      0x13520",
    "mov     rdx, qword [rbp-0x70]",
    "mov     rdi, rcx",
    "mov     rsi, qword [rbp-0xa8]",
    "mov     qword [rbp-0x98], r11",
    "mov     byte [rbp-0x90], r8b",
    "mov     byte [rbp-0x60], r9b",
    "mov     byte [rbp-0x88], r10b",
    "mov     qword [rbp-0x80], rcx",
    "call    memcmp",
    "mov     rcx, qword [rbp-0x80]",
    "movzx   r10d, byte [rbp-0x88]",
    "test    eax, eax",
    "movzx   r9d, byte [rbp-0x60]",
    "movzx   r8d, byte [rbp-0x90]",
    "mov     r11, qword [rbp-0x98]",
    "jne     0x132d8",
    "mov     rdi, qword [rbp-0x68]",
    "mov     qword [rbp-0xa0], r11",
    "mov     qword [rbp-0x98], rcx",
    "mov     byte [rbp-0x90], r8b",
    "mov     byte [rbp-0x60], r9b",
    "mov     qword [rbp-0x88], rdx",
    "mov     byte [rbp-0x80], r10b",
    "call    strlen",
    "movzx   r9d, byte [rbp-0x60]",
    "movzx   r10d, byte [rbp-0x80]",
    "mov     r11, qword [rbp-0xa0]",
    "mov     rcx, qword [rbp-0x98]",
    "mov     r14, rax",
    "movzx   r8d, byte [rbp-0x90]",
    "mov     rdx, qword [rbp-0x88]",
    "cmp     dl, 0x7d",
    "je      0x13504",
    "cmp     dl, 0x40",
    "je      0x12aa8",
    "{Case 0x1-0x6, 0xe-0x1f}",
    "cmp     qword [rbp-0xc0], 0x1",
    "jne     0x135a0",
    "cmp     dl, 0x3f",
    "ja      0x12aa8",
    "mov     rsi, qword [rbp-0xa8]",
    "test    rsi, rsi",
    "je      0x138cc",
    "mov     r11, qword [rbp-0xb0]",
    "mov     r15d, 0x5",
    "jmp     0x127f0",
    "test    r11, r11",
    "sete    al",
    "cmp     qword [rbp-0xb0], 0x0",
    "setne   dl",
    "and     al, dl",
    "je      0x13c96",
    "mov     byte [r10+r11], 0x0",
    "jmp     0x138d5",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x13cd9",
    "movzx   ecx, byte [rsi]",
    "mov     rax, rsi",
    "test    cl, cl",
    "je      0x138cc",
    "cmp     qword [rbp-0xb0], 0x0",
    "setne   al",
    "test    r11, r11",
    "sete    dl",
    "and     al, dl",
    "je      0x13ca8",
    "cmp     dl, 0x7a",
    "jg      0x13778",
    "test    dl, dl",
    "js      0x12aa0",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x12e95",
    "cmp     r14, 0xffffffffffffffff",
    "je      0x13760",
    "jg      0x13580",
    "lea     ecx, [rdx-0x41]",
    "mov     eax, 0x1",
    "mov     rdi, 0x3ffffff53ffffff",
    "shl     rax, cl",
    "test    rax, rdi",
    "jne     0x1298d",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x40], 0x0",
    "mov     qword [rbp-0x80], rax",
    "cmp     r14, 0xffffffffffffffff",
    "jne     0x13604",
    "mov     qword [rbp-0x90], r11",
    "mov     byte [rbp-0x60], r8b",
    "mov     byte [rbp-0x88], dl",
    "mov     byte [rbp-0x80], r10b",
    "call    __ctype_b_loc",
    "movzx   r10d, byte [rbp-0x80]",
    "movzx   r8d, byte [rbp-0x60]",
    "mov     edi, 0x1",
    "mov     rcx, rax",
    "movzx   eax, byte [rbp-0x88]",
    "mov     r11, qword [rbp-0x90]",
    "mov     rcx, qword [rcx]",
    "mov     rdx, rax",
    "test    byte [rcx+rax*2+0x1], 0x40",
    "setne   r9b",
    "sete    cl",
    "and     cl, byte [rbp-0x5b]",
    "lea     rdi, [rel jump_table_1dc4c]",
    "movzx   eax, dl",
    "movsxd  rax, dword [rdi+rax*4]",
    "add     rax, rdi",
    "jmp     rax",
    "mov     r15, r11",
    "movzx   eax, byte [rbp-0x5c]",
    "mov     r10, r13",
    "mov     r11, rbx",
    "jmp     0x13894",
    "mov     r11, qword [rbp-0xb0]",
    "xor     edx, edx",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0xb8",
    "mov     rax, r11",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdx, r11",
    "sub     rax, r11",
    "mov     r15, r11",
    "movzx   eax, byte [rbp-0x5c]",
    "mov     r10, r13",
    "xor     r11d, r11d",
    "jmp     0x13894",
    "mov     rdx, qword [rbp-0xb0]",
    "jmp     0x12f29",
    "cmp     dl, 0x7d",
    "je      0x13a57",
    "cmp     dl, 0x40",
    "je      0x12aa0",
    "{Case 0x1-0x6, 0xe-0x1f}",
    "xor     r8d, r8d",
    "nop     dword [rax+rax]",
    "cmp     dl, 0x3f",
    "ja      0x12aa0",
    "and     dword [rbp-0xb4], 0xfffffffd",
    "mov     qword [rbp-0x78], 0x0",
    "jmp     0x127f0",
    "movzx   edx, byte [rcx]",
    "cmp     dl, 0x3f",
    "jg      0x137c0",
    "mov     rax, qword [rbp-0x68]",
    "cmp     byte [rax+0x1], 0x0",
    "jne     0x1298a",
    "cmp     r14, 0x1",
    "jne     0x1298a",
    "xor     eax, eax",
    "cmp     dl, 0x7e",
    "je      0x12e47",
    "cmp     dl, 0x7b",
    "jne     0x139cf",
    "{Case 0x25, 0x2b-0x3a}",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "je      0x12a58",
    "test    eax, 0xa4000000",
    "jne     0x12c50",
    "lea     rax, [rbp-0x44]",
    "mov     byte [rbp-0xa0], r10b",
    "xor     edi, edi",
    "mov     qword [rbp-0x88], rax",
    "mov     byte [rbp-0xb5], dl",
    "mov     byte [rbp-0xb6], r8b",
    "mov     qword [rbp-0x98], r11",
    "mov     dword [rbp-0x60], r15d",
    "mov     qword [rbp-0xc8], rbx",
    "mov     rbx, rdi",
    "mov     qword [rbp-0x90], r13",
    "mov     r13d, r9d",
    "mov     rdi, qword [rbp-0x68]",
    "mov     qword [rbp-0xa0], r11",
    "mov     byte [rbp-0x98], r8b",
    "mov     byte [rbp-0x90], dl",
    "mov     byte [rbp-0x60], r9b",
    "mov     byte [rbp-0x88], r10b",
    "call    strlen",
    "mov     r11, qword [rbp-0xa0]",
    "movzx   r9d, byte [rbp-0x60]",
    "movzx   r8d, byte [rbp-0x98]",
    "movzx   edx, byte [rbp-0x90]",
    "mov     r14, rax",
    "movzx   r10d, byte [rbp-0x88]",
    "movzx   ecx, byte [rbp-0x5b]",
    "xor     r9d, r9d",
    "{Case 0xc}",
    "cmp     r15d, 0x2",
    "mov     edx, 0xc",
    "mov     eax, 0x66",
    "sete    cl",
    "nop     dword [rax]",
    "{Case 0x21-0x22, 0x24, 0x26, 0x28-0x2a, 0x3b-0x3e}",
    "xor     eax, eax",
    "{Case 0xb}",
    "cmp     r15d, 0x2",
    "mov     edx, 0xb",
    "mov     eax, 0x76",
    "sete    cl",
    "cmp     byte [rbp-0x5b], 0x0",
    "je      0x1298a",
    "{Case 0x8}",
    "cmp     r15d, 0x2",
    "mov     edx, 0x8",
    "mov     eax, 0x62",
    "sete    cl",
    "jmp     0x12980",
    "{Case 0x3f}",
    "cmp     r15d, 0x2",
    "je      0x137a0",
    "{Case 0x27}",
    "mov     byte [rbp-0x5c], r9b",
    "mov     edx, 0x27",
    "cmp     r15d, 0x2",
    "jne     0x1298d",
    "{Case 0x7}",
    "cmp     r15d, 0x2",
    "mov     edx, 0x7",
    "mov     eax, 0x61",
    "sete    cl",
    "jmp     0x12980",
    "{Case 0x0}",
    "cmp     byte [rbp-0x5b], 0x0",
    "jne     0x13340",
    "{Case 0x23}",
    "xor     eax, eax",
    "mov     edx, 0x23",
    "{Case 0x9}",
    "mov     edx, 0x9",
    "mov     eax, 0x74",
    "{Case 0x20}",
    "xor     eax, eax",
    "mov     edx, 0x20",
    "{Case 0xd}",
    "mov     edx, 0xd",
    "mov     eax, 0x72",
    "jmp     0x12e6d",
    "{Case 0xa}",
    "mov     edx, 0xa",
    "mov     eax, 0x6e",
    "jmp     0x12e6d",
    "add     rdx, 0x1",
    "movzx   ecx, byte [rax+rdx]",
    "test    cl, cl",
    "jne     0x138b4",
    "mov     byte [r10+rdx], cl",
    "xor     r8d, r8d",
    "jmp     0x13504",
    "jg      0x13a0d",
    "lea     ecx, [rdx-0x41]",
    "mov     eax, 0x1",
    "shl     rax, cl",
    "mov     rcx, 0x3ffffff53ffffff",
    "test    rax, rcx",
    "jne     0x139f0",
    "lea     rsi, [rel jump_table_1de4c]",
    "movzx   eax, dl",
    "movsxd  rax, dword [rsi+rax*4]",
    "add     rax, rsi",
    "jmp     rax",
    "cmp     dl, 0x7a",
    "jg      0x13a39",
    "test    dl, dl",
    "js      0x12aa8",
    "{Case 0x21-0x22, 0x24, 0x26, 0x28-0x2a, 0x3b-0x3e}",
    "xor     r9d, r9d",
    "jmp     0x13518",
    "mov     eax, r8d",
    "jmp     0x12e47",
    "test    r12, r12",
    "je      0x12eb0",
    "mov     edx, 0x7f",
    "xor     eax, eax",
    "mov     edx, 0x7c",
    "jmp     0x12c52",
    "cmp     r15d, 0x2",
    "sete    cl",
    "test    r8b, r8b",
    "jne     0x129c7",
    "xor     eax, eax",
    "cmp     r15d, 0x2",
    "jne     0x1355b",
    "mov     r9d, r13d",
    "mov     rdi, rbx",
    "movzx   r10d, byte [rbp-0xa0]",
    "movzx   edx, byte [rbp-0xb5]",
    "mov     ecx, r9d",
    "movzx   r8d, byte [rbp-0xb6]",
    "mov     rbx, qword [rbp-0xc8]",
    "mov     r13, qword [rbp-0x90]",
    "mov     r11, qword [rbp-0x98]",
    "xor     ecx, 0x1",
    "mov     r15d, dword [rbp-0x60]",
    "and     cl, byte [rbp-0x5b]",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x13aeb",
    "test    cl, cl",
    "jne     0x12b40",
    "xor     r9d, r9d",
    "cmp     byte [rbp-0x59], 0x0",
    "mov     edx, eax",
    "je      0x129d1",
    "mov     r9d, r8d",
    "mov     r8d, eax",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x12e82",
    "nop     dword [rax]",
    "cmp     byte [rbp-0x5b], 0x0",
    "jne     0x12c98",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x12e88",
    "{Case 0x3f}",
    "cmp     r15d, 0x5",
    "jne     0x133d0",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x12e88",
    "{Case 0x0}",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x13c54",
    "test    byte [rbp-0xb4], 0x1",
    "jne     0x139a5",
    "mov     r8d, r9d",
    "jmp     0x12c52",
    "mov     r8d, eax",
    "xor     r9d, r9d",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "cmp     r15d, 0x2",
    "jne     0x12c62",
    "cmp     r15d, 0x2",
    "movzx   r8d, byte [rbp-0x59]",
    "sete    cl",
    "and     r8b, cl",
    "je      0x12980",
    "cmp     rdx, r15",
    "jae     0x138bd",
    "mov     r11, rdx",
    "xor     eax, eax",
    "cmp     dl, 0x7e",
    "jne     0x13c01",
    "xor     r8d, r8d",
    "cmp     dl, 0x7b",
    "je      0x13504",
    "xor     eax, eax",
    "test    eax, 0xa4000000",
    "jne     0x13330",
    "{Case 0x25, 0x2b-0x3a}",
    "mov     r9d, r8d",
    "mov     eax, r10d",
    "xor     r8d, r8d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "{Case 0x21-0x22, 0x24, 0x26, 0x28-0x2a, 0x3b-0x3e}",
    "xor     r8d, r8d",
    "jmp     0x1298a",
    "{Case 0x7}",
    "xor     ecx, ecx",
    "xor     r9d, r9d",
    "mov     edx, 0x61",
    "jmp     0x129c7",
    "{Case 0x3f}",
    "xor     r8d, r8d",
    "cmp     r15d, 0x5",
    "je      0x12cd9",
    "{Case 0xa}",
    "xor     ecx, ecx",
    "xor     r8d, r8d",
    "mov     edx, 0xa",
    "mov     eax, 0x6e",
    "jmp     0x12980",
    "{Case 0xb}",
    "xor     ecx, ecx",
    "xor     r9d, r9d",
    "mov     edx, 0x76",
    "jmp     0x129c7",
    "{Case 0xd}",
    "xor     ecx, ecx",
    "xor     r8d, r8d",
    "mov     edx, 0xd",
    "mov     eax, 0x72",
    "jmp     0x12980",
    "{Case 0xc}",
    "xor     ecx, ecx",
    "xor     r9d, r9d",
    "mov     edx, 0x66",
    "jmp     0x129c7",
    "{Case 0x9}",
    "xor     ecx, ecx",
    "xor     r8d, r8d",
    "mov     edx, 0x9",
    "mov     eax, 0x74",
    "jmp     0x12980",
    "{Case 0x8}",
    "xor     ecx, ecx",
    "xor     r9d, r9d",
    "mov     edx, 0x62",
    "jmp     0x129c7",
    "{Case 0x20}",
    "mov     r9d, r8d",
    "mov     edx, 0x20",
    "xor     r8d, r8d",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "{Case 0x27}",
    "mov     byte [rbp-0x5c], r8b",
    "mov     r9d, r8d",
    "mov     edx, 0x27",
    "xor     r8d, r8d",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "cmp     dl, 0x7d",
    "je      0x13504",
    "cmp     dl, 0x40",
    "je      0x12aa8",
    "cmp     dl, 0x3f",
    "ja      0x12aa8",
    "nop     ",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x12ca7",
    "xor     eax, 0x1",
    "add     r12, 0x1",
    "and     al, byte [rbp-0x5a]",
    "mov     ecx, edx",
    "shr     cl, 0x5",
    "movzx   ecx, cl",
    "mov     esi, dword [rsi+rcx*4]",
    "mov     ecx, edx",
    "shr     esi, cl",
    "and     esi, 0x1",
    "je      0x12a58",
    "movzx   r8d, byte [rbp-0x5b]",
    "and     r8b, byte [rbp-0x59]",
    "je      0x137fb",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x12e88",
    "mov     byte [rbp-0x88], r9b",
    "lea     rsi, [r12+rdi]",
    "movzx   r9d, byte [rbp-0x5a]",
    "xor     edi, edi",
    "mov     qword [rbp-0x80], r14",
    "mov     r10, qword [rbp-0x68]",
    "movzx   r14d, byte [rbp-0x59]",
    "jmp     0x12bf1",
    "jmp     0x12b05",
    "mov     rdi, rbx",
    "movzx   r10d, byte [rbp-0xa0]",
    "movzx   edx, byte [rbp-0xb5]",
    "xor     r9d, r9d",
    "movzx   r8d, byte [rbp-0xb6]",
    "mov     rbx, qword [rbp-0xc8]",
    "mov     r13, qword [rbp-0x90]",
    "mov     r11, qword [rbp-0x98]",
    "mov     r15d, dword [rbp-0x60]",
    "movzx   ecx, byte [rbp-0x5b]",
    "jmp     0x136f7",
    "cmp     rax, 0xfffffffffffffffe",
    "je      0x13b2a",
    "cmp     r15d, 0x2",
    "sete    al",
    "test    r14b, r14b",
    "jne     0x139c3",
    "mov     eax, edi",
    "xor     eax, 0x1",
    "and     eax, r9d",
    "test    r8b, r8b",
    "je      0x12c15",
    "movzx   eax, byte [rbp-0x5a]",
    "xor     eax, 0x1",
    "and     al, cl",
    "je      0x12a0c",
    "and     byte [rbp-0x5b], cl",
    "jmp     0x12e88",
    "jmp     0x12a58",
    "cmp     byte [rbp-0x5b], 0x0",
    "mov     eax, 0x4",
    "cmovne  r15d, eax",
    "xor     r9d, r9d",
    "xor     eax, eax",
    "mov     edx, 0x3f",
    "jmp     0x12a68",
    "xor     r9d, r9d",
    "mov     edx, 0x3f",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "test    byte [rbp-0xb4], 0x4",
    "je      0x133d0",
    "test    r11, r11",
    "je      0x1396d",
    "cmp     r15d, 0x2",
    "mov     eax, 0x4",
    "cmove   r15d, eax",
    "jmp     0x12e95",
    "movzx   edx, byte [rbp-0x5a]",
    "cmp     r15d, 0x2",
    "lea     rcx, [rbx+0x1]",
    "sete    al",
    "xor     edx, 0x1",
    "and     al, dl",
    "je      0x13200",
    "add     r12, 0x1",
    "jmp     0x128f0",
    "xor     r8d, r8d",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "jmp     0x12a58",
    "xor     r8d, r8d",
    "mov     edx, 0x7f",
    "jmp     0x12aa8",
    "test    r12, r12",
    "jne     0x13a67",
    "mov     edx, 0x7c",
    "jmp     0x1298a",
    "jmp     0x12a58",
    "nop     dword [rax]",
    "jmp     0x12a58",
    "jmp     0x12a58",
    "jg      0x13aa4",
    "lea     ecx, [rdx-0x41]",
    "mov     eax, 0x1",
    "shl     rax, cl",
    "mov     rcx, 0x3ffffff53ffffff",
    "test    rax, rcx",
    "jne     0x13a9c",
    "lea     rcx, [rel jump_table_1dd4c]",
    "movzx   eax, dl",
    "movsxd  rax, dword [rcx+rax*4]",
    "add     rax, rcx",
    "jmp     rax",
    "cmp     rbx, r11",
    "jae     0x12a29",
    "cmp     rbx, r11",
    "jae     0x12a81",
    "cmp     r15d, 0x2",
    "sete    cl",
    "cmp     byte [rbp-0x5b], 0x0",
    "je      0x1298a",
    "cmp     qword [rbp-0x70], 0x0",
    "je      0x12e95",
    "movzx   eax, byte [rbp-0x5a]",
    "add     r12, 0x1",
    "xor     r9d, r9d",
    "mov     edx, 0x5c",
    "jmp     0x12a72",
    "test    cl, cl",
    "je      0x1298d",
    "cmp     rdi, 0x1",
    "ja      0x12b14",
    "mov     rax, r15",
    "mov     rdi, rbx",
    "movzx   r10d, byte [rbp-0xa0]",
    "movzx   edx, byte [rbp-0xb5]",
    "movzx   r8d, byte [rbp-0xb6]",
    "mov     rbx, qword [rbp-0xc8]",
    "mov     r13, qword [rbp-0x90]",
    "mov     r11, qword [rbp-0x98]",
    "mov     r15d, dword [rbp-0x60]",
    "mov     rcx, qword [rbp-0x68]",
    "cmp     rax, r14",
    "jb      0x13b7d",
    "cmp     rax, 0xfffffffffffffffd",
    "je      0x13698",
    "mov     byte [rbp-0x5b], al",
    "mov     r14, qword [rbp-0x80]",
    "jmp     0x12e88",
    "mov     edi, r9d",
    "xor     edi, 0x1",
    "and     al, dil",
    "je      0x12b8b",
    "add     r12, 0x1",
    "cmp     r12, rsi",
    "jae     0x139ae",
    "cmp     rbx, r11",
    "jae     0x12c11",
    "cmp     rbx, r11",
    "jae     0x12a17",
    "cmp     rbx, r11",
    "jae     0x129e7",
    "jmp     0x12a58",
    "lea     rax, [r12+0x2]",
    "xor     r9d, r9d",
    "mov     edx, 0x3f",
    "cmp     rax, r14",
    "jae     0x1298d",
    "cmp     rbx, r11",
    "jae     0x13978",
    "xor     edx, edx",
    "cmp     qword [rbp-0xb0], 0x0",
    "jne     0x1396d",
    "cmp     rbx, r11",
    "jae     0x1320b",
    "cmp     rbx, r11",
    "jae     0x1336f",
    "cmp     r12, r14",
    "setne   r9b",
    "cmp     r14, 0xffffffffffffffff",
    "jne     0x1290a",
    "jmp     0x12a58",
    "mov     r8d, eax",
    "xor     r9d, r9d",
    "xor     eax, eax",
    "mov     edx, 0x7e",
    "jmp     0x1299b",
    "mov     r9d, r8d",
    "mov     edx, 0x7e",
    "mov     r8d, eax",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "mov     eax, r8d",
    "cmp     dl, 0x7e",
    "je      0x13a18",
    "cmp     dl, 0x7b",
    "je      0x13504",
    "mov     eax, r8d",
    "jmp     0x139f2",
    "test    eax, 0xa4000000",
    "jne     0x1298a",
    "{Case 0x25, 0x2b-0x3a}",
    "mov     r9d, r8d",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "{Case 0x23}",
    "mov     eax, r8d",
    "mov     edx, 0x23",
    "jmp     0x12e47",
    "{Case 0xa}",
    "xor     ecx, ecx",
    "mov     edx, 0xa",
    "mov     eax, 0x6e",
    "jmp     0x12980",
    "{Case 0x7}",
    "xor     ecx, ecx",
    "xor     r9d, r9d",
    "mov     edx, 0x61",
    "jmp     0x129d1",
    "{Case 0x0}",
    "lea     rcx, [rbx+0x1]",
    "mov     eax, r8d",
    "nop     dword [rax+rax]",
    "{Case 0x20}",
    "mov     r9d, r8d",
    "mov     edx, 0x20",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "{Case 0xb}",
    "xor     ecx, ecx",
    "xor     r9d, r9d",
    "mov     edx, 0x76",
    "jmp     0x129d1",
    "{Case 0x9}",
    "xor     ecx, ecx",
    "mov     edx, 0x9",
    "mov     eax, 0x74",
    "jmp     0x12980",
    "{Case 0x8}",
    "xor     ecx, ecx",
    "xor     r9d, r9d",
    "mov     edx, 0x62",
    "jmp     0x129d1",
    "{Case 0xd}",
    "xor     ecx, ecx",
    "mov     edx, 0xd",
    "mov     eax, 0x72",
    "jmp     0x12980",
    "{Case 0xc}",
    "xor     ecx, ecx",
    "xor     r9d, r9d",
    "mov     edx, 0x66",
    "jmp     0x129d1",
    "{Case 0x27}",
    "mov     byte [rbp-0x5c], r8b",
    "mov     r9d, r8d",
    "mov     edx, 0x27",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "movzx   eax, byte [rbp-0x58]",
    "add     rbx, 0x1",
    "mov     edi, 0x0",
    "test    r9b, r9b",
    "cmove   eax, edi",
    "mov     byte [rbp-0x58], al",
    "jmp     0x128f0",
    "mov     byte [r13+rbx], dl",
    "lea     rax, [rbx+0x1]",
    "cmp     rax, r11",
    "jae     0x12a90",
    "mov     byte [r13+rbx], 0x27",
    "xor     r9d, r9d",
    "mov     edx, 0x5c",
    "jmp     0x12a0c",
    "jmp     0x134db",
    "test    al, al",
    "je      0x12a1f",
    "cmp     byte [rcx+rax], 0x0",
    "jne     0x13b70",
    "jmp     0x13b83",
    "mov     edi, dword [rbp-0x44]",
    "call    iswprint",
    "mov     rdi, qword [rbp-0x80]",
    "test    eax, eax",
    "mov     eax, 0x0",
    "cmove   r13d, eax",
    "call    mbsinit",
    "test    eax, eax",
    "je      0x13644",
    "cmp     dword [rbp-0x60], 0x2",
    "jne     0x13695",
    "cmp     rbx, r11",
    "jae     0x12b96",
    "cmp     rbx, r11",
    "jae     0x12b66",
    "mov     byte [rbp-0x5a], r9b",
    "mov     r14, qword [rbp-0x80]",
    "movzx   r9d, byte [rbp-0x88]",
    "jmp     0x12a72",
    "test    al, al",
    "je      0x13a5f",
    "add     rbx, 0x1",
    "mov     byte [r13+rbx], 0x5c",
    "add     rbx, 0x1",
    "add     r12, 0x1",
    "mov     byte [r13+rbx], 0x5c",
    "lea     rcx, [rbx+0x1]",
    "cmp     rcx, r11",
    "jae     0x129f6",
    "mov     byte [r13+rbx], 0x27",
    "mov     rsi, qword [rbp-0x68]",
    "cmp     byte [rsi+r12+0x1], 0x3f",
    "jne     0x1298d",
    "lea     rax, [rbx+0x1]",
    "cmp     rax, r11",
    "jae     0x13987",
    "mov     byte [r13+rbx], 0x27",
    "mov     qword [rbp-0xb0], r11",
    "add     rbx, 0x3",
    "mov     r11, rdx",
    "xor     eax, eax",
    "mov     byte [rbp-0x5c], r9b",
    "mov     edx, 0x27",
    "mov     byte [rbp-0x5a], 0x0",
    "jmp     0x12a68",
    "test    r10b, r10b",
    "je      0x12a44",
    "mov     byte [r13+rbx], 0x5c",
    "cmp     rcx, r11",
    "jae     0x1337a",
    "mov     byte [r13+rbx], 0x27",
    "mov     rsi, qword [rbp-0x78]",
    "test    rsi, rsi",
    "je      0x12a58",
    "jmp     0x12a58",
    "mov     edx, 0x7f",
    "jmp     0x13590",
    "mov     edx, 0x7c",
    "jmp     0x1298a",
    "mov     r9d, r8d",
    "mov     r8d, eax",
    "jmp     0x12999",
    "jmp     0x12a58",
    "jmp     0x12a58",
    "jmp     0x12a58",
    "mov     byte [rbp-0x5a], 0x0",
    "add     rbx, 0x2",
    "jmp     0x12a1f",
    "mov     byte [r13+rbx+0x1], 0x27",
    "add     rdi, 0x1",
    "lea     rax, [r12+rdi]",
    "cmp     rax, r14",
    "jae     0x13b83",
    "movzx   ecx, byte [rbp-0x5b]",
    "xor     r9d, r9d",
    "jmp     0x136f7",
    "mov     rax, qword [rbp-0x68]",
    "lea     r15, [r12+rbx]",
    "mov     rdx, r14",
    "mov     rcx, qword [rbp-0x80]",
    "mov     rdi, qword [rbp-0x88]",
    "sub     rdx, r15",
    "lea     rsi, [rax+r15]",
    "call    sub_11700",
    "test    rax, rax",
    "je      0x136b8",
    "add     rbx, rax",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x13818",
    "lea     rax, [rbx+0x1]",
    "cmp     rax, r11",
    "jae     0x12bac",
    "mov     byte [r13+rbx], 0x5c",
    "lea     rdi, [rbx+0x1]",
    "cmp     rdi, r11",
    "jae     0x12b75",
    "mov     byte [r13+rbx], 0x27",
    "xor     r8d, r8d",
    "jmp     0x12bde",
    "cmp     rbx, r11",
    "jae     0x12c35",
    "lea     rcx, [rbx+0x2]",
    "cmp     rcx, r11",
    "jae     0x12a05",
    "mov     byte [r13+rbx+0x1], 0x24",
    "movzx   edx, byte [rsi+rax]",
    "cmp     dl, 0x3e",
    "ja      0x13c0e",
    "lea     rax, [rbx+0x2]",
    "cmp     rax, r11",
    "jae     0x13996",
    "mov     byte [r13+rbx+0x1], 0x5c",
    "mov     r8d, eax",
    "mov     rbx, rcx",
    "mov     eax, r9d",
    "mov     edx, 0x30",
    "xor     r9d, r9d",
    "nop     dword [rax]",
    "lea     rdx, [r12+0x1]",
    "cmp     rdx, r14",
    "jae     0x1323a",
    "lea     rdx, [rbx+0x2]",
    "cmp     rdx, r11",
    "jae     0x13389",
    "mov     byte [r13+rcx], 0x24",
    "cmp     qword [rbp-0xc0], 0x1",
    "je      0x12ab6",
    "cmp     rax, 0x1",
    "je      0x13cba",
    "lea     rax, [rbx+0x2]",
    "cmp     rax, r11",
    "jae     0x12bc5",
    "mov     eax, edx",
    "shr     al, 0x6",
    "add     eax, 0x30",
    "mov     byte [r13+rbx+0x1], al",
    "lea     rdi, [rbx+0x2]",
    "cmp     rdi, r11",
    "jae     0x12b84",
    "mov     byte [r13+rbx+0x1], 0x24",
    "cmp     rbx, r11",
    "jae     0x12be8",
    "lea     rax, [rbx+0x1]",
    "cmp     rax, r11",
    "jae     0x12c44",
    "mov     byte [r13+rbx], 0x27",
    "mov     byte [rbp-0x5a], al",
    "add     rbx, 0x3",
    "mov     byte [r13+rbx+0x2], 0x27",
    "mov     edx, 0x3f",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "mov     rcx, 0x7000a38200000000",
    "bt      rcx, rdx",
    "setb    r9b",
    "test    r9b, r9b",
    "je      0x13c0e",
    "mov     rdx, r11",
    "mov     r11, qword [rbp-0xb0]",
    "jmp     0x12dce",
    "mov     byte [r13+rbx+0x2], 0x27",
    "mov     r8d, eax",
    "mov     rbx, rcx",
    "mov     eax, r9d",
    "mov     edx, 0x30",
    "xor     r9d, r9d",
    "jmp     0x1299b",
    "mov     rdi, qword [rbp-0x68]",
    "movzx   esi, byte [rdi+r12+0x1]",
    "mov     edi, esi",
    "mov     byte [rbp-0x80], sil",
    "lea     edx, [rdi-0x30]",
    "cmp     dl, 0x9",
    "jbe     0x13a79",
    "lea     rdx, [rbx+0x3]",
    "add     rbx, 0x4",
    "cmp     rdx, r11",
    "jae     0x139fd",
    "mov     byte [r13+rbx+0x2], 0x27",
    "add     rbx, 0x1",
    "jmp     0x13698",
    "mov     rdi, qword [rbp-0x68]",
    "lea     rsi, [rdi+rax]",
    "lea     rcx, [rdi+r15+0x1]",
    "add     rsi, r15",
    "jmp     0x13845",
    "and     edx, 0x7",
    "add     r12, 0x1",
    "add     rbx, 0x3",
    "add     edx, 0x30",
    "cmp     r12, rsi",
    "jae     0x139db",
    "mov     eax, edx",
    "shr     al, 0x3",
    "and     eax, 0x7",
    "add     eax, 0x30",
    "mov     byte [r13+rbx+0x2], al",
    "add     rbx, 0x3",
    "mov     r9d, eax",
    "mov     byte [r13+rbx+0x2], 0x27",
    "movzx   edx, byte [r10+r12]",
    "add     rbx, 0x1",
    "mov     byte [r13+rbx], dl",
    "add     rbx, 0x2",
    "xor     r8d, r8d",
    "xor     r9d, r9d",
    "jmp     0x12bde",
    "mov     byte [r13+rbx+0x1], 0x27",
    "jmp     0x12a58",
    "cmp     byte [rbp-0x59], 0x0",
    "jne     0x12e95",
    "cmp     rcx, r11",
    "jae     0x13a84",
    "mov     byte [rbp-0x5a], al",
    "xor     r9d, r9d",
    "mov     edx, 0x30",
    "jmp     0x12a68",
    "mov     byte [r13+rdx], 0x5c",
    "xor     r9d, r9d",
    "mov     edx, 0x30",
    "mov     byte [rbp-0x5a], al",
    "jmp     0x12a68",
    "movzx   edi, byte [rcx]",
    "lea     edx, [rdi-0x5b]",
    "cmp     dl, 0x21",
    "ja      0x13838",
    "mov     byte [rbp-0x5a], r9b",
    "mov     r14, qword [rbp-0x80]",
    "movzx   r9d, byte [rbp-0x88]",
    "jmp     0x12a1f",
    "mov     edi, ecx",
    "cmp     rbx, r11",
    "jae     0x12d49",
    "lea     rdx, [rbx+0x2]",
    "cmp     rdx, r11",
    "jae     0x13a93",
    "mov     byte [r13+rcx], 0x30",
    "add     rcx, 0x1",
    "cmp     rsi, rcx",
    "je      0x13695",
    "mov     rdi, 0x20000002b",
    "bt      rdi, rdx",
    "jae     0x13838",
    "lea     rcx, [rbx+0x1]",
    "cmp     rcx, r11",
    "jae     0x12d58",
    "mov     byte [r13+rbx], 0x3f",
    "lea     rcx, [rbx+0x3]",
    "jmp     0x1323a",
    "mov     byte [r13+rbx+0x2], 0x30",
    "mov     r13, qword [rbp-0x90]",
    "mov     r11, qword [rbp-0x98]",
    "mov     r15d, 0x2",
    "jmp     0x12e88",
    "lea     rcx, [rbx+0x2]",
    "cmp     rcx, r11",
    "jae     0x12d67",
    "mov     byte [r13+rbx+0x1], 0x22",
    "lea     rcx, [rbx+0x3]",
    "cmp     rcx, r11",
    "jae     0x12d76",
    "mov     byte [r13+rbx+0x2], 0x22",
    "mov     r12, rax",
    "add     rbx, 0x4",
    "xor     r9d, r9d",
    "mov     eax, r10d",
    "or      al, byte [rbp-0x59]",
    "jne     0x12999",
    "mov     byte [r13+rbx+0x3], 0x3f",
    "jmp     0x12a58"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}