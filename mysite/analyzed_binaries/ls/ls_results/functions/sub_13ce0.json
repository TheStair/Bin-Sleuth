{
  "address": "0x13ce0",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rdx",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "movsxd  rbx, edi",
    "sub     rsp, 0x48",
    "mov     qword [rbp-0x48], rsi",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    __errno_location",
    "mov     r14, qword [rel data_23270]",
    "mov     r12, rax",
    "mov     eax, dword [rax]",
    "mov     dword [rbp-0x4c], eax",
    "mov     eax, dword [rel data_23250]",
    "cmp     ebx, eax",
    "jl      0x13d9a",
    "mov     r8d, dword [r15+0x4]",
    "shl     rbx, 0x4",
    "lea     rax, [r15+0x8]",
    "mov     ecx, dword [r15]",
    "add     rbx, r14",
    "mov     qword [rbp-0x60], rax",
    "mov     rdx, qword [rbp-0x48]",
    "mov     r9, rax",
    "or      r8d, 0x1",
    "mov     r13, qword [rbx]",
    "mov     r14, qword [rbx+0x8]",
    "mov     dword [rbp-0x58], r8d",
    "push    qword [r15+0x30]",
    "mov     rsi, r13",
    "mov     rdi, r14",
    "push    qword [r15+0x28]",
    "call    sub_12790",
    "pop     rcx",
    "pop     rsi",
    "cmp     rax, r13",
    "jb      0x13e44",
    "mov     edx, ebx",
    "movsxd  r9, eax",
    "sub     edx, eax",
    "lea     rax, [rel data_23260]",
    "mov     qword [rbp-0x40], r9",
    "add     edx, 0x1",
    "movsxd  rdx, edx",
    "cmp     r14, rax",
    "je      0x13e70",
    "mov     eax, dword [rbp-0x4c]",
    "mov     dword [r12], eax",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x13ead",
    "lea     rsi, [rax+0x1]",
    "lea     rax, [rel data_24400]",
    "mov     qword [rbx], rsi",
    "cmp     r14, rax",
    "je      0x13e03",
    "lea     rsi, [rbp-0x40]",
    "mov     r8d, 0x10",
    "xor     edi, edi",
    "mov     qword [rbp-0x58], r9",
    "mov     ecx, 0x7fffffff",
    "call    sub_10a20",
    "movdqa  xmm0, xmmword [rel data_23260]",
    "mov     r9, qword [rbp-0x58]",
    "mov     qword [rel data_23270], rax",
    "mov     r14, rax",
    "movups  xmmword [rax], xmm0",
    "jmp     0x13d76",
    "mov     rdi, r14",
    "lea     rsi, [rbp-0x40]",
    "mov     ecx, 0x7fffffff",
    "mov     qword [rbp-0x58], r9",
    "mov     r8d, 0x10",
    "call    sub_10a20",
    "mov     r9, qword [rbp-0x58]",
    "mov     qword [rel data_23270], rax",
    "mov     r14, rax",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "mov     rax, r14",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x68], rsi",
    "call    malloc",
    "mov     rsi, qword [rbp-0x68]",
    "test    rax, rax",
    "mov     r14, rax",
    "je      0x13ea8",
    "mov     rdi, r14",
    "mov     qword [rbp-0x68], rsi",
    "call    free",
    "mov     rsi, qword [rbp-0x68]",
    "mov     rdx, qword [rbp-0x40]",
    "xor     esi, esi",
    "sub     rdx, r9",
    "shl     r9, 0x4",
    "shl     rdx, 0x4",
    "lea     rdi, [r14+r9]",
    "call    memset",
    "mov     rax, qword [rbp-0x40]",
    "mov     dword [rel data_23250], eax",
    "call    sub_e430",
    "{ Does not return }",
    "mov     ecx, dword [r15]",
    "mov     rdx, qword [rbp-0x48]",
    "mov     qword [rbx+0x8], rax",
    "mov     rdi, rax",
    "mov     r9, qword [rbp-0x60]",
    "mov     r8d, dword [rbp-0x58]",
    "push    qword [r15+0x30]",
    "push    qword [r15+0x28]",
    "call    sub_12790",
    "pop     rax",
    "pop     rdx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}