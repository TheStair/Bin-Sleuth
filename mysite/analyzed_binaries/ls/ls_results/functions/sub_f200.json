{
  "address": "0xf200",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "contain loop",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "mov     r13d, edi",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x18",
    "mov     r15, qword [rel data_23470]",
    "mov     r14, qword [rel data_23368]",
    "mov     rbx, qword [rel data_23318]",
    "test    r15, r15",
    "je      0xf264",
    "cmp     r14, rbx",
    "jae     0xf429",
    "cmp     r15, rbx",
    "jae     0xf424",
    "test    rbx, rbx",
    "je      0xf493",
    "mov     rdi, qword [rel data_23370]",
    "mov     edx, 0x30",
    "mov     rsi, rbx",
    "lea     r15, [rbx+rbx]",
    "call    reallocarray",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0xf25f",
    "cmp     r14, rbx",
    "jb      0xf43a",
    "cmp     r14, r15",
    "jae     0xf4a5",
    "add     rsp, 0x18",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     r12, qword [rel data_23370]",
    "jmp     0xf314",
    "call    sub_e430",
    "{ Does not return }",
    "lea     rcx, [r14+0x1]",
    "mov     rax, r15",
    "mov     rdx, r15",
    "mov     qword [rel data_23370], r12",
    "sub     rax, r14",
    "add     rdx, rcx",
    "mov     qword [rbp-0x38], rcx",
    "setb    sil",
    "mul     rdx",
    "movzx   esi, sil",
    "seto    dl",
    "movzx   edx, dl",
    "test    rsi, rsi",
    "jne     0xf25f",
    "mov     rax, r15",
    "shr     rax, 0x1",
    "cmp     rbx, rax",
    "jb      0xf26d",
    "mov     r12, qword [rel data_23370]",
    "mov     rbx, r15",
    "jmp     0xf314",
    "mov     rbx, r15",
    "lea     rdi, [rbx+rbx*2+0x3]",
    "xor     esi, esi",
    "mov     edx, 0x3",
    "test    rdx, rdx",
    "jne     0xf25f",
    "jmp     0xf243",
    "mov     qword [rax], 0x3",
    "add     rax, 0x10",
    "mov     qword [rax-0x8], 0x3",
    "cmp     rcx, rax",
    "jne     0xf350",
    "mov     qword [rax], 0x3",
    "add     rax, 0x8",
    "cmp     rcx, rax",
    "je      0xf368",
    "shr     rax, 0x1",
    "xor     edi, edi",
    "mov     edx, 0x8",
    "mov     rsi, rax",
    "call    reallocarray",
    "test    rax, rax",
    "je      0xf25f",
    "mov     rdi, qword [rel data_23370]",
    "mov     edx, 0x18",
    "mov     rsi, r15",
    "call    reallocarray",
    "mov     r12, rax",
    "test    rax, rax",
    "jne     0xf28d",
    "add     rdx, 0x3",
    "cmp     rdi, rdx",
    "jne     0xf320",
    "nop     ",
    "mov     rcx, qword [rbp-0x38]",
    "lea     rsi, [r15*8+0x8]",
    "lea     rdx, [rcx*8]",
    "cmp     r14, r15",
    "jae     0xf30d",
    "mov     rax, qword [r12+rdx*8-0x8]",
    "add     rsi, 0x8",
    "mov     byte [r12+rdx*8-0x18], 0x1",
    "mov     qword [r12+rdx*8-0x10], rdx",
    "lea     rcx, [rsi+rax]",
    "test    sil, 0x8",
    "je      0xf350",
    "cmp     qword [rel data_23318], 0x0",
    "je      0xf461",
    "mov     qword [rel data_23368], r15",
    "nop     dword [rax+rax]",
    "cmp     rbx, 0x1",
    "je      0xf493",
    "xor     r12d, r12d",
    "nop     word [rax+rax]",
    "lea     rcx, [rdx+rdx*2]",
    "mov     qword [r12+rcx-0x8], rax",
    "add     rax, rdx",
    "add     rdx, 0x8",
    "cmp     rsi, rdx",
    "jne     0xf2f8",
    "mov     rdx, qword [rel data_23370]",
    "lea     rax, [rbx+rbx*2]",
    "lea     rax, [rdx+rax*8-0x18]",
    "jmp     0xf48e",
    "mov     rdi, rcx",
    "add     rcx, 0x1",
    "cmp     byte [rsi], 0x0",
    "je      0xf3fd",
    "cmp     byte [rax], 0x0",
    "je      0xf480",
    "add     rsi, 0x18",
    "cmp     rbx, rcx",
    "je      0xf450",
    "test    r13b, r13b",
    "jne     0xf3b0",
    "sub     rbx, 0x1",
    "sub     rax, 0x18",
    "cmp     rbx, 0x1",
    "je      0xf493",
    "add     r12, 0x1",
    "cmp     r12, qword [rel data_23318]",
    "jb      0xf388",
    "mov     rax, qword [rel data_23318]",
    "xor     edx, edx",
    "add     rax, rdi",
    "div     rcx",
    "xor     edx, edx",
    "mov     r8, rax",
    "mov     rax, r12",
    "div     r8",
    "mov     r8, rax",
    "mov     rax, r12",
    "xor     edx, edx",
    "div     rcx",
    "mov     r8, rdx",
    "jmp     0xf3cd",
    "mov     rax, qword [rel data_23450]",
    "mov     rdi, qword [rax+r12*8]",
    "\ud83d\udeab\ud83d\udeabcall    sub_d850",
    "mov     r10, qword [rel data_23478]",
    "mov     rsi, qword [rel data_23370]",
    "xor     ecx, ecx",
    "mov     r9, rax",
    "jmp     0xf406",
    "mov     r8, rax",
    "sub     r8, rdi",
    "add     qword [rsi+0x8], r8",
    "mov     qword [rdx], rax",
    "cmp     qword [rsi+0x8], r10",
    "setb    byte [rsi]",
    "mov     rdx, qword [rsi+0x10]",
    "xor     eax, eax",
    "cmp     r8, rdi",
    "setne   al",
    "lea     rdx, [rdx+r8*8]",
    "lea     rax, [r9+rax*2]",
    "mov     rdi, qword [rdx]",
    "cmp     rdi, rax",
    "jae     0xf3fd"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}