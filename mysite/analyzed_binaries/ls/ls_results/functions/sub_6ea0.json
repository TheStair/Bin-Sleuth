{
  "address": "0x6ea0",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995",
    "decompress data using LZO/87c7a2ec75aa43fe877541de4275123a",
    "search for credit card data/e92219581e504df894450f60474cb51f",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "parse credit card information/ec3c9303e8bc46be9fce39fa86e0e7e3",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2"
  ],
  "disassembly": [
    "push    rbp",
    "mov     r11, rsi",
    "mov     eax, edx",
    "xor     r10d, r10d",
    "xor     r9d, r9d",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "mov     r14d, edx",
    "push    r13",
    "lea     r13, [rel jump_table_19040]",
    "push    r12",
    "mov     r12, rcx",
    "push    rbx",
    "mov     r8, qword [rsi]",
    "mov     rbx, rdi",
    "xor     esi, esi",
    "mov     r15, qword [rdi]",
    "movzx   ecx, byte [r8]",
    "cmp     r10d, 0x2",
    "jne     0x6f37",
    "test    cl, cl",
    "je      0x7090",
    "cmp     cl, 0x5c",
    "je      0x6f70",
    "lea     r8d, [rcx-0x30]",
    "cmp     r8b, 0x7",
    "jbe     0x6f90",
    "add     r8, 0x1",
    "mov     rdi, r15",
    "xor     eax, eax",
    "jmp     0x6f5a",
    "lea     esi, [rcx-0x30]",
    "cmp     sil, 0x48",
    "ja      0x6f00",
    "movzx   ecx, byte [rdx+0x1]",
    "lea     r8, [rdx+0x1]",
    "mov     r10d, 0x1",
    "jg      0x6fd0",
    "lea     esi, [rcx+rsi*8-0x30]",
    "add     rdx, 0x1",
    "movzx   ecx, byte [rdx]",
    "jmp     0x6f1f",
    "mov     byte [rdi], sil",
    "movzx   ecx, byte [rdx]",
    "add     r9, 0x1",
    "add     rdi, 0x1",
    "mov     qword [rbx], rdi",
    "mov     qword [r11], r8",
    "mov     qword [r12], r9",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "{Case 0x8-0xe, 0x10-0x27, 0x29-0x2e, 0x30, 0x33-0x34, 0x37-0x3d, 0x3f-0x41, 0x43, 0x45, 0x47}",
    "mov     esi, ecx",
    "movzx   edx, sil",
    "movsxd  rdx, dword [r13+rdx*4]",
    "add     rdx, r13",
    "jmp     rdx",
    "mov     rdi, r15",
    "mov     rdx, r8",
    "cmp     r10d, 0x1",
    "jne     0x6f19",
    "cmp     cl, 0x5e",
    "jne     0x6fb0",
    "cmp     cl, 0x3d",
    "je      0x6fa0",
    "{Case 0x0-0x7}",
    "mov     rdi, r15",
    "mov     r10d, 0x2",
    "jmp     0x6f10",
    "{Case 0xf}",
    "mov     esi, 0x7f",
    "jmp     0x6f02",
    "{Case 0x42}",
    "mov     esi, 0xd",
    "jmp     0x6f02",
    "{Case 0x2f}",
    "mov     esi, 0x20",
    "jmp     0x6f02",
    "{Case 0x44}",
    "mov     esi, 0x9",
    "jmp     0x6f02",
    "{Case 0x46}",
    "mov     esi, 0xb",
    "jmp     0x6f02",
    "{Case 0x35}",
    "mov     esi, 0x1b",
    "jmp     0x6f02",
    "{Case 0x36}",
    "mov     esi, 0xc",
    "jmp     0x6f02",
    "{Case 0x3e}",
    "mov     esi, 0xa",
    "jmp     0x6f02",
    "{Case 0x28, 0x48}",
    "movzx   ecx, byte [r8+0x1]",
    "lea     rdx, [r8+0x1]",
    "xor     esi, esi",
    "nop     dword [rax]",
    "{Case 0x32}",
    "mov     esi, 0x8",
    "jmp     0x6f02",
    "{Case 0x31}",
    "mov     esi, 0x7",
    "jmp     0x6f02",
    "mov     byte [rdi], cl",
    "add     r9, 0x1",
    "movzx   ecx, byte [rdx+0x1]",
    "add     rdi, 0x1",
    "add     rdx, 0x1",
    "jmp     0x6f37",
    "movzx   ecx, byte [rdx+0x1]",
    "lea     r8d, [rcx-0x40]",
    "cmp     r8b, 0x3e",
    "ja      0x7000",
    "test    r14b, r14b",
    "je      0x6fb0",
    "jg      0x6fb0",
    "movzx   ecx, byte [r8+0x1]",
    "lea     rdx, [r8+0x1]",
    "mov     byte [r15], sil",
    "lea     rdi, [r15+0x1]",
    "add     r9, 0x1",
    "xor     r10d, r10d",
    "lea     edi, [rcx-0x61]",
    "cmp     dil, 0x5",
    "ja      0x7108",
    "cmp     cl, 0x40",
    "jg      0x7120",
    "lea     r8, [rdx+0x1]",
    "cmp     cl, 0x3f",
    "je      0x7010",
    "and     ecx, 0x1f",
    "lea     r8, [rdx+0x2]",
    "add     r9, 0x1",
    "add     rdi, 0x1",
    "mov     byte [rdi-0x1], cl",
    "xor     r10d, r10d",
    "movzx   ecx, byte [rdx+0x2]",
    "jmp     0x6f7e",
    "mov     r8, rdx",
    "jmp     0x6f5a",
    "test    cl, cl",
    "je      0x6f52",
    "mov     byte [r15], sil",
    "lea     rdi, [r15+0x1]",
    "movzx   ecx, byte [rdx]",
    "add     r9, 0x1",
    "xor     r10d, r10d",
    "jmp     0x6f19",
    "shl     esi, 0x4",
    "add     rdx, 0x1",
    "lea     esi, [rcx+rsi-0x57]",
    "movzx   ecx, byte [rdx]",
    "jmp     0x70b0",
    "shl     esi, 0x4",
    "add     rdx, 0x1",
    "lea     esi, [rcx+rsi-0x37]",
    "movzx   ecx, byte [rdx]",
    "jmp     0x70b0",
    "lea     edi, [rcx-0x30]",
    "cmp     dil, 0x9",
    "ja      0x7108",
    "mov     byte [rdi], 0x7f",
    "add     r9, 0x1",
    "movzx   ecx, byte [rdx+0x1]",
    "add     rdi, 0x1",
    "xor     r10d, r10d",
    "jmp     0x6f7e",
    "xor     eax, eax",
    "jmp     0x6f5a",
    "mov     r15, rdi",
    "jmp     0x6ed4",
    "mov     r8, rdx",
    "mov     eax, 0x1",
    "cmp     cl, 0x3a",
    "jne     0x6fb0",
    "cmp     cl, 0x46",
    "jg      0x70d6",
    "shl     esi, 0x4",
    "add     rdx, 0x1",
    "lea     esi, [rcx+rsi-0x30]",
    "movzx   ecx, byte [rdx]",
    "cmp     cl, 0x46",
    "jle     0x70b5"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}