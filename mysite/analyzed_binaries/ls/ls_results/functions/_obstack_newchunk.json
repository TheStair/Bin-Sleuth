{
  "address": "0xdca0",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "xor     ecx, ecx",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x8",
    "mov     r14, qword [rdi+0x18]",
    "sub     r14, qword [rdi+0x10]",
    "mov     rdx, qword [rbx]",
    "add     rsi, r14",
    "mov     rax, r14",
    "mov     r12, qword [rdi+0x8]",
    "setb    cl",
    "add     rsi, qword [rdi+0x30]",
    "setb    dil",
    "shr     rax, 0x3",
    "cmp     rsi, rdx",
    "lea     rax, [rsi+rax+0x64]",
    "cmovb   rsi, rdx",
    "cmp     rax, rsi",
    "cmovae  rsi, rax",
    "test    rcx, rcx",
    "jne     0xddd7",
    "lea     rax, [rel obstack_alloc_failed_handler]",
    "call    qword [rax]",
    "{ Falls through into sub_dde0 }",
    "movzx   edi, dil",
    "test    rdi, rdi",
    "jne     0xddd7",
    "mov     rax, qword [rbx+0x38]",
    "mov     r15, rsi",
    "test    byte [rbx+0x50], 0x1",
    "jne     0xdda0",
    "mov     rdi, qword [rbx+0x48]",
    "call    rax",
    "mov     r13, rax",
    "jmp     0xdd20",
    "mov     rdi, rsi",
    "call    rax",
    "mov     r13, rax",
    "test    r13, r13",
    "je      0xddd7",
    "lea     rax, [r13+r15]",
    "mov     qword [rbx+0x8], r13",
    "mov     rsi, qword [rbx+0x10]",
    "mov     rdx, r14",
    "mov     qword [r13+0x8], r12",
    "mov     qword [rbx+0x20], rax",
    "mov     qword [r13], rax",
    "mov     rax, qword [rbx+0x30]",
    "lea     r15, [r13+rax+0x10]",
    "not     rax",
    "and     r15, rax",
    "mov     rdi, r15",
    "call    memcpy",
    "movzx   edx, byte [rbx+0x50]",
    "test    dl, 0x2",
    "jne     0xdd7a",
    "mov     qword [rbx+0x10], r15",
    "add     r15, r14",
    "and     byte [rbx+0x50], 0xfd",
    "mov     qword [rbx+0x18], r15",
    "add     rsp, 0x8",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbx+0x30]",
    "lea     rcx, [r12+rax+0x10]",
    "not     rax",
    "and     rax, rcx",
    "cmp     qword [rbx+0x10], rax",
    "je      0xddb0",
    "mov     rax, qword [r12+0x8]",
    "and     edx, 0x1",
    "mov     qword [r13+0x8], rax",
    "mov     rax, qword [rbx+0x40]",
    "je      0xddd0",
    "mov     rdi, r12",
    "call    rax",
    "jmp     0xdd7a",
    "mov     rdi, qword [rbx+0x48]",
    "mov     rsi, r12",
    "call    rax",
    "jmp     0xdd7a"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}