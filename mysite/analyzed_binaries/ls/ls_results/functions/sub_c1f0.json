{
  "address": "0xc1f0",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "contain loop",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r8, rdx",
    "xor     eax, eax",
    "xor     edx, edx",
    "mov     rbp, rsp",
    "push    r12",
    "push    rbx",
    "movsx   r10d, byte [rdi+rax]",
    "mov     r9d, r10d",
    "sub     r10d, 0x30",
    "cmp     r10d, 0x9",
    "jbe     0xc2c8",
    "cmp     rdx, rcx",
    "jge     0xc4d8",
    "cmp     rdx, rcx",
    "jge     0xc2e4",
    "cmp     r9b, 0x5a",
    "jg      0xc290",
    "xor     ebx, ebx",
    "jmp     0xc2bb",
    "cmp     rax, rsi",
    "jge     0xc2c8",
    "cmp     rax, rsi",
    "jl      0xc2f9",
    "movzx   r11d, byte [r8+rdx]",
    "movsx   r10d, r11b",
    "lea     r9d, [r10-0x30]",
    "cmp     r9d, 0x9",
    "ja      0xc3b0",
    "lea     r10d, [r9-0x61]",
    "cmp     r10b, 0x19",
    "jbe     0xc23b",
    "cmp     r9b, 0x40",
    "jle     0xc29a",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rdi+rax], 0x30",
    "je      0xc2f0",
    "jmp     0xc4b5",
    "cmp     rax, rsi",
    "je      0xc460",
    "movsx   ebx, r9b",
    "cmp     rdx, rcx",
    "je      0xc520",
    "cmp     r9b, 0x7e",
    "je      0xc4ea",
    "add     rax, 0x1",
    "cmp     rsi, rax",
    "je      0xc2ff",
    "cmp     rdx, rcx",
    "jl      0xc31d",
    "cmp     rdx, rcx",
    "jl      0xc31d",
    "mov     r12d, r11d",
    "cmp     r11b, 0x5a",
    "jg      0xc480",
    "movzx   r9d, byte [rdi+rax]",
    "movzx   ebx, r9b",
    "sub     ebx, 0x30",
    "cmp     ebx, 0x9",
    "ja      0xc22f",
    "add     ebx, 0x1",
    "jmp     0xc2bb",
    "movzx   r10d, byte [r8+rdx]",
    "mov     r9d, r10d",
    "mov     r12d, r10d",
    "sub     r10d, 0x30",
    "cmp     r10d, 0x9",
    "jbe     0xc2bb",
    "cmp     rdx, rcx",
    "je      0xc450",
    "movzx   r9d, r9b",
    "lea     ebx, [r9+0x100]",
    "cmp     rdx, rcx",
    "jne     0xc248",
    "cmp     byte [r8+rdx], 0x30",
    "je      0xc310",
    "jmp     0xc4c8",
    "jmp     0xc202",
    "sub     r11d, 0x61",
    "mov     ebx, 0xffffffff",
    "cmp     r11b, 0x19",
    "ja      0xc40c",
    "cmp     r11b, 0x40",
    "jle     0xc4ac",
    "mov     r12d, r11d",
    "cmp     r11b, 0x5a",
    "jg      0xc400",
    "cmp     r9b, 0x5a",
    "jg      0xc495",
    "mov     ebx, 0xffffffff",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "movzx   r10d, byte [r8+rdx]",
    "lea     r9d, [r10-0x30]",
    "mov     r12d, r10d",
    "cmp     r9d, 0x9",
    "jbe     0xc528",
    "lea     ebx, [r9+0x101]",
    "add     rdx, 0x1",
    "cmp     rcx, rdx",
    "je      0xc3f0",
    "xor     ebx, ebx",
    "cmp     rcx, rdx",
    "jle     0xc370",
    "xor     ebx, ebx",
    "cmp     rax, rsi",
    "jl      0xc375",
    "cmp     rax, rsi",
    "jl      0xc219",
    "cmp     r12b, 0x7e",
    "je      0xc4df",
    "jmp     0xc474",
    "lea     r10d, [r11+0x100]",
    "jmp     0xc46f",
    "mov     ebx, 0xffffffff",
    "sub     r11d, 0x61",
    "xor     ebx, ebx",
    "cmp     r11b, 0x19",
    "jbe     0xc474",
    "xor     ebx, ebx",
    "cmp     r11b, 0x40",
    "jg      0xc474",
    "lea     r10d, [r9-0x61]",
    "cmp     r10b, 0x19",
    "ja      0xc40c",
    "cmp     r9b, 0x40",
    "jg      0xc4a3",
    "mov     ebx, 0xfffffffe",
    "jmp     0xc2bb",
    "cmp     r10b, 0x5a",
    "jle     0xc540",
    "xor     ebx, ebx",
    "jmp     0xc370",
    "cmp     rax, rsi",
    "jge     0xc388",
    "cmp     rsi, rax",
    "jle     0xc370",
    "movsx   r9d, byte [rdi+rax]",
    "sub     r9d, 0x30",
    "cmp     r9d, 0x9",
    "jbe     0xc441",
    "jmp     0xc207",
    "mov     r10d, 0xfffffffe",
    "jmp     0xc421",
    "movzx   r10d, r12b",
    "sub     ebx, r10d",
    "jmp     0xc2bb",
    "movzx   r10d, r11b",
    "jmp     0xc41a",
    "movsx   r10d, r9b",
    "jmp     0xc421",
    "cmp     r9b, 0x7e",
    "jne     0xc550",
    "cmp     r10b, 0x40",
    "jg      0xc532",
    "lea     r9d, [r10-0x61]",
    "cmp     r9b, 0x19",
    "jbe     0xc532",
    "cmp     rcx, rdx",
    "jle     0xc3a0",
    "movsx   r9d, byte [rdi+rax]",
    "lea     r10d, [r9-0x30]",
    "cmp     r10d, 0x9",
    "ja      0xc370",
    "mov     ebx, 0x1",
    "mov     eax, ebx",
    "pop     rbx",
    "pop     r12",
    "pop     rbp",
    "retn    ",
    "cmp     ebx, r10d",
    "jne     0xc474",
    "add     rax, 0x1",
    "add     rdx, 0x1",
    "jmp     0xc210",
    "add     r10d, 0x100",
    "movzx   r10d, r9b",
    "jmp     0xc41a",
    "mov     r10d, 0xfffffffe",
    "jmp     0xc474",
    "movsx   r10d, r12b",
    "mov     ebx, 0xfffffffe",
    "jmp     0xc474",
    "mov     ebx, 0xfffffffe",
    "jmp     0xc41a",
    "mov     ebx, 0xfffffffe",
    "jmp     0xc40c",
    "test    ebx, ebx",
    "je      0xc202",
    "movsx   r9d, byte [r8+rdx]",
    "sub     r9d, 0x30",
    "cmp     r9d, 0x9",
    "jbe     0xc450",
    "movsx   r10d, byte [r8+rdx]",
    "lea     r11d, [r10-0x30]",
    "cmp     r11d, 0x9",
    "ja      0xc438",
    "jmp     0xc2bb",
    "cmp     rsi, rax",
    "jle     0xc388",
    "sub     r9d, r10d",
    "test    ebx, ebx",
    "cmove   ebx, r9d",
    "add     rax, 0x1",
    "add     rdx, 0x1",
    "cmp     rsi, rax",
    "jle     0xc370",
    "cmp     rcx, rdx",
    "jg      0xc330",
    "nop     dword [rax]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}