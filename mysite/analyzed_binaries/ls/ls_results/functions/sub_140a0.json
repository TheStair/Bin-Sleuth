{
  "address": "0x140a0",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "write file on Windows/035d57bed47747649158312e9532f27d"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "lea     r13, [rdi+rsi]",
    "push    r12",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0x38",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "jbe     0x141d8",
    "xor     r12d, r12d",
    "cmp     rbx, r13",
    "jae     0x141b4",
    "xor     r12d, r12d",
    "cmp     rbx, r13",
    "jae     0x141b4",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x14228",
    "call    __ctype_b_loc",
    "xor     r12d, r12d",
    "mov     rdx, qword [rax]",
    "nop     dword [rax+rax]",
    "lea     rax, [rbp-0x44]",
    "lea     r14, [rbp-0x40]",
    "mov     qword [rbp-0x58], rax",
    "jmp     0x14109",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x38",
    "mov     eax, r12d",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     r12d, 0x7fffffff",
    "je      0x14220",
    "test    al, 0x2",
    "jne     0x14211",
    "movsx   eax, byte [rbx]",
    "sub     eax, 0x20",
    "cmp     eax, 0x5e",
    "jbe     0x140f8",
    "mov     r12d, 0x7fffffff",
    "jmp     0x141b4",
    "add     r12d, 0x1",
    "cmp     r13, rbx",
    "jne     0x141f0",
    "add     rbx, 0x1",
    "add     r12d, 0x1",
    "mov     qword [r14], 0x0",
    "jmp     0x14158",
    "movzx   eax, byte [rbx]",
    "add     rbx, 0x1",
    "movzx   eax, word [rdx+rax*2]",
    "test    ah, 0x40",
    "jne     0x14204",
    "jmp     0x141b4",
    "mov     rdi, qword [rbp-0x58]",
    "mov     rdx, r13",
    "mov     rcx, r14",
    "mov     rsi, rbx",
    "sub     rdx, rbx",
    "call    sub_11700",
    "mov     r15, rax",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x140f8",
    "cmp     rax, 0xfffffffffffffffe",
    "je      0x141b0",
    "add     r12d, 0x1",
    "test    rax, rax",
    "jne     0x14120",
    "mov     edi, dword [rbp-0x44]",
    "xor     eax, eax",
    "cmp     r15, 0xfffffffffffffffd",
    "cmove   r15, rax",
    "call    wcwidth",
    "test    eax, eax",
    "js      0x14193",
    "mov     edi, dword [rbp-0x44]",
    "mov     r15d, 0x1",
    "call    wcwidth",
    "test    eax, eax",
    "jns     0x14136",
    "mov     edi, dword [rbp-0x44]",
    "call    iswcntrl",
    "test    eax, eax",
    "jne     0x14149",
    "mov     ecx, 0x7fffffff",
    "sub     ecx, r12d",
    "cmp     eax, ecx",
    "jg      0x14220",
    "mov     rdi, r14",
    "add     rbx, r15",
    "call    mbsinit",
    "test    eax, eax",
    "jne     0x14100",
    "cmp     r12d, 0x7fffffff",
    "je      0x14220",
    "add     r12d, eax",
    "cmp     rbx, r13",
    "jae     0x141b4",
    "add     r12d, 0x1",
    "jmp     0x14149"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}