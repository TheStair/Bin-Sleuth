{
  "address": "0x10bf0",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "validate payment card number using luhn algorithm with no lookup table/e2044b0901bf49ed8a9109a6d12ea193",
    "validate payment card number using luhn algorithm with no lookup table/e2044b0901bf49ed8a9109a6d12ea193/fb23d8630d30417a857c3c46fc8a4014",
    "contain loop",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "validate payment card number using luhn algorithm with no lookup table/2eab3fd420ce44679ea4e5a5c8e20faa"
  ],
  "disassembly": [
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rdi",
    "push    rbx",
    "sub     rsp, 0x38",
    "mov     byte [rbp-0x39], sil",
    "test    rdi, rdi",
    "je      0x10c56",
    "mov     rax, qword [rel data_23318]",
    "movzx   ebx, byte [rbp-0x39]",
    "lea     r14, [rax-0x1]",
    "mov     dword [rbp-0x40], ebx",
    "test    rax, rax",
    "je      0x10fac",
    "cmp     qword [rel data_236f8], 0x0",
    "je      0x10c56",
    "xor     edx, edx",
    "jmp     0x10ea8",
    "nop     dword [rax]",
    "mov     edi, 0x20",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x10fb3",
    "mov     qword [rel data_23318], rdx",
    "add     rsp, 0x38",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "sub     r14, 0x1",
    "jae     0x10c78",
    "mov     r13, qword [r15]",
    "test    r12, r12",
    "je      0x10ec0",
    "call    sub_e430",
    "{ Does not return }",
    "mov     rdi, r12",
    "call    sub_10b30",
    "mov     qword [rbx], 0x0",
    "mov     qword [rbx+0x8], rax",
    "mov     rax, qword [rel data_23720]",
    "mov     byte [rbx+0x10], 0x0",
    "mov     qword [rbx+0x18], rax",
    "mov     qword [rel data_23720], rbx",
    "mov     rax, qword [rel data_23450]",
    "mov     r15, qword [rax+r14*8]",
    "mov     ebx, dword [r15+0xa8]",
    "cmp     ebx, 0x3",
    "sete    dl",
    "cmp     ebx, 0x9",
    "sete    al",
    "mov     edi, edx",
    "or      dil, al",
    "je      0x10e58",
    "mov     rdx, qword [rel data_23318]",
    "test    rdx, rdx",
    "je      0x10fac",
    "mov     rsi, qword [r15+0x8]",
    "mov     edx, dword [rbp-0x40]",
    "mov     rdi, r13",
    "call    sub_10b70",
    "cmp     ebx, 0x9",
    "jne     0x10e58",
    "movzx   r11d, byte [r13]",
    "cmp     r11b, 0x2f",
    "jne     0x10f90",
    "mov     rsi, qword [rel data_23450]",
    "lea     rdi, [rsi+rdx*8]",
    "mov     rax, rsi",
    "xor     edx, edx",
    "nop     word [rax+rax]",
    "mov     rdi, qword [r15]",
    "call    free",
    "mov     rdi, qword [r15+0x8]",
    "call    free",
    "mov     rdi, qword [r15+0x10]",
    "call    free",
    "mov     rdi, qword [r15+0xb0]",
    "lea     rax, [rel data_23024]",
    "cmp     rdi, rax",
    "je      0x10e58",
    "mov     eax, r11d",
    "mov     rdx, r13",
    "test    r11b, r11b",
    "jne     0x10cd4",
    "mov     rdx, r13",
    "nop     ",
    "mov     rcx, qword [rax]",
    "cmp     dword [rcx+0xa8], 0x9",
    "mov     qword [rsi+rdx*8], rcx",
    "setne   cl",
    "add     rax, 0x8",
    "movzx   ecx, cl",
    "add     rdx, rcx",
    "cmp     rax, rdi",
    "jne     0x10e88",
    "call    freecon",
    "sub     r14, 0x1",
    "jae     0x10c78",
    "mov     rcx, rdx",
    "xor     esi, esi",
    "jmp     0x10cf6",
    "jmp     0x10d1b",
    "movzx   eax, byte [rdx+0x1]",
    "add     rdx, 0x1",
    "cmp     al, 0x2f",
    "je      0x10cc0",
    "test    al, al",
    "je      0x10ec0",
    "jmp     0x10e62",
    "cmp     al, 0x2f",
    "jne     0x10ce0",
    "movzx   eax, byte [r12]",
    "mov     rbx, r12",
    "cmp     al, 0x2f",
    "jne     0x10d3c",
    "test    sil, sil",
    "je      0x10cea",
    "movzx   eax, byte [rcx+0x1]",
    "add     rcx, 0x1",
    "mov     esi, edi",
    "test    al, al",
    "jne     0x10cf6",
    "test    al, al",
    "je      0x10d77",
    "nop     word [rax+rax]",
    "movzx   eax, byte [rcx+0x1]",
    "add     rcx, 0x1",
    "test    al, al",
    "je      0x10d08",
    "mov     rdx, rcx",
    "xor     esi, esi",
    "cmp     byte [rdx], 0x2e",
    "je      0x10f20",
    "mov     rdi, rbx",
    "call    strlen",
    "mov     rdx, rax",
    "mov     rdx, rbx",
    "xor     ecx, ecx",
    "jmp     0x10d65",
    "movzx   eax, byte [rbx+0x1]",
    "add     rbx, 0x1",
    "cmp     al, 0x2f",
    "je      0x10d30",
    "xor     eax, eax",
    "cmp     byte [rdx+0x1], 0x2e",
    "sete    al",
    "movzx   eax, byte [rdx+rax+0x1]",
    "test    al, al",
    "je      0x10e58",
    "cmp     r11b, 0x2f",
    "je      0x10ec0",
    "sub     rbx, r12",
    "mov     rdi, r13",
    "mov     qword [rbp-0x50], rdx",
    "lea     rax, [rbx+rdx]",
    "mov     qword [rbp-0x38], rax",
    "call    strlen",
    "mov     rdx, qword [rbp-0x50]",
    "mov     qword [rbp-0x48], rax",
    "test    rdx, rdx",
    "jne     0x10db2",
    "cmp     byte [rbx+rdx-0x1], 0x2f",
    "lea     rax, [rdx-0x1]",
    "je      0x10fa4",
    "cmp     al, 0x2f",
    "jne     0x10d50",
    "cmp     al, 0x2f",
    "jne     0x10d11",
    "mov     rax, qword [rbp-0x38]",
    "cmp     byte [r12+rax-0x1], 0x2f",
    "je      0x10f75",
    "mov     qword [rbp-0x50], 0x0",
    "mov     byte [rbp-0x3a], 0x0",
    "jmp     0x10dce",
    "mov     rdx, rax",
    "jmp     0x10d82",
    "sub     rbx, r12",
    "mov     rdi, r13",
    "lea     rax, [rbx+rdx]",
    "mov     qword [rbp-0x38], rax",
    "call    strlen",
    "mov     qword [rbp-0x48], rax",
    "test    cl, cl",
    "je      0x10d59",
    "movzx   eax, byte [rdx+0x1]",
    "add     rdx, 0x1",
    "mov     ecx, edi",
    "test    al, al",
    "jne     0x10d65",
    "sub     r14, 0x1",
    "jae     0x10c78",
    "mov     qword [rbp-0x50], 0x1",
    "mov     byte [rbp-0x3a], 0x2f",
    "mov     rax, qword [rbp-0x38]",
    "mov     rbx, qword [rbp-0x48]",
    "lea     rcx, [rax+rbx+0x1]",
    "mov     rax, qword [rbp-0x50]",
    "add     rcx, rax",
    "mov     rdi, rcx",
    "mov     qword [rbp-0x58], rcx",
    "call    malloc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x10fb3",
    "cmp     rdx, 0x1",
    "jbe     0x10f4d",
    "movzx   eax, byte [rdx+0x1]",
    "add     rdx, 0x1",
    "test    al, al",
    "je      0x10d77",
    "mov     rbx, rdx",
    "xor     ecx, ecx",
    "jmp     0x10e62",
    "mov     rcx, qword [rbp-0x58]",
    "mov     rdx, qword [rbp-0x38]",
    "mov     rsi, r12",
    "mov     rdi, rax",
    "call    __mempcpy_chk",
    "movzx   esi, byte [rbp-0x3a]",
    "mov     rdi, qword [rbp-0x50]",
    "mov     rdx, qword [rbp-0x48]",
    "mov     byte [rax], sil",
    "add     rdi, rax",
    "mov     rsi, r13",
    "call    mempcpy",
    "movzx   edx, byte [rbp-0x39]",
    "mov     rdi, rbx",
    "mov     byte [rax], 0x0",
    "mov     rsi, qword [r15+0x8]",
    "call    sub_10b70",
    "mov     rdi, rbx",
    "call    free",
    "mov     ebx, dword [r15+0xa8]",
    "cmp     ebx, 0x9",
    "je      0x10ed8",
    "nop     word [rax+rax]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}