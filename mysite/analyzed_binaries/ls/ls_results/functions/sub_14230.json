{
  "address": "0x14230",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "contain loop",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     r11, rdx",
    "mov     rbp, rsp",
    "push    r15",
    "mov     r15, rsi",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x68",
    "mov     qword [rbp-0x78], rdi",
    "mov     r12, qword [rdi]",
    "mov     qword [rbp-0x70], r8",
    "mov     qword [rbp-0x80], r9",
    "mov     rdx, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rdx",
    "xor     edx, edx",
    "test    r11, r11",
    "lea     rdx, [rel data_232e0]",
    "cmove   r11, rdx",
    "mov     ebx, dword [r11]",
    "cmp     ebx, 0x2",
    "setbe   r13b",
    "and     r13b, byte [rel data_232cb]",
    "jne     0x14370",
    "test    ecx, ecx",
    "jne     0x1453c",
    "test    ecx, ecx",
    "jne     0x14440",
    "mov     dword [rbp-0x58], 0x1",
    "jmp     0x14447",
    "mov     rdi, rsi",
    "call    strlen",
    "mov     rbx, rax",
    "lea     r13, [rax+0x1]",
    "cmp     rax, 0x1fff",
    "ja      0x146e9",
    "mov     dword [rbp-0x58], 0x0",
    "mov     rdi, rsi",
    "mov     r12, r15",
    "call    strlen",
    "cmp     qword [rbp-0x70], 0x0",
    "mov     rbx, rax",
    "je      0x14310",
    "mov     qword [rbp-0x60], r11",
    "call    __errno_location",
    "mov     r11, qword [rbp-0x60]",
    "mov     ecx, ebx",
    "mov     esi, 0x2000",
    "mov     r10d, dword [rax]",
    "mov     rdi, r12",
    "mov     rdx, r15",
    "mov     r13, rax",
    "lea     r9, [r11+0x8]",
    "mov     r8d, dword [r11+0x4]",
    "mov     dword [rbp-0x68], r10d",
    "mov     qword [rbp-0x88], r9",
    "push    qword [r11+0x30]",
    "push    qword [r11+0x28]",
    "call    sub_12790",
    "mov     r10d, dword [rbp-0x68]",
    "mov     r11, qword [rbp-0x60]",
    "cmp     rax, 0x1fff",
    "mov     rbx, rax",
    "mov     dword [r13], r10d",
    "pop     rsi",
    "pop     rdi",
    "ja      0x14708",
    "mov     rdi, r13",
    "call    malloc",
    "mov     r12, rax",
    "test    rax, rax",
    "jne     0x14393",
    "mov     rdx, r13",
    "mov     rsi, r15",
    "mov     rdi, r12",
    "xor     r13d, r13d",
    "call    memcpy",
    "lea     rsi, [rax+0x1]",
    "mov     qword [rbp-0x68], r11",
    "mov     rdi, rsi",
    "mov     qword [rbp-0x60], rsi",
    "call    malloc",
    "mov     rsi, qword [rbp-0x60]",
    "mov     r11, qword [rbp-0x68]",
    "test    rax, rax",
    "mov     r12, rax",
    "je      0x146fd",
    "movzx   eax, byte [r12]",
    "mov     r13d, 0x1",
    "cmp     byte [r15], al",
    "jne     0x144c3",
    "cmp     byte [rel data_232ca], 0x0",
    "je      0x14530",
    "call    __ctype_get_mb_cur_max",
    "cmp     rax, 0x1",
    "ja      0x146b0",
    "call    sub_e430",
    "{ Does not return }",
    "cmp     r12, rcx",
    "mov     qword [rbp-0x58], rcx",
    "jae     0x14511",
    "cmp     r12, rcx",
    "jae     0x1476c",
    "mov     r10d, dword [r13]",
    "mov     ecx, dword [r11]",
    "mov     rdx, r15",
    "mov     rdi, rax",
    "mov     r8d, dword [r11+0x4]",
    "mov     r9, qword [rbp-0x88]",
    "mov     dword [rbp-0x60], r10d",
    "push    qword [r11+0x30]",
    "push    qword [r11+0x28]",
    "call    sub_12790",
    "mov     r10d, dword [rbp-0x60]",
    "mov     dword [r13], r10d",
    "pop     rdx",
    "pop     rcx",
    "jmp     0x144a4",
    "mov     eax, dword [rbp-0x58]",
    "test    eax, eax",
    "jne     0x143a4",
    "mov     rdi, r15",
    "call    strlen",
    "cmp     rax, rbx",
    "setne   r13b",
    "mov     rax, qword [rbp-0x80]",
    "mov     byte [rax], 0x0",
    "jmp     0x1433d",
    "mov     eax, r13d",
    "xor     eax, 0x1",
    "and     al, byte [rel data_232c9]",
    "mov     rsi, rbx",
    "mov     rdi, r12",
    "call    sub_140a0",
    "cmp     byte [rel data_232ca], 0x0",
    "movsxd  r14, eax",
    "jne     0x1431d",
    "lea     r15, [r12+rbx]",
    "cmp     r12, r15",
    "jae     0x14764",
    "mov     r14, rbx",
    "call    __ctype_b_loc",
    "mov     rcx, qword [rbp-0x58]",
    "mov     rdx, r12",
    "nop     dword [rax]",
    "xor     ebx, ebx",
    "xor     r14d, r14d",
    "jmp     0x14514",
    "lea     rax, [rbp-0x40]",
    "mov     qword [rbp-0x88], r12",
    "xor     r14d, r14d",
    "mov     qword [rbp-0x58], rax",
    "mov     rbx, r14",
    "mov     qword [rbp-0x60], rcx",
    "mov     byte [rbp-0x89], r13b",
    "mov     r13, r12",
    "nop     dword [rax+rax]",
    "call    __ctype_get_mb_cur_max",
    "lea     rcx, [r12+rbx]",
    "cmp     rax, 0x1",
    "jbe     0x144e0",
    "cmp     qword [rbp-0x70], 0x0",
    "jne     0x142ab",
    "mov     rax, qword [rbp-0x78]",
    "mov     qword [rax], r12",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x14776",
    "mov     rax, qword [rbp-0x70]",
    "mov     qword [rax], r14",
    "jmp     0x142fe",
    "xor     r14d, r14d",
    "jmp     0x142f5",
    "call    __ctype_b_loc",
    "xor     r14d, r14d",
    "mov     rcx, qword [rax]",
    "mov     rax, r12",
    "nop     dword [rax]",
    "mov     rsi, qword [rbp-0x80]",
    "cmp     qword [rbp-0x70], 0x0",
    "mov     byte [rsi], al",
    "je      0x1433d",
    "jmp     0x1431d",
    "add     rdx, 0x1",
    "cmp     rdx, rcx",
    "jne     0x144f8",
    "mov     byte [rdx], 0x3f",
    "movzx   eax, byte [rel data_232ca]",
    "test    al, al",
    "je      0x14329",
    "lea     edx, [rax-0x61]",
    "cmp     dl, 0x1d",
    "jbe     0x14409",
    "cmp     al, 0x40",
    "jg      0x14409",
    "jmp     0x14310",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "mov     rax, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rbp-0x80]",
    "mov     byte [rax], 0x0",
    "jmp     0x14336",
    "cmp     byte [rel data_232ca], 0x0",
    "jne     0x1431d",
    "movzx   edx, byte [rax]",
    "movzx   edx, word [rcx+rdx*2]",
    "and     dx, 0x4000",
    "cmp     dx, 0x1",
    "sbb     r14, 0xffffffffffffffff",
    "add     rax, 0x1",
    "cmp     r15, rax",
    "jne     0x142d8",
    "movzx   edi, byte [rdx]",
    "mov     rsi, qword [rax]",
    "test    byte [rsi+rdi*2+0x1], 0x40",
    "jne     0x14508",
    "mov     byte [r12], al",
    "add     r13, 0x1",
    "add     rbx, 0x1",
    "add     r12, 0x1",
    "lea     rax, [rbp-0x44]",
    "mov     qword [rbp-0x40], 0x0",
    "mov     r15, r13",
    "mov     qword [rbp-0x68], rax",
    "nop     ",
    "cmp     al, 0x23",
    "jg      0x14698",
    "movzx   eax, byte [r13]",
    "cmp     al, 0x5f",
    "jg      0x14550",
    "mov     r15, r12",
    "mov     r14, rbx",
    "mov     r12, qword [rbp-0x88]",
    "movzx   r13d, byte [rbp-0x89]",
    "mov     rbx, r15",
    "jmp     0x145d8",
    "cmp     r13, 0xffffffffffffffff",
    "je      0x146d0",
    "test    r14, r14",
    "je      0x145e0",
    "lea     edx, [rax-0x25]",
    "cmp     dl, 0x1a",
    "jbe     0x14409",
    "cmp     al, 0x1f",
    "jle     0x1455c",
    "sub     rbx, r12",
    "jmp     0x14514",
    "mov     r13, r15",
    "cmp     r13, 0xfffffffffffffffe",
    "je      0x145b7",
    "xor     edi, edi",
    "call    sub_c6a0",
    "test    al, al",
    "je      0x14660",
    "jmp     0x1455c",
    "mov     rax, qword [rbp-0x60]",
    "cmp     r13, rax",
    "jb      0x143e8",
    "mov     r15, r12",
    "mov     r14, rbx",
    "mov     r12, qword [rbp-0x88]",
    "movzx   r13d, byte [rbp-0x89]",
    "mov     byte [r15], 0x3f",
    "lea     rbx, [r15+0x1]",
    "add     r14, 0x1",
    "mov     edi, dword [rbp-0x44]",
    "test    r13, r13",
    "mov     eax, 0x1",
    "cmove   r13, rax",
    "call    wcwidth",
    "test    eax, eax",
    "jns     0x14638",
    "movzx   edi, byte [r15]",
    "mov     r13d, 0x1",
    "mov     dword [rbp-0x44], edi",
    "call    wcwidth",
    "test    eax, eax",
    "js      0x14608",
    "mov     r14, r13",
    "mov     r13, r15",
    "cmp     r14, 0xffffffffffffffff",
    "je      0x146d3",
    "xor     edx, edx",
    "nop     word [rax+rax]",
    "mov     byte [r12], 0x3f",
    "add     r15, r13",
    "add     rbx, 0x1",
    "add     r12, 0x1",
    "movzx   edx, byte [r15]",
    "mov     r13d, 0x1",
    "cdqe    ",
    "add     r15, r13",
    "add     rbx, rax",
    "mov     byte [r12], dl",
    "add     r12, r13",
    "jmp     0x14618",
    "mov     byte [r12], 0x3f",
    "add     r13, 0x1",
    "add     rbx, 0x1",
    "add     r12, 0x1",
    "jmp     0x14419",
    "movzx   ecx, byte [r15+rdx]",
    "mov     byte [r12+rdx], cl",
    "add     rdx, 0x1",
    "cmp     rdx, r13",
    "jne     0x14640",
    "cdqe    ",
    "add     r15, r13",
    "add     r12, r13",
    "add     rbx, rax",
    "jmp     0x14618",
    "mov     r14, qword [rbp-0x60]",
    "mov     rcx, qword [rbp-0x58]",
    "mov     rsi, r15",
    "mov     rdi, qword [rbp-0x68]",
    "sub     r14, r15",
    "mov     rdx, r14",
    "call    mbrtowc",
    "mov     r13, rax",
    "cmp     rax, 0xfffffffffffffffd",
    "jbe     0x145e0",
    "mov     r13, r15",
    "jmp     0x14419",
    "mov     rdi, qword [rbp-0x58]",
    "call    mbsinit",
    "test    eax, eax",
    "je      0x14570"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}