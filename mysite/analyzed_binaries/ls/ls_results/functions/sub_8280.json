{
  "address": "0x8280",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "decompress data using LZO/4cde8899b401464e87ec185666d6508a",
    "contain loop",
    "hash data using jshash/f142a7a7597843a791ba4ccc676b6fb1",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "check OS version/0dbc6332c9724004b686b44a39c40b94"
  ],
  "disassembly": [
    "push    rbp {__saved_rbp}",
    "xor     esi, esi  {0x0}",
    "mov     rbp, rsp {__saved_rbp}",
    "push    r15 {__saved_r15}",
    "push    r14 {__saved_r14}",
    "lea     r8, [rbp-0x650 {var_658}]",
    "push    r13 {__saved_r13}",
    "push    r12 {__saved_r12}",
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x698",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38 {var_40}], rax",
    "xor     eax, eax  {0x0}",
    "xor     eax, eax  {0x0}",
    "mov     qword [r8+rsi], rax {var_658}  {0x0}",
    "cmp     rsi, 0x8",
    "jne     0x878c",
    "nop     ",
    "mov     esi, 0x8",
    "jmp     0x82ac",
    "cmp     qword [rbp-0x650 {var_658}], 0x0",
    "mov     r10d, 0xc",
    "je      0x88fc",
    "cmp     cl, 0x25",
    "je      0x87a0",
    "mov     edx, ecx",
    "lea     rax, [rel data_23240]",
    "mov     rax, qword [rax+rsi]",
    "movzx   edx, byte [rax]",
    "test    dl, dl",
    "je      0x82d7",
    "cmp     qword [rbp-0x648 {var_650}], 0x0",
    "jne     0x82fb",
    "lea     r12, [rbp-0x640 {var_648}]",
    "lea     rbx, [rbp-0x5c1 {var_5c9}]",
    "mov     qword [rbp-0x668 {var_670_1}], r10  {0xc}",
    "lea     rax, [rbp+0x3f {arg_37}]",
    "mov     qword [rbp-0x6a8 {var_6b0_1}], rbx {var_5c9}",
    "mov     qword [rbp-0x688 {var_690_1}], rax {arg_37}",
    "mov     qword [rbp-0x6c0 {var_6c8_1}], r8 {var_658}",
    "mov     qword [rbp-0x6a0 {var_6a8_1}], r12 {var_648}",
    "movzx   edx, byte [rax+0x2]",
    "add     rax, 0x1",
    "jmp     0x82cf",
    "cmp     cl, 0x62",
    "jne     0x82cd",
    "movzx   ecx, byte [rax+0x1]",
    "cmp     dl, 0x25",
    "je      0x8770",
    "jmp     0x8880",
    "mov     edi, dword [rbp-0x67c {item}]",
    "call    nl_langinfo",
    "mov     esi, 0x25",
    "mov     rdi, rax",
    "mov     r15, rax",
    "call    strchr",
    "mov     qword [rbp-0x670 {s_1}], rax",
    "test    rax, rax",
    "jne     0x8880",
    "add     rax, 0x1",
    "test    dl, dl",
    "jne     0x82c0",
    "mov     qword [r8+rsi], rax {var_658}",
    "cmp     rsi, 0x8",
    "je      0x82e7",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x8a4d",
    "call    __ctype_b_loc",
    "movzx   edx, byte [r15]",
    "mov     rdi, r15",
    "mov     r8, qword [rbp-0x658 {var_660_1}]",
    "mov     rax, qword [rax]",
    "mov     rbx, qword [rbp-0x688 {var_690_1}]",
    "mov     qword [rbp-0x690 {var_698_3}], r8",
    "movzx   eax, word [rax+rdx*2]",
    "sub     rbx, r12",
    "and     ax, 0x800",
    "mov     word [rbp-0x67e {var_686_1}], ax",
    "call    strlen",
    "mov     r14, rax",
    "mov     r13, rax",
    "call    __ctype_get_mb_cur_max",
    "mov     r8, qword [rbp-0x690 {var_698_3}]",
    "mov     r11, r14",
    "mov     qword [rbp-0x660 {var_668_1}], 0x0",
    "cmp     rax, 0x1",
    "jbe     0x8368",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "cmp     qword [rbp-0x668 {var_670_1}], r13",
    "jae     0x86f2",
    "xor     edx, edx  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     rsi, r15",
    "mov     qword [rbp-0x698 {var_6a0_1}], r8",
    "mov     qword [rbp-0x690 {var_698_4}], r14",
    "call    mbstowcs",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x8880",
    "mov     rax, qword [rbp-0x668 {var_670_1}]",
    "cmp     r13, rax",
    "jae     0x837f",
    "mov     r13, qword [rbp-0x668 {var_670_1}]",
    "mov     r11, r13",
    "lea     rdx, [rax+0x1]",
    "lea     rax, [rdx*4]",
    "mov     qword [rbp-0x6b8 {var_6c0_1}], rdx",
    "mov     rdi, rax",
    "mov     qword [rbp-0x6b0 {var_6b8_1}], rax",
    "call    malloc",
    "mov     qword [rbp-0x660 {var_668_1}], rax",
    "test    rax, rax",
    "je      0x8880",
    "xor     r14d, r14d  {0x0}",
    "cmp     word [rbp-0x67e {var_686_1}], 0x0",
    "mov     eax, 0x7f",
    "je      0x87b0",
    "sub     rax, r13",
    "cmp     word [rbp-0x67e {var_686_1}], 0x0",
    "mov     r10, qword [rbp-0x658 {var_660_1}]",
    "mov     r14, rax",
    "jne     0x8725",
    "mov     eax, 0x7f",
    "mov     rsi, qword [rbp-0x658 {var_660_1}]",
    "lea     rdx, [r14-0x1]",
    "cmp     r11, rax",
    "cmovbe  rax, r11",
    "mov     byte [rsi], 0x0",
    "mov     rdi, rsi",
    "cmp     eax, 0x8",
    "jb      0x87e0",
    "cmp     r11, rax",
    "mov     byte [r8], 0x0",
    "mov     rcx, rbx",
    "mov     rsi, r15",
    "cmovbe  rax, r11",
    "mov     rdi, r8",
    "mov     qword [rbp-0x690 {var_698_1}], r11",
    "mov     rdx, rax",
    "call    __mempcpy_chk",
    "mov     r11, qword [rbp-0x690 {var_698_1}]",
    "mov     rcx, rax",
    "nop     word [rax+rax]",
    "mov     rcx, qword [rbp-0x6b0 {var_6b8_1}]",
    "mov     rdx, qword [rbp-0x6b8 {var_6c0_1}]",
    "mov     rsi, r15",
    "mov     rdi, rax",
    "shr     rcx, 0x2",
    "call    __mbstowcs_chk",
    "mov     rdx, qword [rbp-0x6b8 {var_6c0_1}]",
    "mov     r11, qword [rbp-0x690 {var_698_4}]",
    "test    rax, rax",
    "mov     r8, qword [rbp-0x698 {var_6a0_1}]",
    "je      0x8368",
    "mov     eax, 0x600",
    "cmp     rbx, rax",
    "cmovae  rax, rbx",
    "mov     rdx, rax",
    "sub     rdx, rbx",
    "add     rdx, 0x1",
    "cmp     rdx, rax",
    "cmovb   rdx, rax",
    "sub     rbx, 0x1",
    "add     r8, 0x1",
    "sub     rbx, rax",
    "mov     rax, r10",
    "sub     rax, r8",
    "add     rbx, rdx",
    "mov     byte [r8-0x1], 0x20",
    "add     rax, r14",
    "jne     0x8720",
    "jmp     0x87b0",
    "xor     ecx, ecx  {0x0}",
    "test    al, 0x4",
    "je      0x87f0",
    "mov     ecx, eax",
    "mov     rsi, r15",
    "shr     ecx, 0x3",
    "rep movsq qword [rdi], [rsi]  {0x0}",
    "mov     r15, rsi",
    "mov     rax, qword [rbp-0x678 {var_680_1}]",
    "cmp     rax, r13",
    "cmovae  r13, rax",
    "mov     rax, qword [rbp-0x688 {var_690_1}]",
    "sub     r12, 0xffffffffffffff80",
    "add     dword [rbp-0x67c {item}], 0x1",
    "sub     qword [rbp-0x658 {var_660_1}], 0xffffffffffffff80",
    "mov     qword [rbp-0x678 {var_680_1}], r13",
    "cmp     r12, rax",
    "je      0x8856",
    "mov     rcx, qword [rbp-0x660 {var_668_1}]",
    "mov     rdi, qword [rbp-0x6b0 {var_6b8_1}]",
    "xor     esi, esi  {0x0}",
    "mov     dword [rcx+rdi-0x4], esi  {0x0}",
    "mov     edi, dword [rcx]",
    "test    edi, edi",
    "je      0x890f",
    "cmp     r8, r12",
    "jae     0x8760",
    "mov     rax, r12",
    "sub     rax, r8",
    "jmp     0x8395",
    "test    al, 0x2",
    "je      0x8801",
    "mov     ecx, dword [r15]",
    "mov     dword [rdi], ecx",
    "mov     ecx, 0x4",
    "mov     rax, qword [rbp-0x668 {var_670_1}]",
    "mov     r11, r13",
    "cmp     r13, rax",
    "jae     0x8934",
    "mov     rdi, qword [rbp-0x660 {var_668_1}]",
    "mov     rsi, rdx",
    "mov     qword [rbp-0x690 {var_698_10}], r8",
    "call    wcswidth",
    "mov     r8, qword [rbp-0x690 {var_698_10}]",
    "movsxd  r13, eax",
    "jmp     0x85ee",
    "mov     qword [rbp-0x690 {var_698_5}], rdx",
    "xor     r13d, r13d  {0x0}",
    "mov     qword [rbp-0x6b0 {var_6b8_2}], rbx",
    "mov     rbx, rcx",
    "nop     dword [rax]",
    "test    al, 0x1",
    "je      0x880e",
    "movzx   esi, word [r15+rcx]",
    "mov     word [rdi+rcx], si",
    "add     rcx, 0x2",
    "mov     r8, qword [rbp-0x6c0 {var_6c8_1}]",
    "mov     r12, qword [rbp-0x6a0 {var_6a8_1}]",
    "xor     edx, edx  {0x0}",
    "mov     qword [rbp-0x668 {var_670_1}], r11",
    "jmp     0x8330",
    "cmp     qword [rbp-0x668 {var_670_1}], r13",
    "jae     0x88d0",
    "mov     edi, dword [rbx+0x4]",
    "add     rbx, 0x4",
    "test    edi, edi",
    "jne     0x8590",
    "mov     dword [rbx], 0xfffd",
    "mov     r13d, 0x1",
    "mov     rdi, qword [rbp-0x658 {var_660_1}]",
    "add     rax, rdi",
    "mov     rcx, rax",
    "cmp     rax, r12",
    "jae     0x83c8",
    "movzx   esi, byte [r15+rcx]",
    "mov     byte [rdi+rcx], sil",
    "mov     rdi, r13",
    "sub     rdi, rbx",
    "test    r14, r14",
    "jne     0x8988",
    "mov     r12, qword [rbp-0x6a0 {var_6a8_1}]",
    "xor     r11d, r11d  {0x0}",
    "mov     r14, qword [rbp-0x6a8 {var_6b0_1}]",
    "mov     dword [rbp-0x67c {item}], 0x2000e",
    "mov     qword [rbp-0x678 {var_680_1}], r11  {0x0}",
    "mov     qword [rbp-0x658 {var_660_1}], r12",
    "mov     r12, r14",
    "jmp     0x8436",
    "mov     r11, r14",
    "jmp     0x86f2",
    "add     r14, 0x1",
    "call    iswprint",
    "test    eax, eax",
    "jne     0x85a5",
    "mov     rdx, qword [rbp-0x690 {var_698_5}]",
    "mov     r8, qword [rbp-0x698 {var_6a0_1}]",
    "mov     rdi, qword [rbp-0x660 {var_668_1}]",
    "mov     rbx, qword [rbp-0x6b0 {var_6b8_2}]",
    "mov     rsi, rdx",
    "mov     qword [rbp-0x690 {var_698_6}], r8",
    "call    wcswidth",
    "test    r13b, r13b",
    "mov     r8, qword [rbp-0x690 {var_698_6}]",
    "jne     0x88a2",
    "mov     byte [rcx], 0x0",
    "mov     rdi, qword [rbp-0x660 {var_668_1}]",
    "mov     qword [rbp-0x690 {var_698_2}], r11",
    "call    free",
    "mov     rdi, qword [rbp-0x670 {s_1}]",
    "call    free",
    "mov     r11, qword [rbp-0x690 {var_698_2}]",
    "add     r14, r11",
    "cmp     r14, 0x7f",
    "ja      0x8880",
    "test    r14, r14",
    "jne     0x8839",
    "mov     r9, r14",
    "sub     r9, r15",
    "cmp     r9, 0x80",
    "jg      0x8880",
    "mov     rcx, r15",
    "lea     rdx, [rel data_1b561[2]]  {\"%s\"}",
    "mov     esi, 0x80",
    "xor     eax, eax  {0x0}",
    "call    snprintf",
    "jmp     0x89d1",
    "mov     rax, qword [rbp-0x38 {var_40}]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x8a4d",
    "mov     r15, qword [rbp-0x660 {var_668_1}]",
    "xor     r13d, r13d",
    "mov     r8, qword [rbp-0x690 {var_698_7}]",
    "mov     edi, dword [r15]",
    "test    edi, edi",
    "je      0x86b4",
    "mov     rsi, qword [rbp-0x660 {var_668_1}]",
    "xor     edx, edx  {0x0}",
    "xor     edi, edi  {0x0}",
    "mov     qword [rbp-0x670 {var_678_1}], r8",
    "call    wcstombs",
    "mov     r8, qword [rbp-0x670 {var_678_1}]",
    "lea     r14, [rax+0x1]",
    "jmp     0x85ff",
    "movsxd  r13, eax",
    "add     rcx, 0x1",
    "mov     esi, 0x1",
    "mov     byte [rcx-0x1], 0x20",
    "sub     rsi, rcx",
    "add     rsi, rdx",
    "add     rsi, rax",
    "jne     0x8830",
    "jmp     0x83c8",
    "sub     rsp, 0x8",
    "lea     rax, [r14+0x2]",
    "mov     rcx, rbx",
    "mov     edx, 0x2",
    "push    rax {var_6d8_1}",
    "lea     rax, [r12+0x600]",
    "lea     r8, [rel data_1adc5]  {\"%.*s%s%s\"}",
    "mov     esi, 0x80",
    "sub     rax, rbx",
    "push    rax {var_6e0_1}",
    "xor     eax, eax  {0x0}",
    "push    r15 {var_6e8_1}",
    "call    __snprintf_chk",
    "add     rsp, 0x20",
    "cmp     eax, 0x7f",
    "ja      0x8880",
    "mov     rdi, qword [rbp-0x660 {var_668_1}]",
    "lea     rsp, [rbp-0x28]",
    "pop     rbx {__saved_rbx}",
    "pop     r12 {__saved_r12}",
    "pop     r13 {__saved_r13}",
    "pop     r14 {__saved_r14}",
    "pop     r15 {__saved_r15}",
    "pop     rbp {__saved_rbp}",
    "jmp     free",
    "mov     dword [r15], 0x0",
    "mov     r15, qword [rbp-0x670 {s_1}]",
    "mov     rdx, r14",
    "mov     rsi, qword [rbp-0x660 {var_668_1}]",
    "mov     qword [rbp-0x690 {var_698_9}], r8",
    "mov     rdi, r15",
    "call    wcstombs",
    "mov     r8, qword [rbp-0x690 {var_698_9}]",
    "mov     r11, rax",
    "cmp     qword [rbp-0x668 {var_670_1}], r13",
    "jb      0x8375",
    "mov     qword [rbp-0x690 {var_698_8}], r12",
    "mov     r12, r15",
    "mov     r15, rbx",
    "mov     rbx, r13  {0x0}",
    "mov     qword [rbp-0x698 {var_6a0_2}], r8",
    "mov     r13, qword [rbp-0x668 {var_670_1}]",
    "jmp     0x867e",
    "mov     rdi, r14",
    "mov     qword [rbp-0x690 {var_698_7}], r8",
    "call    malloc",
    "mov     qword [rbp-0x670 {s_1}], rax",
    "test    rax, rax",
    "je      0x8a24",
    "cmp     rcx, r12",
    "jae     0x83c8",
    "jmp     0x83c8",
    "add     rbx, 0xffffffffffffff80",
    "je      0x8a03",
    "call    wcwidth",
    "cmp     eax, 0xffffffff",
    "jne     0x8660",
    "mov     rdx, qword [rbp-0x658 {var_660_2}]",
    "mov     r8, qword [rbp-0x660 {var_668_2}]",
    "test    rdx, rdx",
    "jne     0x8875",
    "cdqe    ",
    "add     rax, rbx",
    "cmp     r13, rax",
    "jb      0x869d",
    "mov     eax, 0x1",
    "mov     dword [r12], 0xfffd",
    "add     rax, rbx",
    "cmp     r13, rax",
    "jae     0x866a",
    "mov     byte [rel data_237cc], 0x1",
    "nop     dword [rax]",
    "mov     edx, 0x1",
    "jmp     0x8944",
    "mov     r13, rbx",
    "mov     r8, qword [rbp-0x698 {var_6a0_2}]",
    "mov     rbx, r15",
    "mov     r15, r12",
    "mov     r12, qword [rbp-0x690 {var_698_8}]",
    "mov     edi, dword [r12+0x4]",
    "add     r12, 0x4",
    "test    edi, edi",
    "je      0x88e0",
    "lea     rax, [rel data_23240]",
    "mov     r14, qword [r8+rdx*8]",
    "mov     ebx, 0x600",
    "lea     rdi, [rel data_237e0]",
    "mov     r15, qword [rax+rdx*8]",
    "mov     rax, rdx",
    "mov     qword [rbp-0x658 {var_660_2}], rdx",
    "neg     rax",
    "mov     qword [rbp-0x660 {var_668_2}], r8",
    "and     eax, 0x600",
    "lea     r13, [rdi+rax+0x600]",
    "jmp     0x89e0",
    "mov     rbx, r15",
    "mov     r8, qword [rbp-0x698 {var_6a0_2}]",
    "mov     r15, r12",
    "mov     r13, rax",
    "mov     r12, qword [rbp-0x690 {var_698_8}]",
    "jmp     0x86b4",
    "mov     rbx, rax"
  ],
  "high_level_IL": [
    "int64_t rsi = 0",
    "void* fsbase",
    "int64_t rax = *(fsbase + 0x28)",
    "int64_t var_658",
    "while (true)",
    "char* rax_2 = *(&data_23240 + rsi)",
    "char rdx_1 = *rax_2",
    "if (rdx_1 == 0)",
    "label_82d9:",
    "*(&var_658 + rsi) = 0",
    "if (rsi == 8)",
    "break",
    "while (true)",
    "char rcx_1 = rax_2[1]",
    "if (rdx_1 != 0x25)",
    "rdx_1 = rcx_1",
    "if (rcx_1 == 0x25)",
    "rdx_1 = rax_2[2]",
    "rax_2 = &rax_2[1]",
    "if (rcx_1 == 0x62)",
    "break",
    "rdx_1 = rcx_1",
    "rax_2 = &rax_2[1]",
    "if (rdx_1 == 0)",
    "goto label_82d9",
    "*(&var_658 + rsi) = rax_2",
    "if (rsi == 8)",
    "break",
    "rsi = 8",
    "int64_t var_650",
    "if (var_658 != 0 || var_650 != 0)",
    "uint64_t var_670_1 = 0xc",
    "void* var_690_1 = &arg_37",
    "void var_648",
    "void* var_6a8_1 = &var_648",
    "label_8341:",
    "nl_item item = 0x2000e",
    "uint64_t var_680_1 = 0",
    "void* var_660_1 = var_6a8_1",
    "void var_5c9",
    "void* r12_2 = &var_5c9",
    "while (true)",
    "char* s_2 = nl_langinfo(item)",
    "char* s = s_2",
    "char* s_4 = strchr(s_2, 0x25)",
    "char* s_1 = s_4",
    "if (s_4 != 0)",
    "goto label_8884",
    "uint64_t rbx_1 = var_690_1 - r12_2",
    "int16_t rax_9 = (*__ctype_b_loc())[zx.q(*s)] & 0x800",
    "uint64_t rax_10 = strlen(s)",
    "uint64_t r13_1 = rax_10",
    "void* r8_1 = var_660_1",
    "uint64_t r11_1 = rax_10",
    "wchar_t* var_668_1 = nullptr",
    "void* rcx_3",
    "uint64_t r14_2",
    "void* rax_3",
    "if (__ctype_get_mb_cur_max() u<= 1)",
    "label_8368:",
    "if (var_670_1 u>= r13_1)",
    "goto label_86f9",
    "label_8375:",
    "r13_1 = var_670_1",
    "r11_1 = r13_1",
    "label_837f:",
    "r14_2 = 0",
    "rax_3 = &__elf_program_headers[1].flags:3",
    "if (rax_9 == 0)",
    "goto label_87b0",
    "label_8398:",
    "*r8_1 = 0",
    "if (r11_1 u<= rax_3)",
    "rax_3 = r11_1",
    "rcx_3 = __mempcpy_chk(r8_1, s, rax_3, rbx_1)",
    "void* var_6a0_1 = r8_1",
    "uint64_t rax_12 = mbstowcs(nullptr, s, 0)",
    "if (rax_12 == -1)",
    "goto label_8884",
    "int64_t bytes = (rax_12 + 1) << 2",
    "wchar_t* rax_13 = malloc(bytes)",
    "var_668_1 = rax_13",
    "if (rax_13 == 0)",
    "goto label_8884",
    "r11_1 = rax_10",
    "r8_1 = var_6a0_1",
    "if (__mbstowcs_chk(rax_13, s, rax_12 + 1, bytes u>> 2) == 0)",
    "goto label_8368",
    "*(var_668_1 + bytes - 4) = 0",
    "int32_t wc = *var_668_1",
    "uint64_t r14_5",
    "if (wc == 0)",
    "r13_1 = sx.q(wcswidth(var_668_1))",
    "char r13_2 = 0",
    "wchar_t* rbx_3 = var_668_1",
    "if (iswprint(wc) == 0)",
    "*rbx_3 = 0xfffd",
    "r13_2 = 1",
    "wc = rbx_3[1]",
    "rbx_3 = &rbx_3[1]",
    "do while (wc != 0)",
    "int32_t rax_16 = wcswidth(var_668_1)",
    "r8_1 = var_6a0_1",
    "if (r13_2 != 0)",
    "r14_5 = wcstombs(nullptr, var_668_1, 0) + 1",
    "goto label_8609",
    "r13_1 = sx.q(rax_16)",
    "if (var_670_1 u>= r13_1)",
    "r11_1 = rax_10",
    "r14_5 = rax_10 + 1",
    "label_8609:",
    "char* s_5 = malloc(r14_5)",
    "s_1 = s_5",
    "if (s_5 == 0)",
    "*(fsbase + 0x28)",
    "if (rax == *(fsbase + 0x28))",
    "return free(var_668_1) __tailcall",
    "goto label_8a4d",
    "wchar_t* r15_1 = var_668_1",
    "r13_1 = 0",
    "int32_t ch = *r15_1",
    "if (ch != 0)",
    "wchar_t* r12_3 = r15_1",
    "uint64_t rbx_4 = 0",
    "while (true)",
    "int32_t rax_19 = wcwidth(ch)",
    "int64_t rax_18",
    "if (rax_19 != 0xffffffff)",
    "rax_18 = sx.q(rax_19) + rbx_4",
    "if (var_670_1 u< rax_18)",
    "label_869d:",
    "r13_1 = rbx_4",
    "r15_1 = r12_3",
    "break",
    "*r12_3 = 0xfffd",
    "rax_18 = 1 + rbx_4",
    "if (var_670_1 u< rax_18)",
    "goto label_869d",
    "ch = r12_3[1]",
    "r12_3 = &r12_3[1]",
    "if (ch == 0)",
    "r15_1 = r12_3",
    "r13_1 = rax_18",
    "break",
    "rbx_4 = rax_18",
    "*r15_1 = 0",
    "s = s_1",
    "r8_1 = r8_1",
    "r11_1 = wcstombs(s, var_668_1, r14_5)",
    "if (var_670_1 u< r13_1)",
    "goto label_8375",
    "label_86f9:",
    "if (r13_1 u>= var_670_1)",
    "goto label_837f",
    "r14_2 = var_670_1 - r13_1",
    "if (rax_9 != 0)",
    "uint64_t rax_23 = 0x600",
    "if (rbx_1 u>= 0x600)",
    "rax_23 = rbx_1",
    "uint64_t rdx_11 = rax_23 - rbx_1 + 1",
    "if (rdx_11 u< rax_23)",
    "rdx_11 = rax_23",
    "r8_1 += 1",
    "rbx_1 = rbx_1 - 1 - rax_23 + rdx_11",
    "*(r8_1 - 1) = 0x20",
    "if (var_660_1 - r8_1 == neg.q(r14_2))",
    "break",
    "do while (r8_1 u< r12_2)",
    "rax_3 = r12_2 - r8_1",
    "goto label_8398",
    "label_87b0:",
    "uint64_t rax_28 = &__elf_program_headers[1].flags:3",
    "if (r11_1 u<= 0x7f)",
    "rax_28 = r11_1",
    "*var_660_1 = 0",
    "void* rdi_13 = var_660_1",
    "if (rax_28.d u>= 8)",
    "char* s_3",
    "rdi_13, s_3 = __builtin_memcpy(rdi_13, s, zx.q(rax_28.d u>> 3) << 3)",
    "s = s_3",
    "int64_t rcx_10 = 0",
    "if ((rax_28.b & 4) != 0)",
    "*rdi_13 = *s",
    "rcx_10 = 4",
    "if ((rax_28.b & 2) != 0)",
    "*(rdi_13 + rcx_10) = *(s + rcx_10)",
    "rcx_10 += 2",
    "if ((rax_28.b & 1) != 0)",
    "*(rdi_13 + rcx_10) = s[rcx_10]",
    "void* rax_29 = rax_28 + var_660_1",
    "rcx_3 = rax_29",
    "if (rax_29 u< r12_2 && r14_2 != 0)",
    "rcx_3 += 1",
    "*(rcx_3 - 1) = 0x20",
    "if (1 - rcx_3 + r14_2 - 1 == neg.q(rax_29))",
    "break",
    "do while (rcx_3 u< r12_2)",
    "*rcx_3 = 0",
    "free(var_668_1)",
    "free(s_1)",
    "if (r14_2 + r11_1 u> 0x7f)",
    "goto label_8884",
    "if (var_680_1 u>= r13_1)",
    "r13_1 = var_680_1",
    "r12_2 -= -0x80",
    "item += 1",
    "var_660_1 -= -0x80",
    "var_680_1 = r13_1",
    "if (r12_2 == var_690_1)",
    "if (r13_1 u< var_670_1)",
    "var_670_1 = r13_1",
    "goto label_8341",
    "int64_t rdx_13 = 0",
    "label_894b:",
    "int64_t r14_6 = (&var_658)[rdx_13]",
    "int64_t rbx_7 = 0x600",
    "int64_t r15_3 = (&data_23240)[rdx_13]",
    "while (true)",
    "int32_t rax_42",
    "if (r14_6 != 0)",
    "if (r14_6 - r15_3 s> 0x80)",
    "goto label_8884",
    "int64_t var_6d8_1 = r14_6 + 2",
    "void* var_6e0_1 = var_6a8_1 + 0x600 - rbx_7",
    "int64_t var_6e8_1 = r15_3",
    "rax_42 = __snprintf_chk()",
    "rax_42 = snprintf((zx.q((neg.q(rdx_13)).d) & 0x600) + 0x23de0 - rbx_7, 0x80, \"%s\", r15_3)",
    "if (rax_42 u> 0x7f)",
    "goto label_8884",
    "int64_t temp6_1 = rbx_7",
    "rbx_7 -= 0x80",
    "if (temp6_1 == 0x80)",
    "if (rdx_13 == 0)",
    "rdx_13 = 1",
    "goto label_894b",
    "data_237cc = 1",
    "break",
    "break",
    "label_8884:",
    "if (rax == *(fsbase + 0x28))",
    "return rax - *(fsbase + 0x28)",
    "label_8a4d:",
    "__stack_chk_fail()",
    "noreturn"
  ]
}