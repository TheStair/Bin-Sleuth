{
  "address": "0x12600",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "push    rbx",
    "sub     rsp, 0x28",
    "movzx   edx, byte [rdi]",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "xor     eax, eax",
    "mov     qword [rbp-0x40], 0xffffffffffffffff",
    "movzx   eax, byte [rsi]",
    "mov     qword [rbp-0x48], 0xffffffffffffffff",
    "test    dl, dl",
    "je      0x12738",
    "neg     al",
    "sbb     eax, eax",
    "jmp     0x12715",
    "test    al, al",
    "je      0x12710",
    "mov     rdx, qword [rbp-0x38]",
    "sub     rdx, qword [fs:0x28]",
    "jne     0x12767",
    "mov     eax, 0x1",
    "mov     rbx, rdi",
    "mov     r12, rsi",
    "cmp     dl, 0x2e",
    "je      0x126e0",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "add     rsp, 0x28",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "cmp     al, 0x2e",
    "jne     0x12760",
    "cmp     al, 0x2e",
    "je      0x12710",
    "mov     eax, 0xffffffff",
    "jmp     0x12715",
    "movzx   edx, byte [rdi+0x1]",
    "movzx   eax, byte [rsi+0x1]",
    "test    dl, dl",
    "je      0x12738",
    "lea     rsi, [rbp-0x48]",
    "mov     rdi, rbx",
    "mov     r15d, 0x1",
    "call    sub_c110",
    "lea     rsi, [rbp-0x40]",
    "mov     rdi, r12",
    "mov     r13, rax",
    "call    sub_c110",
    "mov     r14, qword [rbp-0x48]",
    "mov     rcx, rax",
    "cmp     r13, r14",
    "je      0x12740",
    "test    al, al",
    "je      0x12710",
    "cmp     qword [rbp-0x40], rax",
    "setne   r15b",
    "jmp     0x12692",
    "mov     rdx, r12",
    "mov     rsi, r13",
    "mov     rdi, rbx",
    "call    sub_c1f0",
    "test    eax, eax",
    "jne     0x12715",
    "cmp     dl, 0x2e",
    "je      0x12750",
    "test    r15b, r15b",
    "je      0x12715",
    "movzx   edx, byte [rdi+0x2]",
    "cmp     al, 0x2e",
    "je      0x1276c",
    "cmp     al, 0x2e",
    "jne     0x12661",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0x12767",
    "cmp     byte [rsi+0x2], 0x0",
    "je      0x12780",
    "test    dl, dl",
    "jne     0x12661",
    "cmp     byte [rsi+0x2], 0x0",
    "jne     0x12661",
    "mov     rcx, qword [rbp-0x40]",
    "add     rsp, 0x28",
    "mov     rdx, r12",
    "mov     rsi, r14",
    "mov     rdi, rbx",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "jmp     sub_c1f0",
    "xor     eax, eax",
    "test    dl, dl",
    "setne   al",
    "jmp     0x12715",
    "or      eax, 0xffffffff",
    "test    dl, dl",
    "je      0x12715",
    "nop     dword [rax+rax]",
    "jmp     0x12661"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}