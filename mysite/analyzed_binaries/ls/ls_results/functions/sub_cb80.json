{
  "address": "0xcb80",
  "rules": [
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "check OS version/0dbc6332c9724004b686b44a39c40b94"
  ],
  "disassembly": [
    "endbr64 ",
    "push    rbp",
    "mov     rbp, rsp",
    "push    r15",
    "push    r14",
    "push    r13",
    "push    r12",
    "mov     r12, rcx",
    "push    rbx",
    "mov     rbx, rdi",
    "sub     rsp, 0xa8",
    "mov     qword [rbp-0x88], rsi",
    "mov     qword [rbp-0x98], r8",
    "mov     dword [rbp-0x78], edx",
    "mov     rax, qword [fs:0x28]",
    "mov     qword [rbp-0x38], rax",
    "mov     eax, edx",
    "and     edx, 0x20",
    "mov     dword [rbp-0xb8], edx",
    "and     eax, 0x3",
    "cmp     edx, 0x1",
    "mov     dword [rbp-0xa0], eax",
    "sbb     eax, eax",
    "and     eax, 0xffffffe8",
    "add     eax, 0x400",
    "mov     dword [rbp-0xb4], eax",
    "call    localeconv",
    "mov     r15, qword [rax {lconv::decimal_point}]",
    "mov     r14, rax",
    "mov     rdi, r15",
    "call    strlen",
    "mov     r13, qword [r14+0x10 {lconv::grouping}]",
    "mov     r14, qword [r14+0x8 {lconv::thousands_sep}]",
    "mov     rsi, rax",
    "sub     rax, 0x1",
    "cmp     rax, 0x10",
    "mov     eax, 0x1",
    "mov     rdi, r14",
    "cmovae  rsi, rax",
    "lea     rax, [rel data_1aedc]",
    "cmovae  r15, rax",
    "mov     qword [rbp-0xb0], rsi",
    "call    strlen",
    "mov     rdi, qword [rbp-0x98]",
    "mov     rsi, qword [rbp-0xb0]",
    "cmp     rax, 0x10",
    "lea     rax, [rel data_1af54]",
    "cmovbe  rax, r14",
    "mov     qword [rbp-0x80], rax",
    "mov     rax, qword [rbp-0x88]",
    "add     rax, 0x287",
    "cmp     r12, rdi",
    "mov     qword [rbp-0x90], rax",
    "jae     0xce18",
    "mov     rax, r12",
    "xor     edx, edx",
    "div     rdi",
    "test    rdx, rdx",
    "jne     0xce31",
    "mov     rax, qword [rbp-0x98]",
    "xor     edx, edx",
    "div     r12",
    "mov     rdi, rax",
    "test    rdx, rdx",
    "jne     0xce31",
    "mov     rax, qword [rbp-0x98]",
    "mov     qword [rbp-0xb0], r12",
    "fild    st0, qword [rbp-0xb0]",
    "mov     qword [rbp-0xb0], rax",
    "fild    st0, qword [rbp-0xb0]",
    "test    rax, rax",
    "js      0xd0f8",
    "mul     rbx",
    "mov     rcx, rax",
    "jno     0xd3b0",
    "mov     rax, rbx",
    "xor     edx, edx",
    "div     rdi",
    "mov     rcx, rax",
    "lea     rax, [rdx+rdx*4]",
    "xor     edx, edx",
    "add     rax, rax",
    "div     rdi",
    "add     rdx, rdx",
    "mov     r9d, eax",
    "cmp     rdx, rdi",
    "jae     0xd500",
    "fadd    dword [rel data_19014]",
    "jmp     0xce5b",
    "mov     qword [rbp-0xb0], rbx",
    "fdivp   st1, st0",
    "fild    st0, qword [rbp-0xb0]",
    "test    rbx, rbx",
    "js      0xd0e0",
    "mov     r12d, dword [rbp-0x78]",
    "xor     edi, edi",
    "xor     r9d, r9d",
    "and     r12d, 0x10",
    "jne     0xccbf",
    "cmp     rdi, rdx",
    "setb    dil",
    "movzx   edi, dil",
    "add     edi, 0x2",
    "jmp     0xccb1",
    "xor     edi, edi",
    "test    rdx, rdx",
    "setne   dil",
    "fadd    dword [rel data_19014]",
    "fmulp   st1, st0",
    "test    byte [rbp-0x78], 0x10",
    "jne     0xce7f",
    "fmulp   st1, st0",
    "test    byte [rbp-0x78], 0x10",
    "je      0xd108",
    "mov     r11d, dword [rbp-0xb4]",
    "xor     r8d, r8d",
    "mov     r14, r11",
    "cmp     rcx, r11",
    "jae     0xd341",
    "mov     r8d, 0xffffffff",
    "jmp     0xccd5",
    "mov     r12d, dword [rbp-0x78]",
    "and     r12d, 0x10",
    "je      0xd3c3",
    "fild    st0, dword [rbp-0xb4]",
    "xor     r8d, r8d",
    "fld     st0, st0",
    "jmp     0xce94",
    "jmp     0xd108",
    "cmp     dword [rbp-0xa0], 0x1",
    "je      0xd1b8",
    "mov     rax, rcx",
    "xor     edx, edx",
    "mov     ecx, edi",
    "div     r11",
    "sar     ecx, 0x1",
    "mov     rbx, rax",
    "lea     eax, [rdx+rdx*4]",
    "xor     edx, edx",
    "lea     eax, [r9+rax*2]",
    "div     r14d",
    "lea     edx, [rcx+rdx*2]",
    "mov     r9d, eax",
    "mov     rcx, rbx",
    "add     edi, edx",
    "cmp     edx, r14d",
    "jb      0xd320",
    "cmp     dword [rbp-0xa0], 0x1",
    "mov     rbx, qword [rbp-0x90]",
    "je      0xd4d8",
    "fld     st0, st0",
    "add     r8d, 0x1",
    "fmul    st0, st2",
    "fxch    st0, st3",
    "fcomi   st0, st3",
    "jb      0xceb0",
    "sub     rsp, 0x10",
    "mov     rbx, qword [rbp-0x88]",
    "xor     eax, eax",
    "mov     rdx, 0xffffffffffffffff",
    "fstp    tword [rsp], st0",
    "lea     rcx, [rel data_1aede]  {\"%.0Lf\"}",
    "mov     esi, 0x2",
    "mov     rdi, rbx",
    "call    __sprintf_chk",
    "mov     rdi, rbx",
    "call    strlen",
    "pop     rdi",
    "pop     r8",
    "mov     r8d, 0xffffffff",
    "mov     rdx, rax",
    "mov     rbx, rax",
    "jmp     0xd278",
    "fld     st0, tword [rel data_1dae0]",
    "fcomip  st0, st1",
    "jbe     0xd1b8",
    "test    edi, edi",
    "setne   dil",
    "movzx   edi, dil",
    "cmp     r14d, edi",
    "setb    dil",
    "movzx   edi, dil",
    "add     edi, 0x2",
    "jmp     0xd32a",
    "mov     rax, rcx",
    "movsxd  rdi, edi",
    "and     eax, 0x1",
    "add     rax, rdi",
    "setne   al",
    "movzx   eax, al",
    "add     eax, r9d",
    "cmp     eax, 0x5",
    "jg      0xccfc",
    "mov     r10d, dword [rbp-0xa0]",
    "test    r10d, r10d",
    "jne     0xcd18",
    "fstp    st2, st0",
    "fstp    st2, st0",
    "cmp     r8d, 0xa",
    "jne     0xce90",
    "mov     r15, qword [rbp-0x90]",
    "mov     rsi, qword [rbp-0x88]",
    "mov     dword [rbp-0xa0], r8d",
    "sub     r15, rdx",
    "mov     rdi, r15",
    "add     rbx, r15",
    "call    memmove",
    "mov     r8d, dword [rbp-0xa0]",
    "fld     st0, dword [rel data_19018]",
    "fxch    st0, st1",
    "fcomi   st0, st1",
    "jae     0xd588",
    "mov     r10d, eax",
    "cmp     rbx, 0x9",
    "ja      0xccd5",
    "cmp     r8d, 0xa",
    "je      0xccd5",
    "add     r8d, 0x1",
    "cmp     rbx, r11",
    "jb      0xd628",
    "add     rcx, 0x1",
    "test    r12d, r12d",
    "je      0xcd18",
    "jmp     0xcd18",
    "mov     rsi, 0xcccccccccccccccd",
    "mov     r15, rbx",
    "nop     dword [rax]",
    "add     edi, r9d",
    "test    edi, edi",
    "jle     0xcd18",
    "sub     rsp, 0x10",
    "mov     dword [rbp-0xd0], r8d",
    "xor     eax, eax",
    "mov     r14, qword [rbp-0x88]",
    "fld     st0, st0",
    "fstp    tword [rsp], st0",
    "lea     rcx, [rel data_1aee4]  {\"%.1Lf\"}",
    "mov     esi, 0x2",
    "mov     rdx, 0xffffffffffffffff",
    "mov     rdi, r14",
    "fstp    tword [rbp-0xb0], st0",
    "call    __sprintf_chk",
    "mov     rdi, r14",
    "call    strlen",
    "mov     r8d, dword [rbp-0xd0]",
    "fld     st0, tword [rbp-0xb0]",
    "mov     rdx, rax",
    "pop     rax",
    "cmp     rbx, rdx",
    "pop     rcx",
    "jb      0xd550",
    "fld     st0, tword [rel data_1dae0]",
    "fcomip  st0, st1",
    "jbe     0xd200",
    "fstp    st1, st0",
    "fxch    st0, st2",
    "fstp    st2, st0",
    "fstp    st2, st0",
    "jmp     0xceb4",
    "mov     rdi, qword [rbp-0x80]",
    "mov     r14, rbx",
    "mov     dword [rbp-0xb0], r8d",
    "mov     r12, 0xffffffffffffffff",
    "sub     r14, r15",
    "call    strlen",
    "mov     ecx, 0x29",
    "mov     rdx, r14",
    "mov     rsi, r15",
    "lea     rdi, [rbp-0x70]",
    "mov     qword [rbp-0xa0], rax",
    "mov     r15, r12",
    "call    __memcpy_chk",
    "mov     rcx, rbx",
    "mov     r12, qword [rbp-0xa0]",
    "mov     rbx, r14",
    "mov     r14, rax",
    "jmp     0xcded",
    "test    byte [rbp-0x78], 0x80",
    "je      0xd2cf",
    "fnstcw  word [rbp-0x72]",
    "fsubr   st1, st0",
    "fxch    st0, st1",
    "movzx   eax, word [rbp-0x72]",
    "or      ah, 0xc",
    "mov     word [rbp-0x74], ax",
    "fldcw   word [rbp-0x74]",
    "fistp   qword [rbp-0xb0], st0",
    "fldcw   word [rbp-0x72]",
    "mov     rax, qword [rbp-0xb0]",
    "btc     rax, 0x3f",
    "jmp     0xd158",
    "fstp    st1, st0",
    "fnstcw  word [rbp-0x72]",
    "movzx   eax, word [rbp-0x72]",
    "or      ah, 0xc",
    "mov     word [rbp-0x74], ax",
    "fld     st0, st0",
    "fldcw   word [rbp-0x74]",
    "fistp   qword [rbp-0xb0], st0",
    "fldcw   word [rbp-0x72]",
    "mov     rax, qword [rbp-0xb0]",
    "cmp     dword [rbp-0xa0], 0x1",
    "je      0xd6e0",
    "mov     eax, dword [rbp-0xb4]",
    "cmp     rax, rcx",
    "je      0xd603",
    "mov     rax, rcx",
    "sub     r15, 0x1",
    "mul     rsi",
    "mov     rax, rcx",
    "shr     rdx, 0x3",
    "lea     rdi, [rdx+rdx*4]",
    "add     rdi, rdi",
    "sub     rax, rdi",
    "add     eax, 0x30",
    "mov     byte [r15], al",
    "mov     rax, rcx",
    "mov     rcx, rdx",
    "cmp     rax, 0x9",
    "ja      0xcd28",
    "test    byte [rbp-0x78], 0x4",
    "je      0xd2ac",
    "fld     st0, dword [rel data_1901c]",
    "fmul    st1, st0",
    "jmp     0xd088",
    "test    byte [rbp-0x78], 0x8",
    "jne     0xd380",
    "fld     st0, dword [rel data_19018]",
    "fxch    st0, st1",
    "fcomi   st0, st1",
    "jae     0xd518",
    "fdivrp  st1, st0",
    "cmp     dword [rbp-0xb8], 0x1",
    "lea     r15, [rsi+0x1]",
    "mov     rbx, rsi",
    "adc     rbx, 0x2",
    "cmp     dword [rbp-0xa0], 0x1",
    "je      0xd200",
    "movsx   rax, byte [r13]",
    "test    al, al",
    "je      0xcdb0",
    "mov     rax, qword [rbp-0x90]",
    "mov     byte [rax], 0x0",
    "mov     rax, qword [rbp-0x38]",
    "sub     rax, qword [fs:0x28]",
    "jne     0xd846",
    "cmp     r8d, 0xffffffff",
    "je      0xd3d0",
    "mov     r9d, dword [rbp-0xa0]",
    "test    r9d, r9d",
    "jne     0xd198",
    "fstp    st0, st0",
    "mov     qword [rbp-0xa0], rax",
    "fild    st0, qword [rbp-0xa0]",
    "test    rax, rax",
    "jns     0xd17c",
    "and     eax, 0x1",
    "add     eax, edi",
    "cmp     eax, 0x2",
    "jg      0xd65a",
    "mov     r11d, dword [rbp-0xa0]",
    "test    r11d, r11d",
    "jne     0xd6ee",
    "cmp     r8d, 0xa",
    "je      0xcd18",
    "nop     dword [rax]",
    "fdivp   st1, st0",
    "sub     rsp, 0x10",
    "mov     dword [rbp-0xa0], r8d",
    "xor     eax, eax",
    "mov     rbx, qword [rbp-0x88]",
    "mov     rdx, 0xffffffffffffffff",
    "mov     esi, 0x2",
    "lea     rcx, [rel data_1aede]  {\"%.0Lf\"}",
    "mov     rdi, rbx",
    "fstp    tword [rsp], st0",
    "call    __sprintf_chk",
    "mov     rdi, rbx",
    "call    strlen",
    "pop     rbx",
    "mov     r8d, dword [rbp-0xa0]",
    "mov     rdx, rax",
    "pop     r12",
    "mov     rbx, rax",
    "jmp     0xd278",
    "mov     rax, qword [rbp-0x88]",
    "cmp     byte [rax+rdx-0x1], 0x30",
    "jne     0xd270",
    "fstp    st0, st0",
    "jmp     0xd272",
    "fnstcw  word [rbp-0x72]",
    "fsubr   st1, st0",
    "fxch    st0, st1",
    "movzx   eax, word [rbp-0x72]",
    "or      ah, 0xc",
    "mov     word [rbp-0x74], ax",
    "fldcw   word [rbp-0x74]",
    "fistp   qword [rbp-0xb0], st0",
    "fldcw   word [rbp-0x72]",
    "mov     rax, qword [rbp-0xb0]",
    "btc     rax, 0x3f",
    "jmp     0xcf18",
    "fstp    st1, st0",
    "fnstcw  word [rbp-0x72]",
    "movzx   eax, word [rbp-0x72]",
    "or      ah, 0xc",
    "mov     word [rbp-0x74], ax",
    "fld     st0, st0",
    "fldcw   word [rbp-0x74]",
    "fistp   qword [rbp-0xb0], st0",
    "fldcw   word [rbp-0x72]",
    "mov     rax, qword [rbp-0xb0]",
    "cmp     r15, rbx",
    "cmova   r15, rbx",
    "sub     rbx, r15",
    "lea     rsi, [r14+rbx]",
    "cmp     al, 0x7e",
    "ja      0xd300",
    "call    __stack_chk_fail",
    "{ Does not return }",
    "lea     rsp, [rbp-0x28]",
    "mov     rax, r15",
    "pop     rbx",
    "pop     r12",
    "pop     r13",
    "pop     r14",
    "pop     r15",
    "pop     rbp",
    "retn    ",
    "mov     rcx, qword [rbp-0x98]",
    "cmp     rcx, 0x1",
    "jbe     0xd70f",
    "mov     eax, dword [rbp-0x78]",
    "and     eax, 0x100",
    "mov     ebx, eax",
    "or      ebx, r8d",
    "jne     0xd488",
    "fadd    dword [rel data_19014]",
    "nop     word [rax+rax]",
    "xor     edx, edx",
    "mov     ecx, 0x1",
    "fucomip st0, st1",
    "fstp    st0, st0",
    "setpe   dl",
    "cmovne  rdx, rcx",
    "add     rax, rdx",
    "jmp     0xd19a",
    "fadd    dword [rel data_19014]",
    "lea     eax, [r10+0x1]",
    "cmp     r10d, 0x9",
    "je      0xd76a",
    "test    r10d, r10d",
    "jne     0xd7c8",
    "test    edi, edi",
    "je      0xd6ee",
    "add     r8d, 0x1",
    "test    byte [rbp-0x78], 0x8",
    "je      0xd782",
    "fstp    st0, st0",
    "fld     st0, dword [rel data_1901c]",
    "cmp     dword [rbp-0xa0], 0x1",
    "fmul    st1, st0",
    "jne     0xcfd5",
    "mov     rbx, rdx",
    "sub     rbx, r15",
    "mov     esi, dword [rbp-0xa0]",
    "test    esi, esi",
    "jne     0xcf4b",
    "mov     qword [rbp-0xb0], rax",
    "fild    st0, qword [rbp-0xb0]",
    "test    rax, rax",
    "jns     0xcf70",
    "mov     qword [rbp-0xb0], rax",
    "fild    st0, qword [rbp-0xb0]",
    "test    rax, rax",
    "js      0xd5f8",
    "mov     r8d, dword [rbp-0xb0]",
    "mov     r15, rax",
    "jmp     0xd2ac",
    "sub     rcx, r12",
    "mov     rsi, qword [rbp-0x80]",
    "mov     rdx, r12",
    "mov     rdi, rcx",
    "call    memcpy",
    "mov     rcx, rax",
    "mov     r15, rbx",
    "mov     rsi, r14",
    "xor     ebx, ebx",
    "jmp     0xce0f",
    "cmp     rax, rbx",
    "cmova   rax, rbx",
    "sub     rbx, rax",
    "mov     r15, rax",
    "lea     rsi, [r14+rbx]",
    "xor     r8d, r8d",
    "jmp     0xd2bc",
    "mov     edx, dword [rbp-0xb4]",
    "mov     r8d, 0x1",
    "mov     eax, 0x1",
    "nop     word [rax+rax]",
    "test    byte [rbp-0x78], 0x40",
    "je      0xd4aa",
    "mov     qword [rbp-0xa0], rax",
    "fild    st0, qword [rbp-0xa0]",
    "test    rax, rax",
    "jns     0xd1b8",
    "lea     rcx, [rbx+0x1]",
    "xor     edi, edi",
    "cmp     rbx, 0x9",
    "jne     0xd6f7",
    "lea     r10d, [rax+0x30]",
    "add     r10d, 0x30",
    "jmp     0xd66c",
    "mov     rbx, qword [rbp-0x90]",
    "test    byte [rbp-0x78], 0x8",
    "jne     0xd6a9",
    "mov     rax, rsi",
    "mov     byte [rbx-0x1], 0x30",
    "not     rax",
    "add     rbx, rax",
    "mov     eax, esi",
    "cmp     esi, 0x8",
    "jae     0xd7d1",
    "mov     byte [rbx-0x1], 0x31",
    "lea     r15, [rbx-0x1]",
    "jmp     0xd2a2",
    "fld     st0, tword [rel data_1dae0]",
    "fcomip  st0, st2",
    "jbe     0xd088",
    "jmp     0xd088",
    "fxch    st0, st1",
    "fadd    dword [rel data_19014]",
    "fxch    st0, st1",
    "jmp     0xcf72",
    "fadd    dword [rel data_19014]",
    "jmp     0xcf38",
    "xor     edx, edx",
    "mov     ecx, 0x1",
    "fucomip st0, st1",
    "setpe   dl",
    "cmovne  rdx, rcx",
    "add     rax, rdx",
    "add     r13, 0x1",
    "jmp     0xcdbe",
    "sub     rcx, r15",
    "mov     rdx, r15",
    "mov     rdi, rcx",
    "call    memcpy",
    "mov     rcx, rax",
    "test    rbx, rbx",
    "je      0xd310",
    "mov     ebx, dword [rbp-0x78]",
    "mov     eax, ebx",
    "and     eax, 0x100",
    "and     ebx, 0x40",
    "je      0xd436",
    "add     r8d, 0x1",
    "cmp     r8d, 0xa",
    "jne     0xd3f8",
    "test    r8d, r8d",
    "jne     0xd436",
    "mov     rsi, qword [rbp-0x88]",
    "lea     rbx, [rsi+0x288]",
    "mov     byte [rsi+0x287], 0x20",
    "mov     qword [rbp-0x90], rbx",
    "mov     rbx, qword [rbp-0x90]",
    "jmp     0xcd18",
    "mov     rax, qword [r15]",
    "lea     r9, [rbx+0x8]",
    "mov     r10, r15",
    "and     r9, 0xfffffffffffffff8",
    "mov     qword [rbx], rax",
    "mov     eax, esi",
    "mov     rdx, qword [r15+rax-0x8]",
    "mov     qword [rbx+rax-0x8], rdx",
    "mov     rax, rbx",
    "sub     rax, r9",
    "sub     r10, rax",
    "add     eax, esi",
    "and     eax, 0xfffffff8",
    "cmp     eax, 0x8",
    "jb      0xd6a7",
    "test    sil, 0x4",
    "jne     0xd820",
    "mov     rax, qword [rbp-0x88]",
    "mov     byte [rax+0x286], r10b",
    "sub     rax, rsi",
    "lea     rbx, [rax+0x286]",
    "mov     eax, esi",
    "cmp     esi, 0x8",
    "jae     0xd717",
    "xor     r9d, r9d",
    "cmp     dword [rbp-0xa0], 0x1",
    "jne     0xcce9",
    "mov     r10d, 0x30",
    "jmp     0xd66c",
    "mov     rax, qword [r15]",
    "lea     rcx, [rbx+0x8]",
    "mov     rdi, r15",
    "and     rcx, 0xfffffffffffffff8",
    "mov     qword [rbx], rax",
    "mov     eax, esi",
    "mov     rdx, qword [r15+rax-0x8]",
    "mov     qword [rbx+rax-0x8], rdx",
    "mov     rax, rbx",
    "sub     rax, rcx",
    "sub     rdi, rax",
    "add     eax, esi",
    "and     eax, 0xfffffff8",
    "cmp     eax, 0x8",
    "jb      0xd61b",
    "and     esi, 0x4",
    "jne     0xd833",
    "test    byte [rbp-0x78], 0x4",
    "jne     0xcd5f",
    "fld     st0, dword [rel data_19018]",
    "fxch    st0, st2",
    "fcomi   st0, st2",
    "jae     0xd5c0",
    "fld     st0, dword [rel data_1901c]",
    "fmul    st1, st0",
    "fstp    tword [rbp-0xd0], st0",
    "sub     rsp, 0x10",
    "xor     eax, eax",
    "mov     r14, qword [rbp-0x88]",
    "lea     rcx, [rel data_1aee4]  {\"%.1Lf\"}",
    "mov     rdx, 0xffffffffffffffff",
    "mov     esi, 0x2",
    "mov     dword [rbp-0xb0], r8d",
    "mov     rdi, r14",
    "fstp    tword [rsp], st0",
    "call    __sprintf_chk",
    "mov     rdi, r14",
    "call    strlen",
    "mov     r8d, dword [rbp-0xb0]",
    "fld     st0, tword [rbp-0xd0]",
    "mov     rdx, rax",
    "pop     rax",
    "cmp     rbx, rdx",
    "pop     rcx",
    "jae     0xd25d",
    "mov     rbx, qword [rbp-0x90]",
    "lea     rdx, [rbx+0x1]",
    "cmp     r8d, 0x1",
    "jne     0xd455",
    "mov     rsi, qword [rbp-0x88]",
    "lea     rbx, [rsi+0x288]",
    "mov     byte [rsi+0x287], 0x20",
    "mov     qword [rbp-0x90], rbx",
    "imul    rax, rdx",
    "cmp     rax, rcx",
    "jae     0xd40b",
    "test    eax, eax",
    "je      0xd2cf",
    "xor     edi, edi",
    "and     eax, 0xfffffff8",
    "xor     r11d, r11d",
    "mov     edx, dword [r15]",
    "mov     dword [rbx], edx",
    "mov     edx, dword [r15+rax-0x4]",
    "mov     dword [rbx+rax-0x4], edx",
    "jmp     0xd6a7",
    "test    eax, eax",
    "je      0xd6a7",
    "jmp     0xcd18",
    "and     eax, 0xfffffff8",
    "xor     edx, edx",
    "mov     edx, dword [r15]",
    "mov     dword [rbx], edx",
    "mov     edx, dword [r15+rax-0x4]",
    "mov     dword [rbx+rax-0x4], edx",
    "jmp     0xd61b",
    "test    eax, eax",
    "je      0xd61b",
    "fnstcw  word [rbp-0x72]",
    "fsubr   st2, st0",
    "fxch    st0, st2",
    "movzx   eax, word [rbp-0x72]",
    "or      ah, 0xc",
    "mov     word [rbp-0x74], ax",
    "fldcw   word [rbp-0x74]",
    "fistp   qword [rbp-0xb0], st0",
    "fldcw   word [rbp-0x72]",
    "fxch    st0, st1",
    "mov     rax, qword [rbp-0xb0]",
    "btc     rax, 0x3f",
    "jmp     0xd01a",
    "fstp    st2, st0",
    "fxch    st0, st1",
    "fnstcw  word [rbp-0x72]",
    "movzx   eax, word [rbp-0x72]",
    "or      ah, 0xc",
    "mov     word [rbp-0x74], ax",
    "fld     st0, st0",
    "fldcw   word [rbp-0x74]",
    "fistp   qword [rbp-0xb0], st0",
    "fldcw   word [rbp-0x72]",
    "mov     rax, qword [rbp-0xb0]",
    "movsxd  r8, r8d",
    "lea     rcx, [rel data_195e8]",
    "mov     rbx, qword [rbp-0x90]",
    "movzx   ecx, byte [rcx+r8]",
    "mov     byte [rbx], cl",
    "test    eax, eax",
    "jne     0xd560",
    "mov     edi, dword [rbp-0xb8]",
    "test    edi, edi",
    "je      0xd6d0",
    "mov     rdx, qword [rbp-0x90]",
    "mov     edx, r11d",
    "add     r11d, 0x8",
    "mov     rdi, qword [r10+rdx]",
    "mov     qword [r9+rdx], rdi",
    "cmp     r11d, eax",
    "jb      0xd751",
    "jmp     0xd6a7",
    "movzx   edx, byte [r15]",
    "mov     byte [rbx], dl",
    "test    al, 0x2",
    "jne     0xd6be",
    "mov     esi, edx",
    "add     edx, 0x8",
    "mov     r9, qword [rdi+rsi]",
    "mov     qword [rcx+rsi], r9",
    "cmp     edx, eax",
    "jb      0xd80a",
    "jmp     0xd61b",
    "movzx   edx, byte [r15]",
    "mov     byte [rbx], dl",
    "test    al, 0x2",
    "je      0xd61b",
    "mov     r14d, dword [rbp-0xa0]",
    "test    r14d, r14d",
    "jne     0xd058",
    "fstp    st0, st0",
    "mov     qword [rbp-0xa0], rax",
    "fild    st0, qword [rbp-0xa0]",
    "test    rax, rax",
    "jns     0xd03e",
    "mov     esi, dword [rbp-0xb8]",
    "test    esi, esi",
    "je      0xd4be",
    "mov     qword [rbp-0x90], rdx",
    "jmp     0xd2cf",
    "mov     byte [rbx], 0x6b",
    "test    eax, eax",
    "jne     0xd4be",
    "movzx   edx, word [r15+rax-0x2]",
    "mov     word [rbx+rax-0x2], dx",
    "jmp     0xd6a7",
    "movzx   edx, word [r15+rax-0x2]",
    "mov     word [rbx+rax-0x2], dx",
    "jmp     0xd61b",
    "fxch    st0, st1",
    "nop     word [rax+rax]",
    "fadd    dword [rel data_19014]",
    "fxch    st0, st1",
    "jmp     0xd088",
    "xor     edx, edx",
    "mov     ecx, 0x1",
    "fucomip st0, st1",
    "fstp    st0, st0",
    "setpe   dl",
    "cmovne  rdx, rcx",
    "add     rax, rdx",
    "jmp     0xd05a",
    "fadd    dword [rel data_19014]",
    "lea     rax, [rdx+0x1]",
    "mov     byte [rdx], 0x42",
    "mov     qword [rbp-0x90], rax",
    "jmp     0xd2cf",
    "mov     rax, qword [rbp-0x90]",
    "mov     byte [rax+0x1], 0x69",
    "lea     rdx, [rax+0x2]",
    "jmp     0xd4be",
    "jmp     0xd475",
    "mov     qword [rbp-0xa0], rax",
    "fild    st0, qword [rbp-0xa0]",
    "test    rax, rax",
    "jns     0xd080"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}