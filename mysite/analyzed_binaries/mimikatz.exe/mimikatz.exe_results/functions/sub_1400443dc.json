{
  "address": "0x1400443dc",
  "rules": [
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "contain loop",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "mov     r14d, r8d",
    "mov     rsi, rdx",
    "mov     r12, rcx",
    "test    rdx, rdx",
    "jne     0x14004440d",
    "mov     eax, dword [rdx]",
    "test    eax, eax",
    "jle     0x14004441e",
    "xor     eax, eax",
    "jmp     0x140044550",
    "xor     ecx, ecx",
    "dec     eax",
    "movsxd  rcx, eax",
    "imul    rcx, rcx, 0x70",
    "jmp     0x140044420",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rbp, qword [rsp+0x58]",
    "mov     rsi, qword [rsp+0x60]",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     eax, dword [rsi]",
    "xor     r13d, r13d",
    "mov     dword [rbp+0x4], eax",
    "mov     dword [rbp], eax",
    "cmp     dword [rsi], r13d",
    "jle     0x14004454d",
    "lea     eax, [rcx+0x78]",
    "mov     rcx, r12",
    "movsxd  rdx, eax",
    "call    sub_140016c18",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140044406",
    "mov     rax, rbp",
    "mov     r15, rsi",
    "lea     rdi, [rsi+0x20]",
    "lea     rbx, [rbp+0x10]",
    "sub     r15, rbp",
    "test    byte [rbx+0x38], 0x4",
    "mov     rax, qword [rdi+0x50]",
    "mov     qword [rbx+0x60], rax",
    "je      0x1400444df",
    "mov     rdx, qword [rdi+0x48]",
    "mov     rcx, r12",
    "call    sub_140016dac",
    "mov     qword [rbx+0x58], rax",
    "mov     rax, qword [rdi+0x8]",
    "mov     qword [rbx+0x18], rax",
    "test    rax, rax",
    "je      0x1400444ef",
    "mov     rdx, qword [rdi+0x48]",
    "mov     r8d, r14d",
    "mov     rcx, r12",
    "call    sub_140044284",
    "mov     qword [rbx+0x58], rax",
    "mov     rdx, qword [rdi+0x10]",
    "mov     r8d, r14d",
    "mov     rcx, r12",
    "call    sub_14004463c",
    "mov     qword [rbx+0x20], rax",
    "mov     rdx, qword [rdi+0x30]",
    "test    rdx, rdx",
    "je      0x14004451b",
    "inc     dword [rax+0x3c]",
    "xor     eax, eax",
    "xor     r9d, r9d",
    "mov     r8d, r14d",
    "mov     rcx, r12",
    "call    sub_140043fa4",
    "jmp     0x14004451d",
    "mov     rax, qword [rdi-0x18]",
    "mov     rcx, r12",
    "mov     qword [rbx-0x8], rax",
    "mov     rdx, qword [r15+rbx]",
    "call    sub_140016dac",
    "mov     rcx, r12",
    "mov     qword [rbx], rax",
    "mov     rdx, qword [rdi-0x8]",
    "call    sub_140016dac",
    "mov     rcx, r12",
    "mov     qword [rbx+0x8], rax",
    "mov     rdx, qword [rdi]",
    "call    sub_140016dac",
    "mov     qword [rbx+0x10], rax",
    "mov     rax, qword [rdi+0x24]",
    "mov     qword [rbx+0x34], rax",
    "test    byte [rbx+0x38], 0x2",
    "mov     eax, dword [rdi+0x2c]",
    "mov     dword [rbx+0x3c], eax",
    "mov     eax, dword [rdi+0x18]",
    "mov     dword [rbx+0x28], eax",
    "mov     eax, dword [rdi+0x1c]",
    "mov     dword [rbx+0x2c], eax",
    "je      0x1400444be",
    "mov     qword [rbx+0x40], rax",
    "mov     rdx, qword [rdi+0x38]",
    "mov     rcx, r12",
    "call    sub_140044570",
    "inc     r13d",
    "add     rbx, 0x70",
    "mov     qword [rbx-0x28], rax",
    "mov     rax, qword [rdi+0x40]",
    "add     rdi, 0x70",
    "mov     qword [rbx-0x20], rax",
    "cmp     r13d, dword [rsi]",
    "jl      0x140044458"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}