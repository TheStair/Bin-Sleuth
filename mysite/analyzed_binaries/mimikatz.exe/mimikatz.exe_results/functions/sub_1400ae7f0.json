{
  "address": "0x1400ae7f0",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "write file on Windows/035d57bed47747649158312e9532f27d"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r14",
    "sub     rsp, 0x50",
    "and     qword [rax-0x48], 0x0",
    "lea     r14, [rel data_14011b870]  {u\"long\"}",
    "xor     r9d, r9d",
    "mov     r8, r14",
    "mov     rbx, rdx",
    "mov     r12d, ecx",
    "call    sub_140013220",
    "lea     rcx, [rel data_14011b880]  {u\"\\nNedap XS encoder\\n\\n\"}",
    "mov     ebp, eax",
    "call    sub_14000c030",
    "lea     r11, [rel data_14011b8a8]",
    "lea     r9, [rsp+0x80]",
    "lea     r8, [rel data_14011b8b0]",
    "mov     rdx, rbx",
    "mov     ecx, r12d",
    "mov     qword [rsp+0x20], r11",
    "call    sub_140013220",
    "mov     rcx, qword [rsp+0x80]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "call    qword [rel wcstoul]",
    "mov     esi, eax",
    "cmp     eax, 0x10",
    "jae     0x1400ae9f0",
    "lea     rcx, [rel data_14011bc20]  {u\"ERROR kuhl_m_sr98_nedap ; SubTyp\u2026\"}",
    "movzx   edx, al",
    "lea     rcx, [rel data_14011b8b8]  {u\" * SubType     : %hhu (0x%1x)\\n\"}",
    "mov     r8d, edx",
    "call    sub_14000c030",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x80]",
    "lea     r8, [rel data_14011b8f8]",
    "mov     rdx, rbx",
    "mov     ecx, r12d",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400ae9e2",
    "lea     rcx, [rel data_14011bbb0]  {u\"ERROR kuhl_m_sr98_nedap ; Custom\u2026\"}",
    "mov     rcx, qword [rsp+0x80]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "call    qword [rel wcstoul]",
    "mov     edi, eax",
    "cmp     eax, 0x1000",
    "jae     0x1400ae9d9",
    "lea     r11, [rsp+0x50]",
    "xor     eax, eax",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x28]",
    "mov     rsi, qword [r11+0x38]",
    "mov     rsp, r11",
    "pop     r14",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "lea     rcx, [rel data_14011bae0]  {u\"ERROR kuhl_m_sr98_nedap ; Custom\u2026\"}",
    "jmp     0x1400ae9f7",
    "movzx   edx, ax",
    "lea     rcx, [rel data_14011b900]  {u\" * CustomerCode: %hu (0x%03x)\\n\"}",
    "mov     r8d, edx",
    "call    sub_14000c030",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x80]",
    "lea     r8, [rel data_1400f9d10]",
    "mov     rdx, rbx",
    "mov     ecx, r12d",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400ae9d0",
    "mov     edx, eax",
    "mov     r8d, eax",
    "lea     rcx, [rel data_14011ba70]  {u\"ERROR kuhl_m_sr98_nedap ; CardNu\u2026\"}",
    "jmp     0x1400ae9e9",
    "mov     rcx, qword [rsp+0x80]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "call    qword [rel wcstoul]",
    "lea     rcx, [rel data_14011b940]  {u\" * CardNumber  : %u (0x%08x)\\n\"}",
    "mov     r8d, eax",
    "mov     edx, eax",
    "mov     ebx, eax",
    "call    sub_14000c030",
    "test    ebx, ebx",
    "je      0x1400ae9c2",
    "call    sub_14000c030",
    "jmp     0x1400aea01",
    "mov     r8d, ebx",
    "mov     edx, ebx",
    "lea     rcx, [rel data_14011b9d0]  {u\"ERROR kuhl_m_sr98_nedap ; CardNu\u2026\"}",
    "jmp     0x1400ae9fc",
    "lea     rcx, [rsp+0x30]",
    "movzx   r9d, di",
    "mov     r8b, sil",
    "mov     dl, bpl",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_1400af324",
    "lea     rcx, [rel data_14011b980]  {u\" * Nedap       : \"}",
    "call    sub_14000c030",
    "mov     al, bpl",
    "mov     dil, 0x1",
    "neg     al",
    "sbb     ebx, ebx",
    "and     ebx, 0x2",
    "add     ebx, 0x3",
    "cmp     ebx, 0x1",
    "jle     0x1400ae991",
    "call    sub_14000c030",
    "lea     rdx, [rel data_14011b9a8]  {u\"short\"}",
    "test    bpl, bpl",
    "lea     rcx, [rel data_14011b9b8]  {u\" (%s)\\n\"}",
    "cmovne  rdx, r14",
    "call    sub_14000c030",
    "neg     bpl",
    "lea     rcx, [rsp+0x30]",
    "sbb     dl, dl",
    "and     dl, 0x2",
    "add     dl, 0x3",
    "call    sub_1400aea20",
    "jmp     0x1400aea01",
    "movzx   eax, dil",
    "lea     rcx, [rel data_14011b668]  {u\"%08x\"}",
    "mov     edx, dword [rsp+rax*4+0x30]",
    "call    sub_14000c030",
    "inc     dil",
    "movzx   eax, dil",
    "cmp     eax, ebx",
    "jl      0x1400ae972"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}