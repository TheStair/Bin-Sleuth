{
  "address": "0x14006c710",
  "rules": [
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "load assembly via IAssembly/08d07504566140e580f88ed84a643e72"
  ],
  "disassembly": [
    "mov     dword [rsp+0x20], r9d",
    "mov     qword [rsp+0x18], r8",
    "mov     qword [rsp+0x10], rdx",
    "push    rbp",
    "push    rbx",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x78",
    "lea     rbp, [rsp+0x30]",
    "mov     rax, qword [rcx+0x90]",
    "mov     r15, qword [rcx]",
    "mov     rbx, rcx",
    "test    rax, rax",
    "mov     rsi, rdx",
    "mov     r12, rcx",
    "cmovne  rbx, rax",
    "and     dword [rbp+0x90], 0x0",
    "mov     edx, 0x28",
    "mov     rcx, r15",
    "mov     edi, r9d",
    "mov     qword [rbp], rbx",
    "call    sub_140016ba8",
    "mov     r14, rax",
    "test    rax, rax",
    "jne     0x14006c778",
    "mov     rax, qword [rbx+0x170]",
    "mov     edx, 0x30",
    "mov     rcx, r15",
    "mov     qword [r14+0x8], rax",
    "mov     qword [rbx+0x170], r14",
    "call    sub_140016ba8",
    "mov     r13, rax",
    "mov     qword [r14+0x10], rax",
    "test    rax, rax",
    "je      0x14006c771",
    "\u2753\ufe0fxor     eax, eax",
    "jmp     0x14006c9f4",
    "mov     rcx, qword [rbx+0x10]",
    "mov     rax, qword [rcx+0x118]",
    "mov     qword [r13+0x28], rax",
    "mov     qword [rcx+0x118], r13",
    "or      eax, 0xffffffff",
    "mov     dword [r14+0x1c], eax",
    "mov     dword [r14+0x20], eax",
    "mov     eax, dword [rsp]",
    "mov     qword [r14], rsi",
    "mov     dword [r14+0x18], edi",
    "mov     r8d, 0x190",
    "sub     rsp, r8",
    "lea     rbx, [rsp+0x30]",
    "mov     eax, dword [rbx]",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "call    memset",
    "mov     rdi, rbx",
    "test    rbx, rbx",
    "je      0x14006c771",
    "\u2753\ufe0flea     rsp, [rbp+0x48]",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbx",
    "pop     rbp",
    "retn    ",
    "xor     edx, edx",
    "lea     rcx, [rbp+0x8]",
    "lea     r8d, [rdx+0x38]",
    "call    memset",
    "mov     rax, qword [rbp+0xa0]",
    "mov     qword [rbp+0x8], rbx",
    "mov     qword [rbx+0x98], rax",
    "mov     rax, qword [rbp]",
    "mov     qword [rbx], r15",
    "mov     qword [rbx+0x90], rax",
    "mov     rax, qword [rsi]",
    "mov     rcx, rbx",
    "mov     qword [rbx+0x148], rax",
    "mov     al, byte [rsi+0x10]",
    "mov     byte [rbx+0xb8], al",
    "mov     eax, dword [r12+0xac]",
    "mov     dword [rbx+0xac], eax",
    "mov     al, byte [r12+0x25]",
    "mov     byte [rbx+0x25], al",
    "call    sub_140065300",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x14006c9e9",
    "mov     rcx, rdi",
    "call    sub_1400623a0",
    "mov     rax, r14",
    "mov     r8, qword [rbp+0x98]",
    "mov     rax, qword [r8]",
    "test    rax, rax",
    "je      0x14006c898",
    "mov     rdx, qword [r8+0x18]",
    "test    rdx, rdx",
    "je      0x14006c8fe",
    "lea     rdx, [rel data_1400f6f80]  {\"-- TRIGGER %s\"}",
    "mov     r8, rax",
    "mov     rcx, r15",
    "call    _printf_p_l",
    "mov     r9d, 0xfffffff9",
    "or      edx, 0xffffffff",
    "mov     r8, rax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "mov     r8, qword [rbp+0x98]",
    "mov     rdx, qword [rbp+0x98]",
    "mov     r8d, dword [rbp+0xa8]",
    "mov     rcx, rdi",
    "mov     rdx, qword [rdx+0x38]",
    "call    sub_14006c424",
    "mov     eax, dword [rbp+0x90]",
    "test    eax, eax",
    "je      0x14006c92c",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, r15",
    "call    sub_140043fa4",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14006c8c7",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "lea     edx, [r9+0x45]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "cmp     dword [r12+0x30], 0x0",
    "jne     0x14006c966",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_14003278c",
    "cmp     byte [r15+0x61], 0x0",
    "jne     0x14006c8ee",
    "lea     rcx, [rbp+0x8]",
    "mov     rdx, rax",
    "call    sub_140042da4",
    "test    eax, eax",
    "jne     0x14006c8ee",
    "mov     rdx, qword [rdi+0x8]",
    "test    rdx, rdx",
    "je      0x14006c977",
    "mov     rax, qword [rdi+0x8]",
    "mov     qword [r12+0x8], rax",
    "mov     eax, dword [rdi+0x30]",
    "mov     dword [r12+0x30], eax",
    "mov     eax, dword [rdi+0x18]",
    "mov     dword [r12+0x18], eax",
    "jmp     0x14006c977",
    "test    rbx, rbx",
    "je      0x14006c8fe",
    "dec     dword [rdi+0x44]",
    "mov     eax, dword [rdi+0x44]",
    "mov     r9d, 0x10",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "mov     r8d, eax",
    "mov     dword [rbp+0x90], eax",
    "call    sub_1400485c0",
    "cmp     byte [r15+0x61], 0x0",
    "jne     0x14006c9b4",
    "mov     rcx, qword [rdi]",
    "call    sub_1400169a8",
    "mov     rdx, rbx",
    "mov     rcx, r15",
    "call    sub_140043de4",
    "mov     eax, dword [rdi+0x38]",
    "mov     rcx, rsi",
    "mov     dword [r13+0xc], eax",
    "mov     eax, dword [rdi+0x34]",
    "mov     dword [r13+0x10], eax",
    "mov     rax, qword [rbp+0x98]",
    "mov     qword [r13+0x20], rax",
    "mov     eax, dword [rdi+0xb0]",
    "mov     dword [r14+0x1c], eax",
    "mov     eax, dword [rdi+0xb4]",
    "mov     dword [r14+0x20], eax",
    "call    sub_1400348b0",
    "cmp     dword [r12+0x30], 0x0",
    "jne     0x14006c9b4",
    "mov     rdx, qword [rbp]",
    "mov     rbx, qword [rsi+0x88]",
    "mov     rcx, rsi",
    "sub     rdx, 0xffffffffffffff80",
    "call    sub_1400327c4",
    "mov     r11d, dword [rsi+0x90]",
    "mov     dword [r13+0x8], r11d",
    "and     qword [rsi+0x88], 0x0",
    "mov     qword [r13], rbx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}