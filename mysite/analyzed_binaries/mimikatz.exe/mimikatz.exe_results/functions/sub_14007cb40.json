{
  "address": "0x14007cb40",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "mov     dword [rsp+0x20], r9d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "and     dword [rsp+0x34], 0x0",
    "mov     rdi, qword [rcx]",
    "mov     rbp, qword [rcx+0x8]",
    "mov     rsi, qword [rcx+0x10]",
    "xor     eax, eax",
    "cmp     byte [rbp+0x20], 0x4c",
    "setne   al",
    "dec     dword [rdi+0x44]",
    "mov     r14d, dword [rdi+0x44]",
    "and     dword [rsp+0x30], 0x0",
    "mov     r15d, 0x2",
    "mov     r12d, r8d",
    "mov     dword [rsp+0x88], r14d",
    "mov     r13d, edx",
    "mov     rbx, rcx",
    "mov     dword [rsp+0x80], eax",
    "cmp     edx, r15d",
    "jne     0x14007cbae",
    "test    r8d, r8d",
    "jle     0x14007cc2a",
    "cmp     byte [rbp+0x21], 0x5a",
    "jne     0x14007cbae",
    "cmp     r13d, 0x1",
    "jne     0x14007cc43",
    "cmp     byte [rbp+0x20], 0x59",
    "jne     0x14007cc12",
    "xor     eax, eax",
    "jmp     0x14007cf2a",
    "mov     eax, dword [rsi+0x90]",
    "mov     dword [rsp+0x38], eax",
    "mov     al, byte [rbp+0x22]",
    "cmp     byte [rbp+0x21], al",
    "jne     0x14007cd41",
    "cmp     dword [rbp+0x84], 0x0",
    "jne     0x14007cc43",
    "mov     r9d, r14d",
    "mov     edx, 0x2f",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], 0x1",
    "call    sub_140032364",
    "mov     eax, dword [rsi+0x90]",
    "mov     dword [rsp+0x28], r14d",
    "mov     r9d, r8d",
    "mov     dword [rsp+0x30], eax",
    "cmp     edx, r15d",
    "jne     0x14007cbfb",
    "mov     rbx, qword [rsp+0x90]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     ecx, r13d",
    "sub     ecx, 0x1",
    "je      0x14007cdb6",
    "test    r12d, r12d",
    "je      0x14007cd41",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "call    sub_14007bf30",
    "mov     eax, dword [rcx+0x30]",
    "mov     r8d, dword [rcx+0x38]",
    "mov     edx, 0x36",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14007c89c",
    "jmp     0x14007cc2a",
    "cmp     byte [rbp+0x21], 0x56",
    "jne     0x14007cbed",
    "mov     r12d, dword [rbx+0x30]",
    "mov     r15d, dword [rbx+0x34]",
    "mov     rcx, rbx",
    "call    sub_14007c420",
    "cmp     ecx, 0x1",
    "je      0x14007cd85",
    "cmp     byte [rbp+0x20], 0x59",
    "jne     0x14007cd41",
    "mov     eax, dword [rcx+0x30]",
    "mov     r8d, dword [rcx+0x28]",
    "mov     edx, 0x39",
    "jmp     0x14007cbe2",
    "mov     eax, dword [rcx+0x28]",
    "mov     r8d, dword [rcx+0x30]",
    "mov     edx, 0x37",
    "mov     edx, 0x2",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, r12d",
    "lea     edx, [r9+0x7b]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "movsxd  r11, dword [rsi+0x90]",
    "mov     edx, 0x2",
    "test    r11d, r11d",
    "jle     0x14007ce0b",
    "mov     r8d, dword [rbp+0x84]",
    "mov     r12d, dword [rbx+0x28]",
    "mov     r15d, dword [rbx+0x2c]",
    "mov     r9d, 0x1",
    "test    r8d, r8d",
    "jne     0x14007cd6c",
    "cmp     dword [rbp+0x84], 0x0",
    "mov     r12d, dword [rbx+0x38]",
    "mov     r15d, dword [rbx+0x3c]",
    "je      0x14007cd80",
    "cmp     r13d, r15d",
    "jne     0x14007cd41",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14007c89c",
    "jmp     0x14007cc43",
    "mov     eax, dword [rsi+0x90]",
    "mov     r13d, dword [rsp+0x80]",
    "mov     edx, 0x5",
    "lea     r9d, [rax+r13+0x1]",
    "call    sub_140032364",
    "test    r13d, r13d",
    "je      0x14007cef8",
    "mov     r9d, dword [rsi+0x90]",
    "add     r9d, edx",
    "mov     edx, 0x5",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0xb]",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r13d, dword [rsp+0x80]",
    "mov     dword [rsp+0x34], eax",
    "jmp     0x14007ce92",
    "and     dword [rsp+0x20], 0x0",
    "cmp     dword [rsp+0x98], 0x0",
    "mov     r8d, r12d",
    "mov     rcx, rsi",
    "je      0x14007ce59",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "mov     word [rax+rcx*8-0x16], dx",
    "jmp     0x14007ce0b",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0x53",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "jmp     0x14007cdc6",
    "mov     eax, dword [rbx+0x20]",
    "mov     r8d, r12d",
    "mov     rdx, rbp",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14007bae0",
    "jmp     0x14007cdc6",
    "xor     r9d, r9d",
    "jmp     0x14007cd9f",
    "mov     r8d, dword [rbp+0x88]",
    "mov     r9d, 0x1",
    "mov     al, byte [rdi+0x1f]",
    "test    al, al",
    "jne     0x14007cc85",
    "mov     eax, dword [rsp+0x30]",
    "test    eax, eax",
    "je      0x14007cf17",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "mov     r9d, r14d",
    "lea     edx, [r8+0xb]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "test    r13d, r13d",
    "je      0x14007cef8",
    "cmp     r13d, dword [rbx+0x24]",
    "jne     0x14007ce06",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rdi+0x1f], al",
    "mov     r14d, dword [rdi+rax*4+0xbc]",
    "inc     dword [rdi+0x38]",
    "mov     r14d, dword [rdi+0x38]",
    "jmp     0x14007cc95",
    "mov     edx, dword [rsp+0x88]",
    "mov     rcx, rsi",
    "call    sub_14003278c",
    "mov     eax, dword [rsp+0x34]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "mov     r9d, eax",
    "lea     edx, [r8+0xb]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     rax, qword [rbp+0x18]",
    "test    rax, rax",
    "je      0x14007cea5",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rdi+0x1f], al",
    "mov     r12d, dword [rdi+rax*4+0xbc]",
    "inc     dword [rdi+0x38]",
    "mov     r12d, dword [rdi+0x38]",
    "jmp     0x14007ccb5",
    "mov     al, byte [rdi+0x1f]",
    "test    al, al",
    "jne     0x14007cca5",
    "xor     r13d, r13d",
    "mov     r13d, dword [rax]",
    "jmp     0x14007cea8",
    "mov     r14d, dword [rsp+0x88]",
    "test    r12d, r12d",
    "je      0x14007cd41",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x14007cd1f",
    "mov     r8d, dword [rbx+0x28]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r15d, 0x80",
    "mov     edx, r15d",
    "mov     r9d, r14d",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r8d, dword [rbx+0x38]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r12d",
    "mov     edx, r15d",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x88]",
    "lea     edx, [r15-0x47]",
    "mov     r8d, r12d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "test    r14d, r14d",
    "je      0x14007cd1f",
    "xor     r14d, r14d",
    "mov     edx, r13d",
    "mov     rcx, rdi",
    "call    sub_140049624",
    "mov     r14d, eax",
    "jmp     0x14007cec0",
    "test    r13d, r13d",
    "je      0x14007cebd",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x14007cd41",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], r14d",
    "inc     byte [rdi+0x1f]",
    "mov     r8d, r14d",
    "mov     edx, r12d",
    "mov     rcx, rbx",
    "call    sub_14007ba50",
    "mov     r11d, dword [rsp+0x38]",
    "mov     rdx, qword [rbp+0x18]",
    "mov     r9d, r15d",
    "mov     r8d, r14d",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], r11d",
    "call    sub_14007c7c0",
    "mov     r8d, r13d",
    "mov     edx, r14d",
    "mov     rcx, rdi",
    "call    sub_140049678",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], r12d",
    "inc     byte [rdi+0x1f]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}