{
  "address": "0x14002edb8",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x30",
    "mov     rsi, qword [rcx+0x8]",
    "and     qword [rsp+0x60], 0x0",
    "mov     r12, r8",
    "mov     ebx, edx",
    "mov     r13, rcx",
    "cmp     edx, dword [rsi+0x3c]",
    "jbe     0x14002edee",
    "lea     r8, [rsp+0x60]",
    "xor     r9d, r9d",
    "mov     rcx, rsi",
    "call    sub_1400277d8",
    "test    eax, eax",
    "jne     0x14002ef9c",
    "mov     ecx, 0x11bf6",
    "call    sub_140084e38",
    "jmp     0x14002ef9c",
    "mov     rbx, qword [rsp+0x70]",
    "add     rsp, 0x30",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "xor     r8d, r8d",
    "mov     edx, ebx",
    "mov     rcx, r13",
    "call    sub_14002ed34",
    "mov     edi, eax",
    "test    eax, eax",
    "je      0x14002ee30",
    "and     dword [r12], 0x0",
    "cmp     byte [rsi+0x21], 0x0",
    "je      0x14002ef7a",
    "mov     rcx, qword [rsp+0x60]",
    "test    rcx, rcx",
    "je      0x14002ef9a",
    "mov     rbx, qword [rsp+0x60]",
    "mov     rdx, rbx",
    "mov     r8d, dword [rbx+0x4]",
    "mov     rcx, qword [rbx+0x48]",
    "call    sub_14002af2c",
    "mov     rcx, qword [rbx+0x70]",
    "mov     edi, eax",
    "lea     r8, [rsp+0x68]",
    "mov     edx, 0x4",
    "mov     rcx, r13",
    "call    sub_14002efb0",
    "mov     edi, dword [rsp+0x68]",
    "cmp     ebx, edi",
    "jne     0x14002ee88",
    "mov     eax, edi",
    "mov     rcx, qword [rcx+0x70]",
    "jmp     0x14002ef95",
    "mov     rcx, qword [rsp+0x60]",
    "test    rcx, rcx",
    "je      0x14002ee9b",
    "mov     rbx, qword [rsp+0x60]",
    "mov     rdx, rbx",
    "mov     r8d, dword [rbx+0x4]",
    "mov     rcx, qword [rbx+0x48]",
    "call    sub_14002af2c",
    "mov     rcx, qword [rbx+0x70]",
    "mov     ebp, eax",
    "call    sub_14002242c",
    "test    ebp, ebp",
    "je      0x14002ef39",
    "call    sub_14002242c",
    "lea     r8, [rsp+0x60]",
    "xor     r9d, r9d",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "call    sub_1400277d8",
    "test    eax, eax",
    "jne     0x14002ef9c",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_14002242c",
    "or      r11d, 0xffffffff",
    "xor     edx, edx",
    "mov     eax, 0x40000000",
    "add     edi, r11d",
    "div     dword [rsi+0x30]",
    "lea     r10d, [rax+0x1]",
    "mov     eax, ebp",
    "jmp     0x14002ef9c",
    "and     dword [rsp+0x28], eax",
    "mov     rbp, qword [rsp+0x60]",
    "xor     r9d, r9d",
    "mov     r8b, 0x1",
    "mov     rcx, rsi",
    "mov     rdx, rbp",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140028afc",
    "mov     ebx, eax",
    "test    rbp, rbp",
    "je      0x14002eee3",
    "add     edi, r11d",
    "jmp     0x14002ef4e",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "call    sub_1400264c0",
    "cmp     eax, edi",
    "jne     0x14002ef66",
    "test    ebx, ebx",
    "je      0x14002eeee",
    "mov     rcx, qword [rbp+0x70]",
    "call    sub_14002242c",
    "cmp     edi, r10d",
    "je      0x14002ef61",
    "mov     r8d, edi",
    "mov     edx, 0x4",
    "mov     rcx, r13",
    "call    sub_14002f000",
    "mov     edi, eax",
    "jmp     0x14002ef9a",
    "and     qword [rsp+0x60], 0x0",
    "lea     r8, [rsp+0x60]",
    "xor     r9d, r9d",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "call    sub_1400277d8",
    "mov     rbp, qword [rsp+0x60]",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ef23",
    "mov     eax, ebx",
    "jmp     0x14002ef9c",
    "test    rbp, rbp",
    "je      0x14002ef31",
    "mov     r8d, dword [rbp+0x4]",
    "mov     rcx, qword [rbp+0x48]",
    "mov     rdx, rbp",
    "call    sub_14002af2c",
    "mov     ebx, eax",
    "test    ebx, ebx",
    "jne     0x14002eee7",
    "mov     rcx, qword [rbp+0x70]",
    "call    sub_14002242c",
    "mov     dword [r12], edi"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}