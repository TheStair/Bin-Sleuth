{
  "address": "0x14006f2cc",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "reference SQL statements",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "encrypt data using Curve25519/ba11e775237f4334901cb73b0f61e10d",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x60",
    "xor     r12d, r12d",
    "mov     r14, r9",
    "movsxd  rdi, r8d",
    "mov     rbx, rdx",
    "mov     rbp, rcx",
    "cmp     byte [rdx+0x5f], r12b",
    "jne     0x14006f313",
    "mov     esi, 0x1",
    "cmp     dword [rdx+0xc8], esi",
    "jle     0x14006f333",
    "lea     r8, [rel data_1400f7010]  {\"cannot VACUUM from within a tran\u2026\"}",
    "call    sub_140016eb4",
    "lea     eax, [r12+0x1]",
    "jmp     0x14006f757",
    "mov     r13d, dword [rdx+0x4c]",
    "lea     rcx, [rel __dos_header]",
    "test    r9, r9",
    "je      0x14006f379",
    "lea     r8, [rel data_1400f7038]  {\"cannot VACUUM - SQL statements i\u2026\"}",
    "lea     r11, [rsp+0x60]",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x40]",
    "mov     rsi, qword [r11+0x48]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "lea     r9, [rel data_1400f386c]",
    "movzx   eax, word [r9+0x8]",
    "and     eax, 0x3f",
    "cmp     byte [rax+rcx+0xd7190], 0x3",
    "je      0x14006f361",
    "mov     eax, dword [rsp+0x44]",
    "or      edx, 0xffffffff",
    "mov     r9d, esi",
    "mov     dword [rbx+0x2c], eax",
    "mov     rax, qword [rsp+0x58]",
    "mov     rcx, r15",
    "mov     qword [rbx+0x30], rax",
    "mov     eax, dword [rsp+0x40]",
    "mov     r8d, edx",
    "mov     dword [rbx+0x74], eax",
    "mov     eax, dword [rsp+0x48]",
    "mov     byte [rbx+0xb4], 0x0",
    "mov     dword [rbx+0x78], eax",
    "mov     al, byte [rsp+0x98]",
    "mov     byte [rbx+0x68], al",
    "call    sub_140027f38",
    "mov     byte [rbx+0x5f], sil",
    "test    r12, r12",
    "je      0x14006f74d",
    "movsxd  r12, dword [rsp+0x30]",
    "shl     r12, 0x5",
    "add     r12, qword [rbx+0x20]",
    "mov     r13, qword [r12+0x8]",
    "test    r14, r14",
    "je      0x14006f47a",
    "mov     dl, sil",
    "mov     rcx, r9",
    "call    sub_140031c84",
    "and     dword [rbx+0x4c], 0xfffffffe",
    "or      dword [rbx+0x4c], 0x6",
    "mov     r9, rax",
    "jmp     0x14006f380",
    "lea     r8, [rel data_1400f7068]  {\"non-text filename\"}",
    "mov     rcx, rbp",
    "jmp     0x14006f327",
    "mov     rcx, rbx",
    "call    sub_14004e348",
    "mov     eax, edi",
    "mov     rcx, qword [r12+0x8]",
    "call    sub_140027dd4",
    "and     qword [r12+0x8], 0x0",
    "and     qword [r12+0x18], 0x0",
    "mov     rax, qword [r15+0x8]",
    "mov     ecx, dword [rax+0x30]",
    "sub     ecx, dword [rax+0x34]",
    "mov     rax, qword [rbx+0x20]",
    "mov     dword [rsp+0x28], ecx",
    "mov     rcx, qword [rsp+0x50]",
    "mov     rcx, qword [rax+rcx+0x18]",
    "mov     edx, dword [rcx+0x74]",
    "mov     rcx, r13",
    "call    sub_140027e80",
    "xor     edx, edx",
    "mov     rcx, r15",
    "call    sub_140027ecc",
    "mov     rcx, r13",
    "mov     edx, eax",
    "call    sub_140027ecc",
    "mov     rcx, qword [r13+0x8]",
    "mov     edx, 0x21",
    "mov     rcx, qword [rcx]",
    "call    sub_140020c08",
    "lea     r8, [rel data_1400f603c]  {\"BEGIN\"}",
    "mov     rdx, rbp",
    "mov     rcx, rbx",
    "call    sub_14006f07c",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "mov     rax, qword [r13+0x8]",
    "mov     rcx, qword [rax]",
    "mov     rcx, qword [rcx+0x48]",
    "and     qword [rsp+0x28], 0x0",
    "mov     rax, qword [rcx]",
    "test    rax, rax",
    "je      0x14006f476",
    "mov     eax, dword [rbx+0x2c]",
    "mov     rcx, qword [rbx+0x30]",
    "mov     edx, dword [rbx+0x74]",
    "mov     dword [rsp+0x44], eax",
    "or      eax, 0x6",
    "mov     dword [rsp+0x40], edx",
    "mov     edx, dword [rbx+0x78]",
    "mov     dword [rbx+0x2c], eax",
    "mov     rax, rcx",
    "and     rax, 0xffffffffefffaf7f",
    "mov     dword [rsp+0x48], edx",
    "mov     dl, byte [rbx+0x68]",
    "or      rax, 0x201",
    "mov     byte [rbx+0x68], r12b",
    "mov     byte [rsp+0x98], dl",
    "mov     qword [rbx+0x30], rax",
    "mov     rax, qword [rbx+0x20]",
    "mov     qword [rsp+0x58], rcx",
    "mov     rdx, rdi",
    "lea     r8, [rel data_1400f7080]  {\"ATTACH %Q AS vacuum_db\"}",
    "shl     rdx, 0x5",
    "mov     qword [rsp+0x50], rdx",
    "mov     rcx, qword [rax+rdx]",
    "mov     r15, qword [rax+rdx+0x8]",
    "mov     rdx, rbp",
    "mov     rax, qword [r15+0x8]",
    "mov     qword [rsp+0x38], rcx",
    "mov     rcx, qword [rax]",
    "movzx   eax, byte [rcx+0x10]",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "mov     eax, dword [rbx+0x28]",
    "mov     dword [rsp+0x30], eax",
    "call    sub_14006f174",
    "mov     dword [rbx+0x4c], r13d",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "call    sub_140016eb4",
    "mov     eax, esi",
    "jmp     0x14006f757",
    "mov     rax, r14",
    "mov     rcx, r15",
    "neg     rax",
    "sbb     edx, edx",
    "xor     r8d, r8d",
    "not     edx",
    "and     edx, 0x2",
    "call    sub_140028524",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "or      dword [rbx+0x2c], 0x8",
    "lea     rdx, [rsp+0x28]",
    "call    qword [rax+0x30]",
    "test    eax, eax",
    "jne     0x14006f45d",
    "mov     rax, qword [r15+0x8]",
    "mov     rcx, qword [rax]",
    "cmp     byte [rcx+0x9], 0x5",
    "jne     0x14006f514",
    "lea     r8, [rel data_1400f7098]  {\"output file already exists\"}",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "mov     edi, esi",
    "call    sub_140016eb4",
    "jmp     0x14006f6ee",
    "cmp     qword [rsp+0x28], 0x0",
    "jle     0x14006f476",
    "mov     rax, qword [r15+0x8]",
    "mov     edi, dword [rsp+0x28]",
    "xor     r9d, r9d",
    "mov     edx, dword [rax+0x30]",
    "mov     r8d, edi",
    "mov     rcx, r13",
    "call    sub_140027f38",
    "test    eax, eax",
    "jne     0x14006f6e9",
    "and     dword [rbx+0x6c], edi",
    "mov     edi, 0x7",
    "cmp     dword [rsp+0x20], eax",
    "jne     0x14006f554",
    "cmp     byte [rbx+0x61], 0x0",
    "jne     0x14006f6e9",
    "mov     edx, dword [rbx+0x6c]",
    "xor     r9d, r9d",
    "mov     r8d, edi",
    "mov     rcx, r13",
    "call    sub_140027f38",
    "test    eax, eax",
    "jne     0x14006f6e9",
    "mov     al, byte [rbx+0x64]",
    "test    al, al",
    "js      0x14006f56a",
    "mov     rax, qword [r15+0x8]",
    "cmp     byte [rax+0x21], 0x0",
    "jne     0x14006f578",
    "movsx   edx, al",
    "jmp     0x14006f583",
    "mov     al, byte [rax+0x22]",
    "neg     al",
    "sbb     edx, edx",
    "neg     edx",
    "add     edx, esi",
    "xor     edx, edx",
    "jmp     0x14006f583",
    "mov     rcx, r13",
    "call    sub_140028010",
    "mov     eax, dword [rsp+0x30]",
    "mov     r9, qword [rsp+0x38]",
    "lea     r8, [rel data_1400f70c0]  {\"SELECT sql FROM \"%w\".sqlite_mast\u2026\"}",
    "mov     rdx, rbp",
    "mov     rcx, rbx",
    "mov     byte [rbx+0xb4], al",
    "call    sub_14006f174",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "mov     r9, qword [rsp+0x38]",
    "lea     r8, [rel data_1400f7130]  {\"SELECT sql FROM \"%w\".sqlite_mast\u2026\"}",
    "mov     rdx, rbp",
    "mov     rcx, rbx",
    "call    sub_14006f174",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "mov     r9, qword [rsp+0x38]",
    "lea     r8, [rel data_1400f7170]  {\"SELECT'INSERT INTO vacuum_db.'||\u2026\"}",
    "mov     rdx, rbp",
    "mov     rcx, rbx",
    "mov     byte [rbx+0xb4], al",
    "call    sub_14006f174",
    "and     dword [rbx+0x2c], 0xfffffffb",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "mov     r9, qword [rsp+0x38]",
    "lea     r8, [rel data_1400f7210]  {\"INSERT INTO vacuum_db.sqlite_mas\u2026\"}",
    "mov     rdx, rbp",
    "mov     rcx, rbx",
    "call    sub_14006f174",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "xor     ebp, ebp",
    "add     rbp, 0x2",
    "cmp     rbp, 0xa",
    "jl      0x14006f625",
    "lea     r11, [rel __dos_header]",
    "lea     r8, [rsp+0x20]",
    "mov     rcx, r15",
    "movzx   r10d, byte [r11+rbp+0xd8740]",
    "mov     edx, r10d",
    "call    sub_14002efb0",
    "movzx   r8d, byte [r11+rbp+0xd8741]",
    "mov     edx, r10d",
    "add     r8d, dword [rsp+0x20]",
    "mov     rcx, r13",
    "call    sub_14002f000",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "test    r14, r14",
    "jne     0x14006f688",
    "xor     edx, edx",
    "mov     rcx, r13",
    "call    sub_140029190",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6a4",
    "mov     rdx, r13",
    "mov     rcx, r15",
    "call    sub_140030c54",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14006f6ee",
    "test    edi, edi",
    "jne     0x14006f6ee",
    "xor     edx, edx",
    "mov     rcx, r13",
    "call    sub_140029240",
    "mov     edi, eax",
    "test    r14, r14",
    "jne     0x14006f6ee",
    "mov     rax, qword [r13+0x8]",
    "cmp     byte [rax+0x21], r14b",
    "jne     0x14006f6bb",
    "mov     al, byte [rax+0x22]",
    "neg     al",
    "sbb     edx, edx",
    "neg     edx",
    "add     edx, esi",
    "xor     edx, edx",
    "jmp     0x14006f6c6",
    "mov     rcx, r15",
    "call    sub_140028010",
    "mov     rdx, qword [r13+0x8]",
    "mov     r8d, dword [rsp+0x28]",
    "mov     edx, dword [rdx+0x30]",
    "mov     r9d, esi",
    "mov     rcx, r15",
    "call    sub_140027f38",
    "mov     edi, eax",
    "jmp     0x14006f6ee"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}