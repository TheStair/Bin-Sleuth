{
  "address": "0x140036400",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x20",
    "cmp     dword [rcx+0x24], 0x2df20da3",
    "mov     rbx, rcx",
    "je      0x140036429",
    "mov     rdi, qword [rbx]",
    "cmp     byte [rdi+0x61], 0x0",
    "je      0x140036443",
    "call    sub_140035cdc",
    "mov     eax, dword [rbx+0x34]",
    "test    eax, eax",
    "jns     0x140036464",
    "mov     dword [rbx+0x38], 0x7",
    "mov     eax, 0x7",
    "jmp     0x1400365e3",
    "mov     ebp, 0x1",
    "test    eax, eax",
    "jns     0x1400364d2",
    "test    byte [rbx+0xc8], 0x3",
    "je      0x140036464",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "add     rsp, 0x20",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "test    byte [rbx+0xc8], 0xc",
    "mov     rcx, rbx",
    "je      0x1400364e5",
    "cmp     dword [rdi+0xc8], 0x0",
    "jne     0x140036480",
    "mov     dword [rbx+0x38], 0x11",
    "mov     esi, 0x1",
    "jmp     0x1400365cb",
    "add     dword [rdi+0xd4], ebp",
    "call    sub_140037be8",
    "dec     dword [rdi+0xd4]",
    "call    sub_140033130",
    "jmp     0x1400364f6",
    "test    byte [rdi+0x68], 0x2",
    "je      0x1400364a8",
    "mov     dword [rdi+0x160], 0x0",
    "test    byte [rbx+0xc4], 0x80",
    "je      0x1400365de",
    "mov     dword [rdi+0x50], esi",
    "mov     rcx, qword [rbx]",
    "cmp     byte [rcx+0x61], 0x0",
    "jne     0x1400365b4",
    "cmp     qword [rbx+0xb8], 0x0",
    "jle     0x140036516",
    "mov     esi, eax",
    "cmp     eax, 0x64",
    "je      0x140036597",
    "add     dword [rdi+0xc8], ebp",
    "bt      dword [rbx+0xc8], 0x8",
    "jb      0x1400364be",
    "cmp     byte [rdi+0xb5], 0x0",
    "jne     0x1400364a8",
    "mov     eax, dword [rdi+0x54]",
    "and     eax, esi",
    "mov     rcx, rbx",
    "call    sub_1400345b0",
    "mov     esi, eax",
    "call    sub_140016f38",
    "cmp     dword [rbx+0x38], 0xc0a",
    "je      0x1400365b4",
    "cmp     esi, 0x65",
    "jne     0x140036597",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140035bec",
    "bt      dword [rbx+0xc8], 0x9",
    "jae     0x1400364ce",
    "add     dword [rdi+0xd0], ebp",
    "cmp     qword [rbx+0xf0], 0x0",
    "je      0x1400364a8",
    "cmp     esi, 0x64",
    "je      0x1400365de",
    "mov     dword [rbx+0x38], eax",
    "mov     eax, dword [rcx+0x54]",
    "and     eax, dword [rbx+0x38]",
    "jmp     0x1400365b9",
    "cmp     byte [rdi+0x5f], 0x0",
    "je      0x140036597",
    "and     dword [rbx+0x34], 0x0",
    "add     dword [rdi+0xcc], ebp",
    "mov     rcx, qword [rdi]",
    "lea     rdx, [rbx+0xb8]",
    "call    sub_140016470",
    "cmp     esi, 0x65",
    "je      0x1400365de",
    "cmp     eax, 0x7",
    "jne     0x1400365c1",
    "xor     edx, edx",
    "xor     r13d, r13d",
    "cmp     dword [rdi+0x28], edx",
    "jle     0x14003658f",
    "test    edx, edx",
    "mov     dword [rbx+0x38], edx",
    "cmovne  esi, ebp",
    "xor     r12d, r12d",
    "add     r13d, ebp",
    "add     r12, 0x20",
    "cmp     r13d, dword [rdi+0x28]",
    "jl      0x14003652e",
    "mov     rax, qword [rax+0x8]",
    "mov     rcx, qword [rax]",
    "mov     rax, qword [rcx+0x120]",
    "test    rax, rax",
    "je      0x140036582",
    "mov     rax, qword [rdi+0x20]",
    "mov     rax, qword [r12+rax+0x8]",
    "test    rax, rax",
    "je      0x140036582",
    "mov     r9d, dword [rax+0x18]",
    "and     dword [rax+0x18], 0x0",
    "test    r9d, r9d",
    "jle     0x140036582",
    "mov     rax, qword [rdi+0x130]",
    "test    rax, rax",
    "je      0x140036582",
    "test    edx, edx",
    "jne     0x140036582",
    "mov     r8, qword [rdi+0x20]",
    "mov     rcx, qword [rdi+0x138]",
    "mov     rdx, rdi",
    "mov     r8, qword [r12+r8]",
    "call    rax",
    "mov     edx, eax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}