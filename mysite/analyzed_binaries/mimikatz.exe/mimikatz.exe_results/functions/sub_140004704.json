{
  "address": "0x140004704",
  "rules": [
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "encrypt data using RSA via embedded library/5013d5f9ed38420496e3af7e38d68d8f",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "create new key via CryptAcquireContext",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x18], rbx",
    "mov     dword [rax+0x20], r9d",
    "mov     qword [rax+0x10], rdx",
    "mov     dword [rax+0x8], ecx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "xor     edi, edi",
    "mov     ebp, r8d",
    "mov     r12d, edi",
    "call    sub_140013168",
    "mov     r15, rax",
    "cmp     rax, rdi",
    "je      0x1400049b4",
    "mov     eax, r12d",
    "mov     rbx, qword [rsp+0x90]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     r13, qword [rsp+0xa8]",
    "lea     r9d, [rdi+0x18]",
    "xor     r8d, r8d",
    "mov     rdx, rax",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], 0x8",
    "call    qword [rel CryptAcquireContextW]",
    "cmp     eax, edi",
    "je      0x1400049ab",
    "mov     rcx, r15",
    "call    qword [rel LocalFree]",
    "mov     rcx, qword [r13]",
    "lea     r9, [rsp+0x38]",
    "lea     edx, [rdi+0x1]",
    "mov     r8d, 0x2000001",
    "mov     qword [rsp+0x38], rdi",
    "call    qword [rel CryptGenKey]",
    "cmp     eax, edi",
    "je      0x14000498d",
    "mov     rcx, qword [rsp+0x38]",
    "cmp     rcx, rdi",
    "je      0x14000499d",
    "mov     rcx, qword [rsp+0x38]",
    "lea     rax, [rsp+0x30]",
    "lea     ebx, [rdi+0x7]",
    "mov     qword [rsp+0x28], rax",
    "mov     r8d, ebx",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "mov     qword [rsp+0x20], rdi",
    "call    qword [rel CryptExportKey]",
    "cmp     eax, edi",
    "je      0x14000498d",
    "cmp     r12d, edi",
    "jne     0x1400049ab",
    "call    qword [rel CryptDestroyKey]",
    "mov     edx, dword [rsp+0x30]",
    "lea     ecx, [rdi+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     r14, rax",
    "cmp     rax, rdi",
    "je      0x14000498d",
    "mov     rcx, qword [r13]",
    "call    sub_140003d2c",
    "mov     rcx, qword [rsp+0x38]",
    "lea     rax, [rsp+0x30]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x28], rax",
    "mov     r8d, ebx",
    "xor     edx, edx",
    "mov     qword [rsp+0x20], r14",
    "call    qword [rel CryptExportKey]",
    "cmp     eax, edi",
    "je      0x140004984",
    "mov     rcx, r14",
    "call    qword [rel LocalFree]",
    "mov     rcx, qword [rsp+0x38]",
    "call    qword [rel CryptDestroyKey]",
    "mov     qword [rsp+0x38], rdi",
    "mov     ebx, dword [r14+0xc]",
    "shr     ebx, 0x3",
    "mov     dword [r14+0x10], 0x1",
    "xor     edx, edx",
    "lea     eax, [rbx+rbx]",
    "lea     rsi, [rax+r14+0x14]",
    "mov     eax, ebx",
    "shr     eax, 0x1",
    "lea     rcx, [rsi+0x1]",
    "mov     byte [rsi], 0x1",
    "dec     eax",
    "mov     r8d, eax",
    "mov     edi, eax",
    "call    memset",
    "mov     rax, rbx",
    "mov     r8, rdi",
    "shr     rax, 0x1",
    "xor     edx, edx",
    "add     rsi, rax",
    "lea     rcx, [rsi+0x1]",
    "mov     byte [rsi], 0x1",
    "call    memset",
    "lea     rcx, [rsi+rbx+0x1]",
    "mov     r8, rdi",
    "xor     edx, edx",
    "mov     byte [rsi+rbx], 0x1",
    "call    memset",
    "mov     r8d, dword [rsp+0x30]",
    "mov     rcx, qword [r13]",
    "lea     r11, [rsp+0x38]",
    "xor     edi, edi",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x28], r11",
    "mov     rdx, r14",
    "mov     dword [rsp+0x20], edi",
    "call    qword [rel CryptImportKey]",
    "cmp     eax, edi",
    "je      0x140004984",
    "lea     edx, [rdi+0x4c]",
    "lea     ecx, [rdi+0x40]",
    "mov     dword [rsp+0x30], edx",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "cmp     rax, rdi",
    "je      0x140004984",
    "mov     byte [rax], 0x1",
    "mov     byte [rax+0x1], 0x2",
    "mov     word [rax+0x2], di",
    "mov     eax, dword [rsp+0x80]",
    "lea     rdx, [rbx+0x8]",
    "mov     dword [rbx+0x4], eax",
    "mov     dword [rdx], 0xa400",
    "add     rdx, 0x4",
    "movsxd  rax, ebp",
    "cmp     ebp, edi",
    "jbe     0x140004902",
    "mov     r8d, dword [rsp+0x30]",
    "lea     ecx, [rbp+0x1]",
    "mov     r9d, edi",
    "mov     rax, r8",
    "add     rdx, rcx",
    "sub     rax, rbp",
    "cmp     rax, 0xf",
    "je      0x140004941",
    "mov     r8, qword [rsp+0x88]",
    "mov     rcx, rdx",
    "mov     r9, rbp",
    "lea     r8, [rax+r8-0x1]",
    "lea     eax, [r8-0x2]",
    "mov     rdx, rbx",
    "mov     byte [rax+rbx], 0x2",
    "mov     rax, qword [rsp+0xa0]",
    "mov     r9, qword [rsp+0x38]",
    "mov     r8d, dword [rsp+0x30]",
    "mov     rcx, qword [r13]",
    "mov     qword [rsp+0x28], rax",
    "mov     eax, dword [rsp+0x98]",
    "mov     dword [rsp+0x20], eax",
    "call    qword [rel CryptImportKey]",
    "mov     rcx, rbx",
    "mov     r12d, eax",
    "call    qword [rel LocalFree]",
    "cmp     byte [rdx], dil",
    "jne     0x140004929",
    "mov     al, byte [r8]",
    "dec     r8",
    "mov     byte [rcx], al",
    "inc     rcx",
    "sub     r9, 0x1",
    "jne     0x1400048f1",
    "inc     r9d",
    "mov     ecx, r8d",
    "inc     rdx",
    "sub     rcx, rbp",
    "mov     eax, r9d",
    "sub     rcx, 0xf",
    "cmp     rax, rcx",
    "jb      0x14000491c",
    "mov     byte [rdx], 0x42",
    "mov     r8d, dword [rsp+0x30]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}