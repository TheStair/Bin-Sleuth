{
  "address": "0x140008498",
  "rules": [
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt or decrypt via WinCrypt",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x20], r9",
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x70",
    "and     dword [rsp+0xb0], 0x0",
    "mov     r14d, dword [rcx+0x5c]",
    "mov     ebx, dword [rcx+0x3c]",
    "xor     eax, eax",
    "mov     rdi, r9",
    "mov     rsi, rcx",
    "cmp     qword [rsp+0xd8], rax",
    "sete    al",
    "xor     r12d, r12d",
    "shr     r14d, 0x3",
    "shr     ebx, 0x3",
    "cmp     dword [rcx+0x38], 0x6603",
    "jne     0x1400084f4",
    "test    eax, eax",
    "jne     0x14000856f",
    "lea     ecx, [r12+0x18]",
    "cmp     ebx, ecx",
    "cmovb   ebx, ecx",
    "mov     ebp, dword [rsp+0xd8]",
    "mov     r13d, 0x800e",
    "cmp     dword [rsi+0x58], r13d",
    "jne     0x140008509",
    "test    r12, r12",
    "je      0x14000872d",
    "mov     r9d, dword [rsi+0x40]",
    "mov     r8, qword [rsi+0x44]",
    "mov     edx, dword [rsp+0xc0]",
    "mov     dword [rsp+0x50], r14d",
    "mov     qword [rsp+0x48], r13",
    "mov     rax, r12",
    "neg     rax",
    "mov     eax, dword [rsi+0x58]",
    "mov     dword [rsp+0x40], eax",
    "mov     eax, dword [rsp+0xd0]",
    "sbb     ecx, ecx",
    "and     ecx, ebp",
    "mov     dword [rsp+0x38], ecx",
    "mov     rcx, qword [rsp+0xb8]",
    "mov     qword [rsp+0x30], r12",
    "mov     dword [rsp+0x28], eax",
    "mov     qword [rsp+0x20], rdi",
    "call    sub_1400082e4",
    "test    eax, eax",
    "je      0x140008716",
    "mov     ebp, 0x14",
    "mov     r13d, 0x8004",
    "mov     ebp, r14d",
    "jmp     0x140008514",
    "mov     eax, dword [rsp+0xb0]",
    "add     rsp, 0x70",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "mov     rcx, r13",
    "call    qword [rel LocalFree]",
    "mov     edi, 0x40",
    "mov     edx, ebx",
    "mov     ecx, edi",
    "call    qword [rel LocalAlloc]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140008716",
    "mov     rdi, qword [rsp+0xd8]",
    "mov     rdx, qword [rsp+0xd8]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     r9, r12",
    "mov     dword [rsp+0x20], ebp",
    "repne scasw word [rdi]",
    "not     rcx",
    "lea     r8d, [rcx+rcx-0x2]",
    "mov     ecx, r13d",
    "call    sub_140003970",
    "test    eax, eax",
    "je      0x14000871f",
    "mov     edx, ebp",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x14000872d",
    "mov     ecx, dword [rsi+0x58]",
    "mov     r9, rax",
    "mov     r8d, r14d",
    "mov     rdx, r13",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140003c08",
    "test    eax, eax",
    "je      0x14000870d",
    "mov     rdi, qword [rsp+0xc8]",
    "jmp     0x140008576",
    "mov     rcx, rbp",
    "call    qword [rel LocalFree]",
    "mov     ecx, dword [rsi+0x38]",
    "lea     rax, [rsp+0x68]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0x60]",
    "mov     r8d, ebx",
    "mov     rdx, rbp",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140004704",
    "test    eax, eax",
    "je      0x1400086f9",
    "mov     edx, r14d",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x14000871f",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400e9e00]  {u\"ERROR kull_m_dpapi_unprotect_blo\u2026\"}",
    "mov     edx, dword [rsi+0x6c]",
    "mov     ecx, edi",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, qword [rsp+0xe0]",
    "mov     qword [rdi], rax",
    "test    rax, rax",
    "je      0x1400086d1",
    "mov     rcx, qword [rsp+0x60]",
    "call    qword [rel CryptDestroyKey]",
    "mov     rcx, qword [rsp+0x68]",
    "call    sub_140003d2c",
    "test    eax, eax",
    "jne     0x14000870d",
    "mov     r8d, dword [rsi+0x6c]",
    "mov     rdx, qword [rsi+0x70]",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     rax, qword [rsp+0xe8]",
    "mov     edx, dword [rsi+0x6c]",
    "mov     rcx, qword [rsp+0x60]",
    "mov     dword [rax], edx",
    "mov     qword [rsp+0x28], rax",
    "mov     rax, qword [rdi]",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "lea     r8d, [r9+0x1]",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel CryptDecrypt]",
    "mov     dword [rsp+0xb0], eax",
    "test    eax, eax",
    "jne     0x1400086d1",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400e9d40]  {u\"ERROR kull_m_dpapi_unprotect_blo\u2026\"}",
    "jmp     0x140008706",
    "mov     rcx, qword [rdi]",
    "call    qword [rel LocalFree]",
    "mov     qword [rdi], rax",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400e9cc0]  {u\"ERROR kull_m_dpapi_unprotect_blo\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     edx, eax",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}