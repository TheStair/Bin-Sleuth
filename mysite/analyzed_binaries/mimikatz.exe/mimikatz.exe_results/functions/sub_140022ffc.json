{
  "address": "0x140022ffc",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x20",
    "xor     ebp, ebp",
    "mov     ebx, r9d",
    "mov     r13d, r8d",
    "mov     rsi, rdx",
    "mov     rdi, rcx",
    "cmp     byte [rcx+0x10], bpl",
    "je      0x140023038",
    "test    byte [rsi+0x34], 0x2",
    "je      0x14002304e",
    "mov     rcx, rdx",
    "call    sub_140022a44",
    "test    eax, eax",
    "jne     0x140023154",
    "movzx   eax, word [rsi+0x34]",
    "test    al, 0x8",
    "je      0x14002305d",
    "mov     rcx, rsi",
    "call    sub_1400214a4",
    "test    eax, eax",
    "jne     0x140023154",
    "mov     rbx, qword [rsp+0x48]",
    "mov     rbp, qword [rsp+0x50]",
    "mov     rsi, qword [rsp+0x58]",
    "add     rsp, 0x20",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     ecx, 0xfff7",
    "mov     edx, r13d",
    "and     ax, cx",
    "mov     rcx, rdi",
    "mov     word [rsi+0x34], ax",
    "call    sub_1400223d0",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400230c7",
    "test    ebx, ebx",
    "jne     0x14002305d",
    "mov     r12d, dword [rsi+0x30]",
    "mov     edx, r13d",
    "mov     rcx, rsi",
    "call    sub_14001de9c",
    "mov     rcx, rsi",
    "call    sub_14001de2c",
    "cmp     byte [rdi+0x10], 0x0",
    "je      0x1400230fc",
    "mov     ecx, 0x1",
    "cmp     word [rax+0x36], cx",
    "jle     0x14002309e",
    "mov     ebp, dword [rsi+0x30]",
    "test    ebp, ebp",
    "je      0x140023152",
    "test    rbx, rbx",
    "je      0x1400230fc",
    "movzx   eax, word [rax+0x34]",
    "and     ax, 0x8",
    "or      word [rsi+0x34], ax",
    "cmp     byte [rdi+0x10], 0x0",
    "je      0x1400230bf",
    "mov     rcx, rax",
    "call    sub_14002242c",
    "mov     ecx, 0xe274",
    "call    sub_140084e38",
    "jmp     0x140023154",
    "xor     eax, eax",
    "lea     r8, [rsp+0x40]",
    "xor     r9d, r9d",
    "mov     edx, ebp",
    "mov     rcx, rdi",
    "call    qword [rdi+0x108]",
    "mov     ebx, eax",
    "test    eax, eax",
    "je      0x140023134",
    "mov     edx, r12d",
    "mov     rcx, rbx",
    "call    sub_14001de9c",
    "mov     rcx, rbx",
    "call    sub_14002242c",
    "mov     rcx, rbx",
    "call    sub_14001ddf4",
    "mov     edx, dword [rdi+0x1c]",
    "add     edx, ecx",
    "mov     rcx, rbx",
    "call    sub_14001de9c",
    "jmp     0x1400230c7",
    "mov     rax, qword [rsp+0x40]",
    "or      word [rax+0x34], 0x8",
    "mov     rcx, qword [rsp+0x40]",
    "call    sub_14001de2c",
    "mov     rcx, qword [rsp+0x40]",
    "call    sub_14002242c",
    "cmp     ebp, dword [rdi+0x20]",
    "ja      0x140023130",
    "mov     eax, ebx",
    "jmp     0x140023154",
    "mov     r8, qword [rdi+0x110]",
    "mov     rcx, qword [rdi+0x40]",
    "mov     edx, ebp",
    "call    sub_14001d9c0"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}