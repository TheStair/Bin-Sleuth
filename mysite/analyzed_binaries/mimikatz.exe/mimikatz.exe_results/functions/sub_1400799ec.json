{
  "address": "0x1400799ec",
  "rules": [
    "encrypt data using speck/4b1f3c27d17344b39cf9dede3bcf8b4b",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "encrypt data using AES MixColumns step/954c5d7507db4ab48ac65ac05419ca28",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "parse credit card information/57ac61c4268f4ccb8bf67b3aa3bc79f3"
  ],
  "disassembly": [
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x38",
    "mov     rdx, qword [rcx]",
    "movzx   r14d, byte [rcx+0x42]",
    "mov     r12, qword [rcx+0x8]",
    "mov     r15, qword [rdx]",
    "mov     rdi, qword [rdx+0x10]",
    "sub     r14d, 0x1",
    "movsxd  r13, r14d",
    "mov     rbp, rcx",
    "mov     qword [rsp+0x80], rdx",
    "mov     qword [rsp+0x98], r15",
    "mov     qword [rsp+0x90], r12",
    "mov     qword [rsp+0x88], r13",
    "js      0x140079dc7",
    "mov     edx, dword [rbp+0x38]",
    "mov     rcx, rdi",
    "call    sub_14003278c",
    "mov     r14, qword [rsp+0x80]",
    "xor     esi, esi",
    "cmp     byte [rbp+0x42], sil",
    "jbe     0x140079f3a",
    "mov     rax, r13",
    "imul    rax, rax, 0x58",
    "lea     rbx, [rax+rcx+0x3c5]",
    "mov     eax, dword [rbp+0x3c]",
    "mov     rdx, rbp",
    "mov     rcx, r15",
    "mov     dword [r14+0xac], eax",
    "add     rsp, 0x38",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "jmp     sub_14007573c",
    "lea     rbx, [rbp+0x3e0]",
    "mov     edx, dword [rbx-0x15]",
    "mov     rcx, rdi",
    "call    sub_14003278c",
    "xor     r12d, r12d",
    "cmp     byte [rbp+0x47], 0x2",
    "jne     0x140079b36",
    "test    dword [rcx+0x28], 0x240",
    "je      0x140079e32",
    "mov     r9d, dword [rax+r12+0x40]",
    "mov     r8d, dword [rbx-0x44]",
    "mov     edx, dword [rbx-0x28]",
    "and     dword [rsp+0x20], 0x0",
    "mov     rcx, r14",
    "call    sub_140074b1c",
    "jmp     0x140079f28",
    "mov     edx, dword [rbx-0x21]",
    "mov     rcx, rdi",
    "call    sub_14003278c",
    "mov     r9d, dword [rbx-0x19]",
    "test    r9d, r9d",
    "je      0x140079ce5",
    "cmp     dword [rbx+0xb], 0x0",
    "jle     0x140079c92",
    "mov     edx, dword [rbx-0x15]",
    "mov     rcx, rdi",
    "call    sub_14003278c",
    "movzx   ecx, byte [rbx+0x1]",
    "movzx   edx, byte [rbx]",
    "mov     r9d, dword [rbx+0x7]",
    "mov     r8d, dword [rbx+0x3]",
    "mov     dword [rsp+0x20], ecx",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "movsxd  rax, dword [rdi+0x90]",
    "test    eax, eax",
    "jle     0x140079b7b",
    "movzx   eax, byte [rbp+0x42]",
    "dec     eax",
    "cmp     r14d, eax",
    "jne     0x140079b36",
    "bt      dword [rcx+0x28], 0xd",
    "jae     0x140079f28",
    "mov     r11, qword [rcx+0x20]",
    "jmp     0x140079e41",
    "movzx   eax, byte [rbp+0x42]",
    "inc     esi",
    "add     rbx, 0x58",
    "cmp     esi, eax",
    "jl      0x140079ded",
    "mov     r8d, dword [rbx-0x2d]",
    "test    r8d, r8d",
    "je      0x140079d94",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "lea     edx, [r8+0xb]",
    "call    sub_140032364",
    "mov     edx, dword [rbx-0x19]",
    "mov     rcx, rdi",
    "call    sub_140032d34",
    "mov     ecx, dword [rdi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "mov     edx, dword [rbx-0x19]",
    "mov     rcx, rdi",
    "sub     edx, 0x2",
    "call    sub_140032d34",
    "mov     ecx, dword [rdi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "mov     edx, dword [rbx-0x1d]",
    "mov     rcx, rdi",
    "call    sub_14003278c",
    "mov     r12d, dword [rbx+0xb]",
    "lea     eax, [r12-0x1]",
    "movsxd  rcx, eax",
    "mov     rax, qword [rbx+0x13]",
    "lea     rdx, [rcx+rcx*4]",
    "lea     rsi, [rax+rdx*4]",
    "jmp     0x140079c89",
    "cmp     dword [rbx-0x9], 0x0",
    "je      0x140079ba9",
    "movzx   edx, byte [rbx+0x2]",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rdi+0x88]",
    "mov     word [rax+rcx*8-0x16], dx",
    "bt      dword [r15+0x28], 0x9",
    "jae     0x140079b36",
    "mov     r11, qword [rbx-0x10]",
    "test    r11, r11",
    "je      0x140079f28",
    "movzx   eax, byte [rbx-0x1c]",
    "mov     rcx, qword [rbx]",
    "imul    rax, rax, 0x70",
    "test    byte [rax+r12+0x48], 0x10",
    "mov     r13, qword [rax+r12+0x28]",
    "je      0x140079e23",
    "mov     rdx, qword [rsp+0x80]",
    "dec     r13",
    "dec     r14d",
    "sub     rbx, 0x58",
    "mov     qword [rsp+0x88], r13",
    "test    r13, r13",
    "jns     0x140079a4f",
    "mov     esi, dword [r15+0x28]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x2f]",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     r12d, eax",
    "test    sil, 0x40",
    "jne     0x140079d2c",
    "test    r12d, r12d",
    "jg      0x140079c0a",
    "test    r12d, r12d",
    "je      0x140079bcf",
    "mov     edx, dword [rbx-0x5]",
    "mov     rcx, rdi",
    "call    sub_14003278c",
    "mov     r9d, dword [rbx+0x7]",
    "mov     r8d, dword [rbx-0x9]",
    "and     dword [rsp+0x20], 0x0",
    "dec     r9d",
    "mov     edx, 0x31",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     rax, qword [r15+0x20]",
    "test    byte [rax+0x64], 0x80",
    "je      0x140079b36",
    "cmp     byte [rbp+0x45], 0x0",
    "je      0x140079e5e",
    "cmp     byte [rbx], 0xaa",
    "mov     r15, qword [rbx+0x1b]",
    "je      0x140079bc4",
    "mov     r12, qword [rsp+0x90]",
    "mov     r15, qword [rsp+0x98]",
    "bt      esi, 0x9",
    "jb      0x140079d3f",
    "mov     r8d, dword [rbx-0x29]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     edx, 0x81",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     edx, dword [rsi+0x4]",
    "mov     rcx, rdi",
    "inc     edx",
    "call    sub_140032d34",
    "mov     ecx, dword [rdi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "cmp     byte [rsi+0x10], 0xaa",
    "je      0x140079c6c",
    "bt      dword [r15+0x28], 0xb",
    "jae     0x140079c92",
    "mov     edx, r12d",
    "mov     rcx, rdi",
    "call    sub_140032d34",
    "mov     ecx, dword [rdi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "jmp     0x140079bcf",
    "movzx   esi, word [r15+0x1e]",
    "test    esi, esi",
    "jle     0x140079b36",
    "cmp     byte [r15+0x61], 0x0",
    "jne     0x140079f28",
    "mov     rax, qword [r11+0x18]",
    "test    byte [rax+0x40], 0x20",
    "je      0x140079f28",
    "mov     r8d, dword [rbx-0x25]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     edx, 0x81",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "bt      esi, 0xd",
    "jae     0x140079d58",
    "mov     edx, dword [rsi+0x4]",
    "mov     rcx, rdi",
    "dec     edx",
    "call    sub_140032d34",
    "mov     ecx, dword [rdi+0x90]",
    "dec     r12d",
    "mov     dword [rax+0x8], ecx",
    "sub     rsi, 0x14",
    "mov     eax, dword [rsi+0xc]",
    "test    eax, eax",
    "je      0x140079c54",
    "mov     rax, qword [rax+0x10]",
    "cmp     word [rax+rsi*2], 0x24",
    "jl      0x140079b36",
    "mov     edx, dword [rbx-0x28]",
    "mov     r10d, dword [rdi+0x90]",
    "mov     rcx, rdi",
    "call    sub_140032d34",
    "cmp     dword [rbx-0x28], r10d",
    "mov     r9, rax",
    "jge     0x140079f28",
    "xor     r8d, r8d",
    "lea     edx, [r8+0xb]",
    "mov     r8d, dword [rbx+0x3]",
    "mov     edx, 0xc",
    "jmp     0x140079d7b",
    "and     dword [rsp+0x20], 0x0",
    "cmp     byte [rbx], 0x42",
    "mov     r9d, dword [rbx-0x11]",
    "mov     rcx, rdi",
    "jne     0x140079d74",
    "cmp     qword [rbx+0xb], 0x0",
    "je      0x140079d58",
    "movzx   edx, byte [rsi+0x10]",
    "mov     r9d, dword [rsi+0x4]",
    "mov     r8d, dword [rsi]",
    "and     dword [rsp+0x20], 0x0",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     r9d, dword [rdi+0x90]",
    "mov     r8d, dword [rbx-0x25]",
    "mov     dword [rsp+0x28], eax",
    "mov     eax, dword [rsi+0x8]",
    "add     r9d, 0x2",
    "mov     edx, 0x1a",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032678",
    "mov     r13d, dword [rdx+0x38]",
    "inc     r13d",
    "test    esi, esi",
    "jle     0x140079ae5",
    "sub     r10d, dword [rbx-0x28]",
    "mov     r12d, r10d",
    "call    sub_140032364",
    "mov     edx, r12d",
    "mov     rcx, rdi",
    "call    sub_140032d34",
    "mov     ecx, dword [rdi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "lea     eax, [rsi+0x1]",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x28], esi",
    "add     dword [rdx+0x38], eax",
    "cmp     byte [rbx], 0x4",
    "mov     r8d, dword [rbx-0x25]",
    "mov     edx, 0x19",
    "mov     dword [rsp+0x20], r13d",
    "lea     eax, [rdx-0x3]",
    "cmove   edx, eax",
    "xor     r9d, r9d",
    "call    sub_140032678",
    "mov     r9d, dword [rbx+0x7]",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0xb",
    "mov     rcx, rdi",
    "mov     r12d, eax",
    "lea     r8d, [rdx-0xa]",
    "call    sub_140032364",
    "mov     r13, qword [rsp+0x88]",
    "mov     r8d, dword [rbx-0x25]",
    "lea     eax, [r12+r13]",
    "mov     r9d, r12d",
    "mov     edx, 0x5a",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "inc     r12d",
    "cmp     r12d, esi",
    "jl      0x140079ab9",
    "add     r9, 0x18",
    "sub     r12, 0x1",
    "jne     0x140079e8f",
    "mov     al, byte [r9]",
    "cmp     al, 0x5a",
    "jne     0x140079efa",
    "mov     rdx, qword [rsp+0x80]",
    "mov     ecx, dword [rbx-0x44]",
    "cmp     dword [r9+0x4], ecx",
    "jne     0x140079f12",
    "mov     r12, qword [rsp+0x90]",
    "cmp     al, 0x80",
    "jne     0x140079f07",
    "test    byte [r13+0x40], 0x20",
    "movsxd  r8, dword [r9+0x8]",
    "je      0x140079ecb",
    "cmp     al, 0x15",
    "jne     0x140079f12",
    "mov     eax, dword [rbx-0x40]",
    "mov     byte [r9], 0x87",
    "jmp     0x140079f0e",
    "movzx   edx, word [r11+0x60]",
    "xor     ecx, ecx",
    "test    edx, edx",
    "jle     0x140079eea",
    "mov     rdx, qword [r13+0x10]",
    "jmp     0x140079ebd",
    "mov     eax, dword [rbx-0x40]",
    "mov     dword [r9+0x4], eax",
    "or      ecx, 0xffffffff",
    "mov     r10, qword [r11+0x8]",
    "test    rdx, rdx",
    "jne     0x140079eb0",
    "mov     dword [r9+0x8], eax",
    "jmp     0x140079f0b",
    "movsx   eax, cx",
    "test    eax, eax",
    "js      0x140079f12",
    "inc     ecx",
    "cmp     ecx, edx",
    "jl      0x140079eda",
    "mov     eax, dword [rdx+0x64]",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "je      0x140079ec2",
    "mov     rax, qword [rdx+0x8]",
    "movsx   r8d, word [rax+r8*2]",
    "movsxd  rax, ecx",
    "cmp     r8w, word [r10+rax*2]",
    "je      0x140079eed",
    "mov     rdx, qword [rdx+0x28]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}