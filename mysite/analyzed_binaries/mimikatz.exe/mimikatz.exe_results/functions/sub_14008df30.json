{
  "address": "0x14008df30",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x50",
    "and     dword [rsp+0x20], 0x0",
    "xor     edx, edx",
    "mov     rbx, rcx",
    "lea     r8d, [rdx+0x28]",
    "lea     rcx, [rsp+0x28]",
    "call    memset",
    "lea     rcx, [rel data_1400fdcf8]  {u\"Read file '%s': \"}",
    "mov     rdx, rbx",
    "call    sub_14000c030",
    "lea     r8, [rsp+0x78]",
    "lea     rdx, [rsp+0x80]",
    "xor     r9d, r9d",
    "mov     rcx, rbx",
    "call    sub_140009e4c",
    "test    eax, eax",
    "je      0x14008e147",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400fde10]  {u\"ERROR kuhl_m_dpapi_oe_LoadFromFi\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f9538]",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x78]",
    "mov     rcx, qword [rsp+0x80]",
    "lea     r9, [rel sub_140010e58]",
    "lea     r8, [rsp+0x20]",
    "call    sub_140010970",
    "test    eax, eax",
    "je      0x14008e137",
    "mov     rcx, qword [rsp+0x80]",
    "call    qword [rel LocalFree]",
    "jmp     0x14008e15b",
    "mov     r8d, dword [rsp+0x20]",
    "xor     edi, edi",
    "xor     esi, esi",
    "test    r8d, r8d",
    "je      0x14008dffc",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0x70]",
    "add     rsp, 0x50",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "lea     rcx, [rel data_1400fdd20]  {u\" * %3u/%3u MasterKey(s) imported\u2026\"}",
    "mov     edx, esi",
    "call    sub_14000c030",
    "mov     r8d, dword [rsp+0x30]",
    "xor     edi, edi",
    "xor     ebp, ebp",
    "test    r8d, r8d",
    "je      0x14008e0ca",
    "xor     ebx, ebx",
    "lea     rcx, [rel data_1400fdd70]  {u\" * %3u/%3u Credential(s) importe\u2026\"}",
    "mov     edx, ebp",
    "call    sub_14000c030",
    "mov     r8d, dword [rsp+0x40]",
    "xor     esi, esi",
    "xor     ebx, ebx",
    "test    r8d, r8d",
    "je      0x14008e118",
    "xor     ebx, ebx",
    "mov     rdx, qword [rcx+0x28]",
    "jmp     0x14008dfe1",
    "mov     r8d, 0x14",
    "lea     rdx, [rcx+0x10]",
    "lea     rcx, [rel data_1400fddc0]  {u\" * %3u/%3u DomainKey(s) imported\u2026\"}",
    "mov     edx, ebx",
    "call    sub_14000c030",
    "lea     rdx, [rel sub_140010e80]",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140010a8c",
    "xor     edi, edi",
    "xor     edx, edx",
    "lea     rdx, [rcx+0x4]",
    "jmp     0x14008e03b",
    "call    sub_14008d0c4",
    "test    eax, eax",
    "je      0x14008dfec",
    "mov     r8d, dword [rsp+0x20]",
    "inc     edi",
    "add     rbx, 0x8",
    "cmp     edi, r8d",
    "jb      0x14008dfc4",
    "inc     esi",
    "mov     r8d, dword [rsp+0x40]",
    "inc     esi",
    "add     rdi, 0x8",
    "cmp     esi, r8d",
    "jb      0x14008e0e8",
    "inc     ebx",
    "mov     r8d, dword [rsp+0x30]",
    "inc     edi",
    "add     rbx, 0x8",
    "cmp     edi, r8d",
    "jb      0x14008e01e",
    "lea     ecx, [rax+0x40]",
    "mov     edx, 0xa0",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x14008e0b6",
    "mov     rcx, qword [rcx+0x18]",
    "call    sub_14008d2a8",
    "test    rax, rax",
    "jne     0x14008e0b6",
    "mov     rax, qword [rsp+0x28]",
    "mov     rcx, qword [rbx+rax]",
    "mov     eax, dword [rcx+0x24]",
    "mov     r8, rax",
    "test    eax, eax",
    "jne     0x14008e033",
    "mov     rax, qword [rsp+0x48]",
    "mov     rcx, qword [rdi+rax]",
    "mov     r9d, dword [rcx+0x10]",
    "mov     r8d, dword [rcx+0x14]",
    "mov     rdx, qword [rcx+0x18]",
    "call    sub_14008d76c",
    "test    eax, eax",
    "je      0x14008e108",
    "mov     rax, qword [rsp+0x38]",
    "mov     rcx, qword [rbx+rax]",
    "bt      dword [rcx], 0x1f",
    "jae     0x14008e039",
    "mov     rdx, qword [rsp+0x38]",
    "lea     rcx, [rax+0x10]",
    "mov     r8d, 0x90",
    "mov     rdx, qword [rbx+rdx]",
    "call    memcpy",
    "mov     r11, qword [rsp+0x38]",
    "mov     rcx, qword [rbx+r11]",
    "mov     rcx, qword [rcx+0x18]",
    "call    qword [rel _wcsdup]",
    "inc     ebp",
    "mov     qword [rsi+0x28], rax",
    "mov     rax, qword [rel data_14013c8f0]",
    "mov     qword [rsi+0x8], rax",
    "lea     rax, [rel data_14013c8e8]",
    "mov     qword [rsi], rax",
    "mov     rax, qword [rel data_14013c8f0]",
    "mov     qword [rax], rsi",
    "mov     qword [rel data_14013c8f0], rsi"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}