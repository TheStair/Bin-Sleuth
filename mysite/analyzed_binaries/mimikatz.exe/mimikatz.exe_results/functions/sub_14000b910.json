{
  "address": "0x14000b910",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x20], rbx",
    "mov     qword [rax+0x18], r8",
    "mov     qword [rax+0x10], rdx",
    "mov     qword [rax+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x50",
    "xor     r11d, r11d",
    "mov     rsi, r8",
    "mov     r8, qword [r8+0x10]",
    "mov     rbx, qword [rsi]",
    "mov     qword [rax-0x40], r11",
    "lea     rax, [rel data_140140240]",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rcx+0x8]",
    "lea     r9, [rbx+r8]",
    "mov     qword [rsp+0x38], r8",
    "mov     qword [rsp+0x40], r11",
    "mov     rbp, rdx",
    "mov     r10, rcx",
    "mov     edi, r11d",
    "mov     qword [rsp+0x20], r9",
    "cmp     dword [rax], r11d",
    "jne     0x14000b98f",
    "mov     rbx, qword [rsp+0x70]",
    "mov     rdx, qword [rsi+0x8]",
    "mov     ecx, dword [rdx]",
    "cmp     ecx, r11d",
    "je      0x14000ba66",
    "mov     rsi, qword [rsp+0x78]",
    "add     rbp, rbx",
    "sub     ecx, 0x1",
    "je      0x14000b9f7",
    "mov     rsi, qword [rsp+0x80]",
    "dec     rbx",
    "jmp     0x14000b994",
    "mov     rcx, qword [r10]",
    "mov     r8, rsi",
    "mov     rdx, rbx",
    "call    memcmp",
    "mov     r9, qword [rsp+0x20]",
    "mov     r10, qword [rsp+0x70]",
    "xor     edi, edi",
    "test    eax, eax",
    "sete    dil",
    "inc     rbx",
    "inc     rbp",
    "test    edi, edi",
    "je      0x14000ba6e",
    "mov     rdx, r8",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x28], rax",
    "test    rax, rax",
    "je      0x14000b98f",
    "sub     ecx, 0x1",
    "je      0x14000b9b4",
    "mov     eax, edi",
    "neg     eax",
    "mov     eax, edi",
    "sbb     rcx, rcx",
    "and     rcx, rbx",
    "mov     rbx, qword [rsp+0x88]",
    "mov     qword [rsi+0x18], rcx",
    "add     rsp, 0x50",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     rbp, r9",
    "ja      0x14000ba9d",
    "mov     r8, qword [rsi+0x10]",
    "lea     rcx, [rsp+0x28]",
    "mov     rdx, rsi",
    "call    sub_14000b6d8",
    "test    eax, eax",
    "je      0x14000ba51",
    "mov     rcx, qword [rdx+0x8]",
    "mov     rdx, rbx",
    "mov     rcx, qword [rcx]",
    "call    sub_14000bf58",
    "mov     qword [rsp+0x28], rax",
    "test    rax, rax",
    "je      0x14000b98f",
    "sub     ecx, 0x1",
    "je      0x14000b9f7",
    "mov     rcx, qword [rsp+0x28]",
    "mov     rbx, qword [rsp+0x70]",
    "mov     rcx, qword [rsp+0x70]",
    "lea     r8, [rsp+0x28]",
    "xor     r9d, r9d",
    "mov     rdx, rbp",
    "call    sub_14000b910",
    "mov     edi, eax",
    "test    eax, eax",
    "je      0x14000ba51",
    "mov     rcx, qword [rsp+0x70]",
    "lea     r8, [rsp+0x28]",
    "xor     r9d, r9d",
    "mov     rdx, rbp",
    "call    sub_14000b910",
    "mov     edi, eax",
    "test    eax, eax",
    "je      0x14000b98f",
    "cmp     ecx, 0x3",
    "je      0x14000b9f7",
    "mov     rbx, qword [rsi]",
    "mov     rcx, qword [rsp+0x28]",
    "sub     rbx, rcx",
    "add     rbx, qword [rsp+0x40]",
    "jmp     0x14000ba5b",
    "mov     rbx, qword [rsi]",
    "sub     rbx, qword [rsp+0x28]",
    "add     rbx, qword [rsp+0x40]",
    "jmp     0x14000b994",
    "call    qword [rel LocalFree]",
    "jmp     0x14000b994"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}