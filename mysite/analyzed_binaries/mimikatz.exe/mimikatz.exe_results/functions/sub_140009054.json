{
  "address": "0x140009054",
  "rules": [
    "encrypt or decrypt via WinCrypt",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "mov     qword [rsp+0x20], r9",
    "mov     qword [rsp+0x10], rdx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x60",
    "mov     r14d, dword [rcx+0x18]",
    "mov     eax, 0x8004",
    "mov     rbx, rcx",
    "xor     ebp, ebp",
    "cmp     r14d, 0x8009",
    "cmove   r14d, eax",
    "mov     ecx, r14d",
    "call    sub_1400049d0",
    "mov     ecx, dword [rbx+0x1c]",
    "mov     esi, eax",
    "call    sub_140004af4",
    "mov     ecx, dword [rbx+0x1c]",
    "mov     r13d, eax",
    "call    sub_140004a60",
    "mov     r15d, dword [rsp+0xc0]",
    "mov     r12d, eax",
    "mov     eax, esi",
    "xor     edx, edx",
    "div     r12d",
    "lea     rdi, [rbx+0x28]",
    "lea     ecx, [rbp+0x40]",
    "add     esi, edx",
    "lea     eax, [rsi+r15+0x10]",
    "mov     dword [rdi], eax",
    "lea     edx, [r12+rax]",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rbx+0x20], rax",
    "test    rax, rax",
    "je      0x1400092c2",
    "mov     eax, ebp",
    "mov     rbx, qword [rsp+0xb0]",
    "add     rsp, 0x60",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "lea     edx, [rbp+0x10]",
    "mov     rcx, rax",
    "call    CDGenerateRandomBits",
    "mov     r9, qword [rbx+0x20]",
    "mov     rdx, qword [rsp+0xa8]",
    "lea     rax, [r9+0x10]",
    "mov     dword [rsp+0x30], esi",
    "lea     r8d, [rbp+0x14]",
    "mov     qword [rsp+0x28], rax",
    "mov     ecx, r14d",
    "mov     dword [rsp+0x20], 0x10",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x1400092b1",
    "mov     rcx, qword [rbx+0x20]",
    "call    qword [rel LocalFree]",
    "and     dword [rdi], 0x0",
    "mov     qword [rbx+0x20], rax",
    "mov     rdx, qword [rbx+0x20]",
    "mov     r9, qword [rsp+0xb8]",
    "mov     dword [rsp+0x30], esi",
    "add     rdx, 0x10",
    "mov     r8d, esi",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x28], rdx",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x1400092b1",
    "mov     rax, qword [rbx+0x20]",
    "mov     rdx, qword [rsp+0xb8]",
    "mov     r8, r15",
    "lea     rcx, [rsi+rax+0x10]",
    "call    memcpy",
    "lea     r15d, [r12+r13]",
    "lea     ecx, [rbp+0x40]",
    "mov     edx, r15d",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x1400092b1",
    "mov     rdx, qword [rsp+0xa8]",
    "mov     dword [rsp+0x40], 0x1",
    "mov     dword [rsp+0x38], r15d",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rbx+0x14]",
    "lea     r9, [rbx+0x4]",
    "mov     dword [rsp+0x28], eax",
    "lea     r8d, [rbp+0x14]",
    "mov     ecx, r14d",
    "mov     dword [rsp+0x20], 0x10",
    "call    sub_140003fc8",
    "test    eax, eax",
    "je      0x1400092a4",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "test    ebp, ebp",
    "jne     0x1400092c2",
    "mov     ecx, dword [rbx+0x1c]",
    "lea     rax, [rsp+0x50]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0xa0]",
    "mov     r8d, r13d",
    "mov     rdx, rsi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140004704",
    "test    eax, eax",
    "je      0x140009290",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400ea1f0]  {u\"ERROR kull_m_dpapi_protect_maste\u2026\"}",
    "mov     rcx, qword [rsp+0xa0]",
    "lea     r8, [rsi+r13]",
    "lea     r13d, [rbp+0x1]",
    "mov     edx, r13d",
    "xor     r9d, r9d",
    "call    qword [rel CryptSetKeyParam]",
    "test    eax, eax",
    "je      0x140009265",
    "mov     rcx, qword [rsp+0xa0]",
    "call    qword [rel CryptDestroyKey]",
    "mov     rcx, qword [rsp+0x50]",
    "call    sub_140003d2c",
    "test    eax, eax",
    "jne     0x1400092a4",
    "mov     eax, dword [rdi]",
    "xor     r9d, r9d",
    "mov     r8d, r13d",
    "lea     ecx, [r12+rax]",
    "mov     rax, qword [rbx+0x20]",
    "xor     edx, edx",
    "mov     dword [rsp+0x30], ecx",
    "mov     rcx, qword [rsp+0xa0]",
    "mov     qword [rsp+0x28], rdi",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel CryptEncrypt]",
    "mov     ebp, eax",
    "test    eax, eax",
    "je      0x140009251",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400ea110]  {u\"ERROR kull_m_dpapi_protect_maste\u2026\"}",
    "jmp     0x14000929d",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400ea060]  {u\"ERROR kull_m_dpapi_protect_maste\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "sub     dword [rdi], r12d",
    "jmp     0x140009265",
    "mov     edx, eax",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}