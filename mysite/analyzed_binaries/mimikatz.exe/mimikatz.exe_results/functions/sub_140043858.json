{
  "address": "0x140043858",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x20",
    "xor     edi, edi",
    "xor     ebp, ebp",
    "mov     r13d, r9d",
    "mov     rsi, r8",
    "mov     r12d, edx",
    "mov     rbx, rcx",
    "mov     dword [rax+0x18], edi",
    "test    r8, r8",
    "je      0x1400438ae",
    "movsxd  rdx, ebp",
    "mov     rcx, rbx",
    "add     rdx, 0x48",
    "call    sub_140016c18",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x140043960",
    "cmp     edx, 0x96",
    "jne     0x1400438a9",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x58]",
    "mov     rax, rbx",
    "mov     rbx, qword [rsp+0x40]",
    "add     rsp, 0x20",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "xor     edx, edx",
    "mov     rcx, rax",
    "lea     r8d, [rdx+0x48]",
    "call    memset",
    "or      eax, 0xffffffff",
    "mov     byte [rbx], r12b",
    "mov     word [rbx+0x2e], ax",
    "test    rsi, rsi",
    "je      0x140043960",
    "mov     ebp, dword [rsi+0x8]",
    "inc     ebp",
    "mov     rcx, qword [r8]",
    "test    rcx, rcx",
    "je      0x1400438a9",
    "test    ebp, ebp",
    "jne     0x14004390a",
    "lea     rdx, [rax+0x18]",
    "call    sub_140019a68",
    "mov     edi, dword [rsp+0x50]",
    "test    eax, eax",
    "jne     0x1400438ae",
    "lea     rcx, [rbx+0x48]",
    "mov     qword [rbx+0x8], rcx",
    "cmp     dword [rsi+0x8], 0x0",
    "je      0x140043924",
    "mov     eax, edi",
    "mov     dword [rbx+0x8], edi",
    "neg     eax",
    "sbb     ecx, ecx",
    "and     ecx, 0xf0000000",
    "add     ecx, 0x20000000",
    "or      ecx, 0x800400",
    "or      dword [rbx+0x4], ecx",
    "jmp     0x140043960",
    "mov     ecx, dword [rsi+0x8]",
    "mov     rax, qword [rbx+0x8]",
    "mov     byte [rcx+rax], 0x0",
    "test    r13d, r13d",
    "je      0x140043960",
    "mov     r8d, dword [rsi+0x8]",
    "mov     rdx, qword [rsi]",
    "call    memcpy",
    "mov     rcx, qword [rbx+0x8]",
    "lea     rax, [rel data_1400d6500]",
    "movzx   edx, byte [rcx]",
    "test    byte [rdx+rax], 0x80",
    "je      0x140043960",
    "mov     eax, 0x4000000",
    "cmp     dl, 0x22",
    "lea     r8d, [rax+0x40]",
    "cmove   eax, r8d",
    "or      dword [rbx+0x4], eax",
    "call    sub_140019224"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}