{
  "address": "0x14005cf58",
  "rules": [
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "contain loop",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211"
  ],
  "disassembly": [
    "mov     byte [rsp+0x20], r9b",
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x38",
    "mov     r10, qword [rdx+0x70]",
    "mov     ebp, r8d",
    "mov     rsi, rdx",
    "mov     rdi, rcx",
    "mov     r13d, 0xfff0bdc0",
    "test    r10, r10",
    "je      0x14005cfaf",
    "mov     rcx, rdi",
    "call    sub_140065300",
    "mov     ebx, dword [rsp+0xa0]",
    "mov     r10, rax",
    "mov     qword [rsp+0x80], rax",
    "test    ebx, ebx",
    "jns     0x14005cfd0",
    "mov     rax, qword [rcx]",
    "xor     r13d, r13d",
    "mov     r9, qword [rax+0x20]",
    "cmp     qword [r9+0x18], r10",
    "je      0x14005cfaf",
    "mov     r12, qword [rsp+0xb0]",
    "mov     edx, ebx",
    "inc     ebx",
    "test    r12, r12",
    "je      0x14005cfe5",
    "mov     ebx, dword [rdi+0x34]",
    "lea     rcx, [r9+0x18]",
    "test    byte [rsi+0x40], 0x20",
    "mov     r14, qword [rsp+0xa8]",
    "jne     0x14005d018",
    "mov     dword [r12], edx",
    "add     rcx, 0x20",
    "inc     r13d",
    "cmp     qword [rcx], r10",
    "jne     0x14005cfa3",
    "mov     rax, qword [rsp+0xb8]",
    "test    rax, rax",
    "je      0x14005d027",
    "test    r14, r14",
    "je      0x14005cffe",
    "mov     rsi, qword [rsi+0x10]",
    "xor     ebp, ebp",
    "xor     r15d, r15d",
    "jmp     0x14005d0c7",
    "mov     dword [rax], ebx",
    "mov     r9, rsi",
    "mov     r8d, r13d",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_14005a1e8",
    "mov     r10, qword [rsp+0x80]",
    "cmp     byte [r14], 0x0",
    "je      0x14005d018",
    "test    rsi, rsi",
    "jne     0x14005d035",
    "mov     eax, dword [rsi+0x64]",
    "mov     r8d, ebx",
    "inc     ebx",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "jne     0x14005d062",
    "cmp     ebx, dword [rdi+0x34]",
    "jle     0x14005d0d8",
    "test    r14, r14",
    "je      0x14005d06f",
    "mov     rax, qword [rsp+0x88]",
    "test    byte [rax+0x40], 0x20",
    "je      0x14005d062",
    "mov     eax, ebp",
    "add     rsp, 0x38",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     dword [rdi+0x34], ebx",
    "mov     r9d, dword [rsi+0x58]",
    "mov     edx, dword [rsp+0x90]",
    "mov     rcx, r10",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "mov     rdx, rsi",
    "mov     rcx, rdi",
    "call    sub_140032d08",
    "mov     r10, qword [rsp+0x80]",
    "movsxd  r11, dword [r10+0x90]",
    "test    r11d, r11d",
    "jle     0x14005d0be",
    "cmp     byte [r15+r14+0x1], 0x0",
    "je      0x14005d0be",
    "test    r12, r12",
    "je      0x14005d05a",
    "mov     rsi, qword [rsi+0x28]",
    "inc     ebp",
    "inc     r15",
    "mov     rax, qword [r10+0x88]",
    "movzx   edx, byte [rsp+0x98]",
    "lea     rcx, [r11+r11*2]",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     byte [rsp+0x98], 0x0",
    "mov     dword [r12], r8d"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}