{
  "address": "0x140071a08",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "decompress data using LZO/368a268678dc46ccbe6ee697869692a3",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x10], rdx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x48",
    "mov     rbx, qword [rcx+0x10]",
    "mov     rbp, rcx",
    "mov     rcx, qword [rdx+0x48]",
    "movzx   edi, word [rcx+0x2e]",
    "mov     eax, dword [rbp+0x38]",
    "mov     qword [rsp+0x38], rcx",
    "mov     r13, rdx",
    "mov     rdx, qword [rcx+0x20]",
    "movzx   ecx, word [rcx+0x18]",
    "lea     r12d, [rcx+r9]",
    "mov     dword [rsp+0xa8], ecx",
    "mov     rcx, qword [rbp]",
    "lea     esi, [rax+0x1]",
    "add     eax, r12d",
    "mov     r15d, r8d",
    "mov     dword [rbp+0x38], eax",
    "mov     qword [rsp+0x30], rbx",
    "call    sub_14005a288",
    "mov     rcx, qword [rbp]",
    "mov     rdx, rax",
    "call    sub_140016dac",
    "xor     r8d, r8d",
    "mov     r14, rax",
    "cmp     di, r8w",
    "je      0x140071b51",
    "mov     r11, qword [rsp+0x98]",
    "mov     r13d, dword [r13+0x8]",
    "mov     eax, r15d",
    "mov     dword [rsp+0x20], r8d",
    "neg     eax",
    "mov     rcx, rbx",
    "mov     r8d, r13d",
    "sbb     edx, edx",
    "xor     r9d, r9d",
    "and     edx, 0xfffffffc",
    "add     edx, 0x24",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0xb]",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "call    sub_140032364",
    "mov     rcx, qword [rsp+0x30]",
    "movzx   r15d, di",
    "mov     ebx, eax",
    "mov     eax, dword [rsp+0xa0]",
    "mov     r8d, r13d",
    "neg     eax",
    "mov     dword [rsp+0x28], r15d",
    "mov     dword [rsp+0x20], esi",
    "sbb     edx, edx",
    "xor     r9d, r9d",
    "and     edx, 0xfffffffd",
    "add     edx, 0x19",
    "call    sub_140032678",
    "mov     r10, qword [rsp+0x30]",
    "mov     r11, qword [rsp+0x98]",
    "mov     rcx, r10",
    "mov     edx, ebx",
    "mov     dword [r11+0x14], eax",
    "call    sub_140032d34",
    "xor     ebx, ebx",
    "mov     r9, rax",
    "mov     eax, dword [r10+0x90]",
    "mov     dword [r9+0x8], eax",
    "test    r15d, r15d",
    "jle     0x140071b59",
    "mov     rcx, qword [rsp+0xb0]",
    "mov     eax, esi",
    "mov     qword [rcx], r14",
    "add     rsp, 0x48",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     r15, rbx",
    "lea     rdi, [rbx+r14]",
    "shl     r15, 0x3",
    "movzx   ebx, di",
    "movsxd  rcx, r12d",
    "cmp     ebx, dword [rsp+0xa8]",
    "mov     qword [rsp+0x90], rcx",
    "jge     0x140071ca6",
    "mov     rbp, r10",
    "test    byte [r12+0x14], 0x1",
    "je      0x140071c10",
    "cmp     qword [rsp+0x90], 0x1",
    "jne     0x140071be1",
    "lea     eax, [rbx+rsi]",
    "mov     r9d, ebx",
    "mov     r8d, r13d",
    "mov     edx, 0x5a",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "inc     ebx",
    "cmp     ebx, r15d",
    "jl      0x140071b28",
    "mov     rbp, qword [rsp+0x90]",
    "mov     eax, 0x100",
    "test    word [r12+0x14], ax",
    "jne     0x140071c88",
    "mov     rax, qword [r12]",
    "bt      dword [rax+0x4], 0xb",
    "jae     0x140071c88",
    "mov     rcx, qword [rsp+0x30]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r13d",
    "mov     edx, 0x4f",
    "call    sub_140032364",
    "test    esi, esi",
    "je      0x140071bdc",
    "mov     r11, qword [rsp+0x98]",
    "inc     ebx",
    "add     r15, 0x8",
    "inc     rdi",
    "cmp     ebx, dword [rsp+0xa8]",
    "jl      0x140071b7f",
    "mov     rax, qword [r12]",
    "mov     r13, qword [rax+0x18]",
    "mov     eax, 0x800",
    "test    word [r12+0x12], ax",
    "jne     0x140071c62",
    "test    r14, r14",
    "jmp     0x140071c83",
    "mov     esi, r8d",
    "jmp     0x140071bf8",
    "cmp     byte [rbp+0x1f], 0x8",
    "jae     0x140071bdc",
    "mov     rax, qword [rsp+0x38]",
    "lea     r13d, [rbx+rsi]",
    "mov     r9d, ebx",
    "mov     rax, qword [rax+0x38]",
    "mov     r8, r11",
    "mov     rcx, rbp",
    "mov     r12, qword [r15+rax]",
    "mov     eax, dword [rsp+0xa0]",
    "mov     dword [rsp+0x28], r13d",
    "mov     rdx, r12",
    "mov     dword [rsp+0x20], eax",
    "call    sub_1400715a8",
    "mov     r8d, eax",
    "cmp     eax, r13d",
    "je      0x140071bf8",
    "test    r14, r14",
    "je      0x140071c88",
    "mov     rcx, r13",
    "call    sub_140044fa4",
    "test    eax, eax",
    "je      0x140071c62",
    "je      0x140071c88",
    "movzx   eax, byte [rbp+0x1f]",
    "mov     dword [rbp+rax*4+0xbc], esi",
    "inc     byte [rbp+0x1f]",
    "mov     dl, byte [rdi]",
    "mov     rcx, r13",
    "call    sub_14004328c",
    "cmp     al, 0x41",
    "jne     0x140071c77",
    "mov     rax, qword [rsp+0x98]",
    "mov     rcx, qword [rsp+0x30]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, dword [rax+0xc]",
    "lea     r8d, [rbx+rsi]",
    "mov     edx, 0x32",
    "call    sub_140032364",
    "mov     byte [rdi], 0x41",
    "mov     dl, byte [rdi]",
    "mov     rcx, r13",
    "call    sub_14004500c",
    "test    eax, eax",
    "mov     byte [rdi], al"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}