{
  "address": "0x14000ca60",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x10], rbx",
    "mov     qword [r11+0x18], rbp",
    "mov     qword [r11+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x1c0",
    "xor     r13d, r13d",
    "mov     r15, rdx",
    "mov     edx, dword [rcx]",
    "lea     rax, [rel data_140140240]",
    "lea     ebp, [r13+0x1]",
    "mov     r14, r8",
    "mov     rsi, rcx",
    "mov     ebx, 0xc0000135",
    "mov     qword [rsp+0x60], r13",
    "mov     edi, ebp",
    "mov     qword [rsp+0x68], rax",
    "mov     qword [rsp+0x50], r13",
    "mov     qword [rsp+0x58], rcx",
    "mov     qword [r11+0x8], r13",
    "mov     qword [rsp+0x38], rcx",
    "cmp     edx, r13d",
    "je      0x14000cf09",
    "lea     rdx, [rsp+0x80]",
    "xor     r8d, r8d",
    "call    sub_14000d2f4",
    "cmp     eax, r13d",
    "je      0x14000cf7d",
    "sub     edx, ebp",
    "je      0x14000cc4b",
    "lea     rax, [rsp+0x20]",
    "mov     qword [rsp+0x48], rax",
    "cmp     edi, r13d",
    "je      0x14000d00b",
    "mov     rax, qword [rsp+0x98]",
    "mov     rbx, qword [rax+0x20]",
    "jmp     0x14000cf6d",
    "lea     rax, [rsp+0x20]",
    "lea     rdx, [rsp+0x80]",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x48], rax",
    "call    sub_14000d2f4",
    "cmp     eax, r13d",
    "je      0x14000d00b",
    "sub     edx, ebp",
    "je      0x14000cba3",
    "lea     r11, [rsp+0x1c0]",
    "mov     eax, ebx",
    "mov     rbx, qword [r11+0x38]",
    "mov     rbp, qword [r11+0x40]",
    "mov     rsi, qword [r11+0x48]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "cmp     ebx, r13d",
    "jl      0x14000d00b",
    "sub     rbx, 0x10",
    "add     rax, 0x10",
    "cmp     rbx, rax",
    "jne     0x14000cf2c",
    "lea     rax, [rsp+0x180]",
    "mov     r12d, 0x40",
    "lea     rdx, [rsp+0x50]",
    "mov     qword [rsp+0x60], rax",
    "mov     rax, qword [rsp+0x98]",
    "lea     rcx, [rsp+0x60]",
    "mov     r8, r12",
    "mov     qword [rsp+0x50], rax",
    "call    sub_14000b6d8",
    "cmp     eax, r13d",
    "je      0x14000d00b",
    "mov     rcx, qword [rcx+0x8]",
    "lea     rax, [rsp+0x20]",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x48], rax",
    "mov     rcx, qword [rcx]",
    "lea     edx, [r8+0x4]",
    "call    sub_14000bddc",
    "mov     rbp, rax",
    "cmp     rax, r13",
    "je      0x14000d00b",
    "cmp     edx, ebp",
    "je      0x14000cae3",
    "lea     rdx, [rsp+0x70]",
    "mov     r8d, ebp",
    "mov     rcx, rsi",
    "call    sub_14000d2f4",
    "cmp     eax, r13d",
    "je      0x14000d00b",
    "cmp     edi, r13d",
    "je      0x14000cf7a",
    "mov     ebx, r13d",
    "mov     rcx, qword [rsp+0x1a0]",
    "mov     rbx, qword [rsp+0x98]",
    "add     rcx, 0xfffffffffffffff0",
    "add     rbx, 0x10",
    "jmp     0x14000cda4",
    "mov     r12d, r13d",
    "cmp     dword [rax], r13d",
    "jbe     0x14000d008",
    "xor     r8d, r8d",
    "lea     rdx, [rsp+0x1f0]",
    "lea     ecx, [r8+0xb]",
    "call    sub_14000c8c0",
    "cmp     eax, r13d",
    "mov     ebx, eax",
    "jl      0x14000d00b",
    "mov     ebx, 0xc0000002",
    "jmp     0x14000d00b",
    "mov     eax, dword [rsp+0x7c]",
    "mov     ebx, dword [rax+0x14]",
    "jmp     0x14000cffb",
    "mov     rax, qword [rbx+0x30]",
    "lea     rcx, [rsp+0x30]",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rbx+0x40]",
    "mov     dword [rsp+0x40], eax",
    "lea     rax, [rbx+0x58]",
    "mov     qword [rsp+0x48], rax",
    "call    sub_14000d030",
    "lea     rcx, [rsp+0x30]",
    "mov     rdx, r14",
    "call    r15",
    "mov     rbx, qword [rbx+0x10]",
    "mov     edi, eax",
    "mov     rax, qword [rsp+0x98]",
    "cmp     rcx, rbx",
    "jne     0x14000ccc6",
    "mov     ebx, r13d",
    "lea     rbx, [rax+0xc]",
    "mov     rsi, qword [rsp+0x1f0]",
    "lea     rax, [rsp+0x20]",
    "mov     ebp, r13d",
    "mov     qword [rsp+0x48], rax",
    "cmp     dword [rsi], r13d",
    "jbe     0x14000d00b",
    "sub     rbx, 0x8",
    "add     rax, 0x10",
    "cmp     rbx, rax",
    "jne     0x14000cfaf",
    "cmp     edi, r13d",
    "je      0x14000cdad",
    "mov     ebx, r13d",
    "cmp     edi, r13d",
    "je      0x14000d00b",
    "mov     rax, qword [rbx-0x8]",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rbx]",
    "mov     dword [rsp+0x40], eax",
    "mov     rax, qword [rsi+0x8]",
    "mov     r8d, dword [rbx+0xc]",
    "mov     rcx, qword [rax]",
    "add     r8, qword [rcx+0x8]",
    "je      0x14000cc39",
    "lea     r12, [rsi+0x20]",
    "cmp     edi, r13d",
    "je      0x14000d008",
    "lea     rax, [rsp+0xe0]",
    "mov     qword [rsp+0x50], rcx",
    "lea     rdx, [rsp+0x50]",
    "lea     rcx, [rsp+0x60]",
    "mov     r8d, 0x68",
    "mov     qword [rsp+0x60], rax",
    "call    sub_14000b6d8",
    "mov     edi, eax",
    "cmp     eax, r13d",
    "je      0x14000cd98",
    "lea     rdx, [rsp+0x70]",
    "mov     r8d, ebp",
    "mov     rcx, rsi",
    "call    sub_14000d2f4",
    "cmp     eax, r13d",
    "je      0x14000d00b",
    "inc     r12d",
    "add     rbx, 0x6c",
    "cmp     r12d, dword [rbp]",
    "jb      0x14000cbdc",
    "lea     rcx, [r8+0x4]",
    "mov     edx, 0x5c",
    "call    qword [rel wcsrchr]",
    "lea     rcx, [rsp+0x20]",
    "lea     rdx, [rax+0x2]",
    "call    RtlInitUnicodeString",
    "lea     rcx, [rsp+0x30]",
    "call    sub_14000d030",
    "lea     rcx, [rsp+0x30]",
    "mov     rdx, r14",
    "call    r15",
    "mov     edi, eax",
    "mov     rax, qword [r12-0x8]",
    "mov     ecx, ebp",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [r12]",
    "imul    rcx, rcx, 0x128",
    "mov     dword [rsp+0x40], eax",
    "movzx   eax, word [r12+0xe]",
    "add     rax, rsi",
    "lea     rcx, [rcx+rax+0x30]",
    "call    sub_140012d3c",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x14000cb8b",
    "mov     eax, dword [rbx+0x18]",
    "lea     rcx, [rsp+0x30]",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rbx+0x20]",
    "mov     dword [rsp+0x40], eax",
    "movzx   eax, word [rbx+0x2c]",
    "mov     word [rsp+0x20], ax",
    "movzx   eax, word [rbx+0x2e]",
    "mov     word [rsp+0x22], ax",
    "mov     eax, dword [rbx+0x30]",
    "mov     qword [rsp+0x28], rax",
    "call    sub_14000d030",
    "lea     rcx, [rsp+0x30]",
    "mov     rdx, r14",
    "call    r15",
    "mov     ebx, dword [rbx+0x8]",
    "mov     edi, eax",
    "mov     eax, dword [rsp+0x7c]",
    "mov     rcx, qword [rsp+0xf0]",
    "add     rcx, 0xfffffffffffffff0",
    "mov     rax, qword [rsp+0x110]",
    "movdqu  xmm0, xmmword [rsp+0x138]",
    "mov     ecx, r12d",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rsp+0x120]",
    "movdqu  xmmword [rsp+0x20], xmm0",
    "mov     dword [rsp+0x40], eax",
    "mov     rax, qword [rsp+0x138]",
    "shr     rax, 0x10",
    "movzx   edx, ax",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x28], rax",
    "cmp     rax, r13",
    "je      0x14000cd98",
    "lea     rax, [rsp+0x150]",
    "lea     rdx, [rsp+0x50]",
    "lea     rcx, [rsp+0x60]",
    "mov     qword [rsp+0x60], rax",
    "mov     eax, dword [rsp+0x7c]",
    "mov     r8d, 0x24",
    "mov     qword [rsp+0x50], rax",
    "mov     ebx, 0x8000000d",
    "call    sub_14000b6d8",
    "cmp     eax, r13d",
    "je      0x14000d00b",
    "cmp     edi, r13d",
    "je      0x14000d008",
    "jmp     0x14000d008",
    "inc     ebp",
    "add     r12, 0x128",
    "mov     r13d, 0x0",
    "cmp     ebp, dword [rsi]",
    "jb      0x14000cb24",
    "lea     rcx, [rsp+0x20]",
    "mov     rdx, rax",
    "call    RtlInitUnicodeString",
    "and     dword [rsp+0x44], 0x0",
    "lea     rcx, [rsp+0x30]",
    "mov     rdx, r14",
    "call    r15",
    "mov     rcx, r13",
    "mov     edi, eax",
    "call    qword [rel LocalFree]",
    "movzx   r8d, word [rsp+0x22]",
    "mov     qword [rsp+0x60], rax",
    "mov     rax, qword [rsp+0x140]",
    "lea     rdx, [rsp+0x50]",
    "lea     rcx, [rsp+0x60]",
    "mov     qword [rsp+0x50], rax",
    "call    sub_14000b6d8",
    "cmp     eax, r13d",
    "je      0x14000cd8d",
    "mov     eax, dword [rsp+0x164]",
    "mov     ebx, dword [rsp+0x7c]",
    "sub     rax, 0x8",
    "add     rbx, 0xc",
    "jmp     0x14000cefb",
    "cmp     edi, r13d",
    "je      0x14000d00b",
    "jmp     0x14000d00b",
    "mov     rcx, qword [rsp+0x28]",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rsp+0x30]",
    "call    sub_14000d030",
    "lea     rcx, [rsp+0x30]",
    "mov     rdx, r14",
    "call    r15",
    "mov     edi, eax",
    "cmp     rax, rbx",
    "jne     0x14000ce23",
    "cmp     edi, r13d",
    "je      0x14000d008",
    "jmp     0x14000d008",
    "lea     rcx, [rsp+0xa8]",
    "lea     rdx, [rsp+0x50]",
    "mov     r8d, 0x34",
    "mov     qword [rsp+0x60], rcx",
    "lea     rcx, [rsp+0x60]",
    "mov     qword [rsp+0x50], rax",
    "call    sub_14000b6d8",
    "cmp     eax, r13d",
    "je      0x14000cef0",
    "mov     eax, dword [rsp+0xb0]",
    "sub     rax, 0x8",
    "mov     eax, dword [rsp+0xc0]",
    "mov     ecx, r12d",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rsp+0xc8]",
    "mov     dword [rsp+0x40], eax",
    "movzx   eax, word [rsp+0xd4]",
    "mov     word [rsp+0x20], ax",
    "movzx   eax, word [rsp+0xd6]",
    "mov     rdx, rax",
    "mov     word [rsp+0x22], ax",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x28], rax",
    "cmp     rax, r13",
    "je      0x14000cef0",
    "movzx   r8d, word [rsp+0x22]",
    "mov     qword [rsp+0x60], rax",
    "mov     eax, dword [rsp+0xd8]",
    "lea     rdx, [rsp+0x50]",
    "lea     rcx, [rsp+0x60]",
    "mov     qword [rsp+0x50], rax",
    "call    sub_14000b6d8",
    "cmp     eax, r13d",
    "je      0x14000cee5",
    "mov     rcx, qword [rsp+0x28]",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rsp+0x30]",
    "call    sub_14000d030",
    "lea     rcx, [rsp+0x30]",
    "mov     rdx, r14",
    "call    r15",
    "mov     edi, eax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}