{
  "address": "0x1400b7184",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "contain loop",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     r11, rsp {__return_addr}",
    "mov     qword [r11+0x8 {__saved_rbx}], rbx",
    "mov     qword [r11+0x10 {__saved_rsi}], rsi",
    "push    rdi {__saved_rdi}",
    "sub     rsp, 0x60",
    "mov     esi, r9d",
    "mov     rbx, rdx",
    "mov     rdi, rcx",
    "test    r8d, r8d",
    "jne     0x1400b71e1",
    "and     qword [rsp+0x20 {var_48}], 0x0",
    "lea     r8, [rel data_1401242e8]  {\"1.2.840.113556.1.4.221\"}",
    "xor     r9d, r9d  {0x0}",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b73b6",
    "lea     rax, [r11-0x38 {var_38}]",
    "lea     r9, [r11-0x30 {result_1}]",
    "lea     r8, [rel data_1401241b0]  {\"1.2.840.113556.1.2.48\"}",
    "mov     qword [r11-0x48 {var_48_1}], rax {var_38}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b71d4",
    "mov     rbx, qword [rsp+0x70 {__saved_rbx}]",
    "mov     rsi, qword [rsp+0x78 {__saved_rsi}]",
    "add     rsp, 0x60",
    "pop     rdi {__saved_rdi}",
    "retn     {__return_addr}",
    "and     qword [rsp+0x20 {var_48}], 0x0",
    "lea     r9, [rsp+0x40 {pSid}]",
    "lea     r8, [rel data_140124258]  {\"1.2.840.113556.1.4.146\"}",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b73b6",
    "mov     ecx, 0x1",
    "cmp     dword [rsp+0x30 {var_38}], 0x4",
    "jne     0x1400b71d4",
    "lea     rax, [rsp+0x30 {var_38}]",
    "lea     r9, [rsp+0x38 {result_1}]",
    "lea     r8, [rel data_1400eed80]  {\"1.2.840.113556.1.4.90\"}",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20 {var_48_2}], rax {var_38}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b73b6",
    "mov     rax, qword [rsp+0x38 {result_1}]",
    "xor     ecx, ecx  {0x0}",
    "cmp     dword [rax], ecx",
    "sete    cl",
    "jmp     0x1400b71d9",
    "mov     rcx, qword [rsp+0x40 {pSid}]",
    "call    qword [rel GetSidSubAuthorityCount]",
    "mov     rcx, qword [rsp+0x40 {pSid}]",
    "movzx   edx, byte [rax]",
    "dec     edx",
    "call    qword [rel GetSidSubAuthority]",
    "lea     rcx, [rel data_140121028]",
    "mov     edx, dword [rax]",
    "mov     dword [rsp+0x80 {arg_18}], edx",
    "call    sub_14000c030",
    "lea     r11, [rsp+0x30 {var_38}]",
    "lea     r9, [rsp+0x40 {pSid}]",
    "lea     r8, [rel data_1401242e8]  {\"1.2.840.113556.1.4.221\"}",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20 {var_48_3}], r11 {var_38}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b72d0",
    "test    ecx, ecx",
    "je      0x1400b73b6",
    "lea     rcx, [rel data_1400f13b8]",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x38 {result_1}]",
    "lea     r8, [rsp+0x48 {var_20}]",
    "lea     rdx, [rsp+0x80 {arg_18}]",
    "call    SystemFunction027",
    "test    eax, eax",
    "js      0x1400b730a",
    "mov     r8d, dword [rsp+0x30 {var_38}]",
    "mov     r9, qword [rsp+0x40 {pSid}]",
    "lea     rdx, [rel data_1400e17cc]",
    "lea     rcx, [rel data_1400f0328]  {u\"%s%.*s%s\"}",
    "shr     r8, 0x1",
    "mov     qword [rsp+0x20 {var_48_4}], rdx  {data_1400e17cc}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140124dd0]  {u\"ERROR kuhl_m_lsadump_dcsync_desc\u2026\"}",
    "call    sub_14000c030",
    "xor     r8d, r8d  {0x0}",
    "lea     rcx, [rsp+0x48 {var_20}]",
    "lea     edx, [r8+0x10]",
    "call    sub_140012f68",
    "jmp     0x1400b7316",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "test    esi, esi",
    "je      0x1400b7397",
    "and     qword [rsp+0x20 {var_48}], 0x0",
    "lea     r9, [rsp+0x38 {result_1}]",
    "lea     r8, [rel data_1401242a0]  {\"1.2.840.113556.1.4.8\"}",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b73aa",
    "mov     rax, qword [rsp+0x38 {result_1}]",
    "lea     rcx, [rel data_14011a2b0]",
    "mov     edx, dword [rax]",
    "call    sub_14000c030",
    "and     dword [rsp+0x80 {arg_18}], 0x0",
    "mov     rbx, qword [rsp+0x38 {result_1}]",
    "inc     r11d",
    "mov     dword [rsp+0x80 {arg_18}], r11d",
    "cmp     r11d, 0x20",
    "jb      0x1400b7349",
    "lea     rax, [rel data_14013b000]",
    "lea     rcx, [rel data_1400f13d8]",
    "mov     rdx, qword [rax+r11*8]",
    "call    sub_14000c030",
    "mov     r11d, dword [rsp+0x80 {arg_18}]",
    "lea     rcx, [rel data_1400f13b8]",
    "call    sub_14000c030",
    "mov     r11d, dword [rsp+0x80 {arg_18}]",
    "mov     eax, dword [rbx]",
    "bt      eax, r11d",
    "jae     0x1400b7384",
    "jmp     0x1400b73aa"
  ],
  "high_level_IL": [
    "int32_t var_38",
    "int32_t* result_1",
    "int32_t* result",
    "int32_t rcx",
    "if (arg3 == 0)",
    "result = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.2.48\", &result_1, &var_38)",
    "if (result == 0 || var_38 != 4)",
    "rcx = 1",
    "result = result_1",
    "rcx.b = *result == 0",
    "if (arg3 != 0 || rcx != 0)",
    "result = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.221\", nullptr, nullptr)",
    "if (result != 0)",
    "PSID pSid",
    "result = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.146\", &pSid, nullptr)",
    "if (result != 0)",
    "result = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.90\", &result_1, &var_38)",
    "if (result != 0)",
    "uint8_t* rax_1 = GetSidSubAuthorityCount(pSid)",
    "uint64_t rdx_5 = zx.q(*GetSidSubAuthority(pSid, zx.d(*rax_1) - 1))",
    "arg_18 = rdx_5.d",
    "sub_14000c030(u\"%u\\t\", rdx_5)",
    "int64_t rax_3",
    "int64_t rdx_7",
    "rax_3, rdx_7 = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.221\", &pSid, &var_38)",
    "if (rax_3 != 0)",
    "void* const var_48_4 = &data_1400e17cc",
    "rdx_7 = sub_14000c030(u\"%s%.*s%s\", &data_1400e17cc)",
    "sub_14000c030(U\"\\t\", rdx_7)",
    "void var_20",
    "int32_t rax_4",
    "int64_t rdx_9",
    "rax_4, rdx_9 = SystemFunction027(result_1, &arg_18, &var_20)",
    "if (rax_4 s< 0)",
    "sub_14000c030(u\"ERROR kuhl_m_lsadump_dcsync_desc\u2026\", rdx_9)",
    "sub_140012f68(&var_20, 0x10, 0)",
    "int64_t rax_5",
    "int64_t rdx_11",
    "rax_5, rdx_11 = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.8\", &result_1, nullptr)",
    "if (rax_5 != 0)",
    "if (arg4 == 0)",
    "rdx_11 = sub_14000c030(u\"\\t%u\", zx.q(*result_1))",
    "arg_18 = 0",
    "int32_t* result_2 = result_1",
    "uint64_t r11_1",
    "rdx_11 = sub_14000c030(U\"\\t\", rdx_11)",
    "r11_1 = zx.q(arg_18)",
    "if (test_bit(*result_2, r11_1.d))",
    "rdx_11 = sub_14000c030(u\"%s\", (&data_14013b000)[r11_1])",
    "r11_1 = zx.q(arg_18)",
    "arg_18 = r11_1.d + 1",
    "do while (r11_1.d + 1 u< 0x20)",
    "return sub_14000c030(U\"\\n\", rdx_11)",
    "return result"
  ]
}