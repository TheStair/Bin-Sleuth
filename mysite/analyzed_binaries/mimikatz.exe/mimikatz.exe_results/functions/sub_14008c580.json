{
  "address": "0x14008c580",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xc0",
    "xor     r15d, r15d",
    "lea     r9, [rsp+0x68]",
    "lea     r8, [rel data_1400fbddc]",
    "mov     rbp, rdx",
    "mov     r12d, ecx",
    "mov     qword [rsp+0x68], r15",
    "mov     qword [rsp+0x70], r15",
    "mov     qword [rsp+0x40], r15",
    "mov     qword [rsp+0x50], r15",
    "mov     qword [rax+0x20], r15",
    "mov     qword [rsp+0x48], r15",
    "mov     rsi, r15",
    "mov     edi, r15d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "cmp     eax, r15d",
    "je      0x14008c98a",
    "lea     rcx, [rel data_1400fd2d0]  {u\"ERROR kuhl_m_dpapi_credhist ; In\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x68]",
    "lea     r8, [rsp+0x110]",
    "lea     rdx, [rsp+0x60]",
    "xor     r9d, r9d",
    "call    sub_140009e4c",
    "cmp     eax, r15d",
    "je      0x14008c996",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0x100]",
    "add     rsp, 0xc0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     edx, dword [rsp+0x110]",
    "mov     rcx, qword [rsp+0x60]",
    "call    sub_140007cf8",
    "mov     rbx, rax",
    "cmp     rax, r15",
    "je      0x14008c97d",
    "mov     rcx, qword [rsp+0x60]",
    "call    qword [rel LocalFree]",
    "jmp     0x14008c996",
    "mov     rdx, rax",
    "xor     ecx, ecx",
    "call    sub_140007e5c",
    "lea     r9, [rsp+0x70]",
    "lea     r8, [rel data_1400fb7d8]",
    "mov     rdx, rbp",
    "mov     ecx, r12d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "cmp     eax, r15d",
    "je      0x14008c67e",
    "lea     r9, [rsp+0x50]",
    "lea     r8, [rel data_1400fc488]  {u\"password\"}",
    "mov     rdx, rbp",
    "mov     ecx, r12d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "mov     r14, qword [rsp+0x50]",
    "mov     r13d, 0x14",
    "cmp     eax, r15d",
    "je      0x14008c6d7",
    "mov     rcx, qword [rsp+0x70]",
    "lea     rdx, [rsp+0x48]",
    "call    ConvertStringSidToSidW",
    "cmp     eax, r15d",
    "je      0x14008c66a",
    "lea     r9, [rsp+0x40]",
    "lea     r8, [rel data_1400f9c08]  {u\"sha1\"}",
    "mov     rdx, rbp",
    "mov     ecx, r12d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "cmp     eax, r15d",
    "je      0x14008c733",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, r14",
    "repne scasw word [rdi]",
    "lea     r9, [rsp+0x78]",
    "mov     rdx, r14",
    "not     rcx",
    "mov     dword [rsp+0x20], r13d",
    "lea     r8d, [rcx+rcx-0x2]",
    "mov     ecx, 0x8004",
    "call    sub_140003970",
    "jmp     0x14008c731",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400fd1b0]  {u\"ERROR kuhl_m_dpapi_credhist ; Co\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rsi, qword [rsp+0x48]",
    "jmp     0x14008c67e",
    "lea     r13, [rbx+0x4]",
    "cmp     rsi, r15",
    "jne     0x14008c74d",
    "mov     rdi, qword [rsp+0x40]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "repne scasw word [rdi]",
    "mov     edi, r15d",
    "not     rcx",
    "dec     rcx",
    "cmp     rcx, 0x28",
    "sete    dil",
    "cmp     edi, r15d",
    "je      0x14008c733",
    "mov     edi, eax",
    "mov     r12d, r15d",
    "movsxd  r15, edi",
    "test    rsi, rsi",
    "je      0x14008c91c",
    "cmp     dword [rbx+0x20], r15d",
    "je      0x14008c74d",
    "mov     rcx, qword [rsp+0x40]",
    "lea     rdx, [rsp+0x78]",
    "mov     r9d, edi",
    "mov     r8d, r13d",
    "call    sub_140012e68",
    "mov     rcx, qword [rsp+0x48]",
    "test    rcx, rcx",
    "je      0x14008c92c",
    "xor     ebp, ebp",
    "mov     rax, qword [rbx+0x18]",
    "mov     rcx, qword [rax]",
    "mov     rsi, qword [rcx+0x44]",
    "xor     esi, esi",
    "cmp     dword [rbx+0x20], esi",
    "jbe     0x14008c974",
    "call    qword [rel LocalFree]",
    "lea     rdx, [rsp+0x118]",
    "mov     rcx, rsi",
    "call    ConvertSidToStringSidW",
    "test    eax, eax",
    "je      0x14008c8fc",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "xor     ebp, ebp",
    "mov     rax, qword [rbx+0x18]",
    "inc     r12d",
    "mov     rcx, qword [rax+rbp]",
    "add     rbp, 0x8",
    "mov     rsi, qword [rcx+0x44]",
    "lea     r13, [rcx+0x4]",
    "test    rsi, rsi",
    "jne     0x14008c75e",
    "mov     rdx, r13",
    "xor     ecx, ecx",
    "call    sub_14008d2a8",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x14008c7a9",
    "inc     esi",
    "add     rbp, 0x8",
    "cmp     esi, dword [rbx+0x20]",
    "jb      0x14008c935",
    "mov     rcx, qword [rdi+0x44]",
    "test    rcx, rcx",
    "je      0x14008c951",
    "cmp     r12d, dword [rbx+0x20]",
    "jae     0x14008c91c",
    "test    byte [rdi+0x10], 0x2",
    "je      0x14008c807",
    "mov     rcx, qword [rsp+0x118]",
    "xor     edx, edx",
    "call    sub_14008d2a8",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x14008c807",
    "mov     rax, qword [rbx+0x18]",
    "mov     rdi, qword [rax+rbp]",
    "test    rdi, rdi",
    "je      0x14008c969",
    "mov     rcx, qword [rdi+0x4c]",
    "test    rcx, rcx",
    "je      0x14008c960",
    "call    qword [rel LocalFree]",
    "test    r15, r15",
    "je      0x14008c8ee",
    "lea     rcx, [rel data_1400fd230]  {u\"\\n  [entry %u] with volatile cac\u2026\"}",
    "mov     edx, r12d",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    sub_14008d680",
    "mov     rcx, qword [rbx+0x18]",
    "lea     rax, [rsp+0x90]",
    "mov     rcx, qword [rcx+rbp]",
    "lea     rdx, [rdi+0x68]",
    "lea     r9, [rsp+0x50]",
    "mov     r8d, 0x14",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140009924",
    "test    eax, eax",
    "je      0x14008c8ee",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "call    qword [rel LocalFree]",
    "mov     rcx, qword [rsp+0x118]",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_1400fd280]  {u\"\\n  [entry %u] with SHA1 and SID\u2026\"}",
    "mov     edx, r12d",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "lea     rcx, [rsp+0x78]",
    "lea     esi, [r8+0x14]",
    "mov     edx, esi",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     r9, qword [rsp+0x118]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, r9",
    "mov     dword [rsp+0x30], esi",
    "repne scasw word [rdi]",
    "lea     rdx, [rsp+0x78]",
    "mov     r8d, esi",
    "not     rcx",
    "lea     eax, [rcx+rcx]",
    "lea     rcx, [rsp+0xa8]",
    "mov     qword [rsp+0x28], rcx",
    "mov     ecx, 0x8004",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x14008c8ee",
    "mov     rdx, r13",
    "mov     rcx, rdi",
    "call    sub_14008d378",
    "jmp     0x14008c8d4",
    "mov     rcx, qword [rbx+0x18]",
    "lea     rax, [rsp+0x90]",
    "lea     r9, [rsp+0x50]",
    "mov     rcx, qword [rcx+rbp]",
    "lea     rdx, [rsp+0xa8]",
    "mov     r8d, esi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140009924",
    "test    eax, eax",
    "je      0x14008c8ee",
    "mov     rcx, qword [rbx+0x18]",
    "lea     r8, [rsp+0x90]",
    "lea     rdx, [rsp+0x50]",
    "mov     rcx, qword [rcx+rbp]",
    "call    sub_14008cfd0",
    "mov     rcx, qword [rsp+0x118]",
    "lea     r9, [rsp+0x78]",
    "xor     r8d, r8d",
    "mov     rdx, r13",
    "mov     qword [rsp+0x28], r14",
    "and     qword [rsp+0x20], 0x0",
    "call    sub_14008d590"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}