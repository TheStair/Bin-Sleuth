{
  "address": "0x14005377c",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8 {__saved_rbx}], rbx",
    "mov     qword [rsp+0x10 {__saved_rbp}], rbp",
    "mov     qword [rsp+0x18 {__saved_rsi}], rsi",
    "push    rdi {__saved_rdi}",
    "sub     rsp, 0x30",
    "mov     rbx, rcx",
    "mov     rcx, qword [rcx]",
    "movsxd  rbp, edx",
    "mov     rdx, r8",
    "call    sub_14004e64c",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140053812",
    "mov     rbx, qword [rsp+0x40 {__saved_rbx}]",
    "mov     rbp, qword [rsp+0x48 {__saved_rbp}]",
    "mov     rsi, qword [rsp+0x50 {__saved_rsi}]",
    "add     rsp, 0x30",
    "pop     rdi {__saved_rdi}",
    "retn     {__return_addr}",
    "mov     rcx, rbx",
    "call    sub_140065300",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140053807",
    "mov     rcx, qword [rbx]",
    "mov     rdx, rdi",
    "call    sub_1400169a8",
    "and     qword [rsp+0x20 {var_18_1}], 0x0",
    "lea     rax, [rel data_1400d7468]",
    "mov     r9, rdi",
    "mov     r8, qword [rax+rbp*8]",
    "mov     edx, 0x20",
    "mov     rcx, rbx",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x140053807",
    "and     dword [rsp+0x20 {var_18_1}], eax",
    "xor     r9d, r9d  {0x0}",
    "mov     r8d, ebp",
    "xor     edx, edx  {0x0}",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r9d, 0xfffffff9",
    "mov     r8, rdi",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "jmp     0x140053812"
  ],
  "high_level_IL": [
    "int64_t rbp = sx.q(arg2)",
    "int64_t* result = sub_14004e64c(*arg1, arg3, arg4)",
    "if (result == 0)",
    "return result",
    "int64_t* rax = sub_140065300(arg1)",
    "if (rax != 0)",
    "int32_t var_18_1 = 0",
    "(&data_1400d7468)[rbp]",
    "int32_t rax_1",
    "int512_t zmm1",
    "rax_1, zmm1 = sub_14004da74(arg1, 0x20)",
    "if (rax_1 == 0)",
    "int32_t rax_2",
    "int512_t zmm1_1",
    "rax_2, zmm1_1 = sub_140032364(rax, 0, rbp.d, 0, zmm1, 0)",
    "return sub_140032c40(rax, rax_2, result, 0xfffffff9, zmm1_1)",
    "return sub_1400169a8(*arg1, result)"
  ]
}