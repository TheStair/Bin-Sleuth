{
  "address": "0x14002e468",
  "rules": [
    "encrypt data using speck/4b1f3c27d17344b39cf9dede3bcf8b4b",
    "load shellcode via donut/c9a72a5fdf6e462ea071ab99fb8585e2/5c9bba15e9b64c668b01383d9c9afe0e",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "check for software breakpoints/eab8e97e968348cd9975bb039b618db9",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x68",
    "mov     rdi, qword [rcx+0x8]",
    "and     dword [rsp+0xc8], 0x0",
    "mov     r12b, dl",
    "mov     r14, qword [rdi+0x8]",
    "and     r12b, 0x2",
    "cmp     byte [rcx], 0x3",
    "mov     rbx, rcx",
    "mov     byte [rsp+0xb8], r12b",
    "jne     0x14002e4ad",
    "mov     rsi, qword [rbx+0x88]",
    "movzx   r13d, word [rbx+0x56]",
    "movsx   r15, byte [rbx+0x54]",
    "mov     rcx, qword [rsi+0x60]",
    "mov     dword [rsp+0xc0], r13d",
    "movzx   eax, byte [rcx+r13*2]",
    "shl     eax, 0x8",
    "movsxd  rbp, eax",
    "movzx   eax, byte [rcx+r13*2+0x1]",
    "or      rbp, rax",
    "movzx   eax, word [rsi+0x1a]",
    "and     rbp, rax",
    "add     rbp, qword [rsi+0x50]",
    "cmp     dword [rsi+0x14], 0x0",
    "jge     0x14002e505",
    "call    sub_14002644c",
    "test    eax, eax",
    "jne     0x14002e85a",
    "test    r12b, r12b",
    "je      0x14002e55f",
    "mov     rcx, rsi",
    "call    sub_14002740c",
    "test    eax, eax",
    "je      0x14002e505",
    "add     rsp, 0x68",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "cmp     byte [rsi+0x8], 0x0",
    "jne     0x14002e577",
    "cmp     byte [rsi+0x8], 0x0",
    "je      0x14002e54f",
    "mov     eax, 0xb",
    "jmp     0x14002e85a",
    "test    byte [rbx+0x1], 0x20",
    "je      0x14002e593",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "call    sub_14002a6d8",
    "test    eax, eax",
    "jne     0x14002e85a",
    "mov     rcx, rbx",
    "call    sub_140026208",
    "test    eax, eax",
    "jne     0x14002e85a",
    "mov     rdx, rbp",
    "mov     rcx, rsi",
    "call    sub_140026958",
    "mov     ecx, dword [r14+0x34]",
    "movzx   r11d, ax",
    "mov     eax, dword [rsi+0x14]",
    "add     ecx, ecx",
    "lea     r8d, [r11+rax+0x2]",
    "mov     eax, 0xaaaaaaab",
    "mul     ecx",
    "shr     edx, 0x1",
    "cmp     r8d, edx",
    "jg      0x14002e54f",
    "cmp     qword [rbx+0x80], 0x0",
    "jne     0x14002e5db",
    "mov     edx, dword [rbx+0x50]",
    "mov     r8, rbx",
    "mov     rcx, r14",
    "call    sub_1400262a4",
    "test    eax, eax",
    "jne     0x14002e85a",
    "mov     eax, 0x1",
    "cmp     word [rsi+0x18], ax",
    "je      0x14002e54f",
    "mov     rcx, qword [rsi+0x70]",
    "call    sub_140022a44",
    "test    eax, eax",
    "jne     0x14002e85a",
    "cmp     byte [rdi+0x13], 0x0",
    "mov     rdx, qword [rbx+0x30]",
    "mov     r8d, dword [rbx+0x50]",
    "je      0x14002e5db",
    "mov     dword [rsp+0xc8], eax",
    "jmp     0x14002e55f",
    "lea     r8, [rsp+0x40]",
    "mov     rdx, rbp",
    "mov     rcx, rsi",
    "call    qword [rsi+0x80]",
    "movzx   r11d, word [rsp+0x54]",
    "cmp     r11d, dword [rsp+0x50]",
    "jne     0x14002e610",
    "mov     rax, qword [rdi+0x8]",
    "mov     byte [rdi+0x13], 0x0",
    "mov     rcx, qword [rax+0x10]",
    "jmp     0x14002e5d6",
    "lea     r8, [rsp+0x40]",
    "mov     rdx, rbp",
    "mov     rcx, rsi",
    "call    sub_14002b2e8",
    "xor     ebp, ebp",
    "xor     ebp, ebp",
    "mov     eax, ebp",
    "jmp     0x14002e622",
    "test    rcx, rcx",
    "jne     0x14002e5b9",
    "movzx   r8d, word [rsp+0x56]",
    "lea     r9, [rsp+0xb0]",
    "mov     edx, r13d",
    "mov     rcx, rsi",
    "call    sub_14002b788",
    "mov     eax, dword [rsp+0xb0]",
    "cmp     eax, ebp",
    "jne     0x14002e85a",
    "mov     dword [rsp+0xb0], eax",
    "cmp     eax, ebp",
    "jne     0x14002e85a",
    "test    byte [rcx+0x1], 0x10",
    "je      0x14002e5d2",
    "cmp     byte [rsi+0x8], bpl",
    "jne     0x14002e789",
    "mov     rcx, qword [rcx+0x28]",
    "mov     byte [rdi+0x13], 0x1",
    "cmp     dword [rcx+0x50], r8d",
    "jne     0x14002e5d2",
    "mov     r14d, 0x1",
    "mov     rdi, qword [rbx+0x88]",
    "cmp     dword [rdi+0x14], ebp",
    "jge     0x14002e67f",
    "cmp     qword [rcx+0x30], rdx",
    "jne     0x14002e5d2",
    "mov     eax, edi",
    "movsx   ecx, byte [rbx+0x54]",
    "cmp     ecx, r15d",
    "jle     0x14002e80b",
    "movsx   eax, byte [rbx+0x54]",
    "dec     eax",
    "cmp     r15d, eax",
    "jge     0x14002e697",
    "mov     rcx, rdi",
    "call    sub_14002740c",
    "cmp     eax, ebp",
    "jne     0x14002e85a",
    "mov     byte [rcx], 0x1",
    "cmp     dword [rsp+0xc8], ebp",
    "je      0x14002e838",
    "mov     rcx, qword [rbx+0x88]",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_14002242c",
    "dec     byte [rbx+0x54]",
    "jmp     0x14002e7e0",
    "mov     rax, qword [rbx+0x88]",
    "mov     ebp, dword [rax+0x4]",
    "mov     rcx, qword [rbx+r15*8+0x98]",
    "mov     ebp, dword [rcx+0x4]",
    "jmp     0x14002e6a1",
    "mov     rcx, rbx",
    "call    sub_140029cbc",
    "mov     edi, eax",
    "cmp     r12b, bpl",
    "je      0x14002e852",
    "mov     byte [rbx], 0x2",
    "movzx   eax, word [rsi+0x18]",
    "cmp     r13d, eax",
    "jl      0x14002e832",
    "movsx   eax, byte [rbx+0x54]",
    "cmp     eax, r15d",
    "jg      0x14002e7bf",
    "mov     rdx, r12",
    "mov     rcx, rdi",
    "call    qword [rdi+0x78]",
    "mov     rcx, qword [rdi+0x70]",
    "mov     r14, qword [r14+0x60]",
    "movzx   r13d, ax",
    "call    sub_140022a44",
    "mov     dword [rsp+0xb0], eax",
    "test    eax, eax",
    "jne     0x14002e85a",
    "mov     ecx, 0x11a95",
    "call    sub_140084e38",
    "jmp     0x14002e85a",
    "movzx   edx, word [rdi+0x18]",
    "mov     rcx, qword [rdi+0x60]",
    "mov     r8, qword [rdi+0x50]",
    "movzx   eax, byte [rcx+rdx*2-0x2]",
    "shl     eax, 0x8",
    "movsxd  r12, eax",
    "movzx   eax, byte [rcx+rdx*2-0x1]",
    "or      r12, rax",
    "movzx   eax, word [rdi+0x1a]",
    "and     r12, rax",
    "lea     rax, [r8+0x4]",
    "add     r12, r8",
    "cmp     r12, rax",
    "jae     0x14002e6e2",
    "cmp     edi, 0x10",
    "cmove   edi, ebp",
    "mov     rcx, rbx",
    "call    sub_1400261a4",
    "mov     byte [rbx], 0x3",
    "mov     dword [rbx+0x4], r14d",
    "jmp     0x14002e858",
    "or      dword [rbx+0x4], 0xffffffff",
    "movzx   eax, word [rsi+0x18]",
    "sub     ax, r14w",
    "mov     word [rbx+0x56], ax",
    "jmp     0x14002e858",
    "movsx   rdx, byte [rbx+0x54]",
    "mov     rcx, qword [rbx+rdx*8+0x90]",
    "sub     dl, r14b",
    "mov     byte [rbx+0x54], dl",
    "cmp     rcx, rbp",
    "je      0x14002e7e0",
    "movsx   rax, byte [rbx+0x54]",
    "mov     rcx, qword [rbx+rax*8+0x90]",
    "mov     qword [rbx+0x88], rcx",
    "mov     rcx, rbx",
    "call    sub_14002da44",
    "mov     edi, eax",
    "cmp     eax, ebp",
    "jne     0x14002e858",
    "mov     edx, dword [rsp+0xc0]",
    "lea     rax, [rsp+0xb0]",
    "lea     r9d, [r13+0x4]",
    "mov     qword [rsp+0x30], rax",
    "lea     r8, [r12-0x4]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x28], ebp",
    "mov     qword [rsp+0x20], r14",
    "call    sub_14002b88c",
    "mov     eax, dword [rsp+0xb0]",
    "xor     ebp, ebp",
    "cmp     eax, ebp",
    "jne     0x14002e85a",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_14002242c",
    "movzx   edx, word [rdi+0x18]",
    "lea     r14d, [rbp+0x1]",
    "lea     r9, [rsp+0xb0]",
    "mov     r8d, r13d",
    "mov     rcx, rdi",
    "sub     edx, r14d",
    "call    sub_14002b788",
    "mov     eax, dword [rsp+0xb0]",
    "cmp     eax, ebp",
    "jne     0x14002e85a",
    "mov     r12b, byte [rsp+0xb8]",
    "mov     r13d, dword [rsp+0xc0]",
    "jmp     0x14002e78f",
    "mov     rcx, rbx",
    "call    sub_14002da44",
    "mov     edi, eax",
    "cmp     eax, ebp",
    "jne     0x14002e858"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}