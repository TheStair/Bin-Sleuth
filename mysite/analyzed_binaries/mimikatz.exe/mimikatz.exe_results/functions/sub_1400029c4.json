{
  "address": "0x1400029c4",
  "rules": [
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "mov     edx, 0x14",
    "mov     rdi, rcx",
    "lea     ecx, [rdx+0x2c]",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x140002b5d",
    "mov     rbp, qword [rsp+0x58]",
    "mov     rsi, qword [rsp+0x60]",
    "mov     rax, rbx",
    "mov     rbx, qword [rsp+0x50]",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     rdx, qword [rdi]",
    "lea     rbp, [rdi+0x8]",
    "mov     qword [rax], rdx",
    "mov     ecx, dword [rax+0x4]",
    "mov     rdx, rbp",
    "add     rcx, rdi",
    "cmp     rbp, rcx",
    "jae     0x140002a28",
    "cmp     dword [rbx+0x8], 0x0",
    "je      0x140002b5d",
    "mov     eax, dword [rdx]",
    "inc     dword [rbx+0x8]",
    "add     rdx, rax",
    "mov     eax, dword [rbx+0x4]",
    "add     rax, rdi",
    "cmp     rdx, rax",
    "jb      0x140002a15",
    "mov     edx, dword [rbx+0x8]",
    "mov     ecx, 0x40",
    "shl     rdx, 0x3",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rbx+0xc], rax",
    "test    rax, rax",
    "je      0x140002b5d",
    "xor     r13d, r13d",
    "cmp     dword [rbx+0x8], r13d",
    "jbe     0x140002b5d",
    "xor     r12d, r12d",
    "mov     edx, 0x6c",
    "lea     ecx, [rdx-0x2c]",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140002b3e",
    "mov     rax, qword [rbx+0xc]",
    "inc     r13d",
    "mov     qword [r12+rax], rsi",
    "mov     eax, dword [rbp]",
    "add     r12, 0x8",
    "add     rbp, rax",
    "cmp     r13d, dword [rbx+0x8]",
    "jb      0x140002a61",
    "mov     rcx, rax",
    "mov     rdx, rbp",
    "mov     r8d, 0x2c",
    "call    memcpy",
    "mov     ecx, dword [rsi+0x28]",
    "lea     r11, [rbp+0x2c]",
    "mov     qword [rsi+0x2c], r11",
    "mov     eax, dword [rcx+r11]",
    "lea     rdx, [rcx+r11+0x4]",
    "lea     r8, [rax+rdx+0x4]",
    "mov     qword [rsi+0x38], rdx",
    "mov     dword [rsi+0x34], eax",
    "mov     eax, dword [rax+rdx]",
    "mov     qword [rsi+0x44], r8",
    "lea     rdx, [rax+r8+0x4]",
    "mov     dword [rsi+0x40], eax",
    "mov     eax, dword [rax+r8]",
    "mov     r8d, dword [rsi+0x1c]",
    "lea     r9, [rax+rdx+0x4]",
    "mov     qword [rsi+0x50], rdx",
    "mov     dword [rsi+0x4c], eax",
    "mov     eax, dword [rax+rdx]",
    "mov     qword [rsi+0x5c], r9",
    "mov     dword [rsi+0x58], eax",
    "test    r8d, r8d",
    "je      0x140002b02",
    "mov     eax, dword [rbx+0x4]",
    "add     rax, rdi",
    "cmp     rbp, rax",
    "jae     0x140002b5d",
    "mov     edx, dword [rsi+0x28]",
    "lea     rcx, [rsi+0x2c]",
    "call    sub_1400131d0",
    "mov     edx, dword [rsi+0x34]",
    "lea     rcx, [rsi+0x38]",
    "call    sub_1400131d0",
    "mov     edx, dword [rsi+0x40]",
    "lea     rcx, [rsi+0x44]",
    "call    sub_1400131d0",
    "mov     edx, dword [rsi+0x4c]",
    "lea     rcx, [rsi+0x50]",
    "call    sub_1400131d0",
    "mov     edx, dword [rsi+0x58]",
    "lea     rcx, [rsi+0x5c]",
    "call    sub_1400131d0",
    "mov     rcx, rax",
    "lea     rdx, [rsi+0x64]",
    "and     ecx, 0x1",
    "add     rcx, r9",
    "add     rcx, rax",
    "call    sub_140002744"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}