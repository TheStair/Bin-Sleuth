{
  "address": "0x140067e04",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "sub     rsp, 0x50",
    "cmp     qword [rdx+0x50], 0x0",
    "mov     rbx, rdx",
    "mov     rsi, rcx",
    "je      0x140067f63",
    "xor     eax, eax",
    "mov     r8, qword [rdx+0x48]",
    "test    r8, r8",
    "je      0x140067f63",
    "mov     rax, rdx",
    "mov     rax, qword [rax+0x50]",
    "test    rax, rax",
    "jne     0x140067e3e",
    "cmp     byte [rax+0x8], 0x86",
    "jne     0x140067e53",
    "cmp     byte [rax+0x8], 0x83",
    "je      0x140067e4a",
    "test    rax, rax",
    "je      0x140067f63",
    "mov     ecx, dword [r8]",
    "sub     ecx, 0x1",
    "movsxd  rdx, ecx",
    "js      0x140067e86",
    "test    ecx, ecx",
    "js      0x140067f63",
    "lea     rax, [rdx+rdx*4]",
    "lea     r9, [r8+rax*8+0x8]",
    "mov     rsi, qword [rsi]",
    "mov     edx, 0x80",
    "mov     rbp, qword [rsi]",
    "mov     rcx, rbp",
    "call    sub_140016ba8",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x140067eb3",
    "dec     ecx",
    "sub     r9, 0x28",
    "sub     rdx, 0x1",
    "jns     0x140067e70",
    "xor     eax, eax",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "and     qword [rsp+0x38], rax",
    "and     qword [rsp+0x30], rax",
    "mov     qword [rsp+0x40], rax",
    "mov     qword [rsp+0x48], rax",
    "lea     rax, [rsp+0x40]",
    "xor     edx, edx",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x28], rdi",
    "mov     qword [rsp+0x20], rax",
    "call    std::_Work_stealing_deque<struct std::_Sort_work_item_impl<int64_t> >::_Push_bottom",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x140067ea9",
    "mov     eax, 0x2",
    "jmp     0x140067f65",
    "mov     rax, qword [r9]",
    "bt      dword [rax+0x4], 0x8",
    "jb      0x140067e86",
    "mov     rcx, rdi",
    "mov     rdx, rbx",
    "mov     r8d, 0x80",
    "call    memcpy",
    "xor     r8d, r8d",
    "mov     edx, 0xaf",
    "mov     rcx, rbp",
    "mov     qword [rbx+0x28], r12",
    "call    sub_14004397c",
    "xor     edx, edx",
    "mov     rcx, rsi",
    "mov     r8, rax",
    "call    sub_140044974",
    "and     qword [rbx+0x30], 0x0",
    "mov     byte [rbx+0x8], 0x86",
    "mov     qword [rbx], rax",
    "and     qword [rdi+0x38], 0x0",
    "and     qword [rdi+0x40], 0x0",
    "and     qword [rdi+0x48], 0x0",
    "btr     dword [rbx+0xc], 0x8",
    "bts     dword [rbx+0xc], 0x10",
    "and     qword [rbx+0x50], 0x0",
    "and     qword [rbx+0x58], 0x0",
    "and     qword [rbx+0x68], 0x0",
    "mov     rax, qword [rdi+0x50]",
    "mov     qword [rax+0x58], rdi",
    "and     qword [rdi+0x60], 0x0",
    "mov     rbx, qword [rsp+0x60]",
    "mov     rbp, qword [rsp+0x68]",
    "mov     rsi, qword [rsp+0x70]",
    "mov     rdi, qword [rsp+0x78]",
    "add     rsp, 0x50",
    "pop     r12",
    "retn    "
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}