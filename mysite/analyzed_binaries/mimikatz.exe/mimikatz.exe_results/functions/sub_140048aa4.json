{
  "address": "0x140048aa4",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     dword [rax+0x20], r9d",
    "mov     qword [rax+0x8], rcx",
    "push    rdi",
    "sub     rsp, 0x20",
    "mov     rdi, r8",
    "mov     rsi, rdx",
    "test    rdx, rdx",
    "je      0x140048d08",
    "sub     rdi, rdx",
    "neg     rdi",
    "sbb     eax, eax",
    "and     eax, 0x2",
    "test    r8, r8",
    "je      0x140048d08",
    "test    rcx, rcx",
    "je      0x140048af8",
    "mov     r11d, dword [rdi+0x4]",
    "mov     ebp, r11d",
    "or      ebp, dword [rsi+0x4]",
    "bt      ebp, 0xa",
    "jae     0x140048b25",
    "cmp     byte [rdx], 0x97",
    "jne     0x140048af8",
    "mov     al, byte [rsi]",
    "cmp     al, byte [rdi]",
    "jne     0x140048cc2",
    "and     r11d, dword [rsi+0x4]",
    "bt      r11d, 0xa",
    "jae     0x140048b1b",
    "call    sub_14004897c",
    "test    eax, eax",
    "je      0x140048aee",
    "cmp     al, 0x6d",
    "jne     0x140048cde",
    "cmp     al, 0x47",
    "je      0x140048cc2",
    "mov     eax, 0x2",
    "jmp     0x140048d13",
    "mov     eax, dword [rdi+0x8]",
    "cmp     dword [rsi+0x8], eax",
    "je      0x140048ae7",
    "mov     rcx, qword [rsp+0x30]",
    "mov     r9d, dword [rsp+0x48]",
    "xor     eax, eax",
    "jmp     0x140048d13",
    "cmp     byte [rdi], 0x6d",
    "jne     0x140048b1b",
    "mov     rdx, qword [rsi+0x10]",
    "mov     r8, rdi",
    "call    sub_140048aa4",
    "cmp     eax, 0x2",
    "jge     0x140048cde",
    "cmp     al, 0xa2",
    "je      0x140048bde",
    "mov     rbp, qword [rsp+0x38]",
    "mov     rsi, qword [rsp+0x40]",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    ",
    "mov     r9d, dword [rsp+0x48]",
    "mov     r8, qword [rdi+0x10]",
    "mov     rcx, qword [rsp+0x30]",
    "mov     rdx, rsi",
    "call    sub_140048aa4",
    "cmp     eax, 0x2",
    "jge     0x140048b1b",
    "mov     eax, 0x1",
    "jmp     0x140048d13",
    "mov     eax, dword [rsi+0x4]",
    "xor     eax, dword [rdi+0x4]",
    "test    al, 0x2",
    "jne     0x140048b1b",
    "cmp     al, 0xa4",
    "je      0x140048bde",
    "jmp     0x140048cd7",
    "bt      ebp, 0xe",
    "jb      0x140048ae7",
    "mov     rcx, qword [rsi+0x8]",
    "test    rcx, rcx",
    "je      0x140048bde",
    "bt      ebp, 0xb",
    "jb      0x140048b1b",
    "cmp     al, 0xa7",
    "je      0x140048b99",
    "test    bpl, 0x8",
    "jne     0x140048c25",
    "mov     rdx, qword [rdi+0x8]",
    "call    sub_1400192b0",
    "test    eax, eax",
    "jne     0x140048b1b",
    "cmp     al, 0xa3",
    "je      0x140048b99",
    "mov     r9d, dword [rsp+0x48]",
    "mov     r8, qword [rdi+0x18]",
    "mov     rdx, qword [rsi+0x18]",
    "mov     rcx, qword [rsp+0x30]",
    "call    sub_140048aa4",
    "test    eax, eax",
    "jne     0x140048b1b",
    "mov     r9d, dword [rsp+0x48]",
    "mov     r8, qword [rdi+0x10]",
    "mov     rdx, qword [rsi+0x10]",
    "mov     rcx, qword [rsp+0x30]",
    "call    sub_140048aa4",
    "test    eax, eax",
    "jne     0x140048b1b",
    "xor     r11d, dword [rsi+0x4]",
    "bt      r11d, 0x18",
    "jb      0x140048b1b",
    "cmp     al, 0x75",
    "je      0x140048ae7",
    "mov     r8d, dword [rsp+0x48]",
    "mov     rdx, qword [rdi+0x20]",
    "mov     rcx, qword [rsi+0x20]",
    "call    sub_140048d24",
    "test    eax, eax",
    "jne     0x140048b1b",
    "bt      dword [rsi+0x4], 0x18",
    "jae     0x140048bde",
    "cmp     al, 0x6d",
    "jne     0x140048b74",
    "cmp     byte [rsi], 0x71",
    "je      0x140048ae7",
    "mov     r8, qword [rdi+0x40]",
    "mov     rdx, qword [rsi+0x40]",
    "mov     rcx, qword [rsp+0x30]",
    "lea     r9d, [rax+0x1]",
    "call    sub_14007b570",
    "mov     rax, qword [rdi+0x8]",
    "test    rax, rax",
    "je      0x140048bde",
    "mov     rdx, qword [rdi+0x8]",
    "test    rdx, rdx",
    "je      0x140048b1b",
    "cmp     byte [rsi], 0xa5",
    "je      0x140048ae7",
    "sub     rax, rcx",
    "call    sub_1400192b0",
    "jmp     0x140048bd6",
    "bt      ebp, 0xd",
    "jb      0x140048ae7",
    "test    edx, edx",
    "jmp     0x140048bd8",
    "inc     rcx",
    "test    r8d, r8d",
    "jne     0x140048b80",
    "test    eax, eax",
    "movzx   eax, word [rdi+0x2c]",
    "cmp     word [rsi+0x2c], ax",
    "jne     0x140048b1b",
    "jne     0x140048b1b",
    "movzx   edx, byte [rcx]",
    "movzx   r8d, byte [rcx+rax]",
    "sub     edx, r8d",
    "jne     0x140048b95",
    "mov     al, byte [rdi+0x32]",
    "cmp     byte [rsi+0x32], al",
    "jne     0x140048b1b",
    "cmp     byte [rsi], 0x31",
    "je      0x140048ae7",
    "mov     eax, dword [rsi+0x28]",
    "cmp     eax, dword [rdi+0x28]",
    "je      0x140048ae7",
    "cmp     eax, dword [rsp+0x48]",
    "jne     0x140048b1b",
    "cmp     dword [rdi+0x28], 0x0",
    "jl      0x140048ae7",
    "jmp     0x140048b1b"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}