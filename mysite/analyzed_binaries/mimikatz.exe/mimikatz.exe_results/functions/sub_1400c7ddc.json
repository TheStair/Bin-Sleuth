{
  "address": "0x1400c7ddc",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "mov     qword [r11+0x10], rbp",
    "mov     qword [r11+0x18], rsi",
    "mov     qword [r11+0x20], rdi",
    "push    r12",
    "sub     rsp, 0x30",
    "cmp     dword [rcx+0x10], 0x2800",
    "mov     rax, qword [rdx+0x20]",
    "mov     r12, r9",
    "mov     qword [r11-0x18], rax",
    "lea     rax, [rel data_140140240]",
    "mov     rsi, rdx",
    "mov     qword [r11-0x10], rax",
    "jae     0x1400c7e20",
    "cmp     dword [rcx+0x10], 0x295a",
    "jae     0x1400c7e32",
    "lea     rbx, [rel data_1400d2c40]",
    "jmp     0x1400c7e4b",
    "cmp     dword [rcx+0x10], 0x3839",
    "lea     rbx, [rel data_1400d2ca0]",
    "lea     rax, [rel data_1400d2cd0]",
    "cmovae  rbx, rax",
    "lea     rbx, [rel data_1400d2c70]",
    "jmp     0x1400c7e4b",
    "lea     rcx, [rdx+0x8]",
    "lea     rdx, [rel data_1400d2c18]",
    "xor     r8d, r8d",
    "call    RtlEqualString",
    "test    al, al",
    "je      0x1400c7f89",
    "lea     rcx, [rel data_1400eaa4c]",
    "mov     rdi, qword [rsi+0x20]",
    "test    rdi, rdi",
    "je      0x1400c7f95",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "mov     rdi, qword [rsp+0x58]",
    "mov     eax, 0x1",
    "add     rsp, 0x30",
    "pop     r12",
    "retn    ",
    "mov     rbp, qword [rsp+0x60]",
    "movzx   edx, word [rsi+0x18]",
    "mov     rax, qword [rbp]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, qword [rcx+0x20]",
    "mov     rcx, rdi",
    "call    qword [rax]",
    "movsxd  r11, dword [rbx+0x10]",
    "mov     byte [r11+rdi], 0x0",
    "movsxd  rax, dword [rbx+0x14]",
    "mov     byte [rax+rdi], 0x0",
    "cmp     dword [rbx+0x8], 0x0",
    "je      0x1400c7eac",
    "cmp     dword [rbx+0x18], 0x0",
    "je      0x1400c7ec9",
    "movsxd  rax, dword [rbx+0x8]",
    "mov     byte [rax+rdi], 0x0",
    "movsxd  rax, dword [rbx+0x20]",
    "xor     ecx, ecx",
    "mov     qword [rax+rdi], rcx",
    "mov     qword [rax+rdi+0x8], rcx",
    "movsxd  rax, dword [rbx+0x24]",
    "mov     qword [rax+rdi], rcx",
    "mov     qword [rax+rdi+0x8], rcx",
    "mov     dword [rax+rdi+0x10], ecx",
    "mov     rax, qword [rbp+0x8]",
    "cmp     qword [rax+0x8], rcx",
    "movsxd  rax, dword [rbx+0xc]",
    "je      0x1400c7f12",
    "movsxd  rax, dword [rbx+0x18]",
    "xor     ecx, ecx",
    "mov     byte [rax+rdi], 0x0",
    "movsxd  rax, dword [rbx+0x28]",
    "mov     qword [rax+rdi], rcx",
    "mov     qword [rax+rdi+0x8], rcx",
    "mov     byte [rax+rdi], cl",
    "movsxd  rax, dword [rbx+0x1c]",
    "mov     qword [rax+rdi], rcx",
    "mov     qword [rax+rdi+0x8], rcx",
    "mov     byte [rax+rdi], 0x1",
    "mov     rax, qword [rbp+0x8]",
    "mov     rcx, qword [rax+0x8]",
    "movsxd  rax, dword [rbx+0x1c]",
    "movdqu  xmm0, xmmword [rcx]",
    "movdqu  xmmword [rax+rdi], xmm0",
    "jmp     0x1400c7f22",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14012ff70]  {u\"ERROR kuhl_m_sekurlsa_msv_enum_c\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x1400c7f95",
    "lea     rcx, [rel data_14012ff58]  {u\"OK !\"}",
    "jmp     0x1400c7f90",
    "mov     rax, qword [rbp]",
    "mov     rcx, rdi",
    "mov     rdx, qword [rax+0x8]",
    "mov     rax, qword [rdx+0x18]",
    "movzx   edx, word [rsi+0x18]",
    "call    qword [rax]",
    "mov     rdx, qword [r12]",
    "lea     rcx, [rel data_14012ff30]  {u\"data copy @ %p : \"}",
    "call    sub_14000c030",
    "movzx   r8d, word [rsi+0x18]",
    "lea     rdx, [rsp+0x20]",
    "mov     rcx, r12",
    "call    sub_14000b6d8",
    "mov     rcx, qword [rbp+0x8]",
    "mov     dword [rcx+0x20], eax",
    "mov     rax, qword [rbp+0x8]",
    "cmp     dword [rax+0x20], 0x0",
    "je      0x1400c7f73",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}