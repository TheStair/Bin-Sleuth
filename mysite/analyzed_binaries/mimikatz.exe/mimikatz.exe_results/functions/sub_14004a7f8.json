{
  "address": "0x14004a7f8",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x20], r9",
    "mov     qword [rax+0x18], r8",
    "mov     qword [rax+0x10], rdx",
    "mov     qword [rax+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x48",
    "mov     r14, rcx",
    "mov     rcx, r9",
    "mov     r13, r9",
    "mov     r12, rdx",
    "call    sub_140019074",
    "mov     rcx, r8",
    "mov     dword [rsp+0x34], eax",
    "call    sub_140019074",
    "mov     r10, qword [r14]",
    "mov     rbx, qword [r10+0x28]",
    "lea     rdx, [rel data_1400f5500]  {\"\"%w\"\"}",
    "mov     r8, r9",
    "mov     rcx, rbx",
    "mov     esi, eax",
    "mov     dword [rsp+0x30], eax",
    "mov     qword [rsp+0x38], rbx",
    "xor     edi, edi",
    "call    _printf_p_l",
    "mov     rbp, rax",
    "cmp     rax, rdi",
    "jne     0x14004a86e",
    "mov     rcx, rax",
    "call    sub_140019074",
    "mov     r15d, eax",
    "cmp     dword [rsp+0xb0], edi",
    "je      0x14004a891",
    "lea     eax, [rdi+0x7]",
    "jmp     0x14004aa06",
    "mov     ecx, dword [r12+0x8]",
    "imul    ecx, r15d",
    "lea     ecx, [rcx+rsi+0x1]",
    "movsxd  rdx, ecx",
    "mov     rcx, rbx",
    "call    sub_140016ba8",
    "mov     rsi, rax",
    "cmp     rax, rdi",
    "je      0x14004a9f7",
    "mov     r13, rbp",
    "mov     qword [rsp+0xa8], rbp",
    "mov     dword [rsp+0x34], eax",
    "add     rsp, 0x48",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     edi, 0x7",
    "movsxd  r8, dword [rsp+0x30]",
    "mov     rdx, qword [rsp+0xa0]",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     r11, qword [r12]",
    "cmp     r11, rdi",
    "je      0x14004a9c3",
    "mov     rcx, qword [r14]",
    "or      rax, 0xffffffffffffffff",
    "mov     r9b, 0x1",
    "mov     r8d, eax",
    "mov     rdx, rsi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140031820",
    "cmp     eax, 0x12",
    "jne     0x14004a9ea",
    "mov     rcx, qword [r11+0x18]",
    "mov     rbx, r11",
    "jmp     0x14004a8f0",
    "mov     rdx, rsi",
    "mov     rcx, rbx",
    "call    sub_1400169a8",
    "jmp     0x14004a9fc",
    "mov     rcx, r14",
    "call    sub_1400363a8",
    "cmp     rcx, rdi",
    "jne     0x14004a8e0",
    "mov     rcx, rbp",
    "call    sub_140016950",
    "mov     eax, edi",
    "mov     rax, qword [rbx+0x8]",
    "cmp     qword [rcx+0x8], rax",
    "cmova   rbx, rcx",
    "mov     rcx, qword [rcx+0x18]",
    "mov     rcx, r12",
    "jmp     0x14004a901",
    "cmp     r11, rbx",
    "jne     0x14004a8fa",
    "lea     rcx, [r11+0x18]",
    "mov     r11, qword [rcx]",
    "mov     rax, qword [rbx+0x18]",
    "mov     qword [rcx], rax",
    "mov     rax, qword [rbx+0x8]",
    "movzx   ecx, byte [rax]",
    "lea     rax, [rel data_1400d6500]",
    "test    byte [rcx+rax], 0x46",
    "je      0x14004a92b",
    "mov     r12d, r15d",
    "mov     r14, rbp",
    "mov     r12d, dword [rsp+0x34]",
    "mov     r14, r13",
    "jmp     0x14004a931",
    "movsxd  rcx, r13d",
    "mov     r8d, r12d",
    "mov     rdx, r14",
    "add     rcx, rsi",
    "call    memcpy",
    "mov     rdx, rbx",
    "mov     rbx, qword [rsp+0x38]",
    "mov     rcx, rbx",
    "call    sub_1400169a8",
    "mov     r12, qword [rsp+0x98]",
    "mov     r13, qword [rsp+0xa8]",
    "mov     r11, qword [r12]",
    "cmp     r11, rdi",
    "jne     0x14004a8d7",
    "mov     ecx, dword [rbx+0x10]",
    "mov     r8d, dword [rsp+0x30]",
    "lea     edx, [rcx+r13]",
    "sub     r8d, ecx",
    "lea     ecx, [r13+r12]",
    "add     rcx, rsi",
    "sub     r8d, r13d",
    "add     rdx, rsi",
    "call    memmove",
    "mov     eax, dword [rsp+0x30]",
    "mov     r11d, r12d",
    "sub     r11d, dword [rbx+0x10]",
    "add     eax, r11d",
    "mov     dword [rsp+0x30], eax",
    "cdqe    ",
    "mov     byte [rax+rsi], dil",
    "mov     r13d, dword [rbx+0x8]",
    "sub     r13d, dword [rsp+0xa0]",
    "cmp     dword [rbx+0x10], r12d",
    "je      0x14004a97d",
    "mov     r14, qword [rsp+0x90]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}