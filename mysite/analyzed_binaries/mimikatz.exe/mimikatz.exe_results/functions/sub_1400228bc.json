{
  "address": "0x1400228bc",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "mov     rsi, qword [rcx+0x28]",
    "xor     edx, edx",
    "xor     r12d, r12d",
    "mov     eax, dword [rsi+0xb8]",
    "or      byte [rsi+0x18], 0x4",
    "mov     ebx, dword [rsi+0x1c]",
    "div     dword [rsi+0xbc]",
    "mov     edx, dword [rcx+0x30]",
    "xor     r14d, r14d",
    "lea     ebp, [rax-0x1]",
    "mov     r8d, eax",
    "lea     eax, [rdx-0x1]",
    "not     ebp",
    "mov     r15, rcx",
    "mov     dword [rsp+0x60], r12d",
    "and     ebp, eax",
    "lea     eax, [r12+0x1]",
    "add     ebp, eax",
    "cmp     edx, ebx",
    "jbe     0x14002291a",
    "lea     eax, [rbp+r8-0x1]",
    "cmp     eax, ebx",
    "jbe     0x140022929",
    "mov     ebx, edx",
    "sub     ebx, ebp",
    "add     ebx, eax",
    "jmp     0x14002292c",
    "mov     ebx, r8d",
    "sub     ebx, ebp",
    "inc     ebx",
    "jmp     0x14002292c",
    "xor     r13d, r13d",
    "test    ebx, ebx",
    "jle     0x140022a25",
    "and     byte [rsi+0x18], 0xfb",
    "mov     rbx, qword [rsp+0x70]",
    "mov     eax, r12d",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     edi, ebp",
    "cmp     edi, dword [r15+0x30]",
    "je      0x140022982",
    "mov     eax, 0x40000000",
    "cdq     ",
    "idiv    dword [rsi+0xbc]",
    "inc     eax",
    "cmp     edi, eax",
    "je      0x1400229da",
    "mov     rcx, qword [rsi+0x40]",
    "test    rcx, rcx",
    "je      0x140022982",
    "mov     eax, 0x1",
    "add     r13d, eax",
    "add     edi, eax",
    "cmp     r13d, ebx",
    "jl      0x140022939",
    "lea     r8, [rsp+0x68]",
    "xor     r9d, r9d",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "call    qword [rsi+0x108]",
    "mov     r12d, eax",
    "mov     dword [rsp+0x60], eax",
    "test    eax, eax",
    "jne     0x1400229da",
    "mov     edx, edi",
    "call    sub_14001d71c",
    "test    eax, eax",
    "je      0x140022982",
    "test    r12d, r12d",
    "jne     0x140022a25",
    "test    r12d, r12d",
    "jne     0x140022a25",
    "mov     rcx, qword [rsp+0x68]",
    "call    sub_140022810",
    "mov     rcx, qword [rsp+0x68]",
    "test    byte [rcx+0x34], 0x8",
    "mov     r12d, eax",
    "mov     dword [rsp+0x60], eax",
    "mov     eax, 0x1",
    "cmovne  r14d, eax",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "call    sub_1400223d0",
    "mov     qword [rsp+0x68], rax",
    "test    rax, rax",
    "je      0x1400229da",
    "test    r14d, r14d",
    "je      0x140022a25",
    "test    byte [rax+0x34], 0x8",
    "lea     ecx, [r12+0x1]",
    "cmovne  r14d, ecx",
    "mov     rcx, rax",
    "jmp     0x1400229d5",
    "xor     edi, edi",
    "mov     r12d, eax",
    "call    sub_14002242c",
    "add     edi, r12d",
    "cmp     edi, ebx",
    "jl      0x1400229fc",
    "or      word [rax+0x34], 0x8",
    "mov     rcx, rax",
    "call    sub_14002242c",
    "lea     edx, [rdi+rbp]",
    "mov     rcx, rsi",
    "call    sub_1400223d0",
    "test    rax, rax",
    "je      0x140022a19",
    "mov     r12d, dword [rsp+0x60]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}