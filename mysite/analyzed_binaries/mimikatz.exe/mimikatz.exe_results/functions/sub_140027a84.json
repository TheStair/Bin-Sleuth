{
  "address": "0x140027a84",
  "rules": [
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x20], r9",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xb0",
    "mov     r12, rdx",
    "xor     edi, edi",
    "mov     r14, r8",
    "mov     edx, 0x1",
    "cmp     r12, rdi",
    "je      0x140027abf",
    "mov     eax, edx",
    "mov     eax, edi",
    "cmp     byte [r12], dil",
    "jne     0x140027ac1",
    "cmp     eax, edi",
    "je      0x140027af1",
    "lea     rdi, [rel data_1400f3c58]  {\":memory:\"}",
    "lea     ecx, [r8+0x7]",
    "mov     rsi, r12",
    "rep cmpsb byte [rsi], [rdi]",
    "je      0x140027b02",
    "mov     ebx, dword [rsp+0x118]",
    "mov     r8d, 0x2",
    "cmp     r12, rdi",
    "je      0x140027ae7",
    "test    bl, bl",
    "js      0x140027b04",
    "cmp     byte [r14+0x60], r8b",
    "je      0x140027b04",
    "xor     edi, edi",
    "xor     edi, edi",
    "mov     r13d, dword [rsp+0x110]",
    "mov     r15d, edx",
    "or      r13d, r8d",
    "mov     r13d, dword [rsp+0x110]",
    "mov     r15d, edi",
    "jmp     0x140027b12",
    "mov     ecx, 0x30",
    "call    sub_140016b70",
    "mov     rbp, rax",
    "cmp     rax, rdi",
    "jne     0x140027b42",
    "cmp     r15d, edi",
    "jne     0x140027b21",
    "bt      ebx, 0x8",
    "jae     0x140027b29",
    "mov     ecx, 0x68",
    "mov     byte [rax+0x10], dil",
    "mov     qword [rax], r14",
    "call    sub_140016b70",
    "mov     rsi, rax",
    "cmp     rax, rdi",
    "jne     0x140027bac",
    "mov     eax, 0x7",
    "jmp     0x140027b91",
    "btr     ebx, 0x8",
    "bts     ebx, 0x9",
    "cmp     eax, edi",
    "je      0x140027b29",
    "mov     rcx, qword [rsp+0xf0]",
    "lea     rax, [rel sub_140027a04]",
    "mov     r9d, 0x88",
    "mov     qword [rsp+0x30], rax",
    "mov     r8, r12",
    "mov     rdx, rsi",
    "mov     dword [rsp+0x28], ebx",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_1400215f4",
    "mov     ebx, eax",
    "cmp     eax, edi",
    "jne     0x140027b60",
    "mov     ebx, 0x7",
    "mov     rbx, qword [rsp+0xf8]",
    "add     rsp, 0xb0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     rsi, rdi",
    "je      0x140027b74",
    "mov     rcx, qword [rsi]",
    "mov     rax, qword [r14+0x40]",
    "mov     qword [rcx+0xa0], rax",
    "call    sub_140020bb8",
    "mov     rdi, qword [rsi]",
    "xor     ebx, ebx",
    "lea     rcx, [rsp+0x40]",
    "xor     edx, edx",
    "lea     r8d, [rbx+0x64]",
    "call    memset",
    "mov     rcx, qword [rdi+0x48]",
    "xor     edi, edi",
    "cmp     qword [rcx], rdi",
    "je      0x140027c2f",
    "mov     rcx, rsi",
    "call    sub_140016950",
    "mov     rcx, rbp",
    "call    sub_140016950",
    "mov     rax, qword [rsp+0x108]",
    "mov     qword [rax], rdi",
    "mov     rcx, qword [rsi]",
    "cmp     rcx, rdi",
    "je      0x140027b74",
    "cmp     ebx, edi",
    "jne     0x140027b60",
    "mov     rax, qword [rcx]",
    "lea     r8d, [rbx+0x64]",
    "lea     rdx, [rsp+0x40]",
    "xor     r9d, r9d",
    "call    qword [rax+0x10]",
    "mov     ebx, eax",
    "cmp     eax, 0x20a",
    "cmove   ebx, edi",
    "xor     edx, edx",
    "call    sub_140020f28",
    "mov     rax, qword [rsi]",
    "mov     byte [rsi+0x20], r13b",
    "mov     qword [rsi+0x8], r14",
    "lea     r8, [rax+0xe0]",
    "lea     rcx, [rel sub_140027a28]",
    "mov     qword [rax+0xe8], rsi",
    "mov     qword [r8], rcx",
    "mov     rcx, qword [rax+0x48]",
    "mov     rax, qword [rcx]",
    "cmp     rax, rdi",
    "je      0x140027c6e",
    "mov     qword [rbp+0x8], rsi",
    "mov     r9, qword [rsi]",
    "mov     qword [rsi+0x10], rdi",
    "mov     qword [rsi+0x18], rdi",
    "cmp     byte [r9+0x12], dil",
    "je      0x140027c8c",
    "mov     edx, 0xf",
    "call    qword [rax+0x50]",
    "movzx   ecx, byte [rsp+0x51]",
    "movzx   eax, byte [rsp+0x50]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "shl     ecx, 0x8",
    "mov     dword [rsi+0x30], ecx",
    "cmp     ecx, 0x200",
    "jb      0x140027d28",
    "mov     eax, 0x1",
    "or      word [rsi+0x26], ax",
    "xor     r14d, r14d",
    "mov     dword [rsi+0x30], r14d",
    "cmp     r12, r14",
    "je      0x140027d41",
    "cmp     ecx, 0x10000",
    "ja      0x140027d28",
    "mov     dl, r14b",
    "cmp     r15d, r14d",
    "jne     0x140027d41",
    "lea     eax, [rcx-0x1]",
    "test    ecx, eax",
    "jne     0x140027d28",
    "mov     eax, dword [rsi+0x30]",
    "sub     eax, r12d",
    "mov     dword [rsi+0x34], eax",
    "mov     rax, qword [rsp+0x108]",
    "mov     qword [rax], rbp",
    "mov     rax, qword [rbp+0x8]",
    "cmp     qword [rax+0x40], r14",
    "jne     0x140027db0",
    "mov     byte [rsi+0x21], r14b",
    "mov     byte [rsi+0x22], r14b",
    "mov     dl, byte [rsp+0x54]",
    "mov     eax, 0x2",
    "or      word [rsi+0x26], ax",
    "movzx   eax, byte [rsp+0x76]",
    "movzx   ecx, byte [rsp+0x75]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rsp+0x74]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rsp+0x77]",
    "or      ecx, eax",
    "setne   al",
    "mov     byte [rsi+0x21], al",
    "movzx   eax, byte [rsp+0x82]",
    "movzx   ecx, byte [rsp+0x81]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rsp+0x80]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rsp+0x83]",
    "or      ecx, eax",
    "setne   al",
    "xor     r14d, r14d",
    "mov     byte [rsi+0x22], al",
    "jmp     0x140027d44",
    "mov     rax, qword [rsi]",
    "mov     rcx, qword [rax+0x48]",
    "mov     rax, qword [rcx]",
    "cmp     rax, r14",
    "je      0x140027b8f",
    "mov     rax, qword [rax]",
    "mov     rdi, qword [rax+0x118]",
    "mov     eax, dword [rdi+0x28]",
    "mov     dword [rdi+0x1c], 0xfffff830",
    "add     eax, dword [rdi+0x24]",
    "movsxd  rcx, eax",
    "mov     eax, 0x1f4000",
    "cqo     ",
    "idiv    rcx",
    "mov     rcx, qword [rdi+0x40]",
    "mov     edx, eax",
    "call    qword [rel data_14013d120]",
    "movzx   r12d, dl",
    "lea     rdx, [rsi+0x30]",
    "mov     rcx, r9",
    "mov     r8d, r12d",
    "call    sub_140020c94",
    "mov     ebx, eax",
    "cmp     eax, r14d",
    "jne     0x140027b60",
    "mov     eax, ebx",
    "lea     r8, [rsi+0x8]",
    "mov     edx, 0x1e",
    "call    qword [rax+0x50]",
    "jmp     0x140027b8f"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}