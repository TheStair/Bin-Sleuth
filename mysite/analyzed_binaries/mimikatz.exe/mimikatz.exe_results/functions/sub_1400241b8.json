{
  "address": "0x1400241b8",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "contain loop",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], r8",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x180",
    "mov     esi, dword [rcx+0x58]",
    "mov     r13, rcx",
    "mov     rbp, r8",
    "lea     r15d, [rsi+0x1000]",
    "mov     edi, edx",
    "mov     dword [rsp+0x50], esi",
    "sub     r15, 0xfdf",
    "shr     r15, 0xc",
    "inc     r15d",
    "mov     qword [rsp+0x80], r15",
    "lea     eax, [r15-0x1]",
    "movsxd  rcx, eax",
    "shl     rcx, 0x4",
    "add     rcx, rsi",
    "lea     rbx, [rcx+rcx+0x28]",
    "mov     rcx, rbx",
    "call    sub_1400168d8",
    "mov     r12, rax",
    "mov     qword [rsp+0x60], rax",
    "test    rax, rax",
    "jne     0x140024237",
    "mov     r8, rbx",
    "xor     edx, edx",
    "mov     rcx, rax",
    "call    memset",
    "mov     ecx, 0x1000",
    "mov     eax, esi",
    "cmp     esi, ecx",
    "mov     dword [r12+0x4], r15d",
    "cmova   eax, ecx",
    "mov     ecx, eax",
    "add     rcx, rcx",
    "call    sub_1400168d8",
    "xor     r14d, r14d",
    "movsxd  r8, r15d",
    "mov     rdx, rax",
    "mov     qword [rsp+0x58], rax",
    "lea     eax, [r14+0x7]",
    "test    rdx, rdx",
    "mov     qword [rsp+0x90], r8",
    "cmove   r14d, eax",
    "lea     eax, [rdi+0x1001]",
    "sub     rax, 0xfdf",
    "shr     rax, 0xc",
    "movsxd  rcx, eax",
    "mov     qword [rsp+0x88], rax",
    "mov     qword [rsp+0x68], rcx",
    "test    r14d, r14d",
    "jne     0x140024520",
    "lea     eax, [r12+0x7]",
    "jmp     0x14002453f",
    "mov     rcx, rdx",
    "call    sub_140016950",
    "test    r14d, r14d",
    "je      0x140024538",
    "lea     rdi, [rcx+0x1]",
    "lea     ebx, [rax+0x1]",
    "shl     rdi, 0x5",
    "mov     dword [rsp+0x34], ebx",
    "add     rdi, r12",
    "mov     qword [rsp+0x70], rdi",
    "mov     rbx, qword [rsp+0x1c8]",
    "add     rsp, 0x180",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     qword [rbp], r12",
    "mov     eax, r14d",
    "mov     rcx, r12",
    "call    sub_140016950",
    "xor     r12d, r12d",
    "mov     rdx, qword [rsp+0x58]",
    "mov     rbp, qword [rsp+0x1d0]",
    "lea     r8, [rsp+0x98]",
    "mov     edx, eax",
    "mov     rcx, r13",
    "call    sub_140023918",
    "mov     r14d, eax",
    "mov     dword [rsp+0x44], eax",
    "test    eax, eax",
    "jne     0x1400244d4",
    "mov     rax, qword [rsp+0x88]",
    "mov     rcx, qword [rsp+0x68]",
    "mov     r8, qword [rsp+0x90]",
    "inc     eax",
    "inc     rcx",
    "inc     ebx",
    "add     rdi, 0x20",
    "mov     qword [rsp+0x88], rax",
    "mov     qword [rsp+0x68], rcx",
    "mov     dword [rsp+0x34], ebx",
    "mov     qword [rsp+0x70], rdi",
    "test    r14d, r14d",
    "je      0x1400242c0",
    "mov     rax, qword [rsp+0xa0]",
    "mov     edx, dword [rsp+0xa8]",
    "add     rax, 0x4",
    "mov     qword [rsp+0x48], rax",
    "cmp     ebx, r15d",
    "jne     0x14002430d",
    "cmp     rcx, r8",
    "jge     0x140024513",
    "mov     rbx, qword [rsp+0x98]",
    "sub     rbx, rax",
    "sar     rbx, 0x2",
    "mov     ebx, esi",
    "sub     ebx, edx",
    "jmp     0x14002431c",
    "xor     ebp, ebp",
    "lea     rcx, [rsp+0xb0]",
    "xor     edx, edx",
    "and     qword [rsp+0x38], rbp",
    "mov     r8d, 0xd0",
    "xor     esi, esi",
    "mov     dword [rsp+0x1d8], ebp",
    "xor     r13d, r13d",
    "call    memset",
    "xor     eax, eax",
    "mov     dword [rsp+0x30], eax",
    "test    ebx, ebx",
    "jle     0x14002443f",
    "mov     word [rcx], ax",
    "inc     eax",
    "add     rcx, 0x2",
    "cmp     eax, ebx",
    "jl      0x14002433e",
    "movsxd  rcx, dword [r12+0x4]",
    "xor     eax, eax",
    "shl     rcx, 0x4",
    "add     rcx, rdx",
    "inc     edx",
    "lea     rcx, [r12+rcx*2+0x8]",
    "mov     dword [rsp+0x40], edx",
    "mov     qword [rsp+0x78], rcx",
    "test    ebx, ebx",
    "jle     0x14002434b",
    "inc     esi",
    "inc     r13",
    "cmp     esi, 0xd",
    "jae     0x1400244a9",
    "mov     r12, qword [rsp+0x78]",
    "mov     rdi, qword [rsp+0x48]",
    "mov     r14, qword [rsp+0x58]",
    "mov     eax, dword [rsp+0x40]",
    "mov     ebx, dword [rsp+0x34]",
    "mov     esi, dword [rsp+0x50]",
    "mov     r13, qword [rsp+0x1c0]",
    "mov     dword [rdi+0x4], eax",
    "mov     rax, qword [rsp+0x78]",
    "mov     qword [rdi-0x10], rax",
    "mov     rax, qword [rsp+0x48]",
    "mov     dword [rdi], ebp",
    "mov     qword [rdi-0x8], rax",
    "mov     r12, qword [rsp+0x48]",
    "mov     r15, qword [rsp+0x58]",
    "add     r13, r13",
    "lea     rbp, [rsp+r13*8+0xb0]",
    "mov     rax, r13",
    "add     r12, 0x2",
    "add     rax, rax",
    "mov     qword [rsp+rax*8+0xb8], rcx",
    "mov     dword [rsp+rax*8+0xb0], ebp",
    "mov     eax, dword [rsp+0x30]",
    "inc     eax",
    "cmp     eax, ebx",
    "mov     dword [rsp+0x30], eax",
    "jl      0x140024390",
    "mov     r15d, dword [rsp+0x30]",
    "lea     rbp, [rsp+0xb0]",
    "inc     esi",
    "add     rbp, 0x10",
    "cmp     esi, 0xd",
    "jb      0x14002445e",
    "mov     r8d, dword [rbp]",
    "mov     rdx, qword [rbp+0x8]",
    "lea     rax, [rsp+0x1d8]",
    "lea     r9, [rsp+0x38]",
    "mov     rcx, r12",
    "mov     qword [rsp+0x28], r15",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400240e0",
    "mov     ebp, 0x1",
    "mov     rcx, r12",
    "xor     esi, esi",
    "xor     r13d, r13d",
    "mov     dword [rsp+0x1d8], ebp",
    "mov     qword [rsp+0x38], rcx",
    "test    bpl, al",
    "je      0x1400243fd",
    "mov     rdi, qword [rsp+0x70]",
    "mov     r12, qword [rsp+0x60]",
    "mov     r14d, dword [rsp+0x44]",
    "mov     r15, qword [rsp+0x80]",
    "mov     r8d, dword [rbp]",
    "mov     rdx, qword [rbp+0x8]",
    "lea     rax, [rsp+0x1d8]",
    "lea     r9, [rsp+0x38]",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], r14",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400240e0",
    "inc     esi",
    "inc     r13",
    "add     rbp, 0x10",
    "bt      r15d, esi",
    "jb      0x1400243bb",
    "mov     ebp, dword [rsp+0x1d8]",
    "mov     rcx, qword [rsp+0x38]",
    "bt      ebx, esi",
    "jae     0x14002448a",
    "mov     ebp, dword [rsp+0x1d8]",
    "mov     r12, qword [rsp+0x60]",
    "mov     r15, qword [rsp+0x80]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}