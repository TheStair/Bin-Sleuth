{
  "address": "0x1400976c4",
  "rules": [
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "mov     dword [rax+0x10], edx",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     rsi, rcx",
    "lea     rdx, [rax-0x38]",
    "mov     ecx, r8d",
    "mov     r15, r9",
    "xor     r13d, r13d",
    "xor     r14d, r14d",
    "call    CDLocateCheckSum",
    "mov     edi, eax",
    "test    eax, eax",
    "js      0x140097811",
    "mov     rbx, qword [rsp+0x60]",
    "mov     rbp, qword [rsp+0x70]",
    "mov     rsi, qword [rsp+0x78]",
    "mov     eax, edi",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "xor     ebp, ebp",
    "mov     edi, 0xc0000225",
    "cmp     dword [rsi], ebp",
    "jbe     0x140097811",
    "lea     rbx, [rsi+0x8]",
    "mov     rax, qword [rbx+0x8]",
    "xor     edx, edx",
    "lea     r12, [rsi+rax+0x4]",
    "mov     rax, qword [rsp+0x20]",
    "mov     r8d, dword [rax+0x4]",
    "mov     rcx, r12",
    "call    memset",
    "cmp     dword [rbx], 0x6",
    "jne     0x140097748",
    "cmp     dword [rbx], 0x7",
    "jne     0x14009774b",
    "mov     r14, r12",
    "mov     r13, r12",
    "jmp     0x14009774b",
    "inc     ebp",
    "add     rbx, 0x10",
    "cmp     ebp, dword [rsi]",
    "jb      0x140097718",
    "cmp     dword [rbx], 0x6",
    "je      0x140097722",
    "test    r13, r13",
    "je      0x140097811",
    "test    r14, r14",
    "je      0x140097811",
    "mov     rax, qword [rsp+0x20]",
    "mov     edx, dword [rsp+0x80]",
    "mov     ebx, 0x11",
    "lea     r9, [rsp+0x28]",
    "mov     r8d, ebx",
    "mov     rcx, r15",
    "call    qword [rax+0x30]",
    "mov     edi, eax",
    "test    eax, eax",
    "js      0x140097811",
    "mov     rax, qword [rsp+0x20]",
    "mov     edx, dword [rsp+0x68]",
    "mov     rcx, qword [rsp+0x28]",
    "mov     r8, rsi",
    "call    qword [rax+0x18]",
    "mov     rax, qword [rsp+0x20]",
    "mov     rcx, qword [rsp+0x28]",
    "mov     rdx, r13",
    "call    qword [rax+0x20]",
    "mov     rax, qword [rsp+0x20]",
    "lea     rcx, [rsp+0x28]",
    "call    qword [rax+0x28]",
    "mov     rax, qword [rsp+0x20]",
    "mov     edx, dword [rsp+0x80]",
    "lea     r9, [rsp+0x28]",
    "mov     r8d, ebx",
    "mov     rcx, r15",
    "call    qword [rax+0x30]",
    "mov     edi, eax",
    "test    eax, eax",
    "js      0x140097811",
    "mov     rax, qword [rsp+0x20]",
    "mov     rcx, qword [rsp+0x28]",
    "mov     r8, r13",
    "mov     edx, dword [rax+0x4]",
    "call    qword [rax+0x18]",
    "mov     rax, qword [rsp+0x20]",
    "mov     rcx, qword [rsp+0x28]",
    "mov     rdx, r14",
    "call    qword [rax+0x20]",
    "mov     rax, qword [rsp+0x20]",
    "lea     rcx, [rsp+0x28]",
    "call    qword [rax+0x28]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}