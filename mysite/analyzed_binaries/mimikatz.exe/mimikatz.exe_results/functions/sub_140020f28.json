{
  "address": "0x140020f28",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x30",
    "mov     rbp, qword [rcx+0x110]",
    "mov     rdi, rcx",
    "mov     rcx, qword [rcx+0xa8]",
    "mov     rsi, rdx",
    "test    rcx, rcx",
    "je      0x140020f66",
    "xor     ebx, ebx",
    "mov     byte [rdi+0x8], 0x0",
    "test    rsi, rsi",
    "je      0x140020f89",
    "mov     rbx, qword [rcx+0x20]",
    "call    sub_140016950",
    "mov     rcx, rbx",
    "test    rbx, rbx",
    "jne     0x140020f55",
    "movzx   r8d, byte [rdi+0xf]",
    "mov     r9d, dword [rdi+0xbc]",
    "mov     rcx, qword [rdi+0x120]",
    "mov     rdx, rsi",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_140024b48",
    "and     qword [rdi+0x120], 0x0",
    "mov     rcx, rdi",
    "call    sub_14001f71c",
    "cmp     byte [rdi+0x13], 0x0",
    "jne     0x14002103c",
    "mov     eax, dword [rsi+0x30]",
    "bt      rax, 0xb",
    "jb      0x140020f89",
    "mov     rcx, rdi",
    "call    sub_14001f84c",
    "mov     rbx, qword [rdi+0x50]",
    "mov     rax, qword [rbx]",
    "test    rax, rax",
    "je      0x14002105a",
    "mov     rcx, qword [rdi+0x50]",
    "cmp     qword [rcx], 0x0",
    "je      0x140021010",
    "mov     rcx, rdi",
    "call    sub_140020edc",
    "test    eax, eax",
    "cmove   rbx, rbp",
    "mov     rbx, qword [rdi+0x48]",
    "mov     rax, qword [rbx]",
    "test    rax, rax",
    "je      0x140021070",
    "mov     rcx, rbx",
    "call    qword [rax+0x8]",
    "and     qword [rbx], 0x0",
    "mov     al, byte [rdi+0x14]",
    "cmp     al, 0x6",
    "je      0x14002103c",
    "cmp     byte [rdi+0xb], 0x0",
    "jne     0x140020fe1",
    "mov     rcx, rbp",
    "call    sub_14001e248",
    "mov     rcx, qword [rdi+0x118]",
    "mov     rcx, qword [rcx+0x40]",
    "call    qword [rel data_14013d150]",
    "mov     rcx, rdi",
    "call    sub_140016950",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "xor     eax, eax",
    "add     rsp, 0x30",
    "pop     rdi",
    "retn    ",
    "mov     rcx, rbx",
    "call    qword [rax+0x8]",
    "and     qword [rbx], 0x0",
    "test    al, al",
    "je      0x14002103c",
    "mov     rcx, qword [rdi+0x50]",
    "lea     rdx, [rdi+0x68]",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x30]",
    "mov     r11d, eax",
    "mov     rax, qword [rcx]",
    "mov     edx, 0x2",
    "call    qword [rax+0x28]",
    "mov     r11d, eax",
    "test    eax, eax",
    "jne     0x140020ff2",
    "cmp     al, 0x2",
    "jb      0x140021029",
    "mov     rcx, rdi",
    "mov     dword [rdi+0x2c], r11d",
    "mov     byte [rdi+0x14], 0x6",
    "call    sub_14001ef34",
    "cmp     eax, 0xa",
    "jne     0x140021010",
    "movzx   eax, r11b",
    "cmp     eax, 0xd",
    "je      0x140021000",
    "cmp     byte [rdi+0x8], 0x0",
    "jne     0x14002103c",
    "mov     rcx, rdi",
    "call    sub_140022cf4",
    "jmp     0x14002103c",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "call    sub_14001f9d4"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}