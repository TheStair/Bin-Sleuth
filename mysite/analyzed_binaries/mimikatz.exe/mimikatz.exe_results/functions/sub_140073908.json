{
  "address": "0x140073908",
  "rules": [
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for trap flag exception/f2973fbf4b89419fb73ecd274d9581c2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     dword [rax+0x18], r8d",
    "mov     qword [rax+0x10], rdx",
    "mov     qword [rax+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x98",
    "mov     r9, qword [rdx]",
    "xor     edi, edi",
    "movsxd  r10, r8d",
    "mov     r8, qword [r9]",
    "mov     qword [rsp+0x88], rdi",
    "mov     byte [rax+0x20], dil",
    "mov     rcx, qword [r8]",
    "mov     qword [rsp+0x38], r8",
    "mov     qword [rsp+0x80], rcx",
    "cmp     byte [rcx+0x61], dil",
    "jne     0x1400741ea",
    "add     rsp, 0x98",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rax, qword [rdx+0x20]",
    "mov     rcx, r10",
    "shl     rcx, 0x6",
    "mov     qword [rsp+0x50], rcx",
    "lea     rbx, [rcx+rax]",
    "lea     rax, [r9+0x290]",
    "mov     rsi, qword [rbx]",
    "mov     qword [rsp+0x58], rax",
    "mov     rdx, qword [rsi+0x10]",
    "cmp     rdx, rdi",
    "je      0x140073998",
    "mov     qword [rsp+0x60], rdi",
    "mov     rcx, rax",
    "call    sub_14007430c",
    "mov     r8, qword [rsp+0x38]",
    "mov     qword [rsp+0x60], rax",
    "mov     rax, qword [rsp+0x58]",
    "jmp     0x14007399d",
    "cmp     ebp, 0x32",
    "jne     0x1400739e5",
    "mov     rdx, rsi",
    "mov     rcx, r8",
    "call    sub_140045fe8",
    "cmp     eax, edi",
    "jne     0x1400741ea",
    "movzx   ebp, byte [rsi]",
    "mov     dword [rsp+0x40], ebp",
    "cmp     ebp, 0x31",
    "jne     0x1400739da",
    "mov     rdx, qword [rsi+0x18]",
    "cmp     rdx, rdi",
    "je      0x1400739f8",
    "mov     qword [rbx+0x30], rdi",
    "jmp     0x1400739ff",
    "bt      dword [rsi+0x4], 0xb",
    "mov     rdx, qword [rsi+0x20]",
    "mov     rcx, qword [rsp+0x58]",
    "jae     0x1400739d3",
    "mov     rax, rdi",
    "mov     rcx, rax",
    "call    sub_14007430c",
    "jmp     0x1400739fb",
    "mov     rax, qword [rsp+0x58]",
    "mov     rdx, rsi",
    "mov     rcx, rax",
    "mov     dword [rax], edi",
    "call    sub_14007430c",
    "mov     r8, qword [rsp+0x58]",
    "mov     r9, rax",
    "mov     qword [rsp+0x70], rax",
    "cmp     dword [r8], edi",
    "je      0x140073a2c",
    "call    sub_140074444",
    "jmp     0x1400739fb",
    "call    sub_1400736b0",
    "jmp     0x1400739fb",
    "mov     r10d, 0x1",
    "test    byte [rsi+0x4], r10b",
    "je      0x140073a99",
    "mov     eax, 0x1000",
    "or      word [rbx+0x12], ax",
    "mov     qword [rbx+0x30], rax",
    "or      eax, 0xffffffff",
    "mov     qword [rbx+0x38], r9",
    "mov     word [rbx+0x14], di",
    "mov     dword [rbx+0x1c], eax",
    "mov     dword [rbx+0x18], eax",
    "cmp     ebp, 0x31",
    "je      0x140073ac7",
    "cmp     dword [r8+0x4], edi",
    "mov     ecx, edi",
    "jle     0x140073a59",
    "mov     r9, qword [rsi+0x10]",
    "jmp     0x140073ad9",
    "cmp     ebp, 0x35",
    "jl      0x140073ab9",
    "mov     rdx, rdi",
    "movsx   edx, word [rsi+0x30]",
    "lea     rax, [r8+0x8]",
    "cmp     r9, rdi",
    "jne     0x140073acd",
    "cmp     ebp, 0x32",
    "je      0x140073ac7",
    "cmp     ebp, 0x39",
    "jle     0x140073ac7",
    "mov     rcx, qword [rsp+0x38]",
    "lea     rdx, [rel data_1400f7510]  {\"ON clause references tables to i\u2026\"}",
    "call    sub_1400191b8",
    "jmp     0x1400741ea",
    "mov     rdx, r10",
    "shl     rdx, cl",
    "jmp     0x140073a5c",
    "add     ecx, r10d",
    "add     rax, 0x4",
    "cmp     ecx, dword [r8+0x4]",
    "jl      0x140073a48",
    "bt      dword [r9+0x4], 0xc",
    "jae     0x140073ade",
    "mov     rax, qword [rsi+0x18]",
    "mov     qword [rsp+0x68], rax",
    "cmp     rax, rdi",
    "je      0x140073b01",
    "cmp     ebp, 0x2d",
    "jne     0x140073e3d",
    "or      r9, rdx",
    "lea     rax, [rdx-0x1]",
    "mov     qword [rsp+0x88], rax",
    "mov     rax, r9",
    "mov     qword [rsp+0x70], r9",
    "shr     rax, 0x1",
    "cmp     rax, rdx",
    "jb      0x140073a99",
    "cmp     dword [rax], edx",
    "je      0x140073a91",
    "mov     r9, qword [r9+0x10]",
    "mov     rdx, qword [rsp+0x60]",
    "mov     rax, rdx",
    "and     rax, qword [rbx+0x30]",
    "neg     rax",
    "sbb     ax, ax",
    "and     ax, 0xe801",
    "add     ax, 0x1fff",
    "cmp     dword [rbx+0x20], edi",
    "mov     word [rsp+0x44], ax",
    "jle     0x140073b36",
    "bt      dword [rax+0x4], 0xc",
    "jae     0x140073afc",
    "mov     r9, qword [rsp+0xc8]",
    "cmp     byte [r9+0x10], 0x2c",
    "jne     0x140074122",
    "mov     rcx, qword [rsp+0xc0]",
    "lea     r8, [rsp+0x48]",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_1400738b0",
    "mov     ecx, 0x80",
    "cmp     eax, edi",
    "je      0x140073b97",
    "movsxd  rax, dword [rbx+0x20]",
    "lea     rcx, [rax+rax*4]",
    "mov     rax, qword [r9+0x20]",
    "mov     r9, qword [rax+rcx*8-0x20]",
    "mov     qword [rsp+0x68], rax",
    "mov     rax, qword [rax+0x10]",
    "cmp     rax, rdi",
    "jne     0x140073aec",
    "mov     rbp, qword [rsp+0x50]",
    "mov     rcx, qword [rsp+0x80]",
    "lea     rax, [rsp+0x70]",
    "lea     r9, [rsp+0x78]",
    "lea     r8, [rsp+0xd8]",
    "mov     rdx, rsi",
    "mov     qword [rsp+0x20], rax",
    "mov     qword [rsp+0x70], rdi",
    "mov     qword [rsp+0x78], rdi",
    "call    sub_1400734ec",
    "cmp     eax, edi",
    "jle     0x140073ffd",
    "mov     eax, 0x800",
    "cmp     ebp, 0x2d",
    "jne     0x140073ba5",
    "mov     eax, dword [rsp+0x48]",
    "mov     dword [rbx+0x1c], eax",
    "mov     eax, dword [rsp+0x4c]",
    "mov     dword [rbx+0x28], eax",
    "cmp     ebp, 0x31",
    "jne     0x140073b6d",
    "mov     rax, qword [r9+0x20]",
    "mov     rcx, qword [rsp+0x88]",
    "or      qword [rax+rbp+0x30], rcx",
    "cmp     byte [rsi], 0x31",
    "jne     0x1400741d9",
    "mov     r9, qword [rsp+0xc8]",
    "mov     r10, qword [rsp+0x78]",
    "mov     rbp, qword [rsp+0x70]",
    "mov     qword [rsp+0x48], r10",
    "mov     r9, qword [rsp+0x68]",
    "cmp     r9, rdi",
    "je      0x140073e3d",
    "or      word [rbx+0x12], ax",
    "cmp     ebp, 0x32",
    "jne     0x140073b79",
    "lea     eax, [rbp-0x30]",
    "jmp     0x140073b8e",
    "cmp     dword [rbx+0x20], edi",
    "jne     0x1400741d9",
    "cmp     byte [rsi], 0x35",
    "je      0x14007401e",
    "mov     qword [rsp+0x60], rdi",
    "mov     rcx, qword [rsp+0x58]",
    "mov     rdx, rbp",
    "call    sub_14007430c",
    "mov     r10, qword [rsp+0x48]",
    "mov     qword [rsp+0x60], rax",
    "jmp     0x140073ec1",
    "mov     rdx, qword [rbx+0x30]",
    "mov     rcx, qword [rsp+0xc0]",
    "lea     r8, [rsp+0x48]",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_1400738b0",
    "cmp     eax, edi",
    "je      0x140073e3d",
    "cmp     ebp, 0x2d",
    "jne     0x140073b83",
    "mov     eax, 0x100",
    "jmp     0x140073b8e",
    "and     ax, word [rsp+0x44]",
    "mov     word [rbx+0x14], ax",
    "mov     rcx, qword [rsi+0x10]",
    "cmp     byte [rcx], 0xac",
    "jne     0x1400741d9",
    "mov     rdx, qword [rsi+0x10]",
    "mov     rcx, rdx",
    "call    sub_140043460",
    "mov     ebp, eax",
    "mov     eax, 0x1",
    "cmp     ebp, eax",
    "jle     0x140074122",
    "cmp     byte [rsi], 0x2d",
    "jne     0x140074122",
    "mov     rax, rdi",
    "mov     rcx, qword [rsp+0x58]",
    "mov     rdx, r10",
    "call    sub_14007430c",
    "mov     r10, qword [rsp+0x48]",
    "jmp     0x140073edd",
    "cmp     r10, rdi",
    "je      0x140073eda",
    "cmp     dword [rbx+0x1c], edi",
    "mov     word [rsp+0x68], di",
    "jl      0x140073d3e",
    "lea     ecx, [rbp-0x35]",
    "mov     eax, 0x2",
    "shl     ax, cl",
    "mov     ax, cx",
    "jmp     0x140073b8e",
    "mov     rax, qword [rsi+0x20]",
    "cmp     qword [rax+0x50], rdi",
    "jne     0x1400741d9",
    "mov     r8, qword [rsi+0x18]",
    "mov     rcx, r8",
    "call    sub_140043460",
    "cmp     eax, ebp",
    "jne     0x140074122",
    "mov     r9, qword [rsp+0xc8]",
    "cmp     rbp, rdi",
    "je      0x140073f08",
    "mov     rcx, qword [rsp+0x60]",
    "test    rcx, rax",
    "jne     0x140073fd9",
    "mov     rbp, rsi",
    "mov     r8, rbx",
    "mov     qword [rsp+0x78], rbx",
    "mov     rbx, qword [rsp+0x80]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "mov     rdx, rsi",
    "call    sub_140043fa4",
    "mov     rbp, rax",
    "cmp     byte [rbx+0x61], dil",
    "je      0x140073c1e",
    "call    sub_140043460",
    "cmp     eax, edi",
    "jle     0x1400741d9",
    "bt      dword [rdx+0x4], 0xb",
    "jae     0x140074060",
    "dec     eax",
    "mov     dword [rsp+0x40], eax",
    "cmp     rbp, rdi",
    "je      0x140073ebc",
    "jmp     0x140074005",
    "mov     rax, rdi",
    "mov     rcx, qword [rsp+0x80]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rdx, rbp",
    "call    sub_140043fa4",
    "jmp     0x140073f0b",
    "mov     rax, qword [rbp+0x10]",
    "mov     rcx, qword [rbp+0x18]",
    "mov     qword [rbp+0x18], rax",
    "mov     al, byte [rbp]",
    "mov     qword [rbp+0x10], rcx",
    "mov     cl, 0x36",
    "cmp     al, cl",
    "jb      0x140073dce",
    "cmp     dx, di",
    "je      0x140073d8c",
    "mov     rbx, qword [rsp+0xc8]",
    "mov     r8d, 0x3",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_1400733ac",
    "cmp     eax, edi",
    "je      0x1400741ea",
    "cmp     rax, rdi",
    "je      0x1400741ea",
    "mov     r8d, 0x2",
    "mov     rdx, rsi",
    "mov     rcx, r9",
    "call    sub_1400733ac",
    "mov     rdx, qword [rsp+0xc8]",
    "mov     rcx, qword [rdx+0x20]",
    "movsxd  rbx, eax",
    "mov     r8d, eax",
    "shl     rbx, 0x6",
    "inc     edi",
    "mov     dword [rbx+rcx+0x20], edi",
    "mov     rcx, qword [rsp+0xc0]",
    "call    sub_140073908",
    "mov     r9, qword [rsp+0xc8]",
    "mov     eax, dword [rsp+0xd0]",
    "mov     r11, qword [r9+0x20]",
    "mov     dword [rbx+r11+0x18], eax",
    "mov     rcx, qword [r9+0x20]",
    "movzx   eax, word [rcx+rbp+0x10]",
    "mov     word [rcx+rbx+0x10], ax",
    "mov     rax, qword [r9+0x20]",
    "inc     byte [rax+rbp+0x16]",
    "mov     rcx, qword [rsi+0x10]",
    "call    sub_140043460",
    "cmp     edi, eax",
    "jl      0x140074164",
    "cmp     ebp, edi",
    "mov     eax, edi",
    "mov     dword [rsp+0xd8], eax",
    "jle     0x14007410b",
    "bt      dword [r8+0x4], 0xb",
    "jb      0x140074122",
    "cmp     byte [r9+0x10], 0x2c",
    "jne     0x140074122",
    "mov     rcx, qword [rsp+0xc8]",
    "mov     r8d, 0x3",
    "mov     rdx, rax",
    "call    sub_1400733ac",
    "mov     r9, qword [rsp+0xc8]",
    "mov     r10, qword [rsp+0x48]",
    "mov     rdx, qword [r9+0x20]",
    "mov     r11, qword [rsp+0x50]",
    "mov     ecx, dword [rsp+0xd0]",
    "movsxd  r8, eax",
    "mov     rax, qword [rsp+0x60]",
    "shl     r8, 0x6",
    "mov     qword [r8+rdx+0x30], rax",
    "mov     eax, dword [r10+0x28]",
    "mov     dword [r8+rdx+0x1c], eax",
    "movsx   eax, word [r10+0x2c]",
    "mov     dword [r8+rdx+0x28], eax",
    "mov     eax, 0x40",
    "mov     word [r8+rdx+0x14], ax",
    "mov     al, byte [rsp+0xd8]",
    "mov     byte [r8+rdx+0x17], al",
    "mov     rax, qword [r9+0x20]",
    "mov     dword [r8+rax+0x18], ecx",
    "mov     rcx, qword [r9+0x20]",
    "movzx   eax, word [r11+rcx+0x10]",
    "mov     word [rcx+r8+0x10], ax",
    "mov     rax, qword [r9+0x20]",
    "add     byte [r11+rax+0x16], bl",
    "mov     rax, qword [r9+0x20]",
    "lea     rbx, [r11+rax]",
    "mov     rax, qword [rbx+0x38]",
    "or      word [rbx+0x12], 0x8",
    "mov     qword [r8+rdx+0x38], rax",
    "jmp     0x140073fe1",
    "cmp     rax, rdi",
    "je      0x140073f31",
    "mov     rcx, qword [rsp+0x38]",
    "xor     r8d, r8d",
    "mov     r9, rax",
    "lea     edx, [r8+0x2e]",
    "call    sub_140043a14",
    "mov     ebx, 0x1",
    "test    byte [rsi+0x4], bl",
    "je      0x140073f31",
    "mov     rdx, qword [rsp+0x78]",
    "mov     eax, dword [rsp+0x48]",
    "or      word [rdx+0x12], r8w",
    "mov     dword [rdx+0x1c], eax",
    "mov     eax, dword [rsp+0x4c]",
    "mov     dword [rdx+0x28], eax",
    "mov     rax, qword [rsp+0x60]",
    "or      rax, qword [rsp+0x88]",
    "mov     qword [rdx+0x30], rax",
    "mov     rax, qword [rsp+0x70]",
    "mov     qword [rdx+0x38], rax",
    "movzx   ecx, byte [rbp]",
    "cmp     ecx, 0x31",
    "jne     0x140073e0e",
    "sub     al, cl",
    "xor     al, 0x2",
    "add     al, cl",
    "mov     byte [rbp], al",
    "mov     rdx, r10",
    "mov     rcx, r11",
    "call    sub_1400430d4",
    "cmp     rax, rdi",
    "je      0x140073da7",
    "btr     dword [r9+0x4], 0x8",
    "mov     r9, qword [rsp+0x50]",
    "movsxd  rdx, eax",
    "mov     rax, qword [rbx+0x20]",
    "shl     rdx, 0x6",
    "lea     r8, [rdx+rax]",
    "mov     eax, dword [rsp+0xd0]",
    "mov     dword [r8+0x18], eax",
    "mov     rcx, qword [rbx+0x20]",
    "mov     qword [rsp+0x78], r8",
    "movzx   eax, word [rcx+r9+0x10]",
    "mov     word [rcx+rdx+0x10], ax",
    "mov     rax, qword [rbx+0x20]",
    "mov     ecx, 0x1",
    "add     byte [r9+rax+0x16], cl",
    "cmp     dword [rsp+0x40], 0x2d",
    "jne     0x140073c91",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_140043de4",
    "jmp     0x1400741ea",
    "mov     rbx, qword [r9+0x20]",
    "mov     rbp, qword [rsp+0x50]",
    "add     rbx, rbp",
    "or      word [rbx+0x12], 0x6",
    "mov     word [rbx+0x14], di",
    "jmp     0x140074127",
    "mov     rdx, qword [rsi+0x10]",
    "mov     rcx, qword [rsp+0x38]",
    "mov     r8d, eax",
    "call    sub_1400434cc",
    "mov     r8d, dword [rsp+0xd8]",
    "mov     rdx, qword [rsi+0x18]",
    "mov     rcx, qword [rsp+0x38]",
    "mov     rbx, rax",
    "call    sub_1400434cc",
    "movzx   edx, byte [rsi]",
    "mov     rcx, qword [rsp+0x38]",
    "mov     r9, rax",
    "mov     r8, rbx",
    "call    sub_140043a14",
    "cmp     rax, rdi",
    "je      0x1400740c4",
    "mov     rax, r10",
    "mov     qword [rsp+0x48], rbp",
    "mov     r10, rbp",
    "mov     rbp, rax",
    "mov     eax, dword [rsp+0x40]",
    "cmp     eax, edi",
    "jg      0x140073e98",
    "or      dword [rax+0x4], ebx",
    "cmp     ecx, 0x32",
    "jne     0x140073e1a",
    "lea     eax, [rcx-0x30]",
    "jmp     0x140073e2f",
    "mov     r8d, dword [rsp+0x40]",
    "mov     rax, qword [rbp+0x10]",
    "bts     dword [rax+0x4], 0x8",
    "jmp     0x140073d84",
    "mov     rax, qword [rbx+0x20]",
    "mov     r11, qword [rsp+0x38]",
    "lea     rbx, [r9+rax]",
    "or      word [rbx+0x12], 0x8",
    "mov     rax, qword [r11]",
    "test    byte [rax+0x5c], 0x80",
    "jne     0x140073d4e",
    "mov     eax, 0x800",
    "or      word [r8+0x12], ax",
    "cmp     byte [r9+0x10], 0x2c",
    "jne     0x1400741d9",
    "mov     rbx, qword [rsp+0xc8]",
    "mov     r8d, 0x1",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_1400733ac",
    "mov     rcx, qword [rsp+0xc0]",
    "mov     rdx, rbx",
    "mov     r8d, eax",
    "call    sub_140073908",
    "mov     eax, dword [rsp+0xd8]",
    "inc     eax",
    "cmp     eax, ebp",
    "mov     dword [rsp+0xd8], eax",
    "jl      0x140074071",
    "mov     ecx, dword [rsi+0x4]",
    "and     ecx, 0x1",
    "or      dword [rax+0x4], ecx",
    "movzx   ecx, word [rsi+0x30]",
    "mov     word [rax+0x30], cx",
    "cmp     ecx, 0x2d",
    "jne     0x140073e24",
    "mov     eax, 0x100",
    "jmp     0x140073e2f",
    "add     ax, word [rsp+0x68]",
    "and     ax, word [rsp+0x44]",
    "mov     word [rdx+0x14], ax",
    "mov     r8d, 0x2000",
    "jmp     0x140073dac",
    "mov     r9, qword [rbp+0x18]",
    "mov     r10, qword [rbp+0x10]",
    "mov     ecx, 0x100",
    "movzx   edx, word [r9+0x4]",
    "movzx   eax, word [r10+0x4]",
    "mov     r8w, di",
    "and     dx, cx",
    "and     ax, cx",
    "mov     dword [rsp+0x40], r8d",
    "cmp     dx, ax",
    "jne     0x140073dac",
    "cmp     byte [rbp], 0x35",
    "je      0x140073cc0",
    "mov     r9, rbx",
    "add     ecx, 0xffffffcb",
    "mov     eax, 0x2",
    "shl     ax, cl",
    "lea     eax, [rcx+0x53]",
    "jmp     0x140073e2f",
    "test    byte [rbp+0x4], cl",
    "jne     0x140073d4e",
    "cmp     byte [rbp], 0x2d",
    "jne     0x140073d4e",
    "mov     rcx, qword [rbp+0x10]",
    "call    sub_140042fa8",
    "mov     rcx, qword [rbp+0x18]",
    "mov     byte [rsp+0x30], al",
    "call    sub_140042fa8",
    "mov     r11b, al",
    "mov     al, byte [rsp+0x30]",
    "cmp     al, r11b",
    "je      0x140073cf5",
    "mov     r8, qword [rbp+0x18]",
    "mov     rdx, qword [rbp+0x10]",
    "mov     rcx, qword [rsp+0x38]",
    "call    sub_140043358",
    "cmp     rax, rdi",
    "je      0x140073d2f",
    "cmp     al, 0x43",
    "jl      0x140073d49",
    "mov     eax, 0x800",
    "or      word [rbx+0x14], ax",
    "mov     dword [rsp+0x68], eax",
    "jmp     0x140073d49",
    "lea     rcx, [rel sub_140082cf0]",
    "cmp     qword [rax+0x18], rcx",
    "je      0x140073d2f",
    "mov     r11, qword [rsp+0x38]",
    "cmp     r11b, 0x43",
    "jl      0x140073d49",
    "mov     r8, qword [rbp+0x18]",
    "mov     rdx, qword [rbp+0x10]",
    "mov     rcx, qword [rsp+0x38]",
    "call    sub_14004321c",
    "cmp     eax, edi",
    "je      0x140073d49"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}