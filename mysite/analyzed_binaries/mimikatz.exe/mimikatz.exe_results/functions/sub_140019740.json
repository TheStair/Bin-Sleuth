{
  "address": "0x140019740",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "mov     qword [rax+0x10], rdx",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "xor     esi, esi",
    "mov     bl, r9b",
    "movsxd  rdi, r8d",
    "lea     r9d, [rsi+0x1]",
    "xor     r14d, r14d",
    "xor     r13d, r13d",
    "mov     r10, rcx",
    "lea     r11, [rdi+rcx]",
    "lea     r15d, [rsi+0x3]",
    "cmp     bl, r9b",
    "jne     0x140019783",
    "movzx   eax, bl",
    "mov     ecx, r15d",
    "mov     edx, 0x2",
    "sub     ecx, eax",
    "movsxd  rax, ecx",
    "jmp     0x1400197a0",
    "mov     edx, r9d",
    "jmp     0x1400197bd",
    "cmp     rax, rdi",
    "jl      0x140019795",
    "lea     rcx, [rel __dos_header]",
    "cmp     r10, r11",
    "jae     0x1400197fe",
    "cmp     byte [rax+r10], sil",
    "jne     0x1400197a5",
    "cmp     ecx, edi",
    "movsxd  r11, ecx",
    "movzx   eax, bl",
    "setl    r13b",
    "xor     r11, r9",
    "and     rax, r9",
    "add     r11, r10",
    "add     r10, rax",
    "mov     r12, r10",
    "jmp     0x14001980f",
    "movzx   eax, byte [r10]",
    "test    byte [rax+rcx+0xd6500], r9b",
    "je      0x1400197e2",
    "add     ecx, edx",
    "add     rax, rdx",
    "cmp     r10, r11",
    "jb      0x140019803",
    "cmp     r10, r11",
    "jae     0x1400197fe",
    "movsxd  rax, edx",
    "add     r10, rax",
    "cmp     r10, r11",
    "jb      0x1400197c9",
    "cmp     byte [r10], 0x30",
    "jne     0x140019814",
    "xor     edi, edi",
    "movsxd  rbp, edx",
    "cmp     r10, r11",
    "jae     0x14001986d",
    "cmp     byte [r10], 0x2d",
    "jne     0x1400197f2",
    "movsxd  rax, edx",
    "add     r10, rax",
    "mov     rax, qword [rsp+0x38]",
    "test    r14d, r14d",
    "je      0x14001987a",
    "mov     r8, r10",
    "cmp     byte [r10], 0x2b",
    "jne     0x1400197fe",
    "mov     r14d, r9d",
    "jmp     0x1400197f8",
    "mov     qword [rax], rsi",
    "mov     rsi, qword [rsp+0x38]",
    "neg     rsi",
    "mov     r8, 0x7fffffffffffffff",
    "cmp     rsi, r8",
    "jbe     0x14001986d",
    "add     edi, edx",
    "lea     rcx, [rsi+rsi*4]",
    "add     r8, rbp",
    "movsxd  rax, edi",
    "lea     rsi, [rbx+rcx*2-0x30]",
    "add     rax, r10",
    "cmp     rax, r11",
    "jb      0x140019821",
    "movsxd  rax, edx",
    "add     r10, rax",
    "test    r13d, r13d",
    "je      0x1400198b2",
    "cmp     r12, r10",
    "jne     0x1400198a8",
    "mov     rsi, qword [rsp+0x38]",
    "mov     eax, r14d",
    "neg     eax",
    "sbb     rcx, rcx",
    "neg     rcx",
    "add     rcx, r8",
    "mov     qword [rsi], rcx",
    "jmp     0x140019882",
    "movsx   rbx, byte [r8]",
    "lea     eax, [rbx-0x30]",
    "cmp     eax, 0x9",
    "ja      0x140019846",
    "movsxd  rcx, edi",
    "lea     rax, [rcx+r10]",
    "cmp     rax, r11",
    "jae     0x140019892",
    "mov     r8d, r9d",
    "jmp     0x140019892",
    "or      r8d, 0xffffffff",
    "xor     r8d, r8d",
    "test    edi, edi",
    "jne     0x1400198a8",
    "lea     r12, [rel __dos_header]",
    "mov     ebx, edi",
    "add     rcx, r10",
    "lea     r12, [rel __dos_header]",
    "jg      0x140019935",
    "mov     eax, r8d",
    "jmp     0x140019966",
    "mov     r8d, r9d",
    "jmp     0x140019899",
    "add     ebx, edx",
    "add     rcx, rbp",
    "movsxd  rax, ebx",
    "add     rax, r10",
    "cmp     rax, r11",
    "jae     0x140019899",
    "mov     ecx, r14d",
    "neg     ecx",
    "mov     rcx, 0x7fffffffffffffff",
    "sbb     rdx, rdx",
    "neg     rdx",
    "add     rdx, rcx",
    "mov     qword [rsi], rdx",
    "test    r9d, r9d",
    "jle     0x14001995c",
    "xor     eax, eax",
    "mov     r11, r10",
    "xor     edx, edx",
    "mov     rbx, qword [rsp+0x30]",
    "mov     rbp, qword [rsp+0x40]",
    "mov     rsi, qword [rsp+0x48]",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "imul    edx, edx, 0x13",
    "cmp     edi, edx",
    "jge     0x1400198ee",
    "jmp     0x1400198ca",
    "test    r14d, r14d",
    "cmovne  r15d, r8d",
    "mov     eax, r15d",
    "mov     eax, 0x2",
    "jmp     0x140019966",
    "test    eax, eax",
    "jne     0x14001992a",
    "movsx   eax, byte [rdx+r12+0xf3888]",
    "movsx   ecx, byte [r11]",
    "add     rdx, r9",
    "sub     ecx, eax",
    "add     r11, rbp",
    "lea     eax, [rcx+rcx*4]",
    "add     eax, eax",
    "je      0x1400198f7",
    "movzx   eax, byte [rcx]",
    "test    byte [rax+r12+0xd6500], r9b",
    "je      0x1400198e9",
    "mov     r9d, eax",
    "test    eax, eax",
    "js      0x1400198a0",
    "lea     rax, [rbp+rbp*8]",
    "movsx   eax, byte [r10+rax*2]",
    "sub     eax, 0x38",
    "cmp     rdx, 0x12",
    "jge     0x140019919"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}