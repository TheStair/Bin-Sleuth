{
  "address": "0x140093bb4",
  "rules": [
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encode data using Base64 via WinAPI",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "push    rbx",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xa0",
    "xor     edi, edi",
    "mov     dword [rsp+0x40], edi",
    "mov     dword [rsp+0x58], 0x32415352",
    "mov     dword [rsp+0x5c], 0x400",
    "mov     eax, dword [rcx]",
    "bswap   eax",
    "mov     eax, eax",
    "lea     rdx, [rax+rcx+0x4]",
    "mov     r9d, dword [rdx]",
    "bswap   r9d",
    "mov     dword [r11-0x74], r9d",
    "add     rdx, 0x4",
    "mov     qword [rsp+0x98], rdx",
    "mov     r12d, r9d",
    "add     rdx, r12",
    "mov     r8d, dword [rdx]",
    "bswap   r8d",
    "mov     dword [r11-0x78], r8d",
    "add     rdx, 0x4",
    "mov     qword [rsp+0xf0], rdx",
    "mov     r13d, r8d",
    "add     rdx, r13",
    "mov     eax, dword [rdx]",
    "bswap   eax",
    "mov     eax, eax",
    "lea     rcx, [rdx+rax+0x4]",
    "mov     eax, dword [rcx]",
    "bswap   eax",
    "mov     eax, eax",
    "lea     rdx, [rcx+rax+0x4]",
    "mov     eax, dword [rdx]",
    "bswap   eax",
    "mov     dword [rsp+0x68], eax",
    "add     rdx, 0x4",
    "mov     qword [rsp+0x70], rdx",
    "mov     r14d, eax",
    "mov     r15d, dword [rdx+r14]",
    "bswap   r15d",
    "mov     dword [r11-0x6c], r15d",
    "lea     rcx, [rdx+r14+0x4]",
    "mov     qword [rsp+0x90], rcx",
    "add     eax, r15d",
    "add     eax, r8d",
    "lea     ecx, [rax+r9+0x18]",
    "mov     dword [r11+0x8], ecx",
    "mov     edx, ecx",
    "lea     ecx, [rdi+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "mov     qword [rsp+0x78], rax",
    "test    rax, rax",
    "je      0x140093f37",
    "mov     eax, edi",
    "add     rsp, 0xa0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbx",
    "retn    ",
    "lea     rcx, [rsp+0x58]",
    "mov     rax, qword [rcx]",
    "mov     qword [rsi], rax",
    "mov     rax, qword [rcx+0x8]",
    "mov     qword [rsi+0x8], rax",
    "mov     rax, qword [rcx+0x10]",
    "mov     qword [rsi+0x10], rax",
    "lea     rbx, [rsi+0x18]",
    "mov     r8, r13",
    "mov     rdx, qword [rsp+0xf0]",
    "mov     rcx, rbx",
    "call    memcpy",
    "add     rbx, r13",
    "mov     r8, r12",
    "mov     rdx, qword [rsp+0x98]",
    "mov     rcx, rbx",
    "call    memcpy",
    "add     rbx, r12",
    "mov     r8, r14",
    "mov     rdx, qword [rsp+0x70]",
    "mov     rcx, rbx",
    "call    memcpy",
    "lea     rcx, [r14+rbx]",
    "mov     r8d, r15d",
    "mov     rdx, qword [rsp+0x90]",
    "call    memcpy",
    "nop     ",
    "xor     r9d, r9d",
    "lea     r8, [rel data_1400e7760]  {u\"Microsoft Primitive Provider\"}",
    "lea     rdx, [rel data_1400e2938]",
    "lea     rcx, [rsp+0x50]",
    "call    BCryptOpenAlgorithmProvider",
    "xor     r13d, r13d",
    "cmp     eax, r13d",
    "jl      0x140093f17",
    "jmp     0x140093f2e",
    "mov     dword [rsp+0x30], r13d",
    "mov     eax, dword [rsp+0xe0]",
    "mov     dword [rsp+0x28], eax",
    "mov     qword [rsp+0x20], rsi",
    "lea     r9, [rsp+0xf8]",
    "lea     r8, [rel data_140102b40]  {u\"RSAPRIVATEBLOB\"}",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x50]",
    "call    BCryptImportKeyPair",
    "cmp     eax, r13d",
    "jl      0x140093efd",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140102d70]  {u\"ERROR kuhl_m_dpapi_ssh_getRSAfro\u2026\"}",
    "call    sub_14000c030",
    "mov     dword [rsp+0x30], r13d",
    "lea     rax, [rsp+0xe0]",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x20], r13d",
    "xor     r9d, r9d",
    "lea     r8, [rel data_140102b60]  {u\"RSAFULLPRIVATEBLOB\"}",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0xf8]",
    "call    BCryptExportKey",
    "cmp     eax, r13d",
    "jl      0x140093ee0",
    "mov     edx, eax",
    "lea     rcx, [rel data_140102ce0]  {u\"ERROR kuhl_m_dpapi_ssh_getRSAfro\u2026\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0xe0]",
    "lea     ecx, [rdi+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "cmp     rax, r13",
    "je      0x140093eee",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x50]",
    "call    BCryptCloseAlgorithmProvider",
    "mov     rcx, qword [rsp+0xf8]",
    "call    BCryptDestroyKey",
    "jmp     0x140093f0b",
    "mov     dword [rsp+0x30], r13d",
    "lea     rax, [rsp+0xe0]",
    "mov     qword [rsp+0x28], rax",
    "mov     eax, dword [rsp+0xe0]",
    "mov     dword [rsp+0x20], eax",
    "mov     r9, rbx",
    "lea     r8, [rel data_140102b60]  {u\"RSAFULLPRIVATEBLOB\"}",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0xf8]",
    "call    BCryptExportKey",
    "cmp     eax, r13d",
    "jl      0x140093ec7",
    "mov     edx, eax",
    "lea     rcx, [rel data_140102c50]  {u\"ERROR kuhl_m_dpapi_ssh_getRSAfro\u2026\"}",
    "call    sub_14000c030",
    "lea     r8, [rsp+0x80]",
    "mov     rdx, rbx",
    "lea     ecx, [rdi+0x53]",
    "call    sub_140087f14",
    "cmp     eax, r13d",
    "je      0x140093ed5",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "jmp     0x140093eee",
    "mov     edi, dword [rsp+0x80]",
    "mov     r12, qword [rsp+0x88]",
    "mov     dword [rsp+0xf0], r13d",
    "lea     rax, [rsp+0xf0]",
    "mov     qword [rsp+0x20], rax",
    "xor     r9d, r9d",
    "mov     r8d, 0x80000001",
    "mov     edx, edi",
    "mov     rcx, r12",
    "call    qword [rel CryptBinaryToStringA]",
    "cmp     eax, r13d",
    "je      0x140093e78",
    "mov     edi, r13d",
    "mov     dword [rsp+0x40], r13d",
    "lea     rax, [rsp+0xf0]",
    "mov     qword [rsp+0x20], rax",
    "lea     r9, [rsp+0x48]",
    "mov     r8d, edi",
    "mov     rdx, r12",
    "lea     rcx, [rel data_140102b88]  {\"RSA PRIVATE KEY\"}",
    "call    sub_140013a70",
    "mov     edi, eax",
    "mov     dword [rsp+0x40], eax",
    "jmp     0x140093e80",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140102ba0]  {u\"ERROR kuhl_m_dpapi_ssh_getRSAfro\u2026\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x48]",
    "lea     rcx, [rel data_140102b98]",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x48]",
    "call    qword [rel LocalFree]",
    "jmp     0x140093eb7",
    "cmp     edi, r13d",
    "je      0x140093ea3",
    "mov     rcx, qword [rsp+0x88]",
    "call    qword [rel LocalFree]",
    "jmp     0x140093ed5"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}