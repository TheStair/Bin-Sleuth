{
  "address": "0x14004fae4",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "PEB access/e2c35c8722ff407f92bb1a8869064106",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "mov     r15, qword [rcx]",
    "mov     r12, qword [rcx+0x10]",
    "xor     r14d, r14d",
    "test    byte [r15+0xb8], 0x2",
    "mov     rbp, rdx",
    "mov     rbx, rcx",
    "mov     r13d, 0x1",
    "jne     0x14004fb4c",
    "mov     edx, dword [rbx+0xa8]",
    "cmp     edx, r14d",
    "je      0x14004fb66",
    "cmp     r14w, word [rdx+0x46]",
    "mov     ecx, r14d",
    "jge     0x14004fb4c",
    "lea     rdi, [rbp+0x44]",
    "cmp     word [rdi], r14w",
    "jl      0x14004fc63",
    "mov     rcx, r12",
    "call    sub_140032d34",
    "mov     dword [rax+0xc], 0x2",
    "mov     rdx, qword [rbp+0x8]",
    "movsxd  rax, ecx",
    "shl     rax, 0x5",
    "test    byte [rax+rdx+0x1b], r13b",
    "je      0x14004fb41",
    "mov     rbx, qword [rbp+0x10]",
    "jmp     0x14004fc76",
    "mov     rax, qword [rbp+0x8]",
    "movsx   rcx, word [rdi]",
    "shl     rcx, 0x5",
    "mov     rcx, qword [rcx+rax]",
    "mov     qword [rsp+0x60], rcx",
    "call    sub_140019074",
    "xor     r9d, r9d",
    "lea     r8, [rsp+0x60]",
    "lea     edx, [r9+0x3b]",
    "mov     rcx, r15",
    "mov     dword [rsp+0x68], eax",
    "call    sub_140043858",
    "xor     edx, edx",
    "mov     r8, rax",
    "mov     rcx, rbx",
    "call    sub_140044974",
    "mov     r11, rax",
    "cmp     rax, r14",
    "je      0x14004fefb",
    "movsx   eax, word [rbp+0x46]",
    "add     ecx, r13d",
    "cmp     ecx, eax",
    "jl      0x14004fb2a",
    "mov     byte [rax+rdx+0x18], 0x2",
    "cmp     rbx, r14",
    "jne     0x14004fc69",
    "lea     r11, [rsp+0x70]",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x38]",
    "mov     rsi, qword [r11+0x40]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "cmp     byte [rbx+0x104], 0x2",
    "jb      0x14004fbe8",
    "mov     eax, dword [rbx+0x64]",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "je      0x14004fc7b",
    "mov     esi, r13d",
    "mov     edi, r13d",
    "cmp     r13w, word [rbx+0x5e]",
    "jae     0x14004fce0",
    "mov     al, byte [rbx+0x102]",
    "mov     byte [rsp+0x50], 0x2",
    "mov     dword [rsp+0x48], r14d",
    "mov     byte [r11+0x20], al",
    "mov     dword [rsp+0x40], r14d",
    "or      eax, 0xffffffff",
    "mov     qword [rsp+0x38], r14",
    "mov     word [rdi], ax",
    "movzx   eax, byte [rbp+0x4c]",
    "mov     qword [rsp+0x30], r14",
    "mov     dword [rsp+0x28], eax",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x20], r11",
    "call    sub_140051dd4",
    "cmp     byte [r15+0x61], r14b",
    "jne     0x14004fefb",
    "mov     rax, qword [rax+0x8]",
    "mov     rcx, qword [rbx+0x188]",
    "jmp     0x14004fbde",
    "mov     rbx, qword [rbx+0x28]",
    "mov     word [rbx+0x5e], si",
    "mov     r9d, edi",
    "mov     r8, rbx",
    "mov     edx, esi",
    "mov     rcx, rbx",
    "call    sub_14004fa5c",
    "cmp     eax, r14d",
    "je      0x14004fca8",
    "cmp     dword [rbx+0x30], r14d",
    "jne     0x14004fefb",
    "cmp     rcx, r14",
    "jne     0x14004fbd5",
    "movzx   esi, word [rbx+0x5e]",
    "mov     word [rbx+0x60], si",
    "cmp     r12, r14",
    "je      0x14004fd1b",
    "or      eax, 0x8",
    "mov     dword [rbx+0x64], eax",
    "mov     rcx, qword [rbx+0x40]",
    "movsxd  rdx, esi",
    "movsxd  r8, edi",
    "mov     rax, qword [rcx+r8*8]",
    "add     esi, r13d",
    "mov     qword [rcx+rdx*8], rax",
    "mov     rcx, qword [rbx+0x38]",
    "mov     al, byte [rcx+r8]",
    "mov     byte [rcx+rdx], al",
    "mov     rcx, qword [rbx+0x8]",
    "movzx   eax, word [rcx+r8*2]",
    "mov     word [rcx+rdx*2], ax",
    "mov     eax, 0xffff",
    "add     word [rbx+0x60], ax",
    "jmp     0x14004fcd5",
    "mov     rbx, qword [rbp+0x10]",
    "jmp     0x14004fc59",
    "cmp     qword [rcx], rdi",
    "je      0x14004fbe5",
    "jmp     0x14004fbe8",
    "mov     eax, dword [rbp+0x38]",
    "mov     dword [rbx+0x58], eax",
    "mov     rdi, qword [rbp+0x10]",
    "cmp     rdi, r14",
    "je      0x14004fe16",
    "mov     edx, dword [rbx+0x58]",
    "cmp     edx, r14d",
    "jle     0x14004fd1b",
    "movzx   eax, word [rbx+0x5e]",
    "add     edi, r13d",
    "cmp     edi, eax",
    "jl      0x14004fc88",
    "cmp     rbx, r14",
    "jne     0x14004fc48",
    "mov     qword [rcx], rax",
    "mov     rcx, qword [rcx+0x18]",
    "cmp     r14w, word [rbp+0x46]",
    "mov     r9d, r14d",
    "mov     edx, r14d",
    "jge     0x14004fe53",
    "mov     eax, dword [rdi+0x64]",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "je      0x14004fe03",
    "mov     rcx, r12",
    "call    sub_140032d34",
    "mov     byte [rax], 0xb",
    "mov     eax, dword [rbx+0x64]",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "je      0x14004fce4",
    "jmp     0x14004fce4",
    "lea     r8d, [r9+rsi]",
    "mov     rdx, rbx",
    "mov     rcx, r15",
    "call    sub_14004f950",
    "cmp     eax, r14d",
    "jne     0x14004fefb",
    "movsx   r11d, word [rbp+0x46]",
    "mov     rdi, qword [rdi+0x28]",
    "cmp     rdi, r14",
    "jne     0x14004fd2e",
    "cmp     esi, r14d",
    "mov     r13d, r14d",
    "mov     r12d, r14d",
    "jle     0x14004fdfb",
    "or      dword [rbx+0x64], 0x20",
    "test    byte [r15+0xb8], 0x2",
    "mov     eax, dword [rbx+0x64]",
    "jne     0x14004fcfb",
    "mov     rbx, qword [rbx+0x28]",
    "cmp     r14w, word [rbp+0x46]",
    "mov     edx, r14d",
    "jge     0x14004febc",
    "add     r9d, r13d",
    "movsx   eax, word [r10]",
    "sub     r8d, r13d",
    "add     r10, 0x2",
    "cmp     edx, eax",
    "je      0x14004fe4b",
    "mov     r13d, 0x1",
    "movzx   eax, word [rdi+0x5e]",
    "mov     word [rdi+0x60], ax",
    "movzx   r14d, word [rdi+0x5e]",
    "movzx   eax, word [rbx+0x60]",
    "mov     rdx, r14",
    "sub     eax, r13d",
    "movsxd  r8, eax",
    "cmp     r8, r14",
    "jl      0x14004fef4",
    "cmp     esi, r14d",
    "mov     r9, qword [rbx+0x8]",
    "mov     ecx, esi",
    "mov     r8, r9",
    "jle     0x14004fe97",
    "cmp     esi, r14d",
    "mov     r10, qword [rbx+0x8]",
    "mov     r8d, esi",
    "jle     0x14004fe48",
    "add     edx, r13d",
    "cmp     edx, r11d",
    "jl      0x14004fe28",
    "cmp     r8d, r14d",
    "jg      0x14004fe34",
    "inc     r12d",
    "cmp     r12d, esi",
    "jl      0x14004fd4f",
    "inc     r13d",
    "not     rdx",
    "mov     qword [rbx+0x68], rdx",
    "mov     rax, qword [rbx+0x8]",
    "lea     r9, [rax+r8*2]",
    "movsxd  rcx, esi",
    "lea     r8, [rel data_1400d66b0]  {\"BINARY\"}",
    "add     esi, r13d",
    "mov     word [r9+rcx*2], dx",
    "mov     rax, qword [rbx+0x40]",
    "mov     qword [rax+rcx*8], r8",
    "movsx   eax, word [r8]",
    "sub     ecx, r13d",
    "add     r8, 0x2",
    "cmp     edx, eax",
    "je      0x14004feb1",
    "mov     r9d, r12d",
    "mov     r8, rbx",
    "mov     edx, r14d",
    "mov     rcx, rdi",
    "call    sub_14004fa5c",
    "test    eax, eax",
    "jne     0x14004fd67",
    "test    r13d, r13d",
    "je      0x14004fdf8",
    "sub     r8, r13",
    "sub     r9, 0x2",
    "cmp     r8, r14",
    "jge     0x14004fed6",
    "mov     rax, r13",
    "shl     rax, cl",
    "or      rdx, rax",
    "movsx   eax, word [rbp+0x46]",
    "add     edx, r13d",
    "cmp     edx, eax",
    "jl      0x14004fe75",
    "cmp     ecx, r14d",
    "jg      0x14004fe83",
    "xor     r14d, r14d",
    "lea     r8d, [r14+r13]",
    "mov     rdx, rdi",
    "mov     rcx, r15",
    "call    sub_14004f950",
    "test    eax, eax",
    "jne     0x14004fefb",
    "movsx   ecx, word [r9]",
    "cmp     ecx, 0x3e",
    "ja      0x14004fee8",
    "movzx   r14d, word [rdi+0x5e]",
    "xor     r12d, r12d",
    "xor     r13d, r13d",
    "inc     r12d",
    "inc     r13",
    "cmp     r12d, esi",
    "jl      0x14004fd9a",
    "mov     rax, qword [rbx+0x8]",
    "mov     rcx, qword [rdi+0x8]",
    "movsxd  rdx, r14d",
    "movzx   eax, word [rax+r13*2]",
    "mov     word [rcx+rdx*2], ax",
    "mov     rax, qword [rbx+0x40]",
    "mov     rcx, qword [rdi+0x40]",
    "mov     rax, qword [rax+r13*8]",
    "mov     qword [rcx+rdx*8], rax",
    "mov     rax, qword [rbx+0x38]",
    "cmp     byte [r13+rax], 0x0",
    "je      0x14004fde5",
    "movzx   edx, word [rdi+0x5e]",
    "mov     r9d, r12d",
    "mov     r8, rbx",
    "mov     rcx, rdi",
    "call    sub_14004fa5c",
    "test    eax, eax",
    "jne     0x14004fde8",
    "xor     r14d, r14d",
    "jmp     0x14004fe03",
    "inc     r14d",
    "bts     dword [rdi+0x64], 0x9"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}