{
  "address": "0x1400421fc",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "contain loop",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "mov     rsi, qword [rdx+0x48]",
    "xor     ebx, ebx",
    "mov     rdi, rdx",
    "mov     r12, rcx",
    "mov     r8d, 0x1",
    "cmp     rsi, rbx",
    "je      0x14004249d",
    "xor     eax, eax",
    "mov     r13, qword [rcx]",
    "mov     edx, dword [rsi]",
    "cmp     edx, dword [r13+0x84]",
    "mov     qword [rsp+0x98], r13",
    "jle     0x140042257",
    "cmp     edx, ebx",
    "mov     ecx, ebx",
    "jle     0x14004226e",
    "lea     rdx, [rel data_1400f4918]  {\"too many terms in ORDER BY claus\u2026\"}",
    "call    sub_1400191b8",
    "mov     qword [rdi+0x58], rbx",
    "jmp     0x14004227e",
    "lea     rax, [rsi+0x24]",
    "mov     rbx, qword [rsp+0x80]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "lea     rcx, [rdi+0x50]",
    "cmp     qword [rcx], rbx",
    "jne     0x140042274",
    "and     dword [rax], 0xfffffffe",
    "inc     ecx",
    "add     rax, 0x28",
    "cmp     ecx, dword [rsi]",
    "jl      0x140042261",
    "mov     rax, qword [rcx]",
    "mov     qword [rax+0x58], rdi",
    "mov     rdi, qword [rcx]",
    "cmp     r8d, ebx",
    "je      0x140042484",
    "mov     ecx, dword [rsi]",
    "cmp     ecx, ebx",
    "jle     0x14004249d",
    "cmp     dword [rsi], ebx",
    "mov     r9, qword [rdi]",
    "mov     r8d, ebx",
    "mov     dword [rsp+0x90], ebx",
    "mov     r15d, ebx",
    "lea     rbp, [rsi+0x8]",
    "mov     qword [rsp+0x30], r9",
    "jle     0x140042477",
    "lea     rax, [rsi+0x24]",
    "mov     rdi, qword [rdi+0x58]",
    "cmp     rdi, rbx",
    "jne     0x140042287",
    "or      dword [rsp+0x88], 0xffffffff",
    "test    byte [rbp+0x1c], 0x1",
    "jne     0x140042462",
    "lea     r8d, [rbx+0x1]",
    "lea     rdx, [rel data_1400f4948]  {\"%r ORDER BY term does not match \u2026\"}",
    "mov     rcx, r12",
    "call    sub_1400191b8",
    "jmp     0x14004224d",
    "inc     ebx",
    "add     rax, 0x28",
    "cmp     ebx, ecx",
    "jl      0x14004248e",
    "mov     r9, qword [rsp+0x30]",
    "inc     r15d",
    "add     rbp, 0x28",
    "cmp     r15d, dword [rsi]",
    "jl      0x1400422b1",
    "mov     rcx, qword [rbp]",
    "call    sub_1400430a8",
    "mov     r14, rax",
    "cmp     rax, rbx",
    "je      0x140042322",
    "mov     eax, 0x1",
    "jmp     0x14004249f",
    "test    byte [rax], 0x1",
    "je      0x1400424b7",
    "mov     r8, r14",
    "mov     rdx, r9",
    "mov     rcx, r12",
    "call    sub_1400420d4",
    "mov     dword [rsp+0x88], eax",
    "cmp     eax, ebx",
    "jne     0x1400423cc",
    "lea     rdx, [rsp+0x88]",
    "mov     rcx, rax",
    "call    sub_140044f2c",
    "cmp     eax, ebx",
    "je      0x140042322",
    "jle     0x140042454",
    "cmp     byte [r12+0x104], 0x2",
    "jb      0x14004234f",
    "mov     eax, dword [rsp+0x88]",
    "cmp     eax, ebx",
    "jle     0x1400422fc",
    "mov     r8d, 0x1",
    "mov     dword [rsp+0x90], r8d",
    "cmp     byte [r12+0x104], 0x2",
    "jae     0x140042446",
    "cmp     r14, rbx",
    "je      0x140042371",
    "mov     r13, r14",
    "jmp     0x140042374",
    "mov     eax, dword [r9]",
    "lea     r8d, [r15+0x1]",
    "lea     rdx, [rel data_1400f48e0]  {\"%r %s BY term out of range - sho\u2026\"}",
    "lea     r9, [rel data_1400f493c]  {\"ORDER\"}",
    "mov     rcx, r12",
    "mov     dword [rsp+0x20], eax",
    "call    sub_1400191b8",
    "jmp     0x14004224d",
    "cmp     eax, dword [r9]",
    "jle     0x1400423ca",
    "or      dword [rbp+0x1c], 0x1",
    "mov     r8d, dword [rsp+0x90]",
    "jmp     0x140042462",
    "xor     r8d, r8d",
    "mov     edx, 0x96",
    "mov     rcx, r13",
    "call    sub_14004397c",
    "mov     r11, rax",
    "cmp     rax, rbx",
    "je      0x14004224d",
    "mov     r13, rbx",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rdx, r14",
    "mov     rcx, r13",
    "call    sub_140043fa4",
    "mov     r13, rax",
    "mov     eax, dword [rsp+0x88]",
    "jmp     0x140042374",
    "mov     rcx, qword [rsp+0x98]",
    "cmp     byte [rcx+0x61], bl",
    "jne     0x140042396",
    "cmp     eax, ebx",
    "bts     dword [rax+0x4], 0xa",
    "mov     ecx, dword [rsp+0x88]",
    "mov     dword [rax+0x8], ecx",
    "mov     rcx, qword [rbp]",
    "cmp     rcx, r14",
    "jne     0x14004241a",
    "cmp     byte [r12+0x104], 0x2",
    "jae     0x1400423c2",
    "mov     r8, r13",
    "mov     rdx, rdi",
    "mov     rcx, r12",
    "call    sub_140042134",
    "mov     dword [rsp+0x88], eax",
    "lea     rdx, [rcx+0x10]",
    "mov     rax, qword [rdx]",
    "cmp     byte [rax], 0x6d",
    "je      0x140042417",
    "mov     qword [rbp], rax",
    "jmp     0x14004242a",
    "mov     r13, qword [rsp+0x98]",
    "cmp     r13, rbx",
    "je      0x1400423c2",
    "mov     rcx, qword [rdx]",
    "mov     qword [rcx+0x10], r11",
    "cmp     r14, rbx",
    "je      0x14004243a",
    "mov     rdx, r13",
    "mov     r13, qword [rsp+0x98]",
    "mov     rcx, r13",
    "call    sub_140043de4",
    "mov     eax, dword [rsp+0x88]",
    "jmp     0x1400423ca",
    "movzx   eax, word [rsp+0x88]",
    "mov     word [rbp+0x20], ax",
    "mov     rdx, r14",
    "mov     rcx, r13",
    "call    sub_140043de4"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}