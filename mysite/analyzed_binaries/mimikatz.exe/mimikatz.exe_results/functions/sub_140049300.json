{
  "address": "0x140049300",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     r8, qword [rcx+0x28]",
    "mov     rbx, rdx",
    "movzx   edx, byte [rdx]",
    "sub     edx, 0xa2",
    "mov     r13, qword [r8]",
    "mov     r9, qword [r8+0x8]",
    "mov     rdi, qword [r8+0x10]",
    "mov     r15d, 0x1",
    "je      0x140049436",
    "test    r9, r9",
    "je      0x14004955b",
    "sub     edx, r15d",
    "je      0x140049358",
    "mov     eax, r15d",
    "mov     ecx, dword [r9]",
    "xor     eax, eax",
    "test    ecx, ecx",
    "jle     0x14004955b",
    "test    byte [r8+0x28], 0x8",
    "jne     0x140049351",
    "cmp     edx, r15d",
    "je      0x140049436",
    "mov     edx, dword [rbx+0x28]",
    "add     r9, 0x4c",
    "xor     eax, eax",
    "jmp     0x14004955e",
    "movzx   eax, byte [rbx+0x32]",
    "cmp     dword [rcx+0x20], eax",
    "jne     0x140049351",
    "mov     r11, qword [rdi+0x20]",
    "lea     r9, [rdi+0x28]",
    "xor     r10d, r10d",
    "cmp     r10d, dword [r9]",
    "jge     0x14004949e",
    "add     eax, r15d",
    "add     r9, 0x70",
    "cmp     eax, ecx",
    "jl      0x140049453",
    "mov     rbx, qword [rsp+0x68]",
    "mov     rbp, qword [rsp+0x70]",
    "mov     rsi, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     r12, qword [rdi+0x30]",
    "xor     esi, esi",
    "cmp     esi, dword [rdi+0x38]",
    "jge     0x14004939e",
    "mov     rcx, qword [r13]",
    "lea     rax, [rsp+0x60]",
    "mov     r8d, 0x20",
    "mov     rdx, r11",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140052f78",
    "movsxd  r10, dword [rsp+0x60]",
    "mov     qword [rdi+0x20], rax",
    "test    r10d, r10d",
    "js      0x14004954f",
    "lea     rcx, [r11+0xc]",
    "cmp     edx, dword [r9]",
    "je      0x140049468",
    "jmp     0x14004955b",
    "mov     rcx, qword [r13]",
    "mov     rdx, qword [rdi+0x30]",
    "lea     rax, [rsp+0x60]",
    "mov     r14b, byte [rcx+0x5e]",
    "lea     r9, [rdi+0x38]",
    "mov     r8d, 0x18",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140052f78",
    "movsxd  rsi, dword [rsp+0x60]",
    "mov     r12, rax",
    "mov     qword [rdi+0x30], rax",
    "test    esi, esi",
    "js      0x14004942d",
    "mov     rdx, qword [r12]",
    "or      r9d, 0xffffffff",
    "mov     r8, rbx",
    "xor     ecx, ecx",
    "call    sub_140048aa4",
    "test    eax, eax",
    "je      0x140049395",
    "mov     byte [rbx], 0xa4",
    "mov     word [rbx+0x2e], r10w",
    "mov     rdx, r10",
    "shl     rdx, 0x5",
    "add     rdx, rax",
    "mov     rax, qword [rbx+0x40]",
    "mov     qword [rdx], rax",
    "mov     eax, dword [rbx+0x28]",
    "mov     dword [rdx+0x8], eax",
    "movsx   eax, word [rbx+0x2c]",
    "mov     dword [rdx+0xc], eax",
    "add     dword [r13+0x38], r15d",
    "mov     eax, dword [r13+0x38]",
    "or      dword [rdx+0x10], 0xffffffff",
    "mov     dword [rdx+0x14], eax",
    "mov     qword [rdx+0x18], rbx",
    "mov     r11, qword [rdi+0x18]",
    "test    r11, r11",
    "je      0x14004953f",
    "add     r10d, r15d",
    "add     rcx, 0x20",
    "cmp     r10d, dword [r9]",
    "jl      0x14004947c",
    "movsx   eax, word [rbx+0x2c]",
    "cmp     dword [rcx], eax",
    "je      0x140049495",
    "mov     word [rbx+0x2e], si",
    "jmp     0x140049557",
    "lea     rbp, [rsi+rsi*2]",
    "mov     qword [rax+rbp*8], rbx",
    "add     dword [r13+0x38], r15d",
    "mov     ecx, dword [r13+0x38]",
    "mov     dword [rax+rbp*8+0x10], ecx",
    "mov     rax, qword [rbx+0x20]",
    "test    rax, rax",
    "je      0x1400493f5",
    "cmp     esi, dword [rdi+0x38]",
    "jl      0x14004942d",
    "add     esi, r15d",
    "add     r12, 0x18",
    "cmp     esi, dword [rdi+0x38]",
    "jl      0x140049373",
    "cmp     dword [rdx+0x10], 0x0",
    "jge     0x14004954f",
    "xor     ecx, ecx",
    "lea     r9, [r11+0x8]",
    "cmp     dword [r11], ecx",
    "jle     0x14004953f",
    "cmp     dword [rcx-0x4], edx",
    "jne     0x140049489",
    "cmp     r10d, dword [r9]",
    "jl      0x14004954f",
    "mov     qword [rbx+0x38], rdi",
    "xor     r8d, r8d",
    "mov     r8d, dword [rax]",
    "jmp     0x1400493f8",
    "mov     eax, dword [rdi+0xc]",
    "mov     dword [rdx+0x10], eax",
    "add     dword [rdi+0xc], r15d",
    "mov     r8, qword [r9]",
    "cmp     byte [r8], 0xa2",
    "jne     0x14004952e",
    "or      dword [r12+rbp*8+0x14], 0xffffffff",
    "mov     eax, dword [r13+0x34]",
    "mov     dword [r12+rbp*8+0x14], eax",
    "add     dword [r13+0x34], r15d",
    "jmp     0x14004942d",
    "mov     rdx, qword [rbx+0x8]",
    "mov     rcx, qword [r13]",
    "mov     r9b, r14b",
    "mov     byte [rsp+0x20], 0x0",
    "call    sub_14005462c",
    "mov     qword [r12+rbp*8+0x8], rax",
    "test    byte [rbx+0x4], 0x2",
    "je      0x140049427",
    "add     ecx, r15d",
    "add     r9, 0x28",
    "cmp     ecx, dword [r11]",
    "jge     0x14004953f",
    "mov     eax, dword [rbx+0x28]",
    "cmp     dword [r8+0x28], eax",
    "jne     0x14004952e",
    "jmp     0x140049511",
    "movzx   eax, word [rbx+0x2c]",
    "cmp     word [r8+0x2c], ax",
    "je      0x14004953c",
    "mov     dword [rdx+0x10], ecx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}