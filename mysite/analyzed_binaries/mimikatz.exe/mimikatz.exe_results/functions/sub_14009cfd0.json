{
  "address": "0x14009cfd0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0xc0",
    "or      dword [rax-0x38], 0xffffffff",
    "xor     ebp, ebp",
    "lea     r9, [rax-0x78]",
    "lea     r8, [rel data_1400fd080]",
    "mov     rbx, rdx",
    "mov     edi, ecx",
    "mov     dword [rax-0x48], 0x18",
    "mov     qword [rax-0x40], rbp",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "jne     0x14009d033",
    "lea     rcx, [rel data_14010a6f0]  {u\"Private key\\n===========\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x60]",
    "lea     r8, [rsp+0xf0]",
    "lea     rdx, [rsp+0x88]",
    "xor     r9d, r9d",
    "call    sub_140009e4c",
    "cmp     eax, ebp",
    "je      0x14009d3d6",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_1400fbddc]",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "je      0x14009d3ea",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010a9b0]  {u\"ERROR kuhl_m_crypto_keyutil ; ku\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0xf0]",
    "mov     rcx, qword [rsp+0x88]",
    "lea     r9, [rsp+0x98]",
    "lea     r8, [rsp+0xa8]",
    "call    sub_14009cb68",
    "cmp     eax, ebp",
    "je      0x14009d3c6",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0xe0]",
    "add     rsp, 0xc0",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, qword [rsp+0x88]",
    "call    qword [rel LocalFree]",
    "jmp     0x14009d3ea",
    "mov     rcx, qword [rsp+0x98]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "call    sub_14009a99c",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_14010a724]",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "jne     0x14009d10b",
    "lea     rcx, [rel data_14010a750]  {u\"PKCS#8 export\\n=============\\n  \u2026\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x60]",
    "mov     rcx, qword [rsp+0x98]",
    "call    sub_14009ce48",
    "cmp     eax, ebp",
    "je      0x14009d13e",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_14010a730]  {u\"pkcs8\"}",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "jne     0x14009d10b",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_14010a7c0]  {u\"cert\"}",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "je      0x14009d3b1",
    "mov     rdx, qword [rsp+0x60]",
    "lea     rcx, [rel data_14010a7a8]  {u\"OK - %s\\n\"}",
    "call    sub_14000c030",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_14010a740]",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "je      0x14009d13e",
    "lea     rdx, [rsp+0x98]",
    "lea     rcx, [rsp+0xa8]",
    "call    sub_1400053e4",
    "lea     rcx, [rel data_14010a7d0]  {u\"Certificate\\n===========\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x60]",
    "lea     r8, [rsp+0xf8]",
    "lea     rdx, [rsp+0x80]",
    "xor     r9d, r9d",
    "call    sub_140009e4c",
    "cmp     eax, ebp",
    "je      0x14009d39d",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010a920]  {u\"ERROR kuhl_m_crypto_keyutil ; ku\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     eax, dword [rsp+0xf8]",
    "mov     rsi, qword [rsp+0x80]",
    "mov     ecx, 0x2",
    "mov     dword [rsp+0xb0], eax",
    "lea     rax, [rsp+0x68]",
    "lea     r9d, [rcx+0xc]",
    "mov     qword [rsp+0x50], rax",
    "mov     qword [rsp+0x48], rbp",
    "lea     rax, [rsp+0x70]",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0x78]",
    "lea     rdx, [rsp+0xb0]",
    "mov     qword [rsp+0x38], rax",
    "lea     rax, [rsp+0x7c]",
    "mov     r8d, ecx",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0x80]",
    "mov     qword [rsp+0xb8], rsi",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x80], ebp",
    "mov     dword [rsp+0x7c], ebp",
    "mov     dword [rsp+0x20], ebp",
    "mov     dword [rsp+0x78], ebp",
    "mov     qword [rsp+0x70], rbp",
    "mov     qword [rsp+0x68], rbp",
    "call    qword [rel CryptQueryObject]",
    "cmp     eax, ebp",
    "jne     0x14009d237",
    "mov     rcx, qword [rsp+0x68]",
    "call    sub_140099ba0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_14010a808]",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "jne     0x14009d2c9",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140109c40]  {u\"ERROR kuhl_m_crypto_ImportCert ;\u2026\"}",
    "jmp     0x14009d38b",
    "lea     rcx, [rel data_14010a820]  {u\"PKCS#12 export\\n==============\\n\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x68]",
    "mov     edx, 0x5",
    "lea     r8d, [rdx-0x4]",
    "lea     r9, [rsp+0x90]",
    "call    qword [rel CertSetCertificateContextProperty]",
    "cmp     eax, ebp",
    "je      0x14009d31b",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_1400f9e00]",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "jne     0x14009d2c9",
    "mov     edx, eax",
    "call    sub_14000c030",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010a880]  {u\"ERROR kuhl_m_crypto_keyutil ; Ce\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x60]",
    "mov     rcx, qword [rsp+0x70]",
    "call    sub_140004e28",
    "cmp     eax, ebp",
    "je      0x14009d32f",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_14010a810]  {u\"pkcs12\"}",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "jne     0x14009d2c9",
    "mov     rcx, qword [rsp+0x70]",
    "cmp     rcx, rbp",
    "je      0x14009d392",
    "call    qword [rel CertFreeCertificateContext]",
    "cmp     eax, ebp",
    "je      0x14009d34a",
    "mov     rcx, qword [rsp+0x68]",
    "cmp     rcx, rbp",
    "je      0x14009d35e",
    "mov     rdx, qword [rsp+0x60]",
    "lea     rcx, [rel data_14010a7a8]  {u\"OK - %s\\n\"}",
    "call    sub_14000c030",
    "jmp     0x14009d32f",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_1400fbf10]",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "je      0x14009d32f",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "jmp     0x14009d3b1",
    "mov     edx, 0x1",
    "call    qword [rel CertCloseStore]",
    "cmp     eax, ebp",
    "je      0x14009d37e",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140109b20]  {u\"ERROR kuhl_m_crypto_FreeHandleCe\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     qword [rsp+0x68], rbp",
    "jmp     0x14009d35e",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140109bc0]  {u\"ERROR kuhl_m_crypto_FreeHandleCe\u2026\"}",
    "mov     qword [rsp+0x70], rbp",
    "jmp     0x14009d392"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}