{
  "address": "0x1400276c8",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x20",
    "mov     rsi, qword [rcx+0x48]",
    "mov     r12, qword [rcx+0x50]",
    "mov     bpl, byte [rcx+0x9]",
    "test    byte [rsi+0x26], 0xc",
    "mov     r13d, edx",
    "mov     rdi, rcx",
    "je      0x140027716",
    "movzx   edx, bpl",
    "movzx   eax, bpl",
    "mov     ebx, r13d",
    "mov     byte [rdx+r12], r13b",
    "shr     ebx, 0x1",
    "mov     r14d, 0x1",
    "not     bx",
    "and     bx, 0x4",
    "or      bx, 0x8",
    "add     bx, ax",
    "movzx   eax, bpl",
    "xor     ebp, ebp",
    "add     eax, r14d",
    "movsxd  rcx, eax",
    "xor     eax, eax",
    "mov     dword [rcx+r12], eax",
    "mov     byte [rdx+r12+0x7], bpl",
    "mov     eax, dword [rsi+0x34]",
    "shr     eax, 0x8",
    "mov     rcx, rdi",
    "mov     byte [rdx+r12+0x5], al",
    "mov     al, byte [rsi+0x34]",
    "mov     byte [rdx+r12+0x6], al",
    "movzx   eax, word [rsi+0x34]",
    "mov     edx, r13d",
    "sub     ax, bx",
    "movzx   eax, ax",
    "mov     dword [rdi+0x14], eax",
    "call    sub_14002734c",
    "mov     word [rdi+0x12], bx",
    "mov     eax, dword [rsi+0x34]",
    "mov     byte [rdi+0xc], bpl",
    "add     rax, r12",
    "mov     qword [rdi+0x58], rax",
    "movzx   eax, bx",
    "mov     rbx, qword [rsp+0x40]",
    "add     rax, r12",
    "mov     qword [rdi+0x60], rax",
    "movzx   eax, byte [rdi+0xa]",
    "add     rax, r12",
    "mov     qword [rdi+0x68], rax",
    "movzx   eax, word [rsi+0x30]",
    "mov     rsi, qword [rsp+0x50]",
    "mov     word [rdi+0x18], bp",
    "mov     rbp, qword [rsp+0x48]",
    "sub     ax, r14w",
    "mov     word [rdi+0x1a], ax",
    "mov     byte [rdi], r14b",
    "mov     rdi, qword [rsp+0x58]",
    "add     rsp, 0x20",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "mov     r8d, dword [rsi+0x34]",
    "movzx   eax, bpl",
    "movzx   ecx, bpl",
    "sub     r8d, eax",
    "add     rcx, r12",
    "xor     edx, edx",
    "call    memset"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}