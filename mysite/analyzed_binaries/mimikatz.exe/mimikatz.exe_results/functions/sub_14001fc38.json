{
  "address": "0x14001fc38",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     rdi, qword [rcx+0x110]",
    "mov     r14d, r9d",
    "mov     r13, r8",
    "mov     r12, rdx",
    "mov     rbx, rcx",
    "mov     qword [rsp+0x20], rdi",
    "test    r9d, r9d",
    "je      0x14001fc6f",
    "mov     rbp, qword [rcx+0x58]",
    "mov     rbp, qword [rcx+0x50]",
    "jmp     0x14001fc73",
    "mov     rbx, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     r9, qword [r12]",
    "mov     rax, qword [rbp]",
    "mov     r8d, dword [rbx+0xbc]",
    "add     r9, 0x4",
    "mov     rdx, rdi",
    "mov     rcx, rbp",
    "call    qword [rax+0x10]",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14001fd74",
    "mov     rdx, qword [rdx]",
    "lea     r8, [rsp+0x88]",
    "mov     rcx, rbp",
    "call    sub_14001ef64",
    "test    eax, eax",
    "jne     0x14001fd74",
    "mov     eax, dword [rbx+0xbc]",
    "mov     esi, dword [rsp+0x88]",
    "lea     eax, [rax+r14*4+0x4]",
    "cdqe    ",
    "add     qword [r12], rax",
    "mov     r15, qword [r12]",
    "test    esi, esi",
    "je      0x14001fd6f",
    "mov     eax, 0x65",
    "mov     eax, 0x40000000",
    "cdq     ",
    "idiv    dword [rbx+0xbc]",
    "inc     eax",
    "cmp     esi, eax",
    "je      0x14001fd6f",
    "cmp     esi, dword [rbx+0x1c]",
    "ja      0x14001fee3",
    "xor     eax, eax",
    "jmp     0x14001fd74",
    "test    r13, r13",
    "je      0x14001fd0e",
    "test    r14d, r14d",
    "je      0x14001fd89",
    "mov     edx, esi",
    "mov     rcx, r13",
    "call    sub_14001d71c",
    "test    eax, eax",
    "jne     0x14001fee3",
    "xor     ebp, ebp",
    "lea     rdx, [r15-0x4]",
    "lea     r8, [rsp+0x88]",
    "mov     rcx, rbp",
    "call    sub_14001ef64",
    "xor     ebp, ebp",
    "mov     edi, eax",
    "cmp     eax, ebp",
    "jne     0x14001fd74",
    "mov     r13, qword [rsp+0x20]",
    "mov     r15d, 0x1",
    "cmp     esi, r15d",
    "jne     0x14001fdc5",
    "mov     edx, esi",
    "mov     rcx, r13",
    "call    sub_14001d808",
    "mov     edi, eax",
    "cmp     eax, ebp",
    "jne     0x14001fd74",
    "cmp     dword [rsp+0x90], ebp",
    "jne     0x14001fd8b",
    "cmp     qword [rbx+0x120], rbp",
    "je      0x14001fdd3",
    "movzx   eax, byte [r13+0x14]",
    "cmp     word [rbx+0xb2], ax",
    "je      0x14001fdc5",
    "cmp     r13, rbp",
    "je      0x14001fda0",
    "mov     eax, dword [rbx+0xbc]",
    "mov     edx, dword [rbx+0x34]",
    "mov     r9d, 0xc8",
    "sub     eax, r9d",
    "movsxd  rcx, eax",
    "cmp     rcx, rbp",
    "jle     0x14001fd66",
    "mov     edx, esi",
    "mov     rcx, rbx",
    "call    sub_1400223d0",
    "mov     rax, rbp",
    "jmp     0x14001fddd",
    "mov     word [rbx+0xb2], ax",
    "cmp     edx, dword [rsp+0x88]",
    "je      0x14001fd8b",
    "mov     r8, qword [rsp+0x20]",
    "cmp     rax, rbp",
    "je      0x14001fdf7",
    "cmp     byte [rbx+0xb], bpl",
    "jne     0x14001fdf7",
    "mov     qword [rsp+0x70], rax",
    "cmp     r14d, ebp",
    "je      0x14001fe4d",
    "movzx   eax, byte [rcx+r8]",
    "sub     rcx, r9",
    "add     edx, eax",
    "cmp     rcx, rbp",
    "jg      0x14001fd57",
    "mov     ecx, r15d",
    "test    byte [rax+0x34], 0x8",
    "je      0x14001fdf7",
    "mov     rcx, qword [rbx+0x68]",
    "cmp     qword [r12], rcx",
    "jg      0x14001fe58",
    "cmp     r14d, ebp",
    "jne     0x14001fe9a",
    "cmp     byte [rbx+0x14], 0x4",
    "jae     0x14001fe0f",
    "mov     ecx, ebp",
    "jmp     0x14001fdfa",
    "cmp     rax, rbp",
    "je      0x14001fedc",
    "cmp     rax, rbp",
    "jne     0x14001fe9f",
    "cmp     ecx, ebp",
    "je      0x14001fe5c",
    "cmp     byte [rbx+0x14], bpl",
    "jne     0x14001fe5c",
    "mov     r10, qword [rbx+0x48]",
    "cmp     qword [r10], rbp",
    "je      0x14001fe5c",
    "mov     eax, edi",
    "jmp     0x14001fd74",
    "mov     rbp, qword [rax+0x8]",
    "movsxd  r8, dword [rbx+0xbc]",
    "mov     rdx, r13",
    "mov     rcx, rbp",
    "call    memcpy",
    "mov     rcx, qword [rsp+0x70]",
    "call    qword [rbx+0x100]",
    "cmp     esi, r15d",
    "jne     0x14001fed2",
    "or      byte [rbx+0x18], 0x2",
    "lea     r8, [rsp+0x70]",
    "mov     r9d, r15d",
    "mov     edx, esi",
    "mov     rcx, rbx",
    "call    qword [rbx+0x108]",
    "and     byte [rbx+0x18], 0xfd",
    "mov     edi, eax",
    "cmp     eax, ebp",
    "jne     0x14001fd74",
    "movsxd  r8, dword [rbx+0xbc]",
    "mov     rax, qword [r10]",
    "lea     r9d, [rsi-0x1]",
    "imul    r9, r8",
    "mov     rdx, r13",
    "mov     rcx, r10",
    "call    qword [rax+0x18]",
    "mov     edi, eax",
    "cmp     esi, dword [rbx+0x24]",
    "jbe     0x14001fe38",
    "mov     rcx, qword [rsp+0x70]",
    "call    sub_14001ddb0",
    "movdqu  xmm0, xmmword [rbp+0x18]",
    "movdqu  xmmword [rbx+0x88], xmm0",
    "mov     rcx, qword [rsp+0x70]",
    "call    sub_14001de2c",
    "mov     rcx, qword [rbx+0x70]",
    "cmp     rcx, rbp",
    "je      0x14001fe95",
    "mov     dword [rbx+0x24], esi",
    "mov     rax, qword [rsp+0x70]",
    "mov     r8, r13",
    "mov     edx, esi",
    "call    sub_140030bf4",
    "jmp     0x14001fe95"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}