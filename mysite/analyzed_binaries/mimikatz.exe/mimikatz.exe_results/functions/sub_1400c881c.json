{
  "address": "0x1400c881c",
  "rules": [
    "link function at runtime on Windows",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x20], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "mov     eax, dword [rcx+0x4]",
    "mov     r9d, dword [rcx]",
    "mov     r12d, dword [rcx+0x8]",
    "mov     r10d, dword [rcx+0xc]",
    "mov     dword [rsp+0x20], 0x48",
    "mov     rsi, rcx",
    "mov     ecx, dword [rcx+0x10]",
    "mov     r14d, dword [rsi+0x14]",
    "mov     r15d, dword [rsi+0x1c]",
    "mov     r13, rdx",
    "lea     rdx, [rel __dos_header]",
    "mov     qword [r11-0x80], rsi",
    "add     rax, rdx",
    "mov     qword [r11-0x78], r13",
    "and     r9d, 0x1",
    "mov     qword [r11-0x70], rax",
    "and     dword [rsp+0x40], 0x0",
    "xor     eax, eax",
    "and     qword [r11-0x58], rax",
    "and     qword [r11-0x50], rax",
    "mov     qword [r11-0x60], rax",
    "and     dword [rsp+0x60], eax",
    "add     r12, rdx",
    "add     r10, rdx",
    "add     rcx, rdx",
    "add     r14, rdx",
    "test    r9b, r9b",
    "jne     0x1400c88c0",
    "mov     rdi, qword [r12]",
    "mov     rax, 0x8000000000000000",
    "mov     rbp, r13",
    "sub     rbp, r10",
    "sar     rbp, 0x3",
    "mov     ebp, ebp",
    "test    qword [rcx+rbp*8], rax",
    "mov     eax, 0x0",
    "sete    al",
    "mov     dword [rsp+0x40], eax",
    "test    eax, eax",
    "je      0x1400c8902",
    "xor     edx, edx",
    "lea     rax, [rsp+0x20]",
    "lea     r9, [r11+0x8]",
    "lea     r8d, [rdx+0x1]",
    "mov     ecx, 0xc06d0057",
    "mov     qword [r11+0x8], rax",
    "call    qword [rel RaiseException]",
    "{ Does not return }",
    "movzx   eax, word [rcx+rbp*8]",
    "mov     dword [rsp+0x48], eax",
    "mov     eax, dword [rcx+rbp*8]",
    "lea     rcx, [rel __dos_header.e_cblp]",
    "add     rax, rcx",
    "mov     qword [rsp+0x48], rax",
    "jmp     0x1400c890a",
    "test    rdi, rdi",
    "jne     0x1400c8a0b",
    "lea     rdx, [rsp+0x20]",
    "xor     ecx, ecx",
    "call    rax",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x1400c8ac8",
    "mov     rax, qword [rel data_14013f958]",
    "xor     ebx, ebx",
    "test    rax, rax",
    "je      0x1400c8934",
    "mov     qword [rsp+0x50], rdi",
    "test    rax, rax",
    "je      0x1400c8a24",
    "test    rax, rax",
    "je      0x1400c8954",
    "mov     rax, qword [rel data_14013f958]",
    "test    rax, rax",
    "je      0x1400c8aef",
    "mov     rax, qword [rel data_14013f958]",
    "test    rbx, rbx",
    "jne     0x1400c8ac4",
    "lea     rdx, [rsp+0x20]",
    "mov     ecx, 0x2",
    "call    rax",
    "mov     rbx, rax",
    "mov     rcx, qword [rsp+0x38]",
    "call    qword [rel LoadLibraryA]",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x1400c89bf",
    "lea     rdx, [rsp+0x20]",
    "lea     ecx, [rdi+0x1]",
    "call    rax",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x1400c89bf",
    "mov     rax, rbx",
    "mov     rbx, qword [rsp+0xc8]",
    "add     rsp, 0x70",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "and     dword [rsp+0x60], 0x0",
    "lea     rdx, [rsp+0x20]",
    "mov     ecx, 0x5",
    "mov     qword [rsp+0x50], rdi",
    "mov     qword [rsp+0x58], rbx",
    "call    rax",
    "mov     qword [r13], rbx",
    "cmp     dword [rsi+0x14], ebx",
    "je      0x1400c8a5b",
    "mov     rax, rdi",
    "xchg    qword [r12], rax",
    "cmp     rax, rdi",
    "je      0x1400c89fb",
    "call    qword [rel GetLastError]",
    "mov     dword [rsp+0x60], eax",
    "mov     rax, qword [rel data_1400d6360]",
    "test    rax, rax",
    "je      0x1400c898f",
    "mov     rdx, qword [rsp+0x48]",
    "mov     rcx, rdi",
    "call    qword [rel GetProcAddress]",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x1400c8ac4",
    "cmp     dword [rsi+0x1c], ebx",
    "je      0x1400c8a5b",
    "mov     rcx, rdi",
    "call    qword [rel FreeLibrary]",
    "cmp     dword [rsi+0x18], 0x0",
    "je      0x1400c8a04",
    "xor     edx, edx",
    "lea     rax, [rsp+0x20]",
    "lea     r9, [rsp+0xb8]",
    "lea     r8d, [rdx+0x1]",
    "mov     ecx, 0xc06d007e",
    "mov     qword [rsp+0xb8], rax",
    "call    qword [rel RaiseException]",
    "{ Does not return }",
    "lea     rdx, [rsp+0x20]",
    "lea     ecx, [rdi+0x3]",
    "call    rax",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x1400c89bf",
    "call    qword [rel GetLastError]",
    "mov     dword [rsp+0x60], eax",
    "mov     rax, qword [rel data_1400d6360]",
    "test    rax, rax",
    "je      0x1400c8a94",
    "movsxd  rax, dword [rdi+0x3c]",
    "cmp     dword [rax+rdi], 0x4550",
    "jne     0x1400c8a5b",
    "mov     rax, qword [rel data_14013f958]",
    "mov     edx, 0x10",
    "lea     ecx, [rdx+0x30]",
    "call    qword [rel LocalAlloc]",
    "test    rax, rax",
    "je      0x1400c8a04",
    "test    rbx, rbx",
    "jne     0x1400c8ac4",
    "lea     rdx, [rsp+0x20]",
    "lea     ecx, [rbx+0x4]",
    "call    rax",
    "mov     rbx, rax",
    "cmp     dword [rax+rdi+0x8], r15d",
    "jne     0x1400c8a5b",
    "mov     qword [rax+0x8], rsi",
    "mov     rcx, qword [rel data_14013f950]",
    "mov     qword [rax], rcx",
    "mov     qword [rel data_14013f950], rax",
    "jmp     0x1400c8a04",
    "lea     rax, [rsp+0x20]",
    "lea     r9, [rsp+0xc0]",
    "lea     r8d, [rbx+0x1]",
    "xor     edx, edx",
    "mov     ecx, 0xc06d007f",
    "mov     qword [rsp+0xc0], rax",
    "call    qword [rel RaiseException]",
    "{ Does not return }",
    "cmp     rdi, qword [rax+rdi+0x30]",
    "jne     0x1400c8a5b",
    "mov     rbx, qword [r14+rbp*8]",
    "test    rbx, rbx",
    "jne     0x1400c8ac4"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}