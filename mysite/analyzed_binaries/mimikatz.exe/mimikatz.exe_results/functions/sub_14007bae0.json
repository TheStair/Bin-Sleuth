{
  "address": "0x14007bae0",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     dword [rsp+0x20], r9d",
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x48",
    "mov     rbp, qword [rcx]",
    "mov     r14, rdx",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x30], rbp",
    "call    sub_140065300",
    "mov     rdi, r14",
    "mov     rsi, rax",
    "test    r14, r14",
    "je      0x14007bf1c",
    "add     rsp, 0x48",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     r15d, dword [rsp+0xb0]",
    "xor     r12d, r12d",
    "mov     rax, qword [rdi+0x70]",
    "mov     rcx, qword [rax+0x20]",
    "test    rcx, rcx",
    "je      0x14007bb48",
    "cmp     dword [r14+0x84], 0x0",
    "mov     dword [rsp+0x90], r15d",
    "jne     0x14007bcd6",
    "mov     ebp, dword [rsp+0xa0]",
    "mov     r12d, dword [rcx]",
    "jmp     0x14007bb4b",
    "mov     r8d, dword [rdi+0x68]",
    "test    r8d, r8d",
    "je      0x14007bd05",
    "bt      dword [r13+0x4], 0xc",
    "jae     0x14007bcd6",
    "mov     eax, dword [rdi+0x7c]",
    "lea     ecx, [rbx+r15]",
    "mov     r8d, ebp",
    "lea     r9d, [rbx+rax]",
    "mov     dword [rsp+0x20], ecx",
    "lea     rax, [rel data_1400d8800]  {\"nth_value\"}",
    "cmp     qword [r13+0x38], rax",
    "jne     0x14007bb80",
    "xor     ebx, ebx",
    "test    r12d, r12d",
    "jle     0x14007bbab",
    "lea     rax, [rel sub_14001671c]",
    "cmp     qword [r13+0x18], rax",
    "je      0x14007bf0f",
    "sub     r8d, dword [rsp+0xa8]",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0x53",
    "lea     r9d, [rdx-0x52]",
    "mov     rcx, rsi",
    "inc     r8d",
    "call    sub_140032364",
    "jmp     0x14007bf0f",
    "cmp     byte [rdi+0x21], 0x5a",
    "je      0x14007bcd6",
    "cmp     ebx, 0x1",
    "jne     0x14007bb80",
    "mov     rbp, qword [rsp+0x30]",
    "mov     r9d, dword [rdi+0x7c]",
    "mov     r8d, dword [r14+0x58]",
    "lea     eax, [r15+0x1]",
    "inc     r9d",
    "mov     dword [rsp+0x20], eax",
    "jmp     0x14007bb92",
    "mov     rdi, qword [rdi+0x40]",
    "test    rdi, rdi",
    "jne     0x14007bb29",
    "xor     r14d, r14d",
    "cmp     qword [rdi+0x48], r14",
    "je      0x14007bd92",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "lea     edx, [r9+0x32]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "xor     r12d, r12d",
    "mov     rcx, rsi",
    "mov     ebx, eax",
    "cmp     dword [rsp+0xa8], r12d",
    "jne     0x14007bc72",
    "mov     edx, 0x5a",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "inc     ebx",
    "cmp     ebx, r12d",
    "jl      0x14007bb59",
    "cmp     byte [rdi+0x8c], 0x0",
    "mov     r13, qword [rdi+0x50]",
    "jne     0x14007bb48",
    "cmp     byte [rdi+0x8c], 0x0",
    "je      0x14007be24",
    "mov     al, byte [rbp+0x1f]",
    "test    al, al",
    "jne     0x14007bd2e",
    "mov     r8d, dword [rdi+0x64]",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x28], 0x1",
    "lea     edx, [r9+0x18]",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032678",
    "mov     r8d, dword [rdi+0x64]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x7b]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r11d, dword [rsi+0x90]",
    "mov     rcx, rsi",
    "lea     edx, [r11-0x2]",
    "call    sub_140032d34",
    "mov     dword [rax+0x8], r11d",
    "mov     r8d, dword [rdi+0x68]",
    "lea     edx, [r12+0x53]",
    "lea     r9d, [r12+0x1]",
    "inc     r8d",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r9d, dword [rdi+0x68]",
    "lea     edx, [r12+0x4f]",
    "mov     r8d, r15d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r8d, dword [rdi+0x68]",
    "lea     edx, [r12+0x5c]",
    "lea     eax, [r8+0x2]",
    "lea     r9d, [r12+0x2]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     r9d, dword [rdi+0x68]",
    "mov     r8d, dword [rdi+0x64]",
    "add     r9d, 0x2",
    "mov     edx, 0x84",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "jmp     0x14007bcbe",
    "test    byte [r13+0x4], 0x20",
    "je      0x14007be79",
    "mov     rax, qword [rdi+0x70]",
    "mov     ebx, dword [rsi+0x90]",
    "mov     rcx, qword [rax+0x20]",
    "mov     r12d, dword [rcx]",
    "mov     rcx, rbp",
    "mov     edx, r12d",
    "call    sub_140049624",
    "mov     rdx, qword [rdi+0x70]",
    "xor     r9d, r9d",
    "mov     rdx, qword [rdx+0x20]",
    "mov     rcx, rbp",
    "mov     r8d, eax",
    "mov     dword [rsp+0x90], eax",
    "mov     byte [rsp+0x20], 0x0",
    "call    sub_140047f5c",
    "or      edx, 0xffffffff",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "mov     r9, rax",
    "call    sub_140032d34",
    "cmp     rax, r9",
    "ja      0x14007be24",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rbp+0x1f], al",
    "mov     ebx, dword [rbp+rax*4+0xbc]",
    "inc     dword [rbp+0x38]",
    "mov     ebx, dword [rbp+0x38]",
    "jmp     0x14007bd3d",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "jmp     0x14007bf0f",
    "mov     ecx, dword [rsp+0xa8]",
    "mov     ebx, dword [rsp+0x90]",
    "mov     eax, ecx",
    "mov     r8d, ecx",
    "mov     r9d, ebx",
    "neg     eax",
    "mov     eax, dword [rdi+0x5c]",
    "mov     rcx, rsi",
    "sbb     edx, edx",
    "mov     dword [rsp+0x20], eax",
    "add     edx, 0x9a",
    "call    sub_140032364",
    "mov     r8d, 0xfffffff8",
    "mov     rdx, r13",
    "mov     rcx, rsi",
    "call    sub_140032cc0",
    "movsxd  rax, dword [rsi+0x90]",
    "test    eax, eax",
    "jle     0x14007bed8",
    "mov     rax, qword [rdi+0x70]",
    "mov     rcx, qword [rax+0x20]",
    "mov     rdx, qword [rcx+0x8]",
    "mov     rcx, rbp",
    "call    sub_1400430d4",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x14007be4f",
    "mov     r15d, dword [rsp+0xa0]",
    "cmp     byte [rbp+0x1f], 0x8",
    "jae     0x14007bd92",
    "mov     eax, dword [rdi+0x7c]",
    "mov     r8d, dword [rsp+0xa0]",
    "mov     edx, 0x5a",
    "lea     r9d, [r12+rax]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8d, ebx",
    "lea     edx, [r9+0x14]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], 0x1",
    "call    sub_140032364",
    "mov     r14d, eax",
    "test    ebx, ebx",
    "je      0x14007bd92",
    "cmp     byte [rdi+0x8c], 0x0",
    "je      0x14007beee",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rsi+0x88]",
    "movzx   edx, r12b",
    "mov     word [rax+rcx*8-0x16], dx",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "lea     edx, [r9+0x52]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r9d, 0xfffffffe",
    "mov     r8, rbx",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "mov     rax, qword [rbp]",
    "mov     rbx, qword [rax+0x10]",
    "add     rax, 0x18",
    "cmp     rax, r9",
    "jbe     0x14007be02",
    "mov     ecx, dword [rdi+0x58]",
    "cmp     dword [rax+0x4], ecx",
    "jne     0x14007be13",
    "movzx   ecx, byte [rbp+0x1f]",
    "mov     dword [rbp+rcx*4+0xbc], ebx",
    "inc     byte [rbp+0x1f]",
    "test    r14d, r14d",
    "je      0x14007bf07",
    "mov     r8d, r12d",
    "mov     edx, ebx",
    "mov     rcx, rbp",
    "call    sub_140049678",
    "cmp     byte [rax], 0x5a",
    "jne     0x14007be13",
    "mov     r15d, dword [rsp+0xb0]",
    "mov     dword [rax+0x4], r15d",
    "mov     r14, qword [rsp+0x98]",
    "mov     edx, r14d",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     dword [rax+0x8], ecx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}