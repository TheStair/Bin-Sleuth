{
  "address": "0x140033ca0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "mov     r13, qword [rcx+0x1d8]",
    "xor     r14d, r14d",
    "xor     ebx, ebx",
    "and     dword [rsp+0x80], r14d",
    "and     qword [rcx+0x1d8], rbx",
    "mov     r15, rdx",
    "mov     r12, r13",
    "mov     rdi, rcx",
    "xor     ebp, ebp",
    "xor     r15d, r15d",
    "mov     qword [rdi+0x1d8], r13",
    "mov     ebp, r15d",
    "cmp     ebx, r15d",
    "jne     0x140034175",
    "mov     rax, qword [r12]",
    "mov     rsi, qword [rax+0x10]",
    "test    rsi, rsi",
    "je      0x140033d0d",
    "mov     eax, ebx",
    "mov     r12d, dword [rsp+0x80]",
    "mov     rsi, r15",
    "inc     ebp",
    "add     r12, 0x8",
    "test    ebx, ebx",
    "je      0x140033cda",
    "mov     rax, qword [rsi]",
    "mov     rdx, qword [rax+0x78]",
    "test    rdx, rdx",
    "je      0x140033d0d",
    "cmp     ebx, r15d",
    "jne     0x140034175",
    "mov     rdx, qword [rdi+0x20]",
    "mov     rax, qword [rdx+rsi+0x8]",
    "cmp     rax, r15",
    "je      0x140033d9c",
    "cmp     ebp, dword [rdi+0x1b0]",
    "jge     0x140033d17",
    "mov     rcx, rsi",
    "call    rdx",
    "mov     rdx, rsi",
    "mov     rcx, r15",
    "mov     ebx, eax",
    "call    sub_140035b88",
    "cmp     r12d, r15d",
    "je      0x140033ddb",
    "inc     ebp",
    "add     rsi, 0x20",
    "cmp     ebx, r15d",
    "je      0x140033d38",
    "cmp     byte [rax+0x10], 0x2",
    "jne     0x140033d9c",
    "mov     rdx, qword [rdi+0x20]",
    "lea     r8, [rel data_1400f386c]",
    "mov     rax, qword [rdx+0x8]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rcx, qword [rcx]",
    "cmp     byte [rcx+0x13], r15b",
    "je      0x140033dfc",
    "mov     rax, qword [rdi+0x100]",
    "cmp     rax, r15",
    "je      0x140033ddb",
    "cmp     ebp, dword [rdi+0x28]",
    "jge     0x140033da7",
    "mov     rax, qword [rax+0x8]",
    "mov     r12d, 0x1",
    "mov     rcx, qword [rax]",
    "cmp     byte [rdx+rsi+0x10], r12b",
    "je      0x140033d7f",
    "mov     rcx, qword [rcx+0xd0]",
    "mov     rcx, r8",
    "jmp     0x140033e03",
    "mov     rcx, qword [rdi+0xf8]",
    "call    rax",
    "mov     ebx, eax",
    "cmp     eax, r15d",
    "je      0x140033ddb",
    "mov     ebx, dword [rcx+0x2c]",
    "cmp     ebx, r15d",
    "jne     0x140033d9c",
    "movzx   eax, byte [rcx+0x9]",
    "lea     rdx, [rel data_1400d7100]",
    "cmp     byte [rax+rdx], r15b",
    "je      0x140033d7f",
    "mov     esi, r15d",
    "cmp     ebx, r15d",
    "jne     0x140034131",
    "cmp     r14d, 0x1",
    "jle     0x1400340ff",
    "call    sub_140019074",
    "cmp     eax, r15d",
    "je      0x1400340ff",
    "mov     eax, 0x213",
    "jmp     0x140034177",
    "cmp     qword [rcx+0x120], r15",
    "jne     0x140033d9c",
    "cmp     byte [rcx+0x10], r15b",
    "jne     0x140033d7f",
    "mov     esi, r15d",
    "cmp     ebx, r15d",
    "jne     0x140034175",
    "mov     rbp, r15",
    "mov     rax, qword [rdx+0x8]",
    "mov     r12, qword [rdi]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, qword [rcx]",
    "cmp     byte [rax+0x13], r15b",
    "jne     0x140033e36",
    "mov     rbx, qword [rsp+0x88]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     edx, 0x4",
    "call    sub_140020db4",
    "mov     ebx, eax",
    "inc     r14d",
    "mov     rbp, r15",
    "mov     rax, qword [rdi+0x20]",
    "mov     rcx, qword [rax+rbp+0x8]",
    "cmp     rcx, r15",
    "je      0x140034126",
    "mov     rcx, r8",
    "mov     qword [rsp+0x30], r15",
    "mov     qword [rsp+0x98], r15",
    "mov     esi, r15d",
    "call    sub_140019074",
    "lea     rdx, [rel data_1400f40a0]  {\"%s-mjXXXXXX9XXz\"}",
    "mov     rcx, rdi",
    "movsxd  r13, eax",
    "call    _printf_p_l",
    "mov     rbp, rax",
    "cmp     rax, r15",
    "jne     0x140033e72",
    "mov     r8, qword [rax+0xd0]",
    "cmp     ebx, r15d",
    "jne     0x140034175",
    "mov     rax, qword [rdi+0x20]",
    "mov     rcx, qword [rax+rbp+0x8]",
    "cmp     rcx, r15",
    "je      0x140034158",
    "inc     esi",
    "add     rbp, 0x20",
    "cmp     ebx, r15d",
    "je      0x14003410a",
    "xor     edx, edx",
    "call    sub_140029190",
    "mov     ebx, eax",
    "mov     r14d, 0xd",
    "mov     eax, 0x7",
    "jmp     0x140034177",
    "mov     edx, 0x80",
    "mov     rcx, rdi",
    "call    sub_140070688",
    "inc     esi",
    "add     rbp, 0x20",
    "cmp     ebx, r15d",
    "je      0x14003413c",
    "xor     edx, edx",
    "call    sub_140029240",
    "mov     ebx, eax",
    "cmp     esi, dword [rdi+0x28]",
    "jge     0x140034131",
    "lea     rdx, [rsp+0x80]",
    "mov     ecx, 0x4",
    "inc     esi",
    "call    sub_1400188ac",
    "mov     r9d, dword [rsp+0x80]",
    "lea     rdx, [rbp+r13]",
    "movzx   eax, r9b",
    "lea     r8, [rel data_1400f40d0]  {\"-mj%06X9%02X\"}",
    "mov     ecx, r14d",
    "shr     r9d, 0x8",
    "mov     dword [rsp+0x20], eax",
    "call    _fprintf_p_l",
    "lea     r9, [rsp+0x90]",
    "xor     r8d, r8d",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    qword [r12+0x38]",
    "mov     ebx, eax",
    "cmp     eax, r15d",
    "jne     0x140034002",
    "cmp     esi, 0x64",
    "jg      0x140033f09",
    "cmp     esi, dword [rdi+0x28]",
    "jge     0x140034163",
    "mov     rdx, rbp",
    "cmp     dword [rsp+0x90], r15d",
    "je      0x140033f32",
    "lea     rdx, [rel data_1400f40b0]  {\"MJ delete: %s\"}",
    "mov     r8, rbp",
    "mov     ecx, r14d",
    "call    sub_1400187fc",
    "xor     r8d, r8d",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    qword [r12+0x30]",
    "cmp     ebx, r15d",
    "jne     0x140034002",
    "cmp     esi, 0x1",
    "jne     0x140033e9d",
    "lea     r8, [rsp+0x30]",
    "mov     r9d, 0x4016",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "mov     qword [rsp+0x20], r15",
    "call    sub_1400164c0",
    "mov     ebx, eax",
    "cmp     eax, r15d",
    "jne     0x140034002",
    "jmp     0x140033e78",
    "lea     rdx, [rel data_1400f40c0]  {\"MJ collide: %s\"}",
    "mov     r8, rbp",
    "mov     ecx, r14d",
    "call    sub_1400187fc",
    "cmp     dword [rdi+0x28], r15d",
    "mov     rsi, qword [rsp+0x30]",
    "mov     r14d, r15d",
    "jle     0x140034026",
    "cmp     esi, r15d",
    "je      0x140033e9d",
    "mov     rax, qword [rsi]",
    "mov     rcx, rsi",
    "call    qword [rax+0x60]",
    "bt      eax, 0xa",
    "jb      0x14003404a",
    "mov     r13, r15",
    "mov     r13d, r15d",
    "cmp     ebx, r15d",
    "jne     0x14003407f",
    "mov     rax, qword [rsi]",
    "mov     edx, 0x2",
    "mov     rcx, rsi",
    "call    qword [rax+0x28]",
    "mov     ebx, eax",
    "cmp     eax, r15d",
    "jne     0x140033fdb",
    "inc     r14d",
    "add     r13, 0x20",
    "cmp     r14d, dword [rdi+0x28]",
    "jl      0x140033f6d",
    "cmp     byte [rax+0x10], 0x2",
    "jne     0x140034015",
    "mov     rax, qword [rsi]",
    "cmp     rax, r15",
    "je      0x140034090",
    "mov     r14, r15",
    "mov     rax, qword [rsi]",
    "cmp     rax, r15",
    "je      0x140033fec",
    "mov     rax, qword [rdi+0x20]",
    "mov     rax, qword [r13+rax+0x8]",
    "cmp     rax, r15",
    "je      0x140034015",
    "mov     rax, qword [rax+0x8]",
    "mov     rcx, qword [rax]",
    "mov     r15, qword [rcx+0xd8]",
    "test    r15, r15",
    "je      0x140034012",
    "mov     rcx, rsi",
    "call    sub_140016950",
    "mov     rdx, rbp",
    "cmp     ebx, r15d",
    "jne     0x140034005",
    "mov     rcx, rsi",
    "call    qword [rax+0x8]",
    "mov     qword [rsi], r15",
    "mov     rax, qword [rdi+0x20]",
    "mov     rcx, qword [r14+rax+0x8]",
    "cmp     rcx, r15",
    "je      0x140034073",
    "mov     rcx, rsi",
    "call    sub_140016950",
    "xor     r8d, r8d",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    qword [r12+0x30]",
    "mov     rcx, rsi",
    "call    qword [rax+0x8]",
    "mov     qword [rsi], r15",
    "xor     r15d, r15d",
    "mov     rcx, r15",
    "call    sub_140019074",
    "mov     r10, qword [rsi]",
    "mov     r9, qword [rsp+0x98]",
    "lea     r8d, [rax+0x1]",
    "mov     rdx, r15",
    "mov     rcx, rsi",
    "call    qword [r10+0x18]",
    "mov     rcx, r15",
    "mov     ebx, eax",
    "call    sub_140019074",
    "xor     r15d, r15d",
    "inc     eax",
    "cdqe    ",
    "add     qword [rsp+0x98], rax",
    "cmp     ebx, r15d",
    "je      0x140034015",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "jmp     0x140034175",
    "mov     r13d, 0x1",
    "mov     rcx, r12",
    "mov     r8d, r13d",
    "call    qword [r12+0x30]",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "mov     ebx, eax",
    "call    sub_1400169a8",
    "cmp     ebx, r15d",
    "jne     0x140034175",
    "inc     r13d",
    "add     r14, 0x20",
    "cmp     ebx, r15d",
    "je      0x140034055",
    "mov     rdx, rbp",
    "call    sub_140029190",
    "mov     ebx, eax",
    "cmp     dword [rdi+0x28], r15d",
    "mov     esi, r15d",
    "jle     0x140034168",
    "cmp     r13d, dword [rdi+0x28]",
    "jge     0x14003407f",
    "mov     rbp, r15",
    "add     esi, r13d",
    "add     rbp, 0x20",
    "cmp     esi, dword [rdi+0x28]",
    "jl      0x1400340db",
    "mov     edx, r13d",
    "call    sub_140029240",
    "mov     rax, qword [rdi+0x20]",
    "mov     rcx, qword [rax+rbp+0x8]",
    "cmp     rcx, r15",
    "je      0x1400340f1",
    "jmp     0x140034168"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}