{
  "address": "0x1400634f4",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     dword [rsp+0x20], r9d",
    "mov     qword [rsp+0x18], r8",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x48",
    "mov     rax, qword [rdx]",
    "movzx   ebx, byte [rdx+0x24]",
    "and     dword [rsp+0x90], 0x0",
    "mov     r14d, dword [rax]",
    "mov     eax, dword [rsp+0xc0]",
    "and     dword [rsp+0x34], 0x0",
    "mov     rsi, qword [rcx+0x10]",
    "mov     r15d, dword [rdx+0x8]",
    "not     ebx",
    "and     ebx, 0x1",
    "mov     rdi, rdx",
    "mov     r12, rcx",
    "lea     r13d, [r14+rbx]",
    "add     r13d, dword [rsp+0xb8]",
    "test    eax, eax",
    "je      0x140063556",
    "mov     eax, dword [rcx+0x38]",
    "lea     ebp, [rax+0x1]",
    "add     eax, r13d",
    "mov     dword [rcx+0x38], eax",
    "mov     ebp, r9d",
    "sub     ebp, eax",
    "jmp     0x140063562",
    "mov     eax, dword [r8+0x10]",
    "inc     eax",
    "jmp     0x140063572",
    "mov     eax, dword [r8+0x14]",
    "test    eax, eax",
    "je      0x14006356e",
    "cmp     dword [rsp+0xc0], 0x0",
    "jne     0x140063600",
    "mov     r8d, dword [rdi+0xc]",
    "and     dword [rsp+0x20], 0x0",
    "lea     r9d, [rbp+r14]",
    "mov     edx, 0x78",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "dec     dword [rcx+0x44]",
    "mov     r9d, dword [rsp+0xb0]",
    "mov     dword [rsp+0x98], eax",
    "mov     eax, dword [rcx+0x44]",
    "mov     r8d, ebp",
    "mov     dword [rdx+0x1c], eax",
    "mov     rdx, qword [rdx]",
    "mov     eax, r9d",
    "neg     eax",
    "sbb     cl, cl",
    "and     cl, 0x4",
    "or      cl, 0x1",
    "mov     byte [rsp+0x20], cl",
    "mov     rcx, r12",
    "call    sub_140047f5c",
    "test    ebx, ebx",
    "je      0x1400635c8",
    "test    r15d, r15d",
    "jle     0x1400637f3",
    "mov     eax, dword [rsp+0xb8]",
    "test    eax, eax",
    "jle     0x140063600",
    "mov     eax, dword [rsp+0x98]",
    "test    eax, eax",
    "je      0x140063877",
    "mov     r8, qword [rsp+0xa0]",
    "mov     r9d, ebp",
    "mov     rdx, rdi",
    "mov     rcx, r12",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140063478",
    "mov     edx, dword [r12+0x38]",
    "and     dword [rsp+0x20], 0x0",
    "mov     dword [rsp+0x90], eax",
    "lea     eax, [rdx+0x1]",
    "add     edx, dword [rdi+0x8]",
    "mov     dword [rsp+0xb0], eax",
    "mov     eax, r14d",
    "mov     dword [r12+0x38], edx",
    "sub     eax, dword [rdi+0x8]",
    "xor     r9d, r9d",
    "mov     rcx, rsi",
    "add     eax, ebx",
    "mov     dword [rsp+0x30], eax",
    "test    ebx, ebx",
    "je      0x140063668",
    "mov     r8d, dword [rsp+0xa8]",
    "mov     rcx, qword [r12+0x10]",
    "lea     r9d, [rbp+r14]",
    "add     r9d, ebx",
    "mov     edx, 0x4d",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     r14d, dword [rsp+0x34]",
    "mov     r9d, dword [rsi+0x90]",
    "mov     ebx, dword [rdi+0xc]",
    "and     dword [rsp+0x20], 0x0",
    "add     r9d, 0x4",
    "mov     r8d, eax",
    "mov     edx, 0x30",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x20]",
    "mov     r8d, ebx",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "lea     eax, [rbp+r15]",
    "sub     r14d, r15d",
    "lea     edx, [r9+0x25]",
    "mov     r8d, ebx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x28], r14d",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032678",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x7b]",
    "mov     r8d, ebx",
    "mov     rcx, rsi",
    "mov     r14d, eax",
    "call    sub_140032364",
    "jmp     0x14006387c",
    "mov     r8d, dword [rdi+0xc]",
    "mov     edx, 0x73",
    "lea     r8d, [rbp+r14]",
    "lea     edx, [r9+0x14]",
    "jmp     0x140063671",
    "mov     al, byte [rdi+0x24]",
    "mov     r8d, dword [rdi+0xc]",
    "mov     rcx, rsi",
    "and     al, 0x1",
    "neg     al",
    "lea     eax, [rbp+r15]",
    "sbb     edx, edx",
    "sub     r13d, r15d",
    "add     edx, 0x84",
    "mov     dword [rsp+0x28], r13d",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032678",
    "test    r14d, r14d",
    "je      0x1400638f7",
    "mov     r8, qword [rsp+0xa0]",
    "mov     r9d, ebp",
    "mov     rdx, rdi",
    "mov     rcx, r12",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140063478",
    "mov     r9d, eax",
    "mov     r9d, dword [rsp+0x90]",
    "test    r9d, r9d",
    "jne     0x1400638a7",
    "add     rsp, 0x48",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rbx, qword [rdx+0x10]",
    "mov     ecx, dword [rsp+0x30]",
    "mov     eax, dword [rsp+0xb8]",
    "add     ecx, eax",
    "mov     dword [rdx+0x8], ecx",
    "movzx   r8d, word [rbx+0x6]",
    "mov     rcx, qword [rbx+0x18]",
    "xor     edx, edx",
    "call    memset",
    "mov     r9d, 0xfffffff7",
    "mov     r8, rbx",
    "or      edx, 0xffffffff",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "movzx   r9d, word [rbx+0x8]",
    "movzx   eax, word [rbx+0x6]",
    "mov     rdx, qword [rdi]",
    "sub     r9d, eax",
    "mov     r8d, r15d",
    "dec     r9d",
    "mov     rcx, r12",
    "call    sub_140064500",
    "mov     rcx, qword [rsp+0x38]",
    "xor     r9d, r9d",
    "mov     qword [rcx+0x10], rax",
    "mov     ebx, dword [rsi+0x90]",
    "lea     edx, [r9+0x10]",
    "lea     r8d, [rbx+0x1]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r8d",
    "call    sub_140032364",
    "dec     dword [r12+0x44]",
    "mov     eax, dword [r12+0x44]",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0xc",
    "mov     dword [rdi+0x14], eax",
    "inc     dword [r12+0x38]",
    "mov     r8d, dword [r12+0x38]",
    "mov     r9d, dword [rdi+0x14]",
    "mov     rcx, rsi",
    "mov     dword [rdi+0x10], r8d",
    "call    sub_140032364",
    "mov     r8d, dword [rdi+0xc]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     edx, 0x8a",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     eax, dword [rsp+0x98]",
    "test    eax, eax",
    "je      0x1400637a7",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0xb0]",
    "mov     r9d, ebp",
    "mov     dword [rsp+0xc0], eax",
    "mov     eax, dword [rdi+0x8]",
    "mov     edx, 0x57",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     edx, dword [rdi+0x18]",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     rcx, qword [r12]",
    "cmp     byte [rcx+0x61], 0x0",
    "mov     rdx, rax",
    "mov     qword [rsp+0x38], rax",
    "jne     0x1400638f7",
    "mov     r9d, dword [rdi+0x20]",
    "test    r9d, r9d",
    "jne     0x1400638e8",
    "mov     edx, dword [rsp+0xc0]",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     r9d, dword [rsp+0xb0]",
    "mov     dword [rax+0x8], ecx",
    "mov     eax, dword [rdi+0x8]",
    "mov     rcx, qword [r12+0x10]",
    "mov     r8d, ebp",
    "mov     edx, 0x4d",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "mov     r9d, dword [rdi+0x1c]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r8d, eax",
    "mov     edx, 0x14",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     edx, r14d",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     dword [rax+0x8], r9d",
    "mov     r9d, dword [rsi+0x90]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}