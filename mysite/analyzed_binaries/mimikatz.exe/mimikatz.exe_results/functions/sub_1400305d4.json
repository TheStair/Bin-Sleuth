{
  "address": "0x1400305d4",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "contain loop",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572"
  ],
  "disassembly": [
    "mov     dword [rsp+0x10], edx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x48",
    "mov     ebx, dword [rcx+0x30]",
    "xor     r12d, r12d",
    "mov     esi, edx",
    "mov     rdi, rcx",
    "cmp     ebx, r12d",
    "je      0x14003060b",
    "mov     rbp, qword [rcx+0x28]",
    "mov     dword [rsp+0xa0], r12d",
    "mov     r13d, 0x1",
    "mov     rax, qword [rbp+0x8]",
    "mov     rcx, qword [rax]",
    "mov     rax, qword [rdi+0x8]",
    "mov     qword [rsp+0x30], rcx",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, qword [rcx]",
    "mov     qword [rsp+0x20], rax",
    "cmp     qword [rdi], r12",
    "je      0x140030651",
    "cmp     ebx, 0x5",
    "je      0x14003060b",
    "mov     ebx, r12d",
    "cmp     byte [rbp+0x10], r12b",
    "jne     0x140030717",
    "mov     rax, qword [rbp+0x8]",
    "cmp     byte [rax+0x24], 0x2",
    "jne     0x140030651",
    "cmp     ebx, 0x6",
    "jne     0x140030b0f",
    "mov     ebp, 0x7",
    "cmp     dword [rdi+0x14], r12d",
    "jne     0x140030748",
    "mov     al, byte [rbp+0x10]",
    "mov     rsi, qword [rbp+0x8]",
    "cmp     al, 0x2",
    "je      0x140030708",
    "lea     ebx, [r13+0x4]",
    "jmp     0x140030717",
    "mov     eax, ebx",
    "add     rsp, 0x48",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "cmp     ebx, r12d",
    "jne     0x140030770",
    "cmp     ebx, r12d",
    "jne     0x140030770",
    "mov     esi, dword [rsp+0x98]",
    "mov     dword [rsp+0xa0], r13d",
    "cmp     al, r13b",
    "je      0x140030708",
    "mov     rax, qword [rdi+0x28]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, qword [rdi+0x8]",
    "mov     rax, qword [rax+0x8]",
    "movsxd  r15, dword [rcx+0x30]",
    "mov     r13d, dword [rax+0x30]",
    "mov     rax, qword [rax]",
    "movzx   r14d, byte [rax+0x9]",
    "mov     dword [rsp+0xa8], r13d",
    "cmp     ebx, r12d",
    "jne     0x1400307ad",
    "cmp     dword [rdi+0x14], r12d",
    "jne     0x140030770",
    "mov     rax, qword [rdi+0x28]",
    "xor     r9d, r9d",
    "or      r8d, 0xffffffff",
    "mov     rcx, qword [rax+0x8]",
    "mov     edx, dword [rcx+0x30]",
    "mov     rcx, qword [rdi+0x8]",
    "call    sub_140027f38",
    "cmp     eax, ebp",
    "jne     0x14003074d",
    "mov     rax, qword [rbp]",
    "mov     ecx, dword [rax+0x30]",
    "bt      rcx, 0x19",
    "jae     0x140030696",
    "mov     ebp, dword [rcx+0x3c]",
    "cmp     r14d, 0x5",
    "jne     0x1400307ad",
    "mov     rcx, qword [rdi+0x8]",
    "lea     r8, [rdi+0x10]",
    "mov     edx, 0x2",
    "call    sub_140028524",
    "mov     ebx, eax",
    "cmp     eax, r12d",
    "jne     0x140030770",
    "mov     ebx, ebp",
    "mov     eax, 0xffef",
    "and     word [rsi+0x26], ax",
    "movzx   eax, word [rsi+0x26]",
    "cmp     dword [rsi+0x3c], r12d",
    "jne     0x1400306b1",
    "mov     rax, qword [rsi]",
    "cmp     byte [rax+0x12], r12b",
    "jne     0x140030696",
    "mov     esi, dword [rdi+0x18]",
    "cmp     esi, ebp",
    "ja      0x14003083e",
    "cmp     r12d, esi",
    "jge     0x14003083e",
    "lea     eax, [r14+0x3]",
    "cmp     r15d, r13d",
    "cmovne  ebx, eax",
    "mov     dword [rdi+0x14], r13d",
    "cmp     qword [rsi+0x18], r12",
    "jne     0x1400306c6",
    "or      ax, 0x10",
    "mov     word [rsi+0x26], ax",
    "mov     eax, 0xfffe",
    "and     word [rsi+0x26], ax",
    "test    ebx, ebx",
    "jne     0x14003087b",
    "test    ebx, ebx",
    "jne     0x14003087b",
    "cmp     ebx, r12d",
    "je      0x1400306d3",
    "mov     rcx, rsi",
    "call    sub_1400280b8",
    "mov     ebx, eax",
    "cmp     eax, r12d",
    "je      0x1400306b1",
    "cmp     ebx, r8d",
    "jne     0x140030ade",
    "mov     eax, ebp",
    "mov     dword [rdi+0x38], ebp",
    "sub     eax, dword [rdi+0x18]",
    "inc     eax",
    "mov     dword [rdi+0x34], eax",
    "cmp     dword [rdi+0x18], ebp",
    "ja      0x140030884",
    "mov     rax, qword [rdi+0x28]",
    "xor     edx, edx",
    "mov     rcx, qword [rax+0x8]",
    "mov     eax, 0x40000000",
    "div     dword [rcx+0x30]",
    "inc     eax",
    "cmp     esi, eax",
    "je      0x14003082c",
    "cmp     bl, 0x5",
    "jne     0x1400306eb",
    "mov     rcx, rsi",
    "call    sub_140028404",
    "cmp     dword [rsp+0xa0], 0x0",
    "je      0x140030afe",
    "test    ebp, ebp",
    "jne     0x1400308ac",
    "cmp     dword [rdi+0x3c], ebx",
    "jne     0x140030ade",
    "inc     dword [rdi+0x18]",
    "mov     esi, dword [rsp+0x98]",
    "inc     r12d",
    "jmp     0x1400307b0",
    "mov     rax, qword [rsp+0x30]",
    "lea     r9d, [rbx+0x2]",
    "lea     r8, [rsp+0x28]",
    "mov     rcx, rax",
    "mov     edx, esi",
    "call    qword [rax+0x108]",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14003082c",
    "cmp     ebx, r12d",
    "jne     0x140030708",
    "cmp     byte [rsi+0x24], r12b",
    "jne     0x1400306eb",
    "cmp     ebx, 0xc0a",
    "mov     eax, 0x7",
    "cmove   ebx, eax",
    "mov     dword [rdi+0x30], ebx",
    "mov     rcx, qword [rdi+0x28]",
    "xor     edx, edx",
    "call    sub_140029190",
    "mov     rcx, qword [rdi+0x28]",
    "xor     edx, edx",
    "call    sub_140029240",
    "mov     r8d, dword [rdi+0x10]",
    "mov     rcx, qword [rdi+0x8]",
    "mov     edx, 0x1",
    "inc     r8d",
    "call    sub_14002f000",
    "mov     ebx, eax",
    "mov     rcx, qword [rdi+0x8]",
    "mov     rax, qword [rcx+0x8]",
    "and     dword [rax+0x3c], ebp",
    "mov     rcx, qword [rcx+0x8]",
    "call    sub_14002843c",
    "mov     ebp, 0x1",
    "mov     ebx, eax",
    "test    eax, eax",
    "je      0x1400308ac",
    "mov     rax, qword [rdi+0x28]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rdx, qword [rcx]",
    "mov     rax, qword [rdx+0x70]",
    "mov     qword [rdi+0x40], rax",
    "mov     qword [rdx+0x70], rdi",
    "mov     dword [rdi+0x3c], 0x1",
    "mov     r8d, 0x65",
    "test    esi, esi",
    "js      0x1400307bf",
    "mov     rax, qword [rsp+0x28]",
    "xor     r9d, r9d",
    "mov     edx, esi",
    "mov     r8, qword [rax+0x8]",
    "mov     rcx, rdi",
    "call    sub_140030458",
    "mov     rcx, qword [rsp+0x28]",
    "mov     ebx, eax",
    "test    rcx, rcx",
    "je      0x14003082c",
    "cmp     byte [rbp+0x10], r12b",
    "jne     0x1400306fa",
    "mov     rcx, rsi",
    "call    sub_140027a28",
    "cmp     eax, r12d",
    "jne     0x1400306b1",
    "mov     rcx, qword [rdi]",
    "test    rcx, rcx",
    "je      0x1400308d8",
    "cmp     eax, 0x65",
    "jne     0x1400308c3",
    "call    sub_14002242c",
    "mov     byte [rbp+0x10], r13b",
    "cmp     byte [rsi+0x24], r13b",
    "jae     0x140030708",
    "add     dword [rsi+0x38], r13d",
    "cmp     r14d, 0x5",
    "jne     0x1400308f5",
    "call    sub_14004e348",
    "test    ebx, ebx",
    "jne     0x140030ade",
    "mov     byte [rsi+0x24], r13b",
    "cmp     r15d, r13d",
    "jge     0x140030928",
    "mov     rcx, qword [rdi+0x8]",
    "lea     edx, [r14-0x3]",
    "call    sub_140030114",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x140030ade",
    "mov     eax, r15d",
    "cdq     ",
    "idiv    r13d",
    "mov     esi, eax",
    "imul    esi, ebp",
    "mov     eax, r13d",
    "cdq     ",
    "idiv    r15d",
    "mov     ecx, eax",
    "lea     eax, [rax+rbp-0x1]",
    "cdq     ",
    "idiv    ecx",
    "xor     edx, edx",
    "mov     esi, eax",
    "mov     rax, qword [rdi+0x8]",
    "mov     rcx, qword [rax+0x8]",
    "mov     eax, 0x40000000",
    "div     dword [rcx+0x30]",
    "inc     eax",
    "cmp     esi, eax",
    "jne     0x140030934",
    "mov     rax, qword [rsp+0x20]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, rax",
    "mov     dword [rax+0x1c], esi",
    "call    sub_140022ae0",
    "mov     r14, qword [rsp+0x20]",
    "movsxd  r12, ebp",
    "mov     rbp, qword [r14+0x48]",
    "mov     r13d, dword [r14+0x1c]",
    "imul    r12, r15",
    "cmp     r15d, r13d",
    "jge     0x140030aac",
    "dec     esi",
    "jmp     0x140030934",
    "mov     rcx, qword [rdi+0x8]",
    "xor     edx, edx",
    "call    sub_140029240",
    "mov     ebx, eax",
    "test    eax, eax",
    "mov     eax, 0x65",
    "cmove   ebx, eax",
    "mov     r14, r15",
    "test    ebx, ebx",
    "jne     0x1400309c2",
    "mov     rax, qword [rdi+0x8]",
    "xor     edx, edx",
    "mov     rcx, qword [rax+0x8]",
    "mov     eax, 0x40000000",
    "div     dword [rcx+0x30]",
    "inc     eax",
    "cmp     esi, eax",
    "je      0x1400309a3",
    "mov     eax, dword [rsp+0xa8]",
    "mov     r13, r12",
    "add     eax, 0x40000000",
    "movsxd  rcx, eax",
    "lea     eax, [r15+0x40000000]",
    "cmp     rcx, r12",
    "movsxd  rsi, eax",
    "cmovl   r13, rcx",
    "test    ebx, ebx",
    "jne     0x140030ade",
    "mov     rcx, qword [rsp+0x20]",
    "xor     edx, edx",
    "lea     r8d, [rdx+0x1]",
    "call    sub_140022ae0",
    "mov     ebx, eax",
    "inc     esi",
    "test    ebx, ebx",
    "je      0x140030951",
    "lea     r8, [rsp+0x28]",
    "xor     r9d, r9d",
    "mov     edx, esi",
    "mov     rcx, r14",
    "call    qword [r14+0x108]",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x1400309a3",
    "mov     rdi, qword [rsp+0x30]",
    "cmp     esi, r13d",
    "ja      0x1400309a9",
    "mov     rcx, qword [rsp+0x28]",
    "call    sub_140022a44",
    "mov     rcx, qword [rsp+0x28]",
    "mov     ebx, eax",
    "test    rcx, rcx",
    "je      0x1400309a3",
    "mov     rdi, qword [rsp+0x90]",
    "test    ebx, ebx",
    "jne     0x140030ade",
    "and     qword [rsp+0xa8], 0x0",
    "mov     rax, rsi",
    "lea     r8, [rsp+0xa8]",
    "cqo     ",
    "xor     r9d, r9d",
    "mov     rcx, rdi",
    "idiv    r14",
    "lea     edx, [rax+0x1]",
    "call    qword [rdi+0x108]",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x140030a44",
    "call    sub_14002242c",
    "mov     rax, qword [rbp]",
    "lea     rdx, [rsp+0x90]",
    "mov     rcx, rbp",
    "call    qword [rax+0x30]",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x140030a9a",
    "mov     rcx, qword [rsp+0xa8]",
    "test    rcx, rcx",
    "je      0x140030a56",
    "mov     rax, qword [rsp+0xa8]",
    "mov     r10, qword [rbp]",
    "mov     r9, rsi",
    "mov     rdx, qword [rax+0x8]",
    "mov     r8d, r15d",
    "mov     rcx, rbp",
    "call    qword [r10+0x18]",
    "mov     ebx, eax",
    "test    ebx, ebx",
    "jne     0x140030ade",
    "cmp     qword [rsp+0x90], r12",
    "jle     0x140030a9a",
    "add     rsi, r15",
    "test    ebx, ebx",
    "je      0x1400309f2",
    "call    sub_14002242c",
    "mov     rcx, qword [rsp+0x20]",
    "xor     edx, edx",
    "call    sub_140022a94",
    "jmp     0x140030ac1",
    "mov     rax, qword [rbp]",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "call    qword [rax+0x20]",
    "mov     ebx, eax",
    "cmp     rsi, r13",
    "jge     0x140030a5d",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x140030ade"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}