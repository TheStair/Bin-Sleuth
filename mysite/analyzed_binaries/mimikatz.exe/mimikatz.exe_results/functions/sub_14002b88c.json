{
  "address": "0x14002b88c",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x20",
    "and     dword [rsp+0x50], 0x0",
    "cmp     byte [rcx+0xc], 0x0",
    "movsxd  rbx, r9d",
    "mov     rsi, r8",
    "mov     r14d, edx",
    "mov     rdi, rcx",
    "jne     0x14002b9d9",
    "mov     rbp, qword [rsp+0x70]",
    "test    rbp, rbp",
    "je      0x14002b9f4",
    "lea     eax, [rbx+0x2]",
    "cmp     eax, dword [rcx+0x14]",
    "jg      0x14002b9d9",
    "mov     ecx, dword [rsp+0x78]",
    "test    ecx, ecx",
    "je      0x14002ba16",
    "mov     r8, rbx",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "call    memcpy",
    "mov     rsi, rbp",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_140022a44",
    "test    eax, eax",
    "je      0x14002b8e5",
    "movzx   ecx, byte [rdi+0xc]",
    "lea     eax, [rcx+0x1]",
    "mov     byte [rdi+0xc], al",
    "mov     qword [rdi+rcx*8+0x28], rsi",
    "mov     word [rdi+rcx*2+0x1c], r14w",
    "mov     eax, ecx",
    "mov     byte [rsi+0x3], cl",
    "shr     eax, 0x18",
    "mov     byte [rsi], al",
    "mov     eax, ecx",
    "shr     eax, 0x10",
    "mov     byte [rsi+0x1], al",
    "mov     eax, ecx",
    "shr     eax, 0x8",
    "mov     byte [rsi+0x2], al",
    "mov     rbp, qword [rdi+0x50]",
    "lea     r8, [rsp+0x50]",
    "mov     edx, ebx",
    "mov     rcx, rdi",
    "call    sub_140026fd8",
    "test    eax, eax",
    "jne     0x14002b8d6",
    "mov     rcx, qword [rsp+0x80]",
    "mov     dword [rcx], eax",
    "jmp     0x14002ba2b",
    "mov     r12d, dword [rsp+0x78]",
    "movsxd  r13, dword [rsp+0x50]",
    "lea     eax, [rbx+0x2]",
    "movzx   eax, ax",
    "sub     dword [rdi+0x14], eax",
    "test    r12d, r12d",
    "je      0x14002b955",
    "mov     rbx, qword [rsp+0x58]",
    "mov     rbp, qword [rsp+0x60]",
    "add     rsp, 0x20",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "lea     rcx, [rbp+r13]",
    "mov     r8, rbx",
    "mov     rdx, rsi",
    "call    memcpy",
    "lea     eax, [rbx-0x4]",
    "lea     rdx, [rsi+0x4]",
    "movsxd  r8, eax",
    "lea     eax, [r13+0x4]",
    "movsxd  rcx, eax",
    "add     rcx, rbp",
    "call    memcpy",
    "lea     r11, [rbp+r13]",
    "mov     eax, r12d",
    "shr     eax, 0x18",
    "mov     byte [r11+0x3], r12b",
    "mov     byte [r11], al",
    "mov     eax, r12d",
    "shr     eax, 0x10",
    "mov     byte [r11+0x1], al",
    "mov     eax, r12d",
    "shr     eax, 0x8",
    "mov     byte [r11+0x2], al",
    "jmp     0x14002b965",
    "mov     rax, qword [rdi+0x48]",
    "cmp     byte [rax+0x21], 0x0",
    "je      0x14002ba2b",
    "inc     byte [rax+rbp+0x3]",
    "lea     eax, [r14+r14]",
    "movsxd  rbx, eax",
    "movzx   eax, word [rdi+0x18]",
    "add     rbx, qword [rdi+0x60]",
    "sub     eax, r14d",
    "add     eax, eax",
    "lea     rcx, [rbx+0x2]",
    "mov     rdx, rbx",
    "movsxd  r8, eax",
    "call    memmove",
    "mov     byte [rbx+0x1], r13b",
    "mov     r11d, r13d",
    "sar     r11d, 0x8",
    "mov     byte [rbx], r11b",
    "movzx   eax, byte [rdi+0x9]",
    "inc     word [rdi+0x18]",
    "inc     byte [rax+rbp+0x4]",
    "movzx   eax, byte [rdi+0x9]",
    "cmp     byte [rax+rbp+0x4], 0x0",
    "jne     0x14002b9b1",
    "mov     r9, qword [rsp+0x80]",
    "cmp     dword [r9], 0x0",
    "jne     0x14002ba2b",
    "mov     r8, rsi",
    "mov     rdx, rdi",
    "mov     rcx, rdi",
    "call    sub_140026a3c",
    "jmp     0x14002ba2b"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}