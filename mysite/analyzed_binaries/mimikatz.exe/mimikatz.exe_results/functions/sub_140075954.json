{
  "address": "0x140075954",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x20",
    "mov     rdi, rdx",
    "mov     rdx, qword [rcx]",
    "xor     r13d, r13d",
    "mov     rax, qword [rdx]",
    "mov     r12, qword [rax]",
    "mov     eax, dword [rcx+0x2c]",
    "cmp     eax, r13d",
    "jne     0x14007599f",
    "dec     eax",
    "mov     dword [rcx+0x2c], eax",
    "mov     rcx, qword [rcx+0x20]",
    "cmp     rcx, r13",
    "je      0x1400759cd",
    "mov     rax, qword [rcx+0x20]",
    "cmp     rax, r13",
    "je      0x140075995",
    "bt      dword [rdi+0x28], 0x9",
    "lea     rsi, [rdx+0x50]",
    "mov     rbx, qword [rsi]",
    "jae     0x140075a3e",
    "cmp     word [rdi+0x2c], r13w",
    "je      0x1400759c6",
    "mov     eax, 0x65",
    "jmp     0x140075b74",
    "mov     word [rax], r13w",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_1400758ac",
    "mov     rsi, rax",
    "cmp     rax, r13",
    "je      0x1400759c6",
    "cmp     rbx, r13",
    "je      0x140075a3e",
    "xor     eax, eax",
    "jmp     0x140075b74",
    "movzx   r9d, word [rdi+0x16]",
    "movzx   r8d, word [rdi+0x14]",
    "mov     rdx, qword [rdi]",
    "call    sub_1400744b4",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "mov     rdi, qword [rsp+0x58]",
    "add     rsp, 0x20",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "mov     rbx, qword [rax]",
    "mov     r14d, 0x3",
    "cmp     rbx, r13",
    "jne     0x140075a9f",
    "mov     bpl, byte [rdi+0x10]",
    "lea     rsi, [rbx+0x40]",
    "jmp     0x140075add",
    "lea     edx, [r14+0x5d]",
    "mov     rcx, r12",
    "call    sub_140016c18",
    "mov     rbx, rax",
    "mov     qword [rsi], rax",
    "cmp     rax, r13",
    "jne     0x140075a83",
    "mov     rbx, qword [rbx+0x40]",
    "cmp     rbx, r13",
    "jne     0x1400759e4",
    "bt      dword [rbx+0x28], 0x9",
    "jae     0x140075a35",
    "cmp     qword [rsi], r13",
    "jne     0x140075aa5",
    "add     rax, 0x48",
    "mov     word [rbx+0x2c], r13w",
    "mov     word [rbx+0x30], r14w",
    "mov     dword [rbx+0x28], r13d",
    "mov     qword [rbx+0x40], r13",
    "mov     qword [rbx+0x38], rax",
    "jmp     0x140075ae2",
    "lea     eax, [r14+0x4]",
    "jmp     0x140075b74",
    "cmp     byte [rbx+0x10], bpl",
    "jne     0x140075a35",
    "mov     rdx, rdi",
    "mov     rcx, rbx",
    "call    sub_1400757e4",
    "cmp     eax, r13d",
    "je      0x140075a12",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_1400758ac",
    "mov     rsi, rax",
    "cmp     rax, r13",
    "je      0x140075ae2",
    "mov     rdx, rbx",
    "mov     rcx, r12",
    "call    sub_1400755e8",
    "movzx   r8d, word [rdi+0x2c]",
    "mov     rdx, rbx",
    "mov     rcx, r12",
    "call    sub_1400756b0",
    "cmp     eax, r13d",
    "je      0x140075b13",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_1400757e4",
    "cmp     eax, r13d",
    "je      0x140075a35",
    "movzx   eax, word [rbx+0x14]",
    "mov     word [rdi+0x14], ax",
    "movzx   eax, word [rbx+0x16]",
    "dec     ax",
    "jmp     0x140075a31",
    "mov     rbp, qword [rax]",
    "cmp     rbp, r13",
    "je      0x140075ae2",
    "mov     rcx, rbx",
    "mov     rdx, rdi",
    "mov     r8d, 0x30",
    "call    memcpy",
    "movzx   r8d, word [rbx+0x2c]",
    "mov     rdx, qword [rdi+0x38]",
    "mov     rcx, qword [rbx+0x38]",
    "shl     r8, 0x3",
    "call    memcpy",
    "bt      dword [rdi+0x28], 0xa",
    "jae     0x140075b47",
    "xor     eax, eax",
    "mov     qword [rbx+0x18], rax",
    "mov     qword [rbx+0x20], rax",
    "mov     eax, 0x7",
    "jmp     0x140075b55",
    "movzx   eax, word [rbx+0x14]",
    "mov     word [rdi+0x14], ax",
    "movzx   eax, word [rbx+0x16]",
    "inc     ax",
    "mov     word [rdi+0x16], ax",
    "mov     rax, qword [rbp+0x40]",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "mov     qword [rsi], rax",
    "call    sub_140075658",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_1400169a8",
    "bt      dword [rdi+0x28], 0xe",
    "jae     0x140075b52",
    "mov     byte [rdi+0x1c], r13b",
    "jmp     0x140075b52",
    "bt      dword [rbx+0x28], 0xa",
    "jb      0x140075b74",
    "mov     eax, r13d",
    "mov     qword [rdi+0x20], r13",
    "mov     rcx, qword [rbx+0x20]",
    "cmp     rcx, r13",
    "je      0x140075b74",
    "mov     ecx, dword [rcx+0x64]",
    "and     ecx, r14d",
    "cmp     cl, r14b",
    "jne     0x140075b74",
    "mov     qword [rbx+0x20], r13"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}