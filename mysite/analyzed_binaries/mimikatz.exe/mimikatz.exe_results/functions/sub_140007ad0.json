{
  "address": "0x140007ad0",
  "rules": [
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "mov     rbx, rcx",
    "mov     rcx, qword [rcx+0x80]",
    "xor     r14d, r14d",
    "xor     r13d, r13d",
    "xor     esi, esi",
    "xor     ebp, ebp",
    "mov     r15, rdx",
    "test    rcx, rcx",
    "je      0x140007b14",
    "mov     rcx, qword [rbx+0x88]",
    "test    rcx, rcx",
    "je      0x140007b2c",
    "lea     rdx, [rbx+0x60]",
    "call    sub_140007518",
    "mov     r14, rax",
    "mov     rdi, qword [rbx+0x90]",
    "test    rdi, rdi",
    "je      0x140007b73",
    "lea     rdx, [rbx+0x68]",
    "call    sub_140007518",
    "mov     r13, rax",
    "mov     rdi, qword [rbx+0x98]",
    "test    rdi, rdi",
    "je      0x140007bf6",
    "mov     edx, 0x14",
    "lea     r12, [rbx+0x70]",
    "lea     ecx, [rdx+0x2c]",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140007b73",
    "mov     rdx, qword [rbx+0x70]",
    "mov     rax, qword [rbx+0x60]",
    "mov     ecx, 0x40",
    "add     rdx, qword [rbx+0x68]",
    "add     rdx, qword [rbx+0x78]",
    "lea     rdx, [rdx+rax+0x80]",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140007cd7",
    "mov     ecx, dword [rdi+0x4]",
    "mov     eax, dword [rdi+0x8]",
    "lea     r12, [rbx+0x78]",
    "lea     edx, [rcx+rax+0x1c]",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140007bf6",
    "mov     rax, qword [rdi]",
    "mov     qword [rsi], rax",
    "mov     rax, qword [rdi+0x8]",
    "mov     qword [rsi+0x8], rax",
    "mov     eax, dword [rdi+0x10]",
    "mov     dword [rsi+0x10], eax",
    "test    r12, r12",
    "je      0x140007b73",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rbp, qword [rsp+0x58]",
    "mov     rsi, qword [rsp+0x60]",
    "mov     rax, rdi",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     rcx, rax",
    "mov     rdx, rbx",
    "mov     r8d, 0x80",
    "call    memcpy",
    "test    r14, r14",
    "je      0x140007c4e",
    "mov     rax, qword [rdi]",
    "lea     rcx, [rbp+0x1c]",
    "mov     qword [rbp], rax",
    "mov     rax, qword [rdi+0x8]",
    "mov     qword [rbp+0x8], rax",
    "mov     rax, qword [rdi+0x10]",
    "mov     qword [rbp+0x10], rax",
    "mov     eax, dword [rdi+0x18]",
    "mov     dword [rbp+0x18], eax",
    "mov     r8d, dword [rdi+0x4]",
    "mov     rdx, qword [rdi+0x1c]",
    "call    memcpy",
    "mov     eax, dword [rdi+0x4]",
    "mov     r8d, dword [rdi+0x8]",
    "mov     rdx, qword [rdi+0x24]",
    "lea     rcx, [rax+rbp+0x1c]",
    "call    memcpy",
    "test    r12, r12",
    "je      0x140007bf6",
    "mov     qword [r12], 0x14",
    "test    r13, r13",
    "je      0x140007c6b",
    "mov     r8, qword [rbx+0x60]",
    "lea     rcx, [rdi+0x80]",
    "mov     rdx, r14",
    "call    memcpy",
    "mov     ecx, dword [rdi+0x4]",
    "mov     eax, dword [rdi+0x8]",
    "lea     eax, [rcx+rax+0x1c]",
    "mov     qword [r12], rax",
    "test    rsi, rsi",
    "je      0x140007c8f",
    "mov     rax, qword [rbx+0x60]",
    "mov     r8, qword [rbx+0x68]",
    "mov     rdx, r13",
    "lea     rcx, [rdi+rax+0x80]",
    "call    memcpy",
    "test    rbp, rbp",
    "je      0x140007cb7",
    "mov     rcx, qword [rbx+0x68]",
    "mov     rax, qword [rbx+0x60]",
    "mov     r8, qword [rbx+0x70]",
    "add     rcx, rdi",
    "mov     rdx, rsi",
    "lea     rcx, [rcx+rax+0x80]",
    "call    memcpy",
    "test    r15, r15",
    "je      0x140007cd7",
    "mov     rcx, qword [rbx+0x70]",
    "mov     rax, qword [rbx+0x60]",
    "mov     r8, qword [rbx+0x78]",
    "add     rcx, qword [rbx+0x68]",
    "mov     rdx, rbp",
    "add     rcx, rdi",
    "lea     rcx, [rcx+rax+0x80]",
    "call    memcpy",
    "mov     rcx, qword [rbx+0x70]",
    "mov     rax, qword [rbx+0x60]",
    "add     rcx, qword [rbx+0x68]",
    "add     rcx, qword [rbx+0x78]",
    "lea     rcx, [rcx+rax+0x80]",
    "mov     qword [r15], rcx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}