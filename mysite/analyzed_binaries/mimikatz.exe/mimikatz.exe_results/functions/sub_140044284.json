{
  "address": "0x140044284",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     dword [rsp+0x18], r8d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "xor     r12d, r12d",
    "mov     rbx, rdx",
    "mov     rbp, rcx",
    "test    rdx, rdx",
    "jne     0x1400442b2",
    "call    sub_140016904",
    "mov     rcx, rbp",
    "movsxd  rdx, eax",
    "call    sub_140016c18",
    "xor     ecx, ecx",
    "mov     rdi, rax",
    "mov     qword [rsp+0x78], rax",
    "cmp     rax, rcx",
    "je      0x1400442ab",
    "xor     eax, eax",
    "jmp     0x1400443c6",
    "mov     eax, dword [rbx]",
    "lea     r13, [rdi+0x8]",
    "mov     dword [rsp+0x68], ecx",
    "mov     dword [rdi], eax",
    "cmp     dword [rbx], ecx",
    "jle     0x1400443c3",
    "mov     rbx, qword [rsp+0x60]",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rax, rdi",
    "mov     r14, rdi",
    "mov     rax, r13",
    "sub     rax, rdi",
    "mov     edi, dword [rsp+0x70]",
    "sub     r14, rbx",
    "lea     r15, [rax+rbx+0x1c]",
    "mov     rax, rcx",
    "xor     r9d, r9d",
    "mov     r8d, edi",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "xor     ecx, ecx",
    "jmp     0x14004431b",
    "mov     rdx, qword [r15-0x14]",
    "mov     rcx, rbp",
    "call    sub_140016dac",
    "mov     rcx, rbp",
    "mov     qword [r13+0x8], rax",
    "mov     rdx, qword [r15-0xc]",
    "call    sub_140016dac",
    "add     r13, 0x28",
    "mov     qword [r13-0x18], rax",
    "mov     al, byte [r15-0x4]",
    "and     dword [r14+r15], 0xfffffffe",
    "mov     byte [r13-0x10], al",
    "mov     eax, dword [r14+r15]",
    "xor     eax, dword [r15]",
    "and     eax, 0x10",
    "xor     eax, dword [r14+r15]",
    "mov     dword [r14+r15], eax",
    "mov     ecx, dword [r15]",
    "xor     ecx, eax",
    "and     ecx, 0x2",
    "xor     ecx, eax",
    "mov     dword [r14+r15], ecx",
    "mov     eax, dword [r15]",
    "xor     eax, ecx",
    "and     eax, 0x8",
    "xor     eax, ecx",
    "mov     ecx, dword [rsp+0x68]",
    "mov     dword [r14+r15], eax",
    "mov     eax, dword [r15+0x4]",
    "inc     ecx",
    "mov     dword [r13-0x8], eax",
    "add     r15, 0x28",
    "cmp     ecx, dword [rbx]",
    "mov     dword [rsp+0x68], ecx",
    "mov     ecx, 0x0",
    "jl      0x1400442fa",
    "cmp     byte [rsi], 0xad",
    "jne     0x14004433c",
    "mov     qword [r13], rax",
    "cmp     rsi, rcx",
    "je      0x14004433c",
    "mov     rsi, qword [r15-0x1c]",
    "cmp     rsi, rcx",
    "je      0x140044318",
    "mov     rdi, qword [rsp+0x78]",
    "cmp     rax, rcx",
    "je      0x14004433c",
    "cmp     word [rax+0x2c], cx",
    "jne     0x140044338",
    "mov     qword [rax+0x10], r12",
    "mov     r12, qword [rax+0x18]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}