{
  "address": "0x140035178",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using HC-128/9c50649e7db346e5b98b1de875012b97",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     dword [rsp+0x8], ecx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x88",
    "mov     r11, qword [r8+0x8]",
    "xor     esi, esi",
    "mov     r14, r8",
    "mov     rbp, rdx",
    "lea     r8, [rel data_1400d7110]",
    "mov     qword [rsp+0x28], r11",
    "mov     edx, ecx",
    "lea     ebx, [rsi+0x1]",
    "cmp     r9d, esi",
    "je      0x140035227",
    "cmp     byte [rbp], 0x80",
    "jae     0x140035235",
    "lea     rcx, [rbp+0x1]",
    "cmp     byte [rcx], 0x80",
    "jae     0x1400351c1",
    "lea     rdx, [rsp+0xe8]",
    "mov     rcx, rbp",
    "call    sub_140019e28",
    "mov     ecx, dword [rsp+0xe8]",
    "mov     r11, qword [rsp+0x28]",
    "mov     edx, dword [rsp+0xd0]",
    "movzx   eax, al",
    "movzx   ecx, byte [rbp]",
    "mov     eax, ebx",
    "jmp     0x14003525b",
    "lea     rdx, [rsp+0xe8]",
    "call    sub_140019e28",
    "mov     r11, qword [rsp+0x28]",
    "mov     edx, dword [rsp+0xd0]",
    "movzx   ecx, al",
    "mov     eax, dword [rsp+0xe8]",
    "lea     r8, [rel data_1400d7110]",
    "movzx   eax, byte [rcx]",
    "mov     ecx, ebx",
    "jmp     0x1400351eb",
    "movsxd  rax, r9d",
    "movsxd  rcx, r12d",
    "lea     r10, [rax*8+0x20]",
    "mov     qword [rsp+0x38], rcx",
    "mov     qword [rsp+0x30], r10",
    "mov     ecx, 0x13bee",
    "movzx   r12d, al",
    "mov     dword [rsp+0x20], ecx",
    "mov     r15d, ecx",
    "mov     dword [rsp+0xd8], r12d",
    "mov     r9d, esi",
    "movzx   eax, byte [rax+r8]",
    "add     eax, 0xfffffff4",
    "shr     eax, 0x1",
    "jmp     0x140035215",
    "movzx   r12d, cl",
    "movzx   ecx, byte [rbp]",
    "add     r12d, ebx",
    "mov     dword [rsp+0x20], ecx",
    "mov     dword [rsp+0xd8], r12d",
    "cmp     eax, 0x80",
    "jb      0x140035210",
    "test    r13b, 0x8",
    "je      0x1400353f3",
    "movzx   edi, byte [rcx+rbp]",
    "mov     dword [rsp+0xe8], edi",
    "cmp     edi, 0xa",
    "jae     0x140035387",
    "add     rsp, 0x88",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     dword [rsp+0xe0], r9d",
    "cmp     r15d, edx",
    "jbe     0x140035293",
    "add     r11, 0x38",
    "lea     r15d, [rax+rcx]",
    "mov     r9d, ebx",
    "mov     qword [rsp+0x28], r11",
    "jmp     0x140035271",
    "test    al, r13b",
    "je      0x14003550f",
    "movzx   edi, byte [rcx+rbp]",
    "mov     dword [rsp+0xe8], edi",
    "cmp     edi, 0xa",
    "jae     0x140035387",
    "mov     edx, ebx",
    "cmp     edi, esi",
    "je      0x14003567e",
    "test    r13b, 0x10",
    "je      0x1400355b7",
    "cmp     byte [rcx+rbp], 0x80",
    "jae     0x14003540f",
    "cmp     edi, esi",
    "je      0x14003567e",
    "mov     eax, edx",
    "test    r13b, r8b",
    "je      0x1400353c5",
    "or      edx, 0xffffffff",
    "jmp     0x140035389",
    "cmp     edi, 0x7",
    "jne     0x14003530a",
    "movzx   edi, byte [rcx+rbp]",
    "mov     edx, esi",
    "cmp     edi, esi",
    "mov     dword [rsp+0xe8], edi",
    "setne   dl",
    "cmp     byte [rcx+rbp], 0x80",
    "jae     0x14003552c",
    "mov     ecx, r12d",
    "lea     rdx, [rsp+0xe8]",
    "add     rcx, rbp",
    "call    sub_140019e28",
    "mov     edi, dword [rsp+0xe8]",
    "mov     r11, qword [rsp+0x28]",
    "mov     r9d, dword [rsp+0xe0]",
    "mov     edx, dword [rsp+0xd0]",
    "mov     r10, qword [rsp+0x30]",
    "movzx   edi, byte [rcx+rbp]",
    "mov     dword [rsp+0xe8], edi",
    "jmp     0x140035442",
    "mov     ecx, r15d",
    "lea     r8, [rsp+0x40]",
    "mov     edx, edi",
    "add     rcx, rbp",
    "call    sub_1400349b0",
    "mov     r11, qword [rsp+0x28]",
    "cmp     edi, 0x7",
    "jne     0x1400353dd",
    "neg     edx",
    "cmp     edi, esi",
    "je      0x1400353bb",
    "mov     r13d, 0x2",
    "mov     edx, r15d",
    "mov     ecx, edi",
    "add     rdx, rbp",
    "call    sub_140035064",
    "cmp     rax, qword [r11]",
    "jl      0x14003567e",
    "mov     ecx, r15d",
    "lea     r8, [rsp+0x40]",
    "mov     edx, edi",
    "add     rcx, rbp",
    "call    sub_1400349b0",
    "mov     r11, qword [rsp+0x28]",
    "movsd   xmm1, qword [rsp+0x40]",
    "mov     rcx, qword [r11]",
    "call    sub_140034f3c",
    "mov     edx, eax",
    "neg     edx",
    "jmp     0x1400355c9",
    "mov     rax, qword [r14]",
    "movsxd  rcx, dword [rsp+0xe0]",
    "mov     rax, qword [rax+0x18]",
    "movzx   r8d, byte [rax+rcx]",
    "cmp     r8d, esi",
    "je      0x1400353c7",
    "mov     r9d, dword [rsp+0xe0]",
    "mov     r10, qword [rsp+0x30]",
    "movzx   eax, word [r14+0x10]",
    "add     r9d, ebx",
    "add     r10, 0x8",
    "mov     dword [rsp+0xe0], r9d",
    "mov     qword [rsp+0x30], r10",
    "cmp     r9d, eax",
    "je      0x140035670",
    "mov     ecx, r12d",
    "lea     rdx, [rsp+0xe8]",
    "add     rcx, rbp",
    "call    sub_140019e28",
    "mov     edi, dword [rsp+0xe8]",
    "mov     r11, qword [rsp+0x28]",
    "mov     edx, dword [rsp+0xd0]",
    "movzx   edi, byte [rcx+rbp]",
    "mov     dword [rsp+0xe8], edi",
    "jmp     0x140035552",
    "test    bl, dil",
    "je      0x140035387",
    "cmp     edi, 0xc",
    "jb      0x14003567e",
    "mov     rcx, qword [rsp+0x40]",
    "movsd   xmm1, qword [r11]",
    "call    sub_140034f3c",
    "mov     edx, eax",
    "jmp     0x1400355c9",
    "movsd   xmm0, qword [rsp+0x40]",
    "comisd  xmm0, qword [r11]",
    "jb      0x14003567e",
    "mov     esi, ebx",
    "mov     rax, qword [rsp+0x28]",
    "test    byte [rax+0x8], bl",
    "je      0x1400353bd",
    "jle     0x1400355d7",
    "mov     r13d, 0x2",
    "movsx   eax, byte [r14+0x12]",
    "mov     byte [r14+0x16], bl",
    "jmp     0x1400353c9",
    "add     r11, 0x38",
    "mov     qword [rsp+0x28], r11",
    "cmp     edi, 0x80",
    "jb      0x14003561a",
    "or      edx, 0xffffffff",
    "jmp     0x1400355c9",
    "test    bl, dil",
    "jne     0x1400355b2",
    "cmp     edi, 0xc",
    "jb      0x1400355b2",
    "lea     r12d, [rdi-0xc]",
    "shr     r12d, 0x1",
    "mov     dword [rsp+0x4c], r12d",
    "lea     eax, [r12+r15]",
    "cmp     eax, edx",
    "ja      0x140035686",
    "comisd  xmm0, qword [r11]",
    "jbe     0x1400355d7",
    "and     r8d, ebx",
    "cmp     r8d, esi",
    "je      0x1400353c7",
    "mov     edx, ebx",
    "jmp     0x1400355c9",
    "lea     rcx, [rel data_1400d7110]",
    "mov     eax, edi",
    "movzx   eax, byte [rax+rcx]",
    "lea     eax, [rdi-0xc]",
    "shr     eax, 0x1",
    "jmp     0x140035627",
    "lea     r12d, [rdi-0xc]",
    "shr     r12d, 0x1",
    "lea     eax, [r12+r15]",
    "cmp     eax, edx",
    "ja      0x140035690",
    "mov     ecx, 0x13c3b",
    "jmp     0x140035283",
    "mov     r8, qword [r14]",
    "movzx   eax, word [r8+0x8]",
    "cmp     eax, r9d",
    "jle     0x140035686",
    "shr     rax, 0x7",
    "cmp     rax, rsi",
    "jne     0x140035633",
    "add     r15d, eax",
    "mov     ecx, ebx",
    "mov     rdx, rbx",
    "mov     eax, edi",
    "jmp     0x140035638",
    "mov     ecx, 0x13c59",
    "jmp     0x140035283",
    "mov     eax, 0x4000",
    "test    ax, r13w",
    "je      0x1400354c9",
    "call    sub_140084e38",
    "mov     byte [r14+0x13], al",
    "xor     eax, eax",
    "jmp     0x1400353c9",
    "cmp     qword [r10+r8], rsi",
    "je      0x1400354c9",
    "add     ecx, ebx",
    "add     rdx, rbx",
    "add     r12d, ecx",
    "mov     rcx, qword [rsp+0x38]",
    "add     rcx, rdx",
    "mov     dword [rsp+0xd8], r12d",
    "mov     qword [rsp+0x38], rcx",
    "cmp     r12d, dword [rsp+0x20]",
    "jae     0x140035670",
    "mov     eax, dword [r11+0xc]",
    "mov     rdx, qword [r11+0x10]",
    "mov     ecx, r15d",
    "cmp     r12d, eax",
    "cmovl   eax, r12d",
    "add     rcx, rbp",
    "movsxd  r8, eax",
    "call    memcmp",
    "mov     r13d, 0x2",
    "mov     edx, eax",
    "cmp     eax, esi",
    "jne     0x14003538f",
    "mov     ecx, r12d",
    "mov     rax, rsi",
    "movsxd  rdx, r15d",
    "cmp     rcx, rsi",
    "jle     0x1400355a2",
    "mov     al, byte [r8+0x4]",
    "mov     r13d, 0x2",
    "lea     r9, [r14+0x13]",
    "mov     byte [rsp+0x4a], al",
    "mov     rax, qword [r8+0x10]",
    "mov     word [rsp+0x48], r13w",
    "mov     qword [rsp+0x68], rax",
    "mov     eax, r15d",
    "lea     rcx, [rsp+0x40]",
    "add     rax, rbp",
    "mov     rdx, r11",
    "mov     qword [rsp+0x50], rax",
    "mov     r8, qword [r10+r8]",
    "call    sub_140034d54",
    "mov     r11, qword [rsp+0x28]",
    "mov     edx, eax",
    "jmp     0x140035502",
    "mov     edx, dword [rsp+0xd0]",
    "cmp     r15d, edx",
    "jbe     0x1400352ab",
    "mov     r11, qword [rsp+0x28]",
    "mov     edx, r12d",
    "sub     edx, dword [r11+0xc]",
    "mov     edx, r12d",
    "mov     r12d, dword [rsp+0xd8]",
    "sub     edx, dword [r11]",
    "jmp     0x1400355c9",
    "lea     r8, [rdx+rbp]",
    "mov     r12d, dword [rsp+0xd8]",
    "jmp     0x1400355cf",
    "movzx   r13d, word [r11+0x8]",
    "mov     eax, 0x2",
    "test    r13b, 0x24",
    "je      0x14003532d",
    "cmp     edx, esi",
    "jne     0x14003538f",
    "add     rax, rbx",
    "cmp     rax, rcx",
    "jl      0x140035590",
    "cmp     byte [r8+rax], sil",
    "jne     0x140035387"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}