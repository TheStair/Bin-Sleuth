{
  "address": "0x140005c70",
  "rules": [
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     dword [r11+0x20], r9d",
    "push    rbx",
    "push    rdi",
    "sub     rsp, 0x98",
    "xor     ebx, ebx",
    "mov     dword [rsp+0x40], ebx",
    "mov     dword [rsp+0x58], edx",
    "mov     dword [rsp+0x5c], 0xd",
    "mov     qword [r11-0x48], rcx",
    "mov     dword [rsp+0x68], 0x18",
    "lea     eax, [rbx+0xe]",
    "mov     dword [rsp+0x6c], eax",
    "mov     qword [r11-0x38], r8",
    "mov     dword [rsp+0x78], eax",
    "and     dword [rsp+0x7c], ebx",
    "lea     rax, [rel data_1400e6e28]  {u\"SHA256\"}",
    "mov     qword [r11-0x28], rax",
    "and     dword [rsp+0x48], ebx",
    "mov     dword [rsp+0x4c], 0x3",
    "lea     rax, [r11-0x50]",
    "mov     qword [r11-0x58], rax",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "lea     rdx, [rel data_1400e6e38]  {u\"SP800_108_CTR_HMAC\"}",
    "lea     rcx, [r11+0x8]",
    "call    BCryptOpenAlgorithmProvider",
    "test    eax, eax",
    "js      0x140005e32",
    "mov     edx, eax",
    "lea     rcx, [rel data_1400e7120]  {u\"ERROR kull_m_crypto_ngc_keyvalue\u2026\"}",
    "call    sub_14000c030",
    "and     dword [rsp+0x28], ebx",
    "lea     rax, [rsp+0xb8]",
    "mov     qword [rsp+0x20], rax",
    "lea     r9d, [rbx+0x4]",
    "lea     r8, [rsp+0xc8]",
    "lea     rdx, [rel data_1400e6e60]  {u\"ObjectLength\"}",
    "mov     rcx, qword [rsp+0xb0]",
    "call    BCryptGetProperty",
    "test    eax, eax",
    "js      0x140005e13",
    "mov     eax, ebx",
    "add     rsp, 0x98",
    "pop     rdi",
    "pop     rbx",
    "retn    ",
    "mov     edx, eax",
    "lea     rcx, [rel data_1400e7080]  {u\"ERROR kull_m_crypto_ngc_keyvalue\u2026\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0xc8]",
    "lea     ecx, [rbx+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140005e21",
    "jmp     0x140005e52",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0xb0]",
    "call    BCryptCloseAlgorithmProvider",
    "jmp     0x140005e40",
    "and     dword [rsp+0x30], ebx",
    "mov     eax, dword [rsp+0xd8]",
    "mov     dword [rsp+0x28], eax",
    "mov     rax, qword [rsp+0xd0]",
    "mov     qword [rsp+0x20], rax",
    "mov     r9d, dword [rsp+0xc8]",
    "mov     r8, rdi",
    "lea     rdx, [rsp+0xc0]",
    "mov     rcx, qword [rsp+0xb0]",
    "call    BCryptGenerateSymmetricKey",
    "test    eax, eax",
    "js      0x140005dfa",
    "mov     edx, eax",
    "lea     rcx, [rel data_1400e6fd0]  {u\"ERROR kull_m_crypto_ngc_keyvalue\u2026\"}",
    "call    sub_14000c030",
    "and     dword [rsp+0x28], ebx",
    "lea     rax, [rsp+0xb8]",
    "mov     qword [rsp+0x20], rax",
    "lea     r9d, [rbx+0x20]",
    "mov     r8, qword [rsp+0xe0]",
    "lea     rdx, [rsp+0x48]",
    "mov     rcx, qword [rsp+0xc0]",
    "call    BCryptKeyDerivation",
    "test    eax, eax",
    "js      0x140005ddd",
    "mov     edx, eax",
    "lea     rcx, [rel data_1400e6f20]  {u\"ERROR kull_m_crypto_ngc_keyvalue\u2026\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0xb8]",
    "cmp     edx, 0x20",
    "sete    bl",
    "mov     dword [rsp+0x40], ebx",
    "test    ebx, ebx",
    "jne     0x140005deb",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "jmp     0x140005e21",
    "mov     rcx, qword [rsp+0xc0]",
    "call    BCryptDestroyKey",
    "jmp     0x140005e08",
    "lea     r8d, [rbx+0x20]",
    "lea     rcx, [rel data_1400e6e80]  {u\"ERROR kull_m_crypto_ngc_keyvalue\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x140005deb"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}