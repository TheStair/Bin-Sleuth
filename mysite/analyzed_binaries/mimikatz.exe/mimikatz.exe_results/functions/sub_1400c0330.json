{
  "address": "0x1400c0330",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r14",
    "sub     rsp, 0xa0",
    "lea     r8, [rel data_14012b810]  {u\"withbackup\"}",
    "xor     ebx, ebx",
    "xor     r9d, r9d",
    "and     qword [rsp+0x20], rbx",
    "mov     rbp, rdx",
    "mov     r12d, ecx",
    "call    sub_140013220",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_1400ee5d0]  {u\"guid\"}",
    "neg     eax",
    "mov     rdx, rbp",
    "mov     ecx, r12d",
    "sbb     r14d, r14d",
    "and     qword [rsp+0x20], rbx",
    "xor     esi, esi",
    "mov     dword [rsp+0xe8], esi",
    "and     r14d, 0x2000000",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400c084f",
    "lea     rcx, [rel data_14012baa0]  {u\"ERROR kuhl_m_ngc_pin ; guid argu\u2026\"}",
    "call    sub_14000c030",
    "mov     r8, qword [rsp+0x60]",
    "lea     rax, [rsp+0xe0]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0x70]",
    "xor     edx, edx",
    "mov     qword [rsp+0x38], rax",
    "mov     dword [rsp+0x30], 0x1",
    "and     qword [rsp+0x28], rbx",
    "and     dword [rsp+0x20], ebx",
    "mov     ecx, r14d",
    "call    sub_1400c01bc",
    "test    eax, eax",
    "je      0x1400c0487",
    "and     qword [rsp+0x20], rbx",
    "lea     r9, [rsp+0x50]",
    "lea     r8, [rel data_1400f8de8]",
    "mov     rdx, rbp",
    "mov     ecx, r12d",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400c0546",
    "mov     edx, dword [rsp+0xe0]",
    "mov     rdi, qword [rsp+0x70]",
    "lea     rcx, [rel data_14012b828]  {u\"User SID  : %.*s\"}",
    "shr     rdx, 0x1",
    "mov     r8, rdi",
    "call    sub_14000c030",
    "lea     rdx, [rsp+0x90]",
    "mov     rcx, rdi",
    "call    ConvertStringSidToSidW",
    "test    eax, eax",
    "je      0x1400c0472",
    "mov     r8, qword [rsp+0x60]",
    "lea     rax, [rsp+0xe0]",
    "lea     rbp, [rel data_1400f147c]",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0x70]",
    "mov     edi, 0x1",
    "mov     qword [rsp+0x38], rax",
    "mov     dword [rsp+0x30], 0x9",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x28], rbp",
    "mov     dword [rsp+0x20], edi",
    "call    sub_1400c01bc",
    "test    eax, eax",
    "je      0x1400c05bd",
    "mov     rcx, qword [rsp+0x50]",
    "call    sub_140012dc8",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1400c0546",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "mov     rcx, qword [rsp+0x90]",
    "and     qword [rsp+0x20], rbx",
    "lea     r8, [rsp+0x50]",
    "lea     rdx, [rsp+0x88]",
    "xor     r9d, r9d",
    "call    sub_1400140e0",
    "test    eax, eax",
    "je      0x1400c0464",
    "mov     r8, qword [rsp+0x60]",
    "lea     rax, [rsp+0x58]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0xe8]",
    "xor     edx, edx",
    "mov     qword [rsp+0x38], rax",
    "mov     dword [rsp+0x30], 0xf",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x28], rbp",
    "mov     dword [rsp+0x20], edi",
    "call    sub_1400c01bc",
    "test    eax, eax",
    "je      0x1400c083f",
    "lea     rcx, [rel data_14012b8a8]  {u\"Timestamp : \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x70]",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x70]",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_14012b868]  {u\"Pin code  : %S\\nHex pin   : \"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    qword [rel lstrlenA]",
    "lea     r8, [rsp+0xe8]",
    "mov     rcx, rdi",
    "mov     edx, eax",
    "call    sub_1400062c8",
    "mov     esi, dword [rsp+0xe8]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400c0531",
    "mov     rcx, qword [rsp+0x90]",
    "call    qword [rel LocalFree]",
    "mov     r8, qword [rsp+0x88]",
    "mov     rdx, qword [rsp+0x50]",
    "lea     rcx, [rel data_14012b850]  {u\" ( %s\\%s )\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x88]",
    "call    qword [rel LocalFree]",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel LocalFree]",
    "test    rbx, rbx",
    "je      0x1400c085b",
    "mov     r8, qword [rsp+0x60]",
    "lea     rax, [rsp+0xe0]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0x50]",
    "xor     edx, edx",
    "mov     qword [rsp+0x38], rax",
    "mov     dword [rsp+0x30], edi",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x28], rbp",
    "mov     dword [rsp+0x20], edi",
    "call    sub_1400c01bc",
    "mov     rbp, qword [rsp+0xe8]",
    "test    eax, eax",
    "je      0x1400c0836",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "lea     edx, [rsi-0x2]",
    "xor     r8d, r8d",
    "mov     rcx, rax",
    "call    sub_140012f68",
    "lea     rcx, [rel data_14012b8a0]",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "lea     rcx, [rsi+rbx-0x2]",
    "lea     edx, [r8+0x2]",
    "call    sub_140012f68",
    "lea     rcx, [rel data_14011a170]",
    "call    sub_14000c030",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0xd0]",
    "add     rsp, 0xa0",
    "pop     r14",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "jmp     0x1400c085b",
    "mov     rcx, rbp",
    "call    qword [rel LocalFree]",
    "mov     edx, dword [rsp+0xe0]",
    "mov     r12, qword [rsp+0x50]",
    "lea     rcx, [rel data_14012b8c8]  {u\"Provider  : %.*s\\n\"}",
    "shr     rdx, 0x1",
    "mov     r8, r12",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0x78]",
    "xor     r8d, r8d",
    "mov     rdx, r12",
    "call    NCryptOpenStorageProvider",
    "test    eax, eax",
    "jne     0x1400c081f",
    "lea     rcx, [rel data_14012ba20]  {u\"ERROR kuhl_m_ngc_pin ; NCryptOpe\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "and     dword [rsp+0x28], eax",
    "mov     rcx, qword [rsp+0x78]",
    "lea     rax, [rsp+0x68]",
    "lea     r8, [rsp+0x80]",
    "lea     rdx, [rel data_140108258]  {u\"Impl Type\"}",
    "mov     r9d, 0x4",
    "mov     qword [rsp+0x20], rax",
    "call    NCryptGetProperty",
    "test    eax, eax",
    "jne     0x1400c0805",
    "mov     edx, eax",
    "lea     rcx, [rel data_14012b980]  {u\"ERROR kuhl_m_ngc_pin ; NCryptGet\u2026\"}",
    "mov     edx, dword [rsp+0x80]",
    "cmp     edx, edi",
    "jne     0x1400c0720",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "cmp     edx, 0x2",
    "jne     0x1400c07fc",
    "test    rbx, rbx",
    "je      0x1400c0813",
    "lea     rcx, [rel data_14012b920]  {u\"ERROR kuhl_m_ngc_pin ; dwImplTyp\u2026\"}",
    "jmp     0x1400c080e",
    "mov     r8, qword [rsp+0x60]",
    "lea     rax, [rsp+0xe0]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0xe8]",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x38], rax",
    "mov     dword [rsp+0x30], edx",
    "lea     rax, [rel data_1400f147c]",
    "mov     qword [rsp+0x28], rax",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], edi",
    "call    sub_1400c01bc",
    "test    eax, eax",
    "je      0x1400c0813",
    "mov     rcx, qword [rsp+0x78]",
    "call    NCryptFreeObject",
    "jmp     0x1400c082d",
    "test    esi, esi",
    "je      0x1400c0813",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0xe0]",
    "mov     rdi, qword [rsp+0xe8]",
    "lea     rcx, [rel data_14012b8f0]  {u\"KeyName   : %.*s\\n\"}",
    "shr     rdx, 0x1",
    "mov     r8, rdi",
    "call    sub_14000c030",
    "test    rbx, rbx",
    "je      0x1400c07f1",
    "mov     rcx, qword [rsp+0x78]",
    "lea     rax, [rsp+0x68]",
    "mov     r9, rbp",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0xe8]",
    "mov     r8d, esi",
    "mov     qword [rsp+0x28], rax",
    "mov     eax, dword [rsp+0x58]",
    "mov     rdx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14000636c",
    "test    eax, eax",
    "jne     0x1400c0813",
    "mov     rcx, rdi",
    "test    esi, esi",
    "je      0x1400c07f1",
    "mov     rcx, qword [rsp+0xe8]",
    "call    sub_1400c0284",
    "mov     rcx, qword [rsp+0xe8]",
    "jmp     0x1400c07f4",
    "mov     rcx, qword [rsp+0x78]",
    "lea     rax, [rsp+0x68]",
    "mov     r9d, esi",
    "mov     qword [rsp+0x38], rax",
    "lea     rax, [rsp+0xe8]",
    "mov     r8, rbx",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rsp+0x58]",
    "mov     rdx, rdi",
    "mov     dword [rsp+0x28], eax",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_1400064d8",
    "test    eax, eax",
    "jne     0x1400c07f1",
    "call    qword [rel LocalFree]",
    "jmp     0x1400c0813",
    "mov     rcx, qword [rsp+0xe8]",
    "call    sub_1400c0284",
    "mov     rcx, qword [rsp+0xe8]",
    "call    qword [rel LocalFree]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}