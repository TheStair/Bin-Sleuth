{
  "address": "0x14007e1dc",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "64-bit execution via heavens gate/6f3d819d94084ecbbf457d6e8a175a62",
    "check for minimum number of windows on screen/33510955078c4d19b820c2503c0b6329",
    "contain loop",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "encrypt data using Curve25519/4be2ead1b08a4c049dae9c8694881d76",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "hide graphical window from taskbar/c26bad2600334fd9a84ba1d9de3384f6"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xb0",
    "mov     rsi, qword [rcx]",
    "mov     r8d, edx",
    "lea     r10, [rel __dos_header]",
    "xor     ebp, ebp",
    "mov     rax, rcx",
    "mov     qword [rsp+0xa0], r8",
    "cmp     byte [r8+r10+0xdb7e0], bpl",
    "jne     0x14007e232",
    "cmp     edx, 0x142",
    "ja      0x140080a8e",
    "cmp     rsi, qword [rcx+0x970]",
    "jb      0x14007e232",
    "{Case 0xd8, 0x124, 0x12b, 0x131, 0x133, 0x13e}",
    "mov     rax, qword [rsp+0xa0]",
    "lea     r9, [rel __dos_header]",
    "movsx   rdx, byte [rax+r9+0xdb7e0]",
    "movzx   r8d, word [r9+rax*2+0xdb4e0]",
    "lea     rcx, [rdx+rdx*2]",
    "movzx   eax, word [rsi+rcx*8]",
    "movsx   rcx, word [r9+rax*2+0xdac20]",
    "mov     rax, r8",
    "add     rcx, r8",
    "movzx   eax, word [r9+rcx*2+0xd8860]",
    "lea     ecx, [rdx+0x1]",
    "movsxd  rdx, ecx",
    "lea     rcx, [rdx+rdx*2]",
    "lea     rdx, [rsi+rcx*8]",
    "mov     rcx, qword [rsp+0xf0]",
    "mov     qword [rcx], rdx",
    "mov     word [rdx], ax",
    "mov     word [rdx+0x2], r8w",
    "mov     eax, edx",
    "mov     ecx, dword [r10+rax*4+0x80d70]",
    "add     rcx, r10",
    "jmp     rcx",
    "call    sub_14007e178",
    "mov     ax, bp",
    "jmp     0x140080af0",
    "{Case 0x0}",
    "mov     rax, qword [rsp+0x110]",
    "mov     r12d, 0x1",
    "mov     byte [rax+0x103], r12b",
    "jmp     0x140080a8e",
    "{Case 0x1}",
    "mov     rax, qword [rsp+0x110]",
    "mov     byte [rax+0x103], 0x2",
    "jmp     0x140080a8e",
    "{Case 0x2}",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14004db14",
    "jmp     0x140080a8e",
    "{Case 0x3}",
    "mov     edx, dword [rsi-0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_1400536c0",
    "jmp     0x140080a8e",
    "{Case 0x4}",
    "mov     dword [rsi+0x20], 0x7",
    "jmp     0x140080a8e",
    "{Case 0x5-0x7, 0x55, 0x57, 0xf6, 0x130}",
    "movzx   eax, word [rsi+0x2]",
    "mov     dword [rsi+0x8], eax",
    "jmp     0x140080a8e",
    "{Case 0x8-0x9}",
    "cmp     word [rsi-0x16], 0xc",
    "mov     rcx, qword [rsp+0x110]",
    "mov     ebx, ebp",
    "sete    bl",
    "lea     rax, [rel data_1400f6048]  {\"ROLLBACK\"}",
    "lea     r8, [rel data_1400f6054]  {\"COMMIT\"}",
    "cmp     ebx, ebp",
    "mov     qword [rsp+0x20], rbp",
    "cmovne  r8, rax",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x16]",
    "call    sub_14004da74",
    "cmp     eax, ebp",
    "jne     0x140080a8e",
    "{Case 0xa}",
    "xor     edx, edx",
    "{Case 0xb}",
    "mov     edx, 0x1",
    "jmp     0x14007e331",
    "{Case 0xc}",
    "mov     edx, 0x2",
    "jmp     0x14007e331",
    "{Case 0xd}",
    "mov     eax, dword [rsi-0x28]",
    "mov     r9d, dword [rsi-0x58]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     dword [rsp+0x30], eax",
    "lea     r8, [rsi+0x8]",
    "lea     rdx, [rsi-0x10]",
    "mov     dword [rsp+0x28], ebp",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_14004e8a8",
    "jmp     0x140080a8e",
    "{Case 0xe}",
    "mov     rax, qword [rsp+0x110]",
    "mov     r12d, 0x1",
    "add     byte [rax+0x24], r12b",
    "mov     rax, qword [rax]",
    "add     dword [rax+0x168], r12d",
    "jmp     0x140080a8e",
    "{Case 0xf, 0x12, 0x15, 0x2b, 0x2d, 0x3a, 0x44, 0x4d, 0x5e, 0xe1, 0xe6}",
    "mov     dword [rsi+0x20], ebp",
    "jmp     0x140080a8e",
    "{Case 0x10}",
    "mov     r12d, 0x1",
    "mov     dword [rsi-0x28], r12d",
    "jmp     0x140080a8e",
    "{Case 0x11, 0x2c, 0x5c, 0x75, 0x85, 0x109}",
    "mov     r12d, 0x1",
    "mov     dword [rsi+0x8], r12d",
    "jmp     0x140080a8e",
    "{Case 0x13}",
    "mov     r13, qword [rsp+0x110]",
    "mov     r15b, byte [rsi+0x8]",
    "lea     rax, [rsi-0x10]",
    "mov     rdi, qword [r13]",
    "mov     byte [rsp+0xf8], r15b",
    "mov     qword [rsp+0x80], rax",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "{Case 0x14}",
    "mov     rax, qword [rsi+0x8]",
    "mov     rbx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004ff1c",
    "{Case 0x16}",
    "cmp     dword [rsi+0x10], 0x5",
    "jne     0x14007e7d1",
    "{Case 0x17}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "lea     rdx, [rsi-0x10]",
    "call    sub_14004edac",
    "jmp     0x140080a8e",
    "{Case 0x18, 0x3d, 0x64}",
    "mov     dword [rsi+0x28], ebp",
    "{Case 0x5f, 0x68, 0x7a, 0x7f-0x80, 0x8a, 0x8c, 0x8e, 0x93, 0x9c, 0xa2, 0xd7, 0xd9-0xda, 0xdd, 0xe2, 0xec, 0xfc, 0x10f}",
    "mov     qword [rsi+0x20], rbp",
    "jmp     0x140080a8e",
    "{Case 0x19}",
    "mov     eax, dword [rsi+0x10]",
    "sub     eax, dword [rsi-0x40]",
    "add     eax, dword [rsi+0x8]",
    "mov     dword [rsi-0x38], eax",
    "jmp     0x140080a8e",
    "{Case 0x1a}",
    "mov     eax, dword [rsi+0x10]",
    "sub     eax, dword [rsi-0x70]",
    "add     eax, dword [rsi+0x8]",
    "mov     dword [rsi-0x68], eax",
    "jmp     0x140080a8e",
    "{Case 0x1b}",
    "mov     eax, dword [rsi+0x10]",
    "sub     eax, dword [rsi-0x10]",
    "add     eax, dword [rsi+0x8]",
    "mov     dword [rsi-0x8], eax",
    "jmp     0x140080a8e",
    "{Case 0x1c}",
    "mov     rax, qword [r9]",
    "{Case 0x1d}",
    "movdqu  xmm0, xmmword [r9]",
    "movdqu  xmmword [rsi+0x20], xmm0",
    "jmp     0x140080a8e",
    "{Case 0x1e, 0x3f}",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "mov     rax, qword [rsp+0x110]",
    "movdqu  xmmword [rax+0x60], xmm0",
    "jmp     0x140080a8e",
    "{Case 0x1f}",
    "mov     r8, qword [rsi-0x10]",
    "mov     r9d, dword [rsi-0x8]",
    "add     r9, r8",
    "{Case 0x20}",
    "mov     r8, qword [rsi-0x28]",
    "mov     r9, qword [rsi+0x8]",
    "mov     rdx, qword [rsi-0x10]",
    "inc     r8",
    "jmp     0x14007e88f",
    "{Case 0x21}",
    "mov     r9d, dword [rsi-0x8]",
    "mov     r8, qword [rsi-0x28]",
    "add     r9, qword [rsi-0x10]",
    "jmp     0x14007e88b",
    "{Case 0x22}",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "mov     edx, 0xa8",
    "call    sub_140043a14",
    "mov     r9d, dword [rsi-0x8]",
    "mov     r8, qword [rsi-0x28]",
    "add     r9, qword [rsi-0x10]",
    "mov     rdx, rax",
    "jmp     0x14007e88f",
    "{Case 0x23}",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsp+0x80]",
    "mov     edx, 0x71",
    "movdqu  xmmword [rsp+0x80], xmm0",
    "call    sub_14007de5c",
    "mov     rbx, rax",
    "cmp     rax, rbp",
    "je      0x14007e922",
    "{Case 0x24}",
    "mov     rax, qword [rsp+0x110]",
    "mov     r8, qword [rax+0x130]",
    "cmp     r8, rbp",
    "je      0x140080a8e",
    "{Case 0x25}",
    "mov     eax, dword [rsi-0x28]",
    "mov     r9d, dword [rsi+0x8]",
    "mov     r8d, dword [rsi-0x10]",
    "mov     dword [rsp+0x20], eax",
    "xor     edx, edx",
    "{Case 0x26}",
    "mov     eax, dword [rsi+0x8]",
    "mov     r12d, 0x1",
    "mov     byte [rsp+0x50], r12b",
    "mov     dword [rsp+0x48], ebp",
    "mov     dword [rsp+0x40], ebp",
    "mov     qword [rsp+0x38], rbp",
    "mov     qword [rsp+0x30], rbp",
    "mov     dword [rsp+0x28], eax",
    "mov     qword [rsp+0x20], rbp",
    "{Case 0x27}",
    "mov     rdx, qword [rsi-0x10]",
    "{Case 0x28}",
    "mov     eax, dword [rsi+0x8]",
    "mov     r9, qword [rsi-0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x28]",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140051460",
    "jmp     0x140080a8e",
    "{Case 0x29}",
    "mov     rax, qword [rsp+0x110]",
    "mov     rcx, qword [rax+0x130]",
    "{Case 0x2a}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     rdx, [rsi+0x8]",
    "call    sub_14004f4dc",
    "jmp     0x140080a8e",
    "{Case 0x2e}",
    "mov     eax, dword [rsi+0xc]",
    "not     eax",
    "and     eax, dword [rsi-0x10]",
    "or      eax, dword [rsi+0x8]",
    "{Case 0x2f}",
    "mov     dword [rsi-0x10], ebp",
    "mov     dword [rsi-0xc], ebp",
    "jmp     0x140080a8e",
    "{Case 0x30}",
    "mov     dword [rsi-0x28], ebp",
    "mov     dword [rsi-0x24], ebp",
    "jmp     0x140080a8e",
    "{Case 0x31}",
    "mov     eax, dword [rsi+0x8]",
    "mov     dword [rsi-0x24], 0xff",
    "mov     dword [rsi-0x28], eax",
    "jmp     0x140080a8e",
    "{Case 0x32}",
    "mov     eax, dword [rsi+0x8]",
    "mov     dword [rsi-0x24], 0xff00",
    "shl     eax, 0x8",
    "mov     dword [rsi-0x28], eax",
    "jmp     0x140080a8e",
    "{Case 0x33}",
    "mov     dword [rsi-0x10], 0x8",
    "jmp     0x140080a8e",
    "{Case 0x34}",
    "mov     dword [rsi-0x10], 0x9",
    "jmp     0x140080a8e",
    "{Case 0x35}",
    "mov     dword [rsi+0x8], 0xa",
    "jmp     0x140080a8e",
    "{Case 0x36}",
    "mov     dword [rsi+0x8], 0x7",
    "jmp     0x140080a8e",
    "{Case 0x37, 0x3c, 0x87}",
    "mov     dword [rsi-0x10], ebp",
    "jmp     0x140080a8e",
    "{Case 0x38}",
    "mov     dword [rsi-0x28], ebp",
    "jmp     0x140080a8e",
    "{Case 0x39, 0x48, 0xa0}",
    "mov     eax, dword [rsi+0x8]",
    "jmp     0x14007eaa2",
    "{Case 0x3b, 0x4c, 0x88, 0xca, 0xcd, 0xe7}",
    "mov     r12d, 0x1",
    "mov     dword [rsi-0x10], r12d",
    "jmp     0x140080a8e",
    "{Case 0x3e}",
    "mov     rax, qword [rsp+0x110]",
    "mov     dword [rax+0x68], ebp",
    "jmp     0x140080a8e",
    "{Case 0x40}",
    "mov     r9d, dword [rsi-0x28]",
    "mov     r8d, dword [rsi+0x8]",
    "mov     rdx, qword [rsi-0x40]",
    "mov     dword [rsp+0x20], ebp",
    "jmp     0x14007e9c3",
    "{Case 0x41}",
    "mov     eax, dword [rsi+0x8]",
    "mov     r12d, 0x1",
    "mov     byte [rsp+0x50], r12b",
    "mov     dword [rsp+0x48], ebp",
    "mov     dword [rsp+0x40], ebp",
    "mov     qword [rsp+0x38], rbp",
    "mov     qword [rsp+0x30], rbp",
    "mov     dword [rsp+0x28], eax",
    "mov     rax, qword [rsi-0x28]",
    "mov     qword [rsp+0x20], rax",
    "jmp     0x14007e9fe",
    "{Case 0x42}",
    "mov     rdx, qword [rsi-0x28]",
    "jmp     0x14007ea1c",
    "{Case 0x43}",
    "mov     eax, dword [rsi-0x10]",
    "mov     rbx, qword [rsp+0x110]",
    "mov     r9, qword [rsi-0x28]",
    "mov     rdx, qword [rsi-0x88]",
    "lea     r8, [rsi-0x40]",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140051460",
    "mov     rcx, qword [rbx+0x130]",
    "jmp     0x14007ea60",
    "{Case 0x45, 0x47}",
    "mov     dword [rsi+0x20], 0xb",
    "jmp     0x140080a8e",
    "{Case 0x46}",
    "mov     eax, dword [rsi+0x8]",
    "{Case 0x49}",
    "mov     dword [rsi+0x8], 0x4",
    "jmp     0x140080a8e",
    "{Case 0x4a, 0xa1}",
    "mov     dword [rsi+0x8], 0x5",
    "jmp     0x140080a8e",
    "{Case 0x4b}",
    "xor     r8d, r8d",
    "{Case 0x4e}",
    "mov     eax, dword [rsi-0x70]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r9, [rsi-0x40]",
    "mov     dword [rsp+0x38], eax",
    "mov     eax, dword [rsi-0xa0]",
    "lea     r8, [rsi-0x58]",
    "mov     dword [rsp+0x30], eax",
    "mov     rax, qword [rsi+0x8]",
    "lea     rdx, [rsi-0xb8]",
    "mov     qword [rsp+0x28], rax",
    "mov     rax, qword [rsi-0x28]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140050510",
    "jmp     0x140080a8e",
    "{Case 0x4f}",
    "mov     r8d, 0x1",
    "jmp     0x14007ec02",
    "{Case 0x50}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     rdx, qword [rsi+0x8]",
    "lea     r8, [rsp+0x80]",
    "mov     rcx, rbx",
    "mov     byte [rsp+0x80], 0x9",
    "mov     dword [rsp+0x84], ebp",
    "mov     dword [rsp+0x88], ebp",
    "mov     dword [rsp+0x8c], ebp",
    "mov     qword [rsp+0x90], rbp",
    "mov     qword [rsp+0x98], rbp",
    "call    sub_1400692cc",
    "jmp     0x14007e785",
    "{Case 0x51}",
    "mov     rbx, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "cmp     rbx, rbp",
    "je      0x14007ecd9",
    "{Case 0x52}",
    "mov     rbx, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "cmp     rbx, rbp",
    "je      0x14007ed11",
    "{Case 0x53}",
    "mov     rbx, qword [rsi+0x8]",
    "cmp     rbx, rbp",
    "je      0x14007ed3f",
    "{Case 0x54}",
    "mov     rbx, qword [rsi+0x8]",
    "mov     rdi, qword [rsi-0x28]",
    "mov     r13, qword [rsp+0x110]",
    "cmp     rbx, rbp",
    "je      0x14007ee0a",
    "{Case 0x56}",
    "mov     dword [rsi-0x10], 0x83",
    "jmp     0x140080a8e",
    "{Case 0x58}",
    "mov     rax, qword [rsi+0x8]",
    "mov     r9, qword [rsi-0x58]",
    "mov     r8, qword [rsi-0x70]",
    "mov     rdx, qword [rsi-0x88]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsp+0x40], rax",
    "mov     eax, dword [rsi-0xa0]",
    "mov     dword [rsp+0x38], eax",
    "mov     rax, qword [rsi-0x10]",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsi-0x28]",
    "mov     qword [rsp+0x28], rax",
    "mov     rax, qword [rsi-0x40]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140062cac",
    "mov     qword [rsi-0xb8], rax",
    "jmp     0x140080a8e",
    "{Case 0x59}",
    "mov     rax, qword [rsi+0x8]",
    "mov     rbx, qword [rsp+0x110]",
    "mov     r9, qword [rsi-0x70]",
    "mov     r8, qword [rsi-0x88]",
    "mov     rdx, qword [rsi-0xa0]",
    "mov     qword [rsp+0x40], rax",
    "mov     eax, dword [rsi-0xb8]",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x38], eax",
    "mov     rax, qword [rsi-0x10]",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsi-0x40]",
    "mov     qword [rsp+0x28], rax",
    "mov     rax, qword [rsi-0x58]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140062cac",
    "mov     qword [rsi-0xd0], rax",
    "cmp     rax, rbp",
    "je      0x14007eef5",
    "{Case 0x5a}",
    "mov     rdx, qword [rsi-0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsp+0x40], rbp",
    "mov     dword [rsp+0x38], 0x200",
    "mov     qword [rsp+0x30], rbp",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140062cac",
    "{Case 0x5b}",
    "mov     rdx, qword [rsi-0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     rbx, qword [rsi-0x58]",
    "mov     qword [rsp+0x40], rbp",
    "mov     dword [rsp+0x38], 0x600",
    "mov     qword [rsp+0x30], rbp",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140062cac",
    "cmp     rbx, rbp",
    "je      0x14007ef9b",
    "{Case 0x5d, 0xe0, 0x10a}",
    "mov     dword [rsi+0x8], 0x2",
    "jmp     0x140080a8e",
    "{Case 0x60}",
    "mov     rdi, qword [rsp+0x110]",
    "mov     r8, qword [rsi-0x28]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, rdi",
    "call    sub_140044974",
    "mov     r12d, 0x1",
    "mov     qword [rsi-0x58], rax",
    "cmp     dword [rsi+0x10], ebp",
    "jbe     0x14007eff6",
    "{Case 0x61}",
    "mov     rbx, qword [rsp+0x110]",
    "xor     r8d, r8d",
    "mov     edx, 0xaf",
    "mov     rcx, qword [rbx]",
    "call    sub_14004397c",
    "mov     rcx, rbx",
    "mov     r8, rax",
    "{Case 0x62}",
    "mov     rdi, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "mov     edx, 0xaf",
    "call    sub_140043a14",
    "mov     rcx, qword [rdi]",
    "mov     edx, 0x3b",
    "lea     r9d, [rdx-0x3a]",
    "lea     r8, [rsi-0x28]",
    "mov     rbx, rax",
    "call    sub_140043858",
    "mov     r9, rbx",
    "mov     edx, 0x89",
    "mov     r8, rax",
    "mov     rcx, rdi",
    "call    sub_140043a14",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, rdi",
    "mov     r8, rax",
    "{Case 0x63, 0x6e, 0xf2-0xf3}",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "{Case 0x65}",
    "mov     rcx, qword [rsp+0x110]",
    "mov     edx, 0x78",
    "mov     rcx, qword [rcx]",
    "call    sub_140016ba8",
    "jmp     0x14007e851",
    "{Case 0x66}",
    "mov     rcx, qword [rsi+0x8]",
    "mov     qword [rsi-0x10], rcx",
    "cmp     rcx, rbp",
    "je      0x140080a8e",
    "{Case 0x67}",
    "mov     rdx, qword [rsi-0x10]",
    "cmp     rdx, rbp",
    "je      0x140080a8e",
    "{Case 0x69}",
    "mov     rax, qword [rsi+0x8]",
    "mov     rdx, qword [rsi-0x88]",
    "lea     rcx, [rsi-0x40]",
    "mov     qword [rsp+0x38], rax",
    "mov     rax, qword [rsi-0x10]",
    "lea     r9, [rsi-0x58]",
    "mov     qword [rsp+0x30], rax",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x70]",
    "call    std::_Work_stealing_deque<struct std::_Sort_work_item_impl<int64_t> >::_Push_bottom",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x28]",
    "mov     rdx, rax",
    "mov     qword [rsi-0x88], rax",
    "call    sub_140053668",
    "jmp     0x140080a8e",
    "{Case 0x6a}",
    "mov     rax, qword [rsi+0x8]",
    "mov     rbx, qword [rsp+0x110]",
    "mov     rdx, qword [rsi-0xb8]",
    "mov     qword [rsp+0x38], rax",
    "mov     rax, qword [rsi-0x10]",
    "lea     rcx, [rsi-0x28]",
    "mov     qword [rsp+0x30], rax",
    "lea     r9, [rsi-0x88]",
    "lea     r8, [rsi-0xa0]",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, rbx",
    "call    std::_Work_stealing_deque<struct std::_Sort_work_item_impl<int64_t> >::_Push_bottom",
    "mov     r8, qword [rsi-0x58]",
    "mov     qword [rsi-0xb8], rax",
    "cmp     rax, rbp",
    "je      0x14007f234",
    "{Case 0x6b}",
    "mov     rax, qword [rsi+0x8]",
    "lea     rcx, [rsi-0x28]",
    "mov     qword [rsp+0x38], rax",
    "mov     rax, qword [rsi-0x10]",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsi-0x58]",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], rcx",
    "{Case 0x6c}",
    "mov     rdx, qword [rsi-0x88]",
    "cmp     rdx, rbp",
    "jne     0x14007f2ba",
    "{Case 0x6d, 0x7b}",
    "mov     qword [rsi+0x20], rbp",
    "mov     dword [rsi+0x28], ebp",
    "jmp     0x140080a8e",
    "{Case 0x6f}",
    "mov     r12, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "xor     r9d, r9d",
    "mov     rcx, r12",
    "xor     edx, edx",
    "call    sub_1400532cc",
    "cmp     byte [r12+0x104], 0x2",
    "mov     rbx, rax",
    "jb      0x14007ed3f",
    "{Case 0x70}",
    "mov     rdi, qword [rsp+0x110]",
    "lea     r9, [rsi+0x8]",
    "lea     r8, [rsi-0x28]",
    "mov     rcx, rdi",
    "xor     edx, edx",
    "call    sub_1400532cc",
    "cmp     byte [rdi+0x104], 0x2",
    "mov     rbx, rax",
    "jb      0x14007ece5",
    "{Case 0x71}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "call    sub_1400532cc",
    "{Case 0x72}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r9, [rsi+0x8]",
    "lea     r8, [rsi-0x28]",
    "xor     edx, edx",
    "call    sub_1400532cc",
    "jmp     0x14007f06a",
    "{Case 0x73}",
    "mov     rdi, qword [rsp+0x110]",
    "lea     r9, [rsi-0x28]",
    "lea     r8, [rsi-0x58]",
    "mov     rcx, rdi",
    "xor     edx, edx",
    "call    sub_1400532cc",
    "mov     qword [rsi-0x58], rax",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "{Case 0x74}",
    "mov     rdi, qword [rsp+0x110]",
    "lea     r8, [rsi-0x28]",
    "xor     r9d, r9d",
    "mov     rcx, rdi",
    "xor     edx, edx",
    "call    sub_1400532cc",
    "mov     qword [rsi-0x28], rax",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "{Case 0x76}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     rdx, [rsi-0x10]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "call    sub_140062dec",
    "jmp     0x14007eaa2",
    "{Case 0x77}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x10]",
    "lea     rdx, [rsi-0x28]",
    "xor     r9d, r9d",
    "call    sub_140062dec",
    "jmp     0x14007ebdf",
    "{Case 0x78}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r9, [rsi-0x10]",
    "lea     r8, [rsi-0x28]",
    "lea     rdx, [rsi-0x40]",
    "call    sub_140062dec",
    "mov     dword [rsi-0x40], eax",
    "jmp     0x140080a8e",
    "{Case 0x79, 0x8d, 0x94, 0xd6, 0xeb, 0xfd, 0x110, 0x13c}",
    "mov     rax, qword [rsi+0x8]",
    "{Case 0x7c}",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "movdqu  xmmword [rsi-0x28], xmm0",
    "jmp     0x140080a8e",
    "{Case 0x7d}",
    "mov     r12d, 0x1",
    "mov     qword [rsi-0x10], rbp",
    "mov     dword [rsi-0x8], r12d",
    "jmp     0x140080a8e",
    "{Case 0x7e, 0x140}",
    "mov     rax, qword [rsi-0x10]",
    "jmp     0x14007ef51",
    "{Case 0x82}",
    "mov     r8, qword [rsi-0x28]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_140044974",
    "mov     qword [rsi-0x58], rax",
    "{Case 0x83}",
    "mov     r8, qword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "xor     edx, edx",
    "call    sub_140044974",
    "mov     qword [rsi-0x28], rax",
    "jmp     0x14007f5fd",
    "{Case 0x84, 0xc9, 0xcc}",
    "mov     dword [rsi+0x8], ebp",
    "jmp     0x140080a8e",
    "{Case 0x86, 0x89}",
    "or      dword [rsi+0x20], 0xffffffff",
    "jmp     0x140080a8e",
    "{Case 0x8f}",
    "mov     edx, 0x90",
    "{Case 0x90}",
    "mov     r9, qword [rsi+0x8]",
    "mov     r8, qword [rsi-0x28]",
    "{Case 0x91}",
    "mov     r9, qword [rsi-0x28]",
    "mov     r8, qword [rsi+0x8]",
    "jmp     0x14007f699",
    "{Case 0x92}",
    "mov     rdx, qword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x10]",
    "call    sub_140053668",
    "mov     r8, qword [rsi+0x8]",
    "mov     rdx, qword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140054c40",
    "jmp     0x140080a8e",
    "{Case 0x95}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     rdx, qword [rsi-0x58]",
    "lea     r8, [rsi-0x40]",
    "mov     rcx, rbx",
    "call    sub_140053668",
    "mov     rdx, qword [rsi-0x10]",
    "cmp     rdx, rbp",
    "je      0x14007f735",
    "{Case 0x96}",
    "mov     r8, qword [rsi+0x8]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_140044974",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x28]",
    "mov     rdx, rax",
    "mov     r9d, 0x1",
    "mov     qword [rsi-0x58], rax",
    "call    sub_140044b64",
    "jmp     0x140080a8e",
    "{Case 0x97}",
    "mov     r9, qword [rsi+0x8]",
    "mov     r8, qword [rsi-0x40]",
    "mov     rdx, qword [rsi-0x88]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_140044a2c",
    "jmp     0x14007f28b",
    "{Case 0x98}",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "xor     edx, edx",
    "call    sub_140044974",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x28]",
    "mov     rdx, rax",
    "mov     r9d, 0x1",
    "mov     rdi, rax",
    "call    sub_140044b64",
    "mov     qword [rsi-0x28], rdi",
    "jmp     0x140080a8e",
    "{Case 0x99}",
    "mov     r9, qword [rsi+0x8]",
    "mov     r8, qword [rsi-0x40]",
    "mov     rcx, qword [rsp+0x110]",
    "xor     edx, edx",
    "call    sub_140044a2c",
    "jmp     0x140080a8a",
    "{Case 0x9a}",
    "mov     rax, qword [rsi+0x8]",
    "mov     r8, qword [rsi-0x10]",
    "mov     qword [rsp+0x28], rax",
    "{Case 0x9b}",
    "mov     qword [rsp+0x28], rbp",
    "xor     r8d, r8d",
    "jmp     0x14007f81f",
    "{Case 0x9d}",
    "mov     rax, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     r9, qword [rsi-0x10]",
    "mov     rcx, qword [rcx]",
    "mov     r8, qword [rsi-0x70]",
    "mov     rdx, qword [rsi-0xa0]",
    "mov     qword [rsp+0x20], rax",
    "call    CDebugSStringEnum::Get",
    "mov     qword [rsi-0xe8], rax",
    "jmp     0x140080a8e",
    "{Case 0x9e}",
    "mov     rcx, qword [rsp+0x110]",
    "mov     r8, qword [rsi-0x28]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, qword [rcx]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x20], rbp",
    "call    CDebugSStringEnum::Get",
    "{Case 0x9f}",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, qword [rcx]",
    "xor     edx, edx",
    "mov     qword [rsp+0x20], rbp",
    "call    CDebugSStringEnum::Get",
    "jmp     0x14007ef51",
    "{Case 0xa3, 0xa6, 0xde, 0xe3}",
    "mov     rax, qword [rsi-0x10]",
    "jmp     0x14007f06a",
    "{Case 0xa4}",
    "mov     rdx, qword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "call    sub_14005300c",
    "jmp     0x14007f06a",
    "{Case 0xa5}",
    "mov     r14, qword [rsp+0x110]",
    "mov     edx, 0x10",
    "mov     rdi, qword [r14]",
    "mov     rcx, rdi",
    "call    sub_140016ba8",
    "mov     rbx, rax",
    "cmp     rax, rbp",
    "je      0x14007f98a",
    "{Case 0xa7-0xa8}",
    "mov     edx, 0x3b",
    "{Case 0xa9}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     r12d, 0x1",
    "lea     r8, [rsi-0x28]",
    "mov     rcx, qword [rbx]",
    "lea     edx, [r12+0x3a]",
    "mov     r9d, r12d",
    "call    sub_140043858",
    "mov     rcx, qword [rbx]",
    "lea     r8, [rsi+0x8]",
    "lea     edx, [r12+0x3a]",
    "mov     r9d, r12d",
    "mov     rbp, rax",
    "call    sub_140043858",
    "cmp     byte [rbx+0x104], 0x2",
    "mov     r12, rax",
    "jb      0x14007fa23",
    "{Case 0xaa}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     r12d, 0x1",
    "lea     r8, [rsi-0x58]",
    "mov     rcx, qword [rbx]",
    "lea     edx, [r12+0x3a]",
    "mov     r9d, r12d",
    "call    sub_140043858",
    "mov     rcx, qword [rbx]",
    "lea     r8, [rsi-0x28]",
    "lea     edx, [r12+0x3a]",
    "mov     r9d, r12d",
    "mov     r15, rax",
    "call    sub_140043858",
    "mov     rcx, qword [rbx]",
    "lea     r8, [rsi+0x8]",
    "lea     edx, [r12+0x3a]",
    "mov     r9d, r12d",
    "mov     r13, rax",
    "call    sub_140043858",
    "mov     r8, r13",
    "mov     edx, 0x89",
    "mov     r9, rax",
    "mov     rcx, rbx",
    "mov     r12, rax",
    "call    sub_140043a14",
    "cmp     byte [rbx+0x104], 0x2",
    "mov     qword [rsp+0x80], rax",
    "jb      0x14007fad8",
    "{Case 0xab-0xac}",
    "movzx   edx, word [rsi+0x2]",
    "jmp     0x14007f998",
    "{Case 0xad}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "mov     r9d, 0x1",
    "mov     rcx, qword [rcx]",
    "mov     edx, 0x96",
    "call    sub_140043858",
    "jmp     0x14007f4b5",
    "{Case 0xae}",
    "mov     rax, qword [rsi+0x8]",
    "cmp     byte [rax], 0x23",
    "jne     0x14007fba0",
    "{Case 0xaf}",
    "mov     rbx, qword [rsi-0x28]",
    "lea     r8, [rsi+0x8]",
    "cmp     dword [r8+0x8], ebp",
    "jbe     0x14007ece5",
    "{Case 0xb0}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     edx, 0x24",
    "lea     r8, [rsi-0x10]",
    "mov     rcx, qword [rbx]",
    "lea     r9d, [rdx-0x23]",
    "call    sub_140043858",
    "mov     rdx, qword [rsi-0x40]",
    "mov     r11, rax",
    "mov     qword [rsi-0x70], rax",
    "cmp     rax, rbp",
    "je      0x1400802b7",
    "{Case 0xb1}",
    "mov     r9d, dword [rsi-0x28]",
    "mov     rdx, qword [rsi-0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x58]",
    "call    sub_140043b8c",
    "jmp     0x140080a8a",
    "{Case 0xb2}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x40]",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "call    sub_140043b8c",
    "jmp     0x14007ef51",
    "{Case 0xb3}",
    "mov     rdi, qword [rsp+0x110]",
    "mov     r9d, dword [rsi-0x40]",
    "mov     rdx, qword [rsi-0x28]",
    "lea     r8, [rsi-0x70]",
    "mov     rcx, rdi",
    "call    sub_140043b8c",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rbx, rax",
    "cmp     rax, rbp",
    "je      0x14007fd08",
    "{Case 0xb4}",
    "mov     rdi, qword [rsp+0x110]",
    "lea     r8, [rsi-0x58]",
    "xor     r9d, r9d",
    "mov     rcx, rdi",
    "xor     edx, edx",
    "call    sub_140043b8c",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rbx, rax",
    "cmp     rax, rbp",
    "je      0x14007fd6f",
    "{Case 0xb5}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "call    sub_140043b8c",
    "jmp     0x14007f4b5",
    "{Case 0xb6}",
    "mov     rdi, qword [rsp+0x110]",
    "mov     r8, qword [rsi-0x10]",
    "mov     rdx, qword [rsi-0x40]",
    "mov     rcx, rdi",
    "call    sub_140044974",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, 0xac",
    "mov     rcx, rdi",
    "mov     rbx, rax",
    "call    sub_140043a14",
    "mov     qword [rsi-0x58], rax",
    "cmp     rax, rbp",
    "je      0x14007fdd4",
    "{Case 0xb7}",
    "mov     r8, qword [rsi+0x8]",
    "mov     rdx, qword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_140043af4",
    "jmp     0x14007f06a",
    "{Case 0xb8-0xbe}",
    "movzx   edx, word [rsi-0x16]",
    "mov     r9, qword [rsi+0x8]",
    "{Case 0xbf}",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "movdqu  xmmword [rsi-0x10], xmm0",
    "bts     dword [rsi-0x8], 0x1f",
    "jmp     0x140080a8e",
    "{Case 0xc0}",
    "mov     eax, dword [rsi-0x8]",
    "mov     rdi, qword [rsp+0x110]",
    "mov     r8, qword [rsi+0x8]",
    "mov     ebx, eax",
    "btr     eax, 0x1f",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "mov     dword [rsi-0x8], eax",
    "and     ebx, 0x80000000",
    "call    sub_140044974",
    "mov     r8, qword [rsi-0x28]",
    "mov     rcx, rdi",
    "mov     rdx, rax",
    "call    sub_140044974",
    "lea     r8, [rsi-0x10]",
    "xor     r9d, r9d",
    "mov     rdx, rax",
    "mov     rcx, rdi",
    "call    sub_140043b8c",
    "mov     qword [rsi-0x28], rax",
    "cmp     ebx, ebp",
    "je      0x14007fe96",
    "{Case 0xc1}",
    "mov     eax, dword [rsi-0x38]",
    "mov     rdi, qword [rsp+0x110]",
    "mov     r8, qword [rsi-0x28]",
    "mov     ebx, eax",
    "btr     eax, 0x1f",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "mov     dword [rsi-0x38], eax",
    "and     ebx, 0x80000000",
    "call    sub_140044974",
    "mov     r8, qword [rsi-0x58]",
    "mov     rcx, rdi",
    "mov     rdx, rax",
    "call    sub_140044974",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, rdi",
    "mov     rdx, rax",
    "call    sub_140044974",
    "lea     r8, [rsi-0x40]",
    "xor     r9d, r9d",
    "mov     rdx, rax",
    "mov     rcx, rdi",
    "call    sub_140043b8c",
    "mov     qword [rsi-0x58], rax",
    "cmp     ebx, ebp",
    "je      0x14007ff23",
    "{Case 0xc2}",
    "movzx   edx, word [rsi+0x2]",
    "mov     r8, qword [rsi-0x10]",
    "jmp     0x14007f67c",
    "{Case 0xc3}",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x33]",
    "jmp     0x14007fe0a",
    "{Case 0xc4}",
    "mov     rdi, qword [rsp+0x110]",
    "mov     r9, qword [rsi+0x8]",
    "mov     r8, qword [rsi-0x28]",
    "mov     rcx, rdi",
    "mov     edx, 0x2d",
    "call    sub_140043a14",
    "mov     rbx, rax",
    "mov     qword [rsi-0x28], rax",
    "mov     rax, qword [rsi+0x8]",
    "mov     rcx, qword [rdi]",
    "cmp     rbx, rbp",
    "je      0x140080a8e",
    "{Case 0xc5}",
    "mov     rdi, qword [rsp+0x110]",
    "mov     r9, qword [rsi+0x8]",
    "mov     r8, qword [rsi-0x40]",
    "mov     rcx, rdi",
    "mov     edx, 0xa6",
    "call    sub_140043a14",
    "mov     rbx, rax",
    "mov     qword [rsi-0x40], rax",
    "mov     rax, qword [rsi+0x8]",
    "mov     rcx, qword [rdi]",
    "cmp     rbx, rbp",
    "je      0x140080a8e",
    "{Case 0xc6-0xc7}",
    "movzx   edx, word [rsi-0x16]",
    "jmp     0x14007f678",
    "{Case 0xc8}",
    "movzx   eax, word [rsi-0x16]",
    "sub     ax, 0x67",
    "neg     ax",
    "sbb     edx, edx",
    "add     edx, 0xa9",
    "jmp     0x14007f678",
    "{Case 0xcb}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     r8, qword [rsi-0x28]",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "call    sub_140044974",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, rbx",
    "mov     rdx, rax",
    "call    sub_140044974",
    "mov     r8, qword [rsi-0x58]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x30]",
    "mov     rcx, rbx",
    "mov     rdi, rax",
    "call    sub_140043a14",
    "mov     qword [rsi-0x58], rax",
    "cmp     rax, rbp",
    "je      0x140080075",
    "{Case 0xce}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     rcx, rbx",
    "cmp     qword [rsi-0x10], rbp",
    "jne     0x1400800df",
    "{Case 0xcf}",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, 0x86",
    "call    sub_140043a14",
    "mov     qword [rsi-0x28], rax",
    "{Case 0xd0}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     r8, qword [rsi-0x58]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x31]",
    "mov     rcx, rbx",
    "call    sub_140043a14",
    "mov     r8, qword [rsi-0x10]",
    "{Case 0xd1}",
    "mov     rbx, qword [rsp+0x110]",
    "lea     r9, [rsi-0x10]",
    "lea     r8, [rsi-0x28]",
    "mov     rcx, rbx",
    "xor     edx, edx",
    "call    sub_1400532cc",
    "mov     qword [rsp+0x40], rbp",
    "mov     dword [rsp+0x38], ebp",
    "mov     qword [rsp+0x30], rbp",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "mov     r8, rax",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x28], rbp",
    "mov     rdi, rax",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140062cac",
    "mov     r8, qword [rsi+0x8]",
    "mov     r13, rax",
    "cmp     r8, rbp",
    "je      0x14008020b",
    "{Case 0xd2}",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "lea     edx, [r9+0x14]",
    "call    sub_140043a14",
    "mov     qword [rsi-0x40], rax",
    "jmp     0x14008013f",
    "{Case 0xd3}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     r8, qword [rsi-0x40]",
    "xor     r9d, r9d",
    "mov     rcx, rbx",
    "mov     edx, 0x98",
    "call    sub_140043a14",
    "mov     qword [rsi-0x58], rax",
    "cmp     rax, rbp",
    "je      0x1400802a2",
    "{Case 0xd4}",
    "mov     r8, qword [rsi-0x28]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_140044974",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsi-0x58], rax",
    "mov     rdx, rax",
    "jmp     0x14007f0c3",
    "{Case 0xd5}",
    "mov     r8, qword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "xor     edx, edx",
    "call    sub_140044974",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     rdx, rax",
    "mov     qword [rsi-0x40], rax",
    "call    sub_140044974",
    "jmp     0x14007ef51",
    "{Case 0xdb}",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "jmp     0x14007f061",
    "{Case 0xdc}",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "xor     edx, edx",
    "call    sub_140044974",
    "jmp     0x14007f4b5",
    "{Case 0xdf}",
    "mov     rdi, qword [rsp+0x110]",
    "lea     r8, [rsi-0x58]",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "lea     rbx, [rsi-0x100]",
    "call    sub_1400532cc",
    "mov     byte [rsp+0x50], bpl",
    "lea     r8, [rsi-0x88]",
    "mov     r9, rax",
    "mov     eax, dword [rsi-0xb8]",
    "lea     rdx, [rsi-0xa0]",
    "mov     dword [rsp+0x48], eax",
    "mov     rax, qword [rsi+0x8]",
    "mov     dword [rsp+0x40], ebp",
    "mov     qword [rsp+0x38], rax",
    "mov     eax, dword [rsi-0xe8]",
    "mov     qword [rsp+0x30], rbx",
    "mov     dword [rsp+0x28], eax",
    "mov     rax, qword [rsi-0x28]",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140051dd4",
    "cmp     byte [rdi+0x104], 0x2",
    "jb      0x140080a8e",
    "{Case 0xe4}",
    "mov     eax, dword [rsi+0x8]",
    "mov     r9d, dword [rsi-0x10]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x28]",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14007df58",
    "jmp     0x140080a8a",
    "{Case 0xe5}",
    "mov     eax, dword [rsi+0x8]",
    "mov     r9d, dword [rsi-0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x28]",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14007df58",
    "jmp     0x14007f06a",
    "{Case 0xe8}",
    "mov     r8d, dword [rsi-0x10]",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_140052d64",
    "jmp     0x140080a8e",
    "{Case 0xe9}",
    "xor     edx, edx",
    "{Case 0xea}",
    "lea     rdx, [rsi-0x10]",
    "jmp     0x140080455",
    "{Case 0xed}",
    "lea     r8, [rsi+0x8]",
    "lea     rdx, [rsi-0x10]",
    "xor     r9d, r9d",
    "{Case 0xee}",
    "lea     r9, [rsi+0x8]",
    "lea     r8, [rsi-0x28]",
    "lea     rdx, [rsi-0x40]",
    "jmp     0x14008047c",
    "{Case 0xef}",
    "lea     r9, [rsi-0x10]",
    "lea     r8, [rsi-0x40]",
    "lea     rdx, [rsi-0x58]",
    "jmp     0x14008047c",
    "{Case 0xf0}",
    "lea     r9, [rsi+0x8]",
    "lea     r8, [rsi-0x28]",
    "lea     rdx, [rsi-0x40]",
    "{Case 0xf1}",
    "lea     r9, [rsi-0x10]",
    "lea     r8, [rsi-0x40]",
    "lea     rdx, [rsi-0x58]",
    "jmp     0x1400804ba",
    "{Case 0xf4}",
    "mov     rax, qword [rsi-0x40]",
    "mov     rdx, qword [rsi-0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsp+0x80], rax",
    "mov     eax, dword [rsi+0x10]",
    "lea     r8, [rsp+0x80]",
    "add     eax, dword [rsi+0x8]",
    "sub     eax, dword [rsi-0x40]",
    "mov     dword [rsp+0x88], eax",
    "call    sub_14006b9d0",
    "jmp     0x140080a8e",
    "{Case 0xf5}",
    "mov     eax, dword [rsi-0xb8]",
    "mov     r9d, dword [rsi-0x70]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     dword [rsp+0x48], eax",
    "mov     eax, dword [rsi-0xe8]",
    "lea     rdi, [rsi-0x88]",
    "mov     dword [rsp+0x40], eax",
    "mov     rax, qword [rsi+0x8]",
    "lea     rbx, [rsi-0xa0]",
    "mov     qword [rsp+0x38], rax",
    "mov     rax, qword [rsi-0x28]",
    "mov     r8, rdi",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsi-0x50]",
    "mov     rdx, rbx",
    "mov     qword [rsp+0x28], rax",
    "mov     eax, dword [rsi-0x58]",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14006b4b8",
    "cmp     dword [rsi-0x80], ebp",
    "cmove   rdi, rbx",
    "movdqu  xmm0, xmmword [rdi]",
    "movdqu  xmmword [rsi-0xe8], xmm0",
    "jmp     0x140080a8e",
    "{Case 0xf7}",
    "mov     dword [rsi-0x10], 0x41",
    "jmp     0x140080a8e",
    "{Case 0xf8}",
    "mov     dword [rsi+0x20], 0x21",
    "jmp     0x140080a8e",
    "{Case 0xf9-0xfa}",
    "movzx   eax, word [rsi+0x2]",
    "mov     qword [rsi+0x10], rbp",
    "mov     dword [rsi+0x8], eax",
    "jmp     0x140080a8e",
    "{Case 0xfb}",
    "mov     rax, qword [rsi+0x8]",
    "mov     dword [rsi-0x28], 0x7d",
    "mov     qword [rsi-0x20], rax",
    "jmp     0x140080a8e",
    "{Case 0xfe}",
    "mov     rax, qword [rsi-0x28]",
    "mov     rcx, qword [rax+0x50]",
    "mov     rax, qword [rsi-0x10]",
    "mov     qword [rcx+0x48], rax",
    "mov     rcx, qword [rsi-0x28]",
    "mov     rax, qword [rsi-0x10]",
    "mov     qword [rcx+0x50], rax",
    "jmp     0x140080a8e",
    "{Case 0xff}",
    "mov     rax, qword [rsi-0x10]",
    "mov     qword [rax+0x50], rax",
    "jmp     0x140080a8e",
    "{Case 0x100}",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "lea     rdx, [rel data_1400f78a0]  {\"qualified table names are not al\u2026\"}",
    "movdqu  xmmword [rsi-0x28], xmm0",
    "{Case 0x101}",
    "lea     rdx, [rel data_1400f7900]  {\"the INDEXED BY clause is not all\u2026\"}",
    "jmp     0x1400805fd",
    "{Case 0x102}",
    "lea     rdx, [rel data_1400f7960]  {\"the NOT INDEXED clause is not al\u2026\"}",
    "jmp     0x1400805fd",
    "{Case 0x103}",
    "mov     rax, qword [rsi+0x8]",
    "mov     r9, qword [rsi-0x10]",
    "mov     r8, qword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsi-0xa0]",
    "mov     qword [rsp+0x28], rax",
    "mov     al, byte [rsi-0x88]",
    "lea     rdx, [rsi-0x70]",
    "mov     byte [rsp+0x20], al",
    "call    sub_14006bed0",
    "jmp     0x14007f89e",
    "{Case 0x104}",
    "mov     rax, qword [rsi+0x8]",
    "mov     r9, qword [rsi-0x28]",
    "mov     r8, qword [rsi-0x40]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsp+0x38], rax",
    "mov     rax, qword [rsi-0xa0]",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsi-0x10]",
    "lea     rdx, [rsi-0x58]",
    "mov     qword [rsp+0x28], rax",
    "mov     al, byte [rsi-0x88]",
    "mov     byte [rsp+0x20], al",
    "call    sub_14006bdf0",
    "jmp     0x14007f89e",
    "{Case 0x105}",
    "mov     r12, qword [rsp+0x110]",
    "mov     rax, qword [rsi+0x8]",
    "mov     r9, qword [rsi-0x70]",
    "mov     rbx, qword [rsi-0x10]",
    "mov     r13, qword [r12]",
    "lea     r8, [rsi-0x40]",
    "mov     rcx, r12",
    "mov     dl, 0x7c",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14006bd10",
    "mov     rdi, rax",
    "cmp     rax, rbp",
    "je      0x14008070f",
    "{Case 0x106}",
    "mov     rcx, qword [rsp+0x110]",
    "mov     r9, qword [rsi+0x8]",
    "mov     r8, qword [rsi-0x28]",
    "mov     rcx, qword [rcx]",
    "mov     rdx, qword [rsi-0x10]",
    "call    sub_14006bc5c",
    "jmp     0x14007f06a",
    "{Case 0x107}",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "lea     edx, [r9+0x47]",
    "call    sub_140043a14",
    "mov     qword [rsi-0x40], rax",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "{Case 0x108}",
    "mov     rcx, qword [rsp+0x110]",
    "mov     edx, 0x47",
    "lea     r8, [rsi-0x10]",
    "mov     rcx, qword [rcx]",
    "lea     r9d, [rdx-0x46]",
    "call    sub_140043858",
    "mov     qword [rsi-0x70], rax",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "{Case 0x10b}",
    "mov     dword [rsi+0x8], 0x3",
    "jmp     0x140080a8e",
    "{Case 0x10c}",
    "mov     r8d, dword [rsi-0x10]",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14006c020",
    "jmp     0x140080a8e",
    "{Case 0x10d}",
    "mov     rax, qword [rsi+0x8]",
    "mov     r9, qword [rsi-0x40]",
    "lea     r8, [rel data_1400d74d0]",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsi-0x10]",
    "mov     edx, 0x18",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], r9",
    "{Case 0x10e}",
    "mov     r9, qword [rsi+0x8]",
    "lea     r8, [rel data_1400d7480]",
    "mov     edx, 0x19",
    "mov     qword [rsp+0x30], r9",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbp",
    "jmp     0x1400807f8",
    "{Case 0x111}",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_140062358",
    "cmp     eax, ebp",
    "jne     0x140080a8e",
    "{Case 0x112}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "lea     rdx, [rsi-0x10]",
    "call    sub_140053dcc",
    "jmp     0x140080a8e",
    "{Case 0x113}",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "{Case 0x114}",
    "lea     r8, [rsi+0x8]",
    "lea     rdx, [rsi-0x10]",
    "jmp     0x140080873",
    "{Case 0x115}",
    "mov     rdx, qword [rsi-0x40]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "call    sub_1400497c4",
    "jmp     0x140080a8e",
    "{Case 0x116}",
    "mov     rcx, qword [rsp+0x110]",
    "lea     rdx, [rsi-0x10]",
    "mov     eax, dword [rcx+0xf8]",
    "add     eax, dword [rcx+0xf0]",
    "sub     eax, dword [rdx]",
    "mov     dword [rsi-0x8], eax",
    "call    sub_140049b30",
    "jmp     0x140080a8e",
    "{Case 0x117}",
    "mov     rcx, qword [rsp+0x110]",
    "mov     r12d, 0x1",
    "add     byte [rcx+0x24], r12b",
    "mov     rax, qword [rcx]",
    "add     dword [rax+0x168], r12d",
    "mov     rdx, qword [rsi+0x8]",
    "call    sub_140049e5c",
    "jmp     0x140080a8e",
    "{Case 0x118}",
    "mov     rdx, qword [rsi-0x70]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r9, [rsi+0x8]",
    "lea     r8, [rsi-0x28]",
    "call    sub_14004a028",
    "jmp     0x140080a8e",
    "{Case 0x119}",
    "xor     edx, edx",
    "{Case 0x11a}",
    "lea     rdx, [rsi+0x8]",
    "jmp     0x14008091a",
    "{Case 0x11b}",
    "mov     eax, dword [rsi-0x58]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r9, [rsi+0x8]",
    "lea     r8, [rsi-0x28]",
    "lea     rdx, [rsi-0x40]",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14006fb60",
    "jmp     0x140080a8e",
    "{Case 0x11c}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     rcx, rbx",
    "call    sub_14006fc6c",
    "mov     qword [rbx+0x150], rbp",
    "mov     dword [rbx+0x158], ebp",
    "jmp     0x140080a8e",
    "{Case 0x11d-0x11f}",
    "mov     rcx, qword [rsp+0x110]",
    "cmp     qword [rcx+0x150], rbp",
    "jne     0x14008099a",
    "{Case 0x120-0x121}",
    "mov     rdx, qword [rsi+0x8]",
    "cmp     rdx, rbp",
    "je      0x140080a8e",
    "{Case 0x122}",
    "mov     rax, qword [rsi-0x10]",
    "mov     r9, qword [rsi-0x58]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x70]",
    "xor     edx, edx",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140054040",
    "{Case 0x123}",
    "mov     rax, qword [rsi-0x10]",
    "mov     r9, qword [rsi-0x58]",
    "mov     rdx, qword [rsi-0xa0]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi-0x70]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140054040",
    "jmp     0x14007f89e",
    "{Case 0x125}",
    "mov     r8, qword [rsi-0x28]",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14007b43c",
    "mov     r11, qword [rsi+0x8]",
    "mov     rax, qword [rsi-0x28]",
    "mov     qword [r11+0x40], rax",
    "{Case 0x81, 0x8b}",
    "mov     rax, qword [rsi+0x8]",
    "jmp     0x14007f06a",
    "{Case 0x126}",
    "cmp     qword [rsi-0x10], rbp",
    "je      0x140080a86",
    "{Case 0x142}",
    "mov     rax, qword [rsi-0x10]",
    "{Case 0x127}",
    "mov     r9, qword [rsi-0x10]",
    "mov     r8, qword [rsi-0x28]",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_14007b3c4",
    "jmp     0x140080a8a",
    "{Case 0x128}",
    "mov     r9, qword [rsi-0x10]",
    "mov     r8, qword [rsi-0x28]",
    "lea     rbx, [rsi-0x70]",
    "{Case 0x129}",
    "mov     rbx, qword [rsi+0x8]",
    "mov     rdx, qword [rsi-0x10]",
    "cmp     rbx, rbp",
    "je      0x140080b72",
    "{Case 0x12a}",
    "mov     r9, qword [rsi-0x10]",
    "lea     rbx, [rsi-0x58]",
    "{Case 0x12c}",
    "lea     rbx, [rsi-0x10]",
    "xor     r9d, r9d",
    "jmp     0x140080b98",
    "{Case 0x12d}",
    "mov     rdi, qword [rsp+0x110]",
    "mov     edx, 0x90",
    "mov     rcx, qword [rdi]",
    "call    sub_140016ba8",
    "mov     rbx, rax",
    "cmp     rax, rbp",
    "je      0x14007e812",
    "{Case 0x12e}",
    "mov     al, byte [rsi+0x8]",
    "mov     r9, qword [rsi-0x8]",
    "mov     r8d, dword [rsi-0x10]",
    "mov     edx, dword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     byte [rsp+0x30], al",
    "mov     qword [rsp+0x28], rbp",
    "mov     dword [rsp+0x20], 0x55",
    "call    sub_14007b2b4",
    "jmp     0x14007f06a",
    "{Case 0x12f}",
    "mov     al, byte [rsi+0x8]",
    "mov     r9, qword [rsi-0x38]",
    "mov     r8d, dword [rsi-0x40]",
    "mov     edx, dword [rsi-0x70]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     byte [rsp+0x30], al",
    "mov     rax, qword [rsi-0x8]",
    "mov     qword [rsp+0x28], rax",
    "mov     eax, dword [rsi-0x10]",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14007b2b4",
    "jmp     0x140080a04",
    "{Case 0x132, 0x134, 0x136}",
    "movzx   eax, word [rsi-0x16]",
    "mov     qword [rsp+0x88], rbp",
    "mov     dword [rsp+0x80], eax",
    "{Case 0x135}",
    "movzx   eax, word [rsi+0x2]",
    "mov     dword [rsp+0x80], eax",
    "mov     rax, qword [rsi-0x10]",
    "mov     qword [rsp+0x88], rax",
    "jmp     0x140080c8d",
    "{Case 0x137}",
    "mov     byte [rsi+0x20], bpl",
    "jmp     0x140080a8e",
    "{Case 0x138}",
    "mov     al, byte [rsi+0x8]",
    "{Case 0x139-0x13a}",
    "mov     al, byte [rsi-0x16]",
    "jmp     0x140080cc0",
    "{Case 0x13b}",
    "mov     al, byte [rsi+0x2]",
    "mov     byte [rsi+0x8], al",
    "jmp     0x140080a8e",
    "{Case 0x13d}",
    "mov     rcx, qword [rsi+0x8]",
    "mov     rax, qword [rsi-0x10]",
    "mov     qword [rcx+0x48], rax",
    "jmp     0x14007f5ac",
    "{Case 0x13f}",
    "mov     rdi, qword [rsp+0x110]",
    "mov     edx, 0x90",
    "mov     rcx, qword [rdi]",
    "call    sub_140016ba8",
    "mov     rbx, rax",
    "cmp     rax, rbp",
    "je      0x140080d17",
    "{Case 0x141}",
    "mov     rbx, qword [rsp+0x110]",
    "mov     edx, 0x90",
    "mov     rcx, qword [rbx]",
    "call    sub_140016ba8",
    "mov     qword [rsi-0x10], rax",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "mov     rbx, qword [rsp+0x100]",
    "add     rsp, 0xb0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_140065300",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsi+0x8]",
    "call    sub_14005377c",
    "jmp     0x140080a8e",
    "mov     rbx, qword [r13+0x130]",
    "cmp     rbx, rbp",
    "je      0x140080a8e",
    "mov     rcx, qword [rbx]",
    "mov     r8d, 0x1",
    "call    sub_140062ba0",
    "jmp     0x140080a8e",
    "mov     r9, qword [rsi+0x8]",
    "mov     r8d, dword [rsi+0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     rdx, [rel data_1400f7858]  {\"unknown table option: %.*s\"}",
    "mov     dword [rsi-0x10], ebp",
    "call    sub_1400191b8",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsi+0x8]",
    "lea     rdx, [rel data_1400f2314]  {\"rowid\"}",
    "mov     r8d, 0x5",
    "call    sub_1400192e8",
    "cmp     eax, ebp",
    "jne     0x14007e7d1",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14004f0b4",
    "jmp     0x140080a8e",
    "mov     rdx, qword [rsi+0x8]",
    "mov     r8, qword [rsi+0x8]",
    "mov     r9d, dword [rsi+0x10]",
    "mov     rdx, rbx",
    "add     r9, r8",
    "jmp     0x14007e88f",
    "mov     rcx, rax",
    "call    sub_140044c7c",
    "mov     r12d, 0x1",
    "cmp     word [r8+0x46], r12w",
    "jl      0x140080a8e",
    "mov     rcx, qword [rcx+0x20]",
    "cmp     rcx, rbp",
    "je      0x140080a8e",
    "mov     dword [rsi-0x10], eax",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14004f1d8",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "call    sub_140051dd4",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14004f450",
    "jmp     0x140080a8e",
    "cmp     rcx, rbp",
    "je      0x140080a8e",
    "mov     r9d, dword [rsi-0x10]",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_1400511d8",
    "jmp     0x140080a8e",
    "mov     rdx, qword [rsi+0x8]",
    "cmp     rdx, rbp",
    "je      0x140080a8e",
    "mov     rdx, qword [rsi-0x10]",
    "mov     rcx, qword [rcx]",
    "call    sub_140054184",
    "mov     rax, qword [rsi-0x10]",
    "mov     rdx, rbx",
    "mov     qword [rbx+0x68], rax",
    "call    sub_14007de00",
    "jmp     0x14007ece5",
    "mov     rdx, qword [rsi-0x10]",
    "mov     rcx, qword [rcx]",
    "call    sub_140054184",
    "mov     rax, qword [rsi-0x10]",
    "mov     rdx, rbx",
    "mov     qword [rbx+0x68], rax",
    "call    sub_14007de00",
    "jmp     0x14007ed1d",
    "mov     qword [rsi+0x8], rbx",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "mov     rdx, rbx",
    "call    sub_14007de00",
    "cmp     rdi, rbp",
    "je      0x14007ece5",
    "cmp     qword [rbx+0x50], rbp",
    "je      0x14007edd0",
    "mov     rdx, qword [rsi-0x28]",
    "mov     rdi, qword [rbx]",
    "cmp     rdx, rbp",
    "je      0x140080a8e",
    "mov     rcx, qword [rsi-0x28]",
    "mov     qword [rax+0x78], rcx",
    "jmp     0x140080a8e",
    "cmp     rax, rbp",
    "je      0x14007fd66",
    "btr     dword [rbx+0xc], 0xa",
    "mov     rbx, qword [rsi-0x58]",
    "mov     r13, qword [rsi-0x10]",
    "mov     r14, qword [rsi-0x40]",
    "mov     rdi, qword [rdi]",
    "cmp     rbx, rbp",
    "je      0x140080a8e",
    "lea     r8, [rsi+0x8]",
    "mov     r9d, r12d",
    "mov     rdx, rax",
    "mov     rcx, rdi",
    "call    sub_140044b64",
    "mov     qword [rsi-0x58], rax",
    "mov     qword [rsi+0x20], rax",
    "jmp     0x140080a8e",
    "mov     eax, dword [rcx]",
    "mov     r12d, 0x1",
    "sub     eax, r12d",
    "cmp     eax, ebp",
    "movsxd  rdx, eax",
    "jle     0x14007f138",
    "cmp     dword [rdx], ebp",
    "jle     0x140080a8e",
    "cmp     r8, rbp",
    "je      0x140080a8e",
    "mov     ecx, dword [rax]",
    "dec     ecx",
    "movsxd  rdx, ecx",
    "imul    rdx, rdx, 0x70",
    "or      dword [rdx+rax+0x48], 0x4",
    "mov     qword [rdx+rax+0x68], r8",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsi-0x58]",
    "mov     r12d, 0x1",
    "cmp     dword [rcx], r12d",
    "jne     0x14007f377",
    "cmp     dword [rsi-0x20], ebp",
    "jne     0x14007f2ba",
    "cmp     rax, rbp",
    "je      0x14007ed3f",
    "mov     qword [rsi-0x28], rbx",
    "jmp     0x140080a8e",
    "cmp     rax, rbp",
    "je      0x14007ece5",
    "mov     qword [rsi-0x28], rax",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rdi]",
    "lea     rdx, [rsi+0x8]",
    "call    sub_14004e64c",
    "mov     rcx, qword [rsi-0x58]",
    "mov     rcx, qword [rdi]",
    "lea     rdx, [rsi+0x8]",
    "call    sub_14004e64c",
    "mov     rcx, qword [rsi-0x28]",
    "jmp     0x14007f511",
    "mov     dword [rsi-0x28], eax",
    "jmp     0x140080a8e",
    "mov     qword [rsi-0x40], rax",
    "jmp     0x140080a8e",
    "mov     ecx, dword [rax]",
    "dec     ecx",
    "cmp     edx, 0xffffffff",
    "cmove   edx, ebp",
    "movsxd  rcx, ecx",
    "lea     r8, [rcx+rcx*4]",
    "mov     byte [rax+r8*8+0x20], dl",
    "cmp     r9d, 0xffffffff",
    "je      0x140080a8e",
    "mov     r9d, dword [rsi+0x8]",
    "mov     edx, dword [rsi-0x10]",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "mov     qword [rsi-0x10], rax",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "mov     edx, 0x90",
    "call    sub_140043a14",
    "jmp     0x14007ef51",
    "mov     eax, dword [rsi-0x70]",
    "mov     r9, qword [rsi+0x8]",
    "mov     r8, qword [rsi-0x10]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     qword [rsp+0x38], rbp",
    "mov     qword [rsp+0x30], rbp",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x28], rbp",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14006cd50",
    "jmp     0x140080a8e",
    "mov     rax, qword [rbx]",
    "mov     ecx, dword [rax+0x84]",
    "cmp     dword [rdx], ecx",
    "jle     0x14007f735",
    "mov     qword [rsi-0x88], rax",
    "jmp     0x140080a8e",
    "mov     eax, dword [rsi-0x70]",
    "mov     r9, qword [rsi-0x28]",
    "mov     rdx, qword [rsi-0x40]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14005a874",
    "jmp     0x140080a8e",
    "mov     qword [rsi+0x8], rbp",
    "jmp     0x140080a8e",
    "mov     rdx, qword [rbx]",
    "lea     r9, [rax+0x8]",
    "lea     rax, [rsp+0xf8]",
    "mov     r8d, 0x10",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140052f78",
    "cmp     dword [rsp+0xf8], ebp",
    "mov     rcx, rdi",
    "mov     qword [rbx], rax",
    "jge     0x14007f94a",
    "mov     qword [rsi+0x8], rax",
    "jmp     0x140080a8e",
    "mov     r9, r12",
    "mov     r8, rbp",
    "mov     edx, 0x89",
    "mov     rcx, rbx",
    "lea     r8, [rsi+0x8]",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_14004a2b8",
    "lea     r8, [rsi-0x28]",
    "mov     rdx, rbp",
    "mov     rcx, rbx",
    "call    sub_14004a2b8",
    "mov     r9, rax",
    "mov     r8, r15",
    "mov     edx, 0x89",
    "lea     r8, [rsi+0x8]",
    "mov     rdx, r12",
    "mov     rcx, rbx",
    "call    sub_14004a2b8",
    "lea     r8, [rsi-0x28]",
    "mov     rdx, r13",
    "mov     rcx, rbx",
    "call    sub_14004a2b8",
    "mov     rax, qword [rsp+0x80]",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "lea     r8, [rsp+0x80]",
    "movdqu  xmmword [rsp+0x80], xmm0",
    "call    sub_14007de5c",
    "jmp     0x14007f4b5",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     ebx, dword [rsi+0x10]",
    "lea     r8, [rsp+0x80]",
    "mov     edx, 0x97",
    "movdqu  xmmword [rsp+0x80], xmm0",
    "call    sub_14007de5c",
    "mov     rcx, qword [rsp+0x110]",
    "mov     r8d, ebx",
    "mov     rdx, rax",
    "mov     qword [rsi+0x8], rax",
    "call    sub_140043c40",
    "jmp     0x140080a8e",
    "movzx   eax, byte [rax+0x1]",
    "test    byte [rax+r10+0xd6500], 0x4",
    "je      0x14007fba0",
    "mov     rcx, qword [rsp+0x110]",
    "mov     edx, 0x6d",
    "mov     rcx, qword [rcx]",
    "lea     r9d, [rdx-0x6c]",
    "call    sub_140043858",
    "cmp     rax, rbp",
    "je      0x14007ece5",
    "cmp     rdx, rbp",
    "je      0x140080a8e",
    "cmp     rdx, rbp",
    "je      0x140080a8e",
    "mov     rcx, qword [rdi]",
    "call    sub_14007b17c",
    "bts     dword [rax+0x4], 0x18",
    "mov     qword [rax+0x40], rdx",
    "mov     qword [rdx+0x70], rax",
    "test    byte [rax+0x4], 0x2",
    "je      0x14007fd10",
    "mov     rcx, qword [rdi]",
    "call    sub_14007b17c",
    "jmp     0x14007fd66",
    "bts     dword [rax+0x4], 0x18",
    "mov     qword [rax+0x40], rdx",
    "mov     qword [rdx+0x70], rax",
    "test    byte [rax+0x4], 0x2",
    "je      0x14007fd66",
    "cmp     rbx, rbp",
    "je      0x140080a8e",
    "mov     qword [rax+0x20], rbx",
    "jmp     0x140080a8e",
    "call    sub_140043a14",
    "jmp     0x14007f06a",
    "mov     rax, qword [rsi-0x28]",
    "xor     r9d, r9d",
    "mov     r8, rax",
    "mov     rcx, rdi",
    "lea     edx, [r9+0x13]",
    "call    sub_140043a14",
    "mov     qword [rsi-0x28], rax",
    "mov     rax, qword [rsi-0x58]",
    "jmp     0x14007fe9a",
    "xor     r9d, r9d",
    "mov     r8, rax",
    "mov     rcx, rdi",
    "lea     edx, [r9+0x13]",
    "call    sub_140043a14",
    "mov     qword [rsi-0x58], rax",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "call    sub_140043a14",
    "jmp     0x14007f5b0",
    "mov     r8, qword [rsi-0x28]",
    "mov     rcx, qword [rsp+0x110]",
    "jmp     0x14007fa31",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "mov     r8, qword [rsi+0x8]",
    "cmp     rdi, rbp",
    "je      0x140080085",
    "mov     qword [rax+0x20], rdi",
    "jmp     0x140080085",
    "mov     r8, qword [rsi-0x58]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x31]",
    "call    sub_140043a14",
    "mov     qword [rsi-0x58], rax",
    "cmp     rax, rbp",
    "je      0x140080111",
    "mov     rdx, qword [rsi-0x58]",
    "call    sub_140043e98",
    "cmp     dword [rsi-0x40], ebp",
    "mov     rcx, qword [rbx]",
    "lea     rax, [rel data_1400f4be0]",
    "lea     r8, [rel data_1400f4a1c]",
    "mov     edx, 0x96",
    "cmovne  r8, rax",
    "call    sub_14004397c",
    "jmp     0x140080a8a",
    "cmp     dword [rsi-0x40], ebp",
    "je      0x140080a8e",
    "mov     r8, qword [rsi-0x58]",
    "xor     r9d, r9d",
    "mov     rcx, rbx",
    "lea     edx, [r9+0x31]",
    "call    sub_140043a14",
    "mov     r8, r13",
    "jmp     0x140080177",
    "mov     rcx, rax",
    "neg     rcx",
    "sbb     rdx, rdx",
    "and     rdx, rdi",
    "je      0x140080200",
    "mov     r8, qword [rsi-0x10]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     rdx, rax",
    "call    sub_140043ab8",
    "jmp     0x140080a8e",
    "mov     rdx, qword [rsi-0x28]",
    "cmp     rdx, rbp",
    "je      0x1400802b3",
    "mov     r8, qword [rsi-0x10]",
    "cmp     r8, rbp",
    "je      0x140080285",
    "call    sub_140044974",
    "jmp     0x140080a8a",
    "mov     rdx, qword [rsi-0x28]",
    "call    sub_140044974",
    "mov     rdx, qword [rdi+0x138]",
    "cmp     rdx, rbp",
    "je      0x140080a8e",
    "mov     r8, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14006f1d0",
    "jmp     0x140080a8e",
    "mov     dword [rsp+0x20], ebp",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14005e7e4",
    "jmp     0x140080a8e",
    "mov     r12d, 0x1",
    "mov     dword [rsp+0x20], r12d",
    "jmp     0x140080480",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsi-0xa0], rax",
    "jmp     0x140080a8e",
    "cmp     rbx, rbp",
    "je      0x14008071f",
    "cmp     byte [r12+0x104], 0x2",
    "jb      0x1400806eb",
    "mov     byte [rax+0x1], 0x4",
    "jmp     0x140080a8e",
    "mov     cl, byte [rsi-0x40]",
    "mov     byte [rax+0x1], cl",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14004d374",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "xor     edx, edx",
    "call    sub_140053d58",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14004c910",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "call    sub_14006fcb4",
    "jmp     0x140080a8e",
    "mov     eax, dword [rsi+0x10]",
    "sub     eax, dword [rcx+0x150]",
    "add     eax, dword [rsi+0x8]",
    "mov     rax, qword [rsi+0x8]",
    "mov     qword [rcx+0x150], rax",
    "mov     eax, dword [rsi+0x10]",
    "jmp     0x1400809a6",
    "mov     rcx, qword [rsp+0x110]",
    "mov     rax, qword [rcx+0x178]",
    "mov     qword [rdx+0x8], rax",
    "mov     qword [rcx+0x178], rdx",
    "mov     qword [rcx+0x180], rdx",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "mov     r8d, dword [rsi-0x50]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, qword [rcx]",
    "call    sub_140016e18",
    "mov     rcx, qword [rsi-0x10]",
    "mov     qword [rcx], rax",
    "cmp     rdx, rbp",
    "je      0x14007ed1d",
    "mov     qword [rbx+0x10], rbp",
    "mov     qword [rbx+0x18], rdx",
    "jmp     0x14007ed1d",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_14007b3c4",
    "mov     qword [rbx], rax",
    "jmp     0x140080a8e",
    "xor     r8d, r8d",
    "jmp     0x140080b3a",
    "mov     byte [rax+0x20], 0x59",
    "mov     byte [rax+0x21], 0x5a",
    "mov     byte [rax+0x22], 0x55",
    "mov     rax, qword [rdi]",
    "mov     ecx, 0x42",
    "test    byte [rax+0x5c], 0x2",
    "lea     r12d, [rcx-0x41]",
    "movzx   eax, bpl",
    "cmovne  eax, ecx",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "mov     byte [rbx+0x24], al",
    "mov     byte [rbx+0x23], r12b",
    "call    sub_14007b248",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "mov     qword [rbx+0x30], rax",
    "call    sub_14007b248",
    "mov     rbp, rbx",
    "mov     qword [rbx+0x28], rax",
    "jmp     0x14007e812",
    "mov     qword [rsi-0x70], rax",
    "jmp     0x140080a8e",
    "movdqu  xmmword [rsi-0x10], xmm0",
    "jmp     0x140080a8e",
    "movdqu  xmm0, xmmword [rsp+0x80]",
    "jmp     0x14007f0d2",
    "mov     byte [rsi-0x10], al",
    "jmp     0x140080a8e",
    "mov     rdx, qword [rsi+0x8]",
    "cmp     rdx, rbp",
    "je      0x14007ed3f",
    "mov     byte [rax+0x20], 0xa1",
    "mov     rcx, qword [rsi+0x8]",
    "mov     qword [rax+0x48], rcx",
    "jmp     0x14007ed3f",
    "mov     r8d, dword [rsi+0x10]",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rcx, qword [rbx]",
    "call    sub_140016e18",
    "mov     rcx, qword [rsi-0x10]",
    "mov     qword [rcx], rax",
    "jmp     0x140080a8e",
    "mov     r12d, 0x1",
    "mov     r9d, ebx",
    "mov     rcx, rax",
    "mov     r8d, r12d",
    "mov     edx, r12d",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "jmp     0x140080a8e",
    "mov     r14, qword [rbx]",
    "mov     edx, 0x5f",
    "mov     rcx, r14",
    "call    qword [rel strrchr]",
    "mov     r12, rax",
    "cmp     rax, rbp",
    "je      0x14007e482",
    "mov     dword [rsi-0x10], 0x60",
    "jmp     0x140080a8e",
    "movsx   eax, word [r8+0x46]",
    "sub     eax, r12d",
    "movsxd  rcx, eax",
    "mov     al, byte [rsi+0x8]",
    "shl     rcx, 0x5",
    "add     rcx, qword [r8+0x8]",
    "mov     byte [rcx+0x18], al",
    "bts     dword [r8+0x40], 0x9",
    "test    byte [rcx+0x1b], 0x8",
    "je      0x140080a8e",
    "mov     al, byte [rsi+0x8]",
    "mov     byte [rcx+0x2c], al",
    "jmp     0x140080a8e",
    "mov     qword [rsi-0x40], rbx",
    "jmp     0x140080a8e",
    "mov     rcx, qword [r13]",
    "mov     r8d, 0x1",
    "mov     rdx, rdi",
    "call    sub_140062ba0",
    "jmp     0x14007ece5",
    "cmp     rbx, rbp",
    "je      0x14007ee0a",
    "mov     rdx, rbx",
    "mov     rcx, r13",
    "mov     dword [rsp+0x88], ebp",
    "call    sub_14007de00",
    "mov     qword [rsp+0x38], rbp",
    "lea     rax, [rsp+0x80]",
    "mov     qword [rsp+0x30], rbp",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, r13",
    "mov     qword [rsp+0x28], rbx",
    "mov     qword [rsp+0x20], rax",
    "call    std::_Work_stealing_deque<struct std::_Sort_work_item_impl<int64_t> >::_Push_bottom",
    "mov     qword [rsp+0x40], rbp",
    "mov     dword [rsp+0x38], ebp",
    "mov     qword [rsp+0x30], rbp",
    "xor     r9d, r9d",
    "mov     r8, rax",
    "xor     edx, edx",
    "mov     rcx, r13",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140062cac",
    "mov     rbx, rax",
    "mov     rbx, qword [rdx+0x40]",
    "mov     rcx, rdi",
    "call    sub_14007b17c",
    "mov     rdx, rbx",
    "cmp     rbx, rbp",
    "jne     0x14007ef05",
    "mov     qword [rsi-0x58], rbx",
    "jmp     0x140080a8e",
    "mov     byte [rax+0x8], 0x83",
    "mov     qword [rax+0x50], rbx",
    "jmp     0x140080a8a",
    "mov     eax, dword [rbx]",
    "sub     eax, r12d",
    "cdqe    ",
    "lea     r12, [rax+rax*4]",
    "mov     rdx, qword [rbx+r12*8+0x18]",
    "cmp     rdx, rbp",
    "je      0x14007f02b",
    "mov     byte [rcx+0x44], bpl",
    "jmp     0x140080a8e",
    "mov     rax, rdx",
    "imul    rax, rax, 0x70",
    "lea     r8, [rax+rcx+0x44]",
    "movsxd  rcx, dword [rdx]",
    "mov     al, byte [rsi+0x8]",
    "imul    rcx, rcx, 0x70",
    "mov     byte [rcx+rdx-0x2c], al",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rbx]",
    "mov     rdx, r8",
    "cmp     rcx, rbp",
    "je      0x14007f3ab",
    "mov     rax, qword [rsi+0x8]",
    "mov     rbx, qword [rsp+0x110]",
    "lea     rcx, [rsi-0x28]",
    "mov     qword [rsp+0x38], rax",
    "mov     rax, qword [rsi-0x10]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x30], rax",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, rbx",
    "xor     r8d, r8d",
    "call    std::_Work_stealing_deque<struct std::_Sort_work_item_impl<int64_t> >::_Push_bottom",
    "mov     r11, rax",
    "mov     qword [rsi-0x88], rax",
    "cmp     rax, rbp",
    "je      0x14007f366",
    "cmp     qword [rsi-0x10], rbp",
    "jne     0x14007f2ba",
    "mov     rdx, qword [rax+0x18]",
    "lea     r8, [rsi+0x8]",
    "mov     rcx, r12",
    "call    sub_14004a2b8",
    "jmp     0x14007ed3f",
    "mov     rdx, qword [rax+0x18]",
    "lea     r8, [rsi+0x8]",
    "mov     rcx, rdi",
    "call    sub_14004a2b8",
    "jmp     0x14007ece5",
    "mov     qword [rcx+0x20], rax",
    "jmp     0x140080a8e",
    "or      dword [rax+r8*8+0x24], 0x10",
    "cmp     edx, r9d",
    "je      0x140080a8e",
    "lea     r8, [rel data_1400f7878]  {\"set list\"}",
    "lea     rdx, [rel data_1400f4ab0]  {\"too many columns in %s\"}",
    "mov     rcx, rbx",
    "call    sub_1400191b8",
    "movsxd  r12, dword [rsp+0xf8]",
    "lea     rdx, [rsi+0x8]",
    "add     r12, r12",
    "call    sub_14004e64c",
    "mov     rdx, qword [rbx]",
    "mov     qword [rdx+r12*8], rax",
    "cmp     byte [r14+0x104], 0x2",
    "jb      0x14007f987",
    "mov     rdx, rbx",
    "call    sub_1400530cc",
    "jmp     0x14007f98a",
    "movdqu  xmm0, xmmword [rsi+0x8]",
    "mov     rcx, qword [rsp+0x110]",
    "movdqu  xmmword [rsp+0x80], xmm0",
    "cmp     byte [rcx+0x1e], bpl",
    "jne     0x14007fb6a",
    "or      dword [rax+0x4], 0x1100",
    "mov     qword [rax+0x10], rbx",
    "mov     rbx, rax",
    "jmp     0x14007ece5",
    "mov     rcx, qword [rbx]",
    "call    sub_140043de4",
    "jmp     0x140080a8e",
    "mov     qword [rax+0x10], rdx",
    "mov     eax, dword [rdx+0x4]",
    "and     eax, 0x200104",
    "or      dword [r11+0x4], eax",
    "jmp     0x140080a8e",
    "mov     qword [rsi-0x70], rbx",
    "jmp     0x140080a8e",
    "cmp     byte [rdx+0x20], 0xa1",
    "je      0x14007fd10",
    "cmp     byte [rdx+0x20], 0xa1",
    "je      0x14007fd66",
    "mov     rcx, qword [rdi]",
    "mov     rdx, rbx",
    "jmp     0x14007f243",
    "bts     dword [rax+0x4], 0x7",
    "jmp     0x140080a8e",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "cmp     byte [rax], 0x75",
    "jne     0x140080a8e",
    "cmp     byte [rax], 0x75",
    "jne     0x140080a8e",
    "mov     rdx, rdi",
    "mov     rdx, qword [rsi-0x10]",
    "cmp     rdx, rbp",
    "je      0x140080085",
    "mov     rcx, qword [rsi-0x10]",
    "mov     qword [rax+0x20], rcx",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, rbx",
    "call    sub_140043818",
    "jmp     0x140080085",
    "mov     r8, qword [rsi-0x58]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x13]",
    "jmp     0x14007fae3",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "mov     qword [rsi-0x58], rax",
    "call    sub_140043ab8",
    "jmp     0x140080085",
    "mov     rcx, qword [rbx]",
    "mov     rdx, r8",
    "call    sub_140044bf4",
    "mov     eax, dword [rdx]",
    "dec     eax",
    "cdqe    ",
    "imul    rax, rax, 0x70",
    "or      dword [rax+rdx+0x48], 0x4",
    "mov     qword [rax+rdx+0x68], r8",
    "jmp     0x14008020b",
    "mov     rdx, qword [rsi-0x10]",
    "mov     rcx, qword [rbx]",
    "call    sub_140044bf4",
    "mov     r11, qword [rsi-0x28]",
    "mov     rdx, qword [rsi-0x28]",
    "mov     rcx, rbx",
    "call    sub_140044974",
    "mov     r11, rax",
    "jmp     0x140080289",
    "mov     rdx, qword [rdx]",
    "lea     r8, [rsi-0x58]",
    "mov     rcx, rdi",
    "call    sub_14004a2b8",
    "jmp     0x140080a8e",
    "mov     qword [rsi-0x70], rdi",
    "jmp     0x140080a8e",
    "mov     rdx, rbx",
    "mov     rcx, r13",
    "call    sub_140043de4",
    "cmp     rbx, rbp",
    "je      0x140080704",
    "mov     qword [rax+0x20], rbx",
    "mov     rbx, rbp",
    "jmp     0x14008070b",
    "mov     dword [rcx+0x158], eax",
    "jmp     0x140080a8e",
    "mov     rcx, qword [rsp+0x110]",
    "mov     rcx, qword [rcx]",
    "call    sub_140044bf4",
    "jmp     0x14007ed1d",
    "mov     rcx, qword [rdi]",
    "call    sub_140043de4",
    "jmp     0x14007ed3f",
    "mov     r12d, 0x1",
    "cmp     byte [rdi+0xb5], bpl",
    "je      0x14007e4a3",
    "xor     r8d, r8d",
    "mov     rdx, r14",
    "mov     rcx, rdi",
    "mov     byte [rax], bpl",
    "call    sub_14004de30",
    "mov     byte [r12], 0x5f",
    "cmp     rax, rbp",
    "je      0x14007e482",
    "mov     rdx, qword [r8+0x10]",
    "jmp     0x14007e9a8",
    "mov     cl, byte [rsi-0x10]",
    "mov     qword [rbx+0x50], rdi",
    "mov     byte [rbx+0x8], cl",
    "cmp     rdi, rbp",
    "je      0x14007ede9",
    "jmp     0x140080a8e",
    "mov     r8, r13",
    "mov     rdx, r14",
    "mov     rcx, rdi",
    "call    sub_140016e6c",
    "mov     qword [rbx+r12*8+0x18], rax",
    "jmp     0x140080a8e",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "mov     al, byte [r8-0x70]",
    "sub     rdx, r12",
    "mov     byte [r8], al",
    "sub     r8, 0x70",
    "cmp     rdx, rbp",
    "jg      0x14007f125",
    "mov     r8, qword [rsi-0x58]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     qword [rsp+0x40], rbp",
    "mov     dword [rsp+0x38], 0x800",
    "mov     qword [rsp+0x30], rbp",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140062cac",
    "mov     rdx, qword [rsi+0x8]",
    "lea     r8, [rsi-0x28]",
    "mov     qword [rsp+0x38], rdx",
    "mov     rdx, qword [rsi-0x10]",
    "mov     qword [rsp+0x30], rdx",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], r8",
    "jmp     0x14007f271",
    "mov     eax, dword [rcx]",
    "sub     eax, r12d",
    "cmp     eax, ebp",
    "movsxd  rdx, eax",
    "jle     0x14007f3a7",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rcx, qword [rbx]",
    "call    sub_140053434",
    "jmp     0x140080a8e",
    "mov     ecx, dword [rax]",
    "mov     rdx, qword [rsi-0x58]",
    "mov     rax, qword [rdx+0x18]",
    "sub     ecx, r12d",
    "movsxd  r8, ecx",
    "imul    r8, r8, 0x70",
    "mov     qword [r8+r11+0x18], rax",
    "mov     rax, qword [rdx+0x10]",
    "mov     qword [r8+r11+0x10], rax",
    "mov     rax, qword [rdx+0x30]",
    "mov     qword [r8+r11+0x30], rax",
    "test    byte [rdx+0x48], 0x4",
    "je      0x14007f35a",
    "cmp     qword [rsi+0x8], rbp",
    "jne     0x14007f2ba",
    "or      dl, 0x2",
    "mov     byte [rax+r8*8+0x20], dl",
    "jmp     0x140080a8e",
    "mov     rbp, rbx",
    "mov     rax, qword [rbx]",
    "mov     rdx, qword [rax+r12*8]",
    "cmp     rdx, rbp",
    "je      0x14007f987",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, 0xab",
    "call    sub_140043a14",
    "mov     qword [rsi+0x8], rax",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "lea     r8, [rsp+0x80]",
    "lea     rdx, [rel data_1400f7888]  {\"near \"%T\": syntax error\"}",
    "call    sub_1400191b8",
    "jmp     0x14007f98a",
    "lea     rdx, [rel data_1400f77c0]  {\"DISTINCT is not supported for wi\u2026\"}",
    "mov     rcx, rdi",
    "call    sub_1400191b8",
    "jmp     0x14007fd10",
    "lea     rdx, [rel data_1400f77c0]  {\"DISTINCT is not supported for wi\u2026\"}",
    "mov     rcx, rdi",
    "call    sub_1400191b8",
    "call    sub_140044bf4",
    "jmp     0x140080a8e",
    "cmp     byte [rdi+0x104], 0x2",
    "jae     0x140080a8e",
    "cmp     byte [rdi+0x104], 0x2",
    "jae     0x140080a8e",
    "jmp     0x14008007d",
    "mov     rcx, rbx",
    "call    sub_140043a14",
    "jmp     0x140080a8a",
    "mov     rax, qword [rsi-0x58]",
    "mov     rcx, rbx",
    "mov     qword [rax+0x20], r11",
    "mov     rdx, qword [rsi-0x58]",
    "call    sub_140043818",
    "jmp     0x140080a8e",
    "mov     rax, rbp",
    "xor     r9d, r9d",
    "mov     rdx, rbx",
    "mov     rcx, r13",
    "lea     r8d, [r9+0x1]",
    "call    sub_140043fa4",
    "jmp     0x140080707",
    "mov     byte [rdi+0x1], 0xb",
    "test    r15b, 0x20",
    "je      0x14007e4e2",
    "mov     eax, dword [rdi+0xb0]",
    "mov     dword [rbx+0x38], eax",
    "cmp     eax, r12d",
    "jne     0x14007e4a3",
    "cmp     dword [rax+0x54], ebp",
    "je      0x14007e482",
    "cmp     rdx, rbp",
    "jne     0x14007e98d",
    "btr     dword [rbx+0xc], 0xa",
    "cmp     dword [rsi-0x10], 0x83",
    "je      0x14007ece5",
    "btr     dword [rdi+0xc], 0xa",
    "mov     rdx, qword [rsi-0x88]",
    "mov     rcx, qword [rsp+0x110]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "call    std::_Work_stealing_deque<struct std::_Sort_work_item_impl<int64_t> >::_Push_bottom",
    "mov     byte [rcx+0x44], bpl",
    "mov     rax, rdx",
    "imul    rax, rax, 0x70",
    "lea     r8, [rax+rcx+0x44]",
    "mov     qword [rdx+0x10], rbp",
    "mov     qword [rdx+0x18], rbp",
    "mov     qword [rdx+0x30], rbp",
    "mov     rax, qword [rdx+0x68]",
    "mov     qword [r8+r11+0x68], rax",
    "and     dword [rdx+0x48], 0xfffffffb",
    "mov     qword [rdx+0x68], rbp",
    "or      dword [r8+r11+0x48], 0x4",
    "mov     rax, qword [rsi-0x58]",
    "jmp     0x14007f28b",
    "lea     r8, [rsi+0x8]",
    "mov     rcx, r14",
    "call    sub_14004a2b8",
    "mov     rcx, qword [rsp+0x80]",
    "lea     rdx, [rax+0x28]",
    "inc     rcx",
    "call    sub_140019a68",
    "jmp     0x140080a8e",
    "mov     byte [rbx], 0x32",
    "mov     byte [rbx], 0x33",
    "jmp     0x14007ff9b",
    "mov     rcx, qword [rbx]",
    "call    sub_140044bf4",
    "mov     qword [rdi+0x20], rax",
    "mov     rcx, qword [rbx+0x70]",
    "mov     r15d, 0xfff0bdc0",
    "cmp     rcx, rbp",
    "je      0x14007e50e",
    "mov     eax, dword [rbx+0x40]",
    "mov     rcx, r13",
    "test    al, 0x8",
    "je      0x14007e4bf",
    "or      dword [rbx+0x40], r12d",
    "mov     rax, qword [rax+0x58]",
    "lea     rcx, [rdi+0x1b8]",
    "xor     r8d, r8d",
    "mov     rdx, qword [rax]",
    "call    sub_14001a410",
    "mov     rax, qword [rax+0x10]",
    "cmp     rax, rbp",
    "je      0x14007e482",
    "mov     rax, qword [rdx+0x8]",
    "movsx   ecx, word [rax]",
    "movsx   eax, word [r8+0x46]",
    "sub     eax, r12d",
    "cmp     ecx, eax",
    "jne     0x14007e9a4",
    "jmp     0x140080a8e",
    "mov     r12d, 0x1",
    "mov     byte [r13+0x22], r12b",
    "jmp     0x14007ece5",
    "mov     al, byte [r8-0x70]",
    "sub     rdx, r12",
    "mov     byte [r8], al",
    "sub     r8, 0x70",
    "cmp     rdx, rbp",
    "jg      0x14007f394",
    "mov     qword [rbx+0x18], rbp",
    "jmp     0x140080a8e",
    "call    sub_140043de4",
    "mov     rdx, qword [rbx+0x18]",
    "cmp     rdx, rbp",
    "je      0x14007ffa9",
    "mov     rax, qword [rbx+0x30]",
    "cmp     rax, rbp",
    "je      0x14007e52e",
    "mov     rax, qword [rdi+0x20]",
    "mov     r15d, ebp",
    "cmp     qword [rax+0x18], rcx",
    "je      0x14007e50e",
    "test    al, 0x4",
    "jne     0x14007e4d4",
    "lea     rdx, [rel data_1400f59a0]  {\"AUTOINCREMENT not allowed on WIT\u2026\"}",
    "jmp     0x140080605",
    "mov     rax, qword [rax]",
    "cmp     dword [rax], 0x3",
    "jl      0x14007e482",
    "mov     rdx, qword [rdx+0x28]",
    "or      dword [rdx+0x64], 0x8",
    "movsx   edx, word [rbx+0x46]",
    "mov     r8, qword [rbx+0x8]",
    "mov     ecx, ebp",
    "cmp     edx, ebp",
    "jle     0x14007e551",
    "xor     r9d, r9d",
    "mov     rdx, rbx",
    "mov     rcx, r13",
    "lea     r8d, [r9+0x4]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140042edc",
    "add     rax, 0x18",
    "or      eax, 0x60",
    "mov     rdx, rbx",
    "mov     dword [rbx+0x40], eax",
    "call    sub_14004fae4",
    "mov     r8, qword [rbx]",
    "lea     rdx, [rel data_1400f59d8]  {\"PRIMARY KEY missing on table %s\"}",
    "call    sub_1400191b8",
    "jmp     0x14007e4e2",
    "call    sub_1400191b8",
    "jmp     0x140080a8e",
    "mov     rdx, qword [rax+0xb8]",
    "cmp     rdx, rbp",
    "je      0x14007e482",
    "cmp     word [rbx+0x44], bp",
    "jge     0x14007e55a",
    "add     r8, 0x1a",
    "add     rax, 0x20",
    "add     r15d, r12d",
    "cmp     qword [rax], rcx",
    "jne     0x14007e502",
    "lea     rcx, [r12+0x1]",
    "call    rdx",
    "cmp     eax, ebp",
    "je      0x14007e482",
    "shl     ecx, 0x2",
    "call    sub_14001a0b8",
    "mov     r14, qword [rbx+0x10]",
    "mov     word [rbx+0x4a], ax",
    "jmp     0x14007e578",
    "add     ecx, r12d",
    "movzx   eax, byte [r8]",
    "sub     edx, r12d",
    "add     r8, 0x20",
    "add     ecx, eax",
    "cmp     edx, ebp",
    "jg      0x14007e540",
    "bts     dword [rbx+0x40], 0xa",
    "cmp     r14, rbp",
    "jne     0x14007e56c",
    "mov     rcx, r14",
    "call    sub_14004f9fc",
    "mov     r14, qword [r14+0x28]",
    "cmp     byte [rdi+0xb5], bpl",
    "jne     0x14007e6ff",
    "mov     rcx, qword [rbx+0x70]",
    "mov     rdx, qword [rbx]",
    "mov     r8, rbx",
    "add     rcx, 0x8",
    "call    sub_14001a4ac",
    "cmp     rax, rbp",
    "je      0x14007e724",
    "mov     rcx, r13",
    "call    sub_140065300",
    "mov     r14, rax",
    "cmp     rax, rbp",
    "je      0x140080a8e",
    "mov     qword [r13+0x130], rbp",
    "or      dword [rdi+0x2c], r12d",
    "cmp     qword [rbx+0x18], rbp",
    "jne     0x140080a8e",
    "mov     rcx, rdi",
    "call    sub_140016efc",
    "jmp     0x140080a8e",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rax",
    "lea     edx, [r9+0x75]",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "cmp     qword [rbx+0x18], rbp",
    "jne     0x14007e5cf",
    "mov     rcx, qword [r13+0xe0]",
    "lea     rax, [rsi-0x28]",
    "cmp     qword [rax], rbp",
    "cmove   rax, qword [rsp+0x80]",
    "mov     edx, dword [rax]",
    "sub     edx, ecx",
    "call    sub_140018f3c",
    "add     eax, 0xd",
    "mov     dword [rbx+0x50], eax",
    "jmp     0x140080a8e",
    "lea     rax, [rel data_1400f534c]  {\"view\"}",
    "lea     r8, [rel data_1400f5a00]  {\"VIEW\"}",
    "mov     qword [rsp+0x60], rax",
    "lea     rdx, [rel data_1400f4e2c]  {\"table\"}",
    "lea     r8, [rel data_1400f59f8]  {\"TABLE\"}",
    "mov     qword [rsp+0x60], rdx",
    "jmp     0x14007e5e2",
    "mov     rax, qword [r13+0xe0]",
    "lea     rdx, [rel data_1400f5a08]  {\"CREATE %s %.*s\"}",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    _printf_p_l",
    "mov     ecx, dword [r13+0x78]",
    "mov     rdx, qword [rbx]",
    "mov     r8, qword [rdi+0x20]",
    "mov     dword [rsp+0x48], ecx",
    "mov     ecx, dword [r13+0x7c]",
    "mov     r9, rax",
    "mov     qword [rsp+0x68], rax",
    "mov     qword [rsp+0x40], r9",
    "mov     dword [rsp+0x38], ecx",
    "mov     rcx, qword [rsp+0x60]",
    "mov     qword [rsp+0x30], rdx",
    "mov     qword [rsp+0x28], rdx",
    "mov     qword [rsp+0x20], rcx",
    "movsxd  rax, r15d",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "lea     rdx, [rel data_1400f5a20]  {\"UPDATE %Q.%s SET type='%s', name\u2026\"}",
    "shl     rax, 0x5",
    "mov     rcx, r13",
    "mov     r8, qword [r8+rax]",
    "mov     qword [rsp+0x70], rax",
    "call    sub_14004dd58",
    "mov     rdx, qword [rsp+0x68]",
    "cmp     rdx, rbp",
    "je      0x14007e69a",
    "add     r9d, dword [rcx+0x8]",
    "cmp     byte [rsp+0xf8], bpl",
    "lea     rax, [r13+0xf0]",
    "lea     rcx, [rsi-0x10]",
    "cmovne  rcx, rax",
    "mov     r9d, dword [rcx]",
    "mov     rax, qword [rcx]",
    "sub     r9d, dword [r13+0xe0]",
    "cmp     byte [rax], 0x3b",
    "je      0x14007e60f",
    "mov     edx, r15d",
    "mov     rcx, r13",
    "call    sub_14004f620",
    "test    byte [rbx+0x40], 0x8",
    "je      0x14007e6d2",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "mov     r8, qword [rbx]",
    "lea     rdx, [rel data_1400f5aa8]  {\"tbl_name='%q' AND type!='trigger\u2026\"}",
    "mov     rcx, rdi",
    "call    _printf_p_l",
    "mov     edx, r15d",
    "mov     rcx, r14",
    "mov     r8, rax",
    "call    sub_140032608",
    "cmp     byte [rdi+0xb5], bpl",
    "je      0x140080a8e",
    "mov     r8, qword [rdi+0x20]",
    "mov     rcx, qword [rsp+0x70]",
    "mov     rax, qword [rcx+r8+0x18]",
    "cmp     qword [rax+0x68], rbp",
    "jne     0x14007e6d2",
    "mov     r8, qword [rcx+r8]",
    "lea     rdx, [rel data_1400f5a78]  {\"CREATE TABLE %Q.sqlite_sequence(\u2026\"}",
    "mov     rcx, r13",
    "call    sub_14004dd58"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}