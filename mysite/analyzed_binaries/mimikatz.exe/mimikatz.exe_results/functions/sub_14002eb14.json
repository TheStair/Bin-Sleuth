{
  "address": "0x14002eb14",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x20], rbx",
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x60",
    "mov     rbp, r9",
    "mov     rdi, rcx",
    "cmp     edx, dword [rcx+0x3c]",
    "jbe     0x14002eb44",
    "lea     r8, [rsp+0x38]",
    "xor     ebx, ebx",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_1400278a0",
    "cmp     eax, ebx",
    "jne     0x14002ed22",
    "mov     ecx, 0x11b89",
    "call    sub_140084e38",
    "jmp     0x14002ed22",
    "mov     rbx, qword [rsp+0x98]",
    "add     rsp, 0x60",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rbx, qword [rsp+0x38]",
    "xor     eax, eax",
    "cmp     byte [rbx+0x1], al",
    "je      0x14002eb7c",
    "mov     byte [rbx+0x1], 0x1",
    "movzx   esi, byte [rbx+0x9]",
    "mov     dword [rsp+0x88], eax",
    "mov     dword [rsp+0x30], esi",
    "cmp     ax, word [rbx+0x18]",
    "jae     0x14002ec7a",
    "mov     ecx, 0x11b8e",
    "call    sub_140084e38",
    "cmp     byte [rbx+0x8], al",
    "jne     0x14002ecc2",
    "mov     rdx, rax",
    "mov     qword [rsp+0x38], rax",
    "mov     byte [rbx+0x1], 0x0",
    "mov     rcx, qword [rbx+0x70]",
    "call    sub_14002242c",
    "mov     eax, edi",
    "xor     edi, edi",
    "cmp     rbp, rdi",
    "je      0x14002ecd0",
    "lea     eax, [rsi+0x8]",
    "mov     r9, rbp",
    "mov     r8d, 0x1",
    "movsxd  rcx, eax",
    "add     rcx, qword [rbx+0x50]",
    "movzx   eax, byte [rcx+0x2]",
    "movzx   edx, byte [rcx+0x1]",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rcx]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rcx+0x3]",
    "mov     rcx, rdi",
    "or      edx, eax",
    "call    sub_14002eb14",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14002ed13",
    "lea     r8, [rsp+0x40]",
    "mov     rdx, rsi",
    "mov     rcx, rbx",
    "call    qword [rbx+0x80]",
    "movzx   r11d, word [rsp+0x54]",
    "cmp     r11d, dword [rsp+0x50]",
    "jne     0x14002ec24",
    "movzx   eax, byte [rsi+0x2]",
    "movzx   edx, byte [rsi+0x1]",
    "mov     r9, rbp",
    "shl     edx, 0x8",
    "mov     r8d, 0x1",
    "mov     rcx, rdi",
    "or      edx, eax",
    "movzx   eax, byte [rsi]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rsi+0x3]",
    "or      edx, eax",
    "call    sub_14002eb14",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14002ed13",
    "cmp     dword [rsp+0x90], edi",
    "je      0x14002ecee",
    "movzx   eax, word [rbx+0x18]",
    "add     dword [rbp], eax",
    "xor     edi, edi",
    "jmp     0x14002ecd0",
    "lea     r8, [rsp+0x40]",
    "mov     rdx, rsi",
    "mov     rcx, rbx",
    "call    sub_14002b2e8",
    "mov     edi, eax",
    "xor     edi, edi",
    "jmp     0x14002ec36",
    "mov     rcx, qword [rbx+0x70]",
    "call    sub_140022a44",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14002ed13",
    "mov     r8d, dword [rbx+0x4]",
    "mov     rcx, qword [rbx+0x48]",
    "mov     rdx, rbx",
    "call    sub_14002af2c",
    "jmp     0x14002eb75",
    "mov     r8d, dword [rsp+0x88]",
    "mov     rdx, qword [rsp+0x38]",
    "movzx   eax, word [rbx+0x18]",
    "mov     rdi, qword [rsp+0x80]",
    "inc     r8d",
    "add     rdx, 0x2",
    "cmp     r8d, eax",
    "mov     dword [rsp+0x88], r8d",
    "mov     qword [rsp+0x38], rdx",
    "jl      0x14002eba1",
    "test    edi, edi",
    "jne     0x14002ed13",
    "mov     rax, qword [rbx+0x50]",
    "movsxd  rdx, esi",
    "mov     rcx, rbx",
    "movzx   edx, byte [rax+rdx]",
    "or      edx, 0x8",
    "call    sub_1400276c8",
    "mov     edi, eax",
    "jmp     0x14002ed13",
    "mov     rcx, qword [rbx+0x60]",
    "movzx   eax, byte [rdx+rcx]",
    "shl     eax, 0x8",
    "movsxd  rsi, eax",
    "movzx   eax, byte [rdx+rcx+0x1]",
    "or      rsi, rax",
    "movzx   eax, word [rbx+0x1a]",
    "and     rsi, rax",
    "xor     eax, eax",
    "add     rsi, qword [rbx+0x50]",
    "cmp     byte [rbx+0x8], al",
    "jne     0x14002ec02",
    "mov     esi, dword [rsp+0x30]",
    "xor     eax, eax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}