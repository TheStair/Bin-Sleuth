{
  "address": "0x1400993d0",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8 {__saved_rbx}], rbx",
    "mov     qword [rsp+0x10 {__saved_rsi}], rsi",
    "push    rdi {__saved_rdi}",
    "sub     rsp, 0x20",
    "cmp     dword [rel data_1401403b8], 0x0",
    "je      0x140099452  {data_1401403b8}",
    "lea     rcx, [rel data_140106ae0]  {u\"ERROR kuhl_m_busylight_list ; No\u2026\"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rel data_1401403c0]",
    "jmp     0x14009944b",
    "test    rbx, rbx",
    "jne     0x1400993f1",
    "mov     r8, qword [rbx+0x68]",
    "mov     edx, dword [rbx+0x8]",
    "lea     rcx, [rel data_140106ac0]  {u\"[%3u] %s ( \"}",
    "mov     r8, qword [r8+0x8]",
    "call    sub_14000c030",
    "xor     edi, edi  {0x0}",
    "lea     rsi, [rel data_1400d5cd0]",
    "jmp     0x14009945e",
    "inc     edi",
    "add     rsi, 0x8",
    "cmp     edi, 0x4",
    "jb      0x140099411",
    "mov     rdx, qword [rsi]",
    "lea     rcx, [rel data_140106800]  {u\"%s, \"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x30 {__saved_rbx}]",
    "mov     rsi, qword [rsp+0x38 {__saved_rsi}]",
    "xor     eax, eax  {0x0}",
    "add     rsp, 0x20",
    "pop     rdi {__saved_rdi}",
    "retn     {__return_addr}",
    "mov     rax, qword [rbx+0x68]",
    "mov     cl, dil",
    "mov     dl, byte [rax+0x4]",
    "shr     dl, cl",
    "test    dl, 0x1",
    "je      0x140099431",
    "lea     rcx, [rel data_1400e8e8c]",
    "call    sub_14000c030",
    "mov     rbx, qword [rbx]"
  ],
  "high_level_IL": [
    "int64_t rdx",
    "if (data_1401403b8 == 0)",
    "sub_14000c030(u\"ERROR kuhl_m_busylight_list ; No\u2026\", rdx)",
    "void** i = data_1401403c0",
    "while (i != 0)",
    "*(i[0xd] + 8)",
    "sub_14000c030(u\"[%3u] %s ( \", zx.q(i[1].d))",
    "int32_t j = 0",
    "wchar16 const (** const rsi_1)[0xb] = &data_1400d5cd0",
    "int64_t rdx_2",
    "rdx_2.b = *(i[0xd] + 4)",
    "rdx_2.b u>>= j.b",
    "if ((rdx_2.b & 1) != 0)",
    "rdx_2 = sub_14000c030(u\"%s, \", *rsi_1)",
    "j += 1",
    "rsi_1 = &rsi_1[1]",
    "do while (j u< 4)",
    "sub_14000c030(u\")\\n\", rdx_2)",
    "i = *i",
    "return 0"
  ]
}