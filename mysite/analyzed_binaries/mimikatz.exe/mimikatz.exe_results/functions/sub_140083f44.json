{
  "address": "0x140083f44",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d"
  ],
  "disassembly": [
    "push    rbx {__saved_rbx}",
    "sub     rsp, 0x20",
    "mov     rbx, rcx",
    "test    rcx, rcx",
    "je      0x140083f6a",
    "lea     rax, [rel data_1400dc1e8]  {u\"out of memory\"}",
    "jmp     0x140083fcd",
    "call    sub_140019fb4",
    "test    eax, eax",
    "jne     0x140083f64",
    "add     rsp, 0x20",
    "pop     rbx {__saved_rbx}",
    "retn     {__return_addr}",
    "cmp     byte [rbx+0x61], 0x0",
    "je      0x140083f73",
    "lea     rax, [rel data_1400dc210]  {u\"bad parameter or other API misus\u2026\"}",
    "jmp     0x140083fcd",
    "mov     rcx, qword [rbx+0x158]",
    "mov     dl, 0x2",
    "call    sub_140031c84",
    "test    rax, rax",
    "jne     0x140083faa",
    "cmp     byte [rbx+0x61], 0x0",
    "je      0x140083fcd",
    "mov     ecx, dword [rbx+0x50]",
    "call    sub_14008335c",
    "mov     edx, dword [rbx+0x50]",
    "mov     rcx, rbx",
    "mov     r8, rax",
    "call    sub_140019114",
    "mov     rcx, qword [rbx+0x158]",
    "mov     dl, 0x2",
    "call    sub_140031c84",
    "cmp     dword [rbx+0xd4], 0x0",
    "jne     0x140083fcd",
    "dec     dword [rbx+0x168]",
    "mov     byte [rbx+0x61], 0x0",
    "mov     dword [rbx+0x160], 0x0"
  ],
  "high_level_IL": [
    "if (arg1 != 0)",
    "int32_t rax_1",
    "int512_t zmm0",
    "int512_t zmm0_1",
    "rax_1, zmm0_1 = sub_140019fb4(arg1, zmm0)",
    "if (rax_1 == 0)",
    "return u\"bad parameter or other API misus\u2026\"",
    "if (*(arg1 + 0x61) == 0)",
    "wchar16 const* const result",
    "int64_t r9_1",
    "int512_t zmm0_2",
    "result, r9_1, zmm0_2 = sub_140031c84(arg1[0x2b], 2, zmm0_1)",
    "if (result == 0)",
    "char* rax_2 = sub_14008335c(arg1[0xa].d)",
    "int512_t zmm0_3 = sub_140019114(arg1, arg1[0xa].d, rax_2, r9_1, zmm0_2)",
    "result = sub_140031c84(arg1[0x2b], 2, zmm0_3)",
    "if (*(arg1 + 0x61) != 0 && *(arg1 + 0xd4) == 0)",
    "arg1[0x2d].d -= 1",
    "*(arg1 + 0x61) = 0",
    "arg1[0x2c].d = 0",
    "return result",
    "return u\"out of memory\""
  ]
}