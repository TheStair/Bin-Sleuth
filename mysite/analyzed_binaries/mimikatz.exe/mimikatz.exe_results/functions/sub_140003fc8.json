{
  "address": "0x140003fc8",
  "rules": [
    "hash data via WinCrypt/e7b500967c6340beaa50c0acc9342c6e",
    "encode data using XOR",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "create new key via CryptAcquireContext",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "initialize hashing via WinCrypt",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x20], rbx",
    "mov     dword [rax+0x18], r8d",
    "mov     qword [rax+0x10], rdx",
    "mov     dword [rax+0x8], ecx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "mov     rdi, r9",
    "mov     ebx, ecx",
    "xor     esi, esi",
    "lea     rcx, [rax-0x50]",
    "lea     r9d, [rsi+0x18]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], 0xf0000000",
    "call    qword [rel CryptAcquireContextW]",
    "test    eax, eax",
    "je      0x140004254",
    "mov     eax, esi",
    "mov     rbx, qword [rsp+0xc8]",
    "add     rsp, 0x70",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, qword [rsp+0x58]",
    "lea     rax, [rsp+0x50]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, ebx",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel CryptCreateHash]",
    "test    eax, eax",
    "je      0x140004247",
    "mov     rcx, qword [rsp+0x58]",
    "xor     edx, edx",
    "call    qword [rel CryptReleaseContext]",
    "mov     rcx, qword [rsp+0x50]",
    "and     dword [rsp+0x20], esi",
    "lea     r9, [rsp+0x40]",
    "lea     edx, [rsi+0x2]",
    "xor     r8d, r8d",
    "call    qword [rel CryptGetHashParam]",
    "test    eax, eax",
    "je      0x14000423c",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel CryptDestroyHash]",
    "mov     ebx, dword [rsp+0xd0]",
    "lea     r12d, [rsi+0x40]",
    "lea     rdx, [rbx+0x4]",
    "mov     ecx, r12d",
    "mov     r14, rbx",
    "mov     qword [rsp+0x68], rbx",
    "call    qword [rel LocalAlloc]",
    "mov     r13, rax",
    "mov     qword [rsp+0x60], rax",
    "test    rax, rax",
    "je      0x14000423c",
    "mov     edx, dword [rsp+0x40]",
    "mov     ecx, r12d",
    "call    qword [rel LocalAlloc]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140004233",
    "mov     rcx, r13",
    "call    qword [rel LocalFree]",
    "mov     edx, dword [rsp+0x40]",
    "mov     ecx, r12d",
    "call    qword [rel LocalAlloc]",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x14000422a",
    "mov     rcx, rbp",
    "call    qword [rel LocalFree]",
    "mov     r8, rbx",
    "mov     rdx, rdi",
    "mov     rcx, r13",
    "mov     esi, 0x1",
    "call    memcpy",
    "mov     r15d, dword [rsp+0xe8]",
    "mov     eax, esi",
    "mov     dword [rsp+0x44], eax",
    "test    r15d, r15d",
    "je      0x140004221",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "lea     ecx, [rbx+0x4]",
    "mov     dword [rsp+0x48], ecx",
    "mov     rcx, qword [rsp+0xe0]",
    "cmp     r15d, edi",
    "mov     rdx, rbp",
    "cmovb   edi, r15d",
    "mov     r8d, edi",
    "mov     ebx, edi",
    "call    memcpy",
    "mov     eax, dword [rsp+0x44]",
    "add     qword [rsp+0xe0], rbx",
    "mov     ecx, dword [rsp+0x48]",
    "sub     r15d, edi",
    "add     eax, esi",
    "mov     dword [rsp+0x44], eax",
    "mov     dword [rsp+0xe8], r15d",
    "test    r15d, r15d",
    "jne     0x1400040ee",
    "mov     r13d, dword [rsp+0xb0]",
    "mov     r14d, dword [rsp+0xc0]",
    "mov     r15, qword [rsp+0xb8]",
    "lea     ebx, [rax-0x1]",
    "mov     r8d, dword [rsp+0xc0]",
    "mov     rdx, qword [rsp+0xb8]",
    "bswap   eax",
    "mov     dword [r14+r13], eax",
    "mov     eax, dword [rsp+0x40]",
    "mov     r9, r13",
    "mov     dword [rsp+0x30], eax",
    "mov     qword [rsp+0x28], r12",
    "mov     dword [rsp+0x20], ecx",
    "mov     ecx, dword [rsp+0xb0]",
    "call    sub_140003e0c",
    "mov     r8d, dword [rsp+0x40]",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "call    memcpy",
    "mov     eax, dword [rsp+0xd8]",
    "mov     edi, dword [rsp+0x40]",
    "cmp     eax, esi",
    "jbe     0x1400041db",
    "cmp     dword [rsp+0xf0], 0x0",
    "je      0x1400041c4",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "sub     rdx, rbp",
    "sub     rbx, rsi",
    "jne     0x140004162",
    "mov     r8d, edi",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    memcpy",
    "mov     edi, dword [rsp+0x40]",
    "mov     al, byte [rdx+rcx]",
    "add     r11d, esi",
    "xor     byte [rcx], al",
    "mov     edi, dword [rsp+0x40]",
    "add     rcx, rsi",
    "cmp     r11d, edi",
    "jb      0x140004194",
    "mov     dword [rsp+0x30], edi",
    "mov     r9, r12",
    "mov     r8d, r14d",
    "mov     rdx, r15",
    "mov     ecx, r13d",
    "mov     qword [rsp+0x28], r12",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140003e0c",
    "mov     edi, dword [rsp+0x40]",
    "xor     r11d, r11d",
    "test    edi, edi",
    "je      0x1400041a8",
    "mov     r13, qword [rsp+0x60]",
    "mov     r14, qword [rsp+0x68]",
    "mov     r15d, dword [rsp+0xe8]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}