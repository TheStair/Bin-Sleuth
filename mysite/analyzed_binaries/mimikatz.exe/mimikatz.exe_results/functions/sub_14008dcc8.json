{
  "address": "0x14008dcc8",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "push    rdi",
    "sub     rsp, 0x60",
    "and     dword [rsp+0x30], 0x0",
    "xor     edx, edx",
    "mov     rdi, rcx",
    "lea     r8d, [rdx+0x28]",
    "lea     rcx, [rsp+0x38]",
    "call    memset",
    "mov     r11, qword [rel data_14013c8d8]",
    "lea     rax, [rel data_14013c8d8]",
    "jmp     0x14008dcfd",
    "cmp     r11, rax",
    "jne     0x14008dcf6",
    "mov     r11, qword [r11]",
    "inc     dword [rsp+0x30]",
    "mov     rax, qword [rel data_14013c8e8]",
    "lea     rcx, [rel data_14013c8e8]",
    "jmp     0x14008dd19",
    "cmp     rax, rcx",
    "jne     0x14008dd12",
    "mov     rax, qword [rax]",
    "inc     dword [rsp+0x40]",
    "mov     rax, qword [rel data_14013c8f8]",
    "lea     rcx, [rel data_14013c8f8]",
    "jmp     0x14008dd35",
    "cmp     rax, rcx",
    "jne     0x14008dd2e",
    "mov     rax, qword [rax]",
    "inc     dword [rsp+0x50]",
    "mov     eax, dword [rsp+0x30]",
    "test    eax, eax",
    "je      0x14008dd91",
    "mov     eax, dword [rsp+0x40]",
    "test    eax, eax",
    "je      0x14008dde8",
    "mov     rdx, rax",
    "mov     ecx, 0x40",
    "shl     rdx, 0x3",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x38], rax",
    "test    rax, rax",
    "je      0x14008dd91",
    "mov     eax, dword [rsp+0x50]",
    "test    eax, eax",
    "je      0x14008de3c",
    "mov     rdx, rax",
    "mov     ecx, 0x40",
    "shl     rdx, 0x3",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x48], rax",
    "test    rax, rax",
    "je      0x14008dde8",
    "mov     r9, qword [rel data_14013c8d8]",
    "xor     r8d, r8d",
    "cmp     dword [rsp+0x30], r8d",
    "jbe     0x14008dd91",
    "mov     r9d, dword [rsp+0x50]",
    "mov     r8d, dword [rsp+0x40]",
    "mov     edx, dword [rsp+0x30]",
    "lea     rcx, [rel data_1400fdb60]  {u\"Will encode:\\n * %3u MasterKey(s\u2026\"}",
    "call    sub_14000c030",
    "lea     r11, [rel sub_140010e08]",
    "lea     r9, [rel sub_140010e30]",
    "lea     r8, [rsp+0x78]",
    "lea     rdx, [rsp+0x80]",
    "lea     rcx, [rsp+0x30]",
    "mov     qword [rsp+0x20], r11",
    "call    sub_140010b04",
    "test    eax, eax",
    "je      0x14008def5",
    "mov     rdx, rax",
    "mov     ecx, 0x40",
    "shl     rdx, 0x3",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x58], rax",
    "test    rax, rax",
    "je      0x14008de3c",
    "mov     r9, qword [rel data_14013c8e8]",
    "xor     r8d, r8d",
    "cmp     dword [rsp+0x40], r8d",
    "jbe     0x14008dde8",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x38]",
    "test    rcx, rcx",
    "je      0x14008df05",
    "mov     r8d, dword [rsp+0x78]",
    "mov     rdx, qword [rsp+0x80]",
    "lea     rcx, [rel data_1400fdc00]  {u\"Encoded:\\n * addr: 0x%p\\n * size\u2026\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400fdc48]  {u\"Write file '%s': \"}",
    "mov     rdx, rdi",
    "call    sub_14000c030",
    "mov     r8d, dword [rsp+0x78]",
    "mov     rdx, qword [rsp+0x80]",
    "mov     rcx, rdi",
    "call    sub_140009ce8",
    "test    eax, eax",
    "je      0x14008ded3",
    "mov     r8, qword [rel data_14013c8f8]",
    "xor     edx, edx",
    "cmp     dword [rsp+0x50], edx",
    "jbe     0x14008de3c",
    "xor     edx, edx",
    "mov     rax, qword [rsp+0x38]",
    "jmp     0x14008dd71",
    "mov     rcx, qword [rsp+0x48]",
    "test    rcx, rcx",
    "je      0x14008df15",
    "call    qword [rel LocalFree]",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400fdc70]  {u\"ERROR kuhl_m_dpapi_oe_SaveToFile\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f9538]",
    "call    sub_14000c030",
    "jmp     0x14008dee7",
    "xor     r9d, r9d",
    "mov     rax, qword [rsp+0x48]",
    "jmp     0x14008ddc8",
    "lea     rcx, [r9+0x10]",
    "inc     r8d",
    "mov     qword [rdx+rax], rcx",
    "mov     r9, qword [r9]",
    "add     rdx, 0x8",
    "cmp     r8d, dword [rsp+0x30]",
    "jae     0x14008dd91",
    "mov     rcx, qword [rsp+0x58]",
    "test    rcx, rcx",
    "je      0x14008df25",
    "call    qword [rel LocalFree]",
    "mov     rcx, qword [rsp+0x80]",
    "call    qword [rel LocalFree]",
    "mov     rax, qword [rsp+0x58]",
    "jmp     0x14008de1e",
    "lea     rcx, [r9+0x10]",
    "inc     r8d",
    "mov     qword [rdx+rax], rcx",
    "mov     r9, qword [r9]",
    "add     rdx, 0x8",
    "cmp     r8d, dword [rsp+0x40]",
    "jae     0x14008dde8",
    "xor     eax, eax",
    "add     rsp, 0x60",
    "pop     rdi",
    "retn    ",
    "call    qword [rel LocalFree]",
    "lea     rcx, [r8+0x10]",
    "inc     edx",
    "mov     qword [r9+rax], rcx",
    "mov     r8, qword [r8]",
    "add     r9, 0x8",
    "cmp     edx, dword [rsp+0x50]",
    "jae     0x14008de3c"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}