{
  "address": "0x1400bc854",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "contain loop",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x10], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x520",
    "xor     ebp, ebp",
    "lea     rax, [r11+0x8]",
    "lea     rdi, [rcx+0x28]",
    "mov     qword [r11-0x4a8], rbp",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [r11-0x88]",
    "mov     qword [r11+0x20], rax",
    "mov     rax, qword [rdi]",
    "lea     rbx, [rcx+0x38]",
    "mov     qword [r11-0x4c0], rax",
    "mov     rax, qword [rcx+0x30]",
    "mov     r14, rdx",
    "mov     qword [r11-0x4b8], rax",
    "mov     rax, qword [rbx]",
    "mov     edx, 0x550501",
    "mov     qword [r11-0x4b0], rax",
    "lea     rax, [rel data_140128900]  {u\"1.2.840.113556.1.5.7000.47\"}",
    "mov     r15d, 0x30",
    "mov     qword [r11+0x18], rax",
    "lea     rax, [rel data_140128938]",
    "mov     rsi, rcx",
    "mov     qword [rsp+0x20], rax",
    "lea     rax, [rel data_1400f1494]",
    "lea     ecx, [rdx+0x8]",
    "mov     qword [r11-0x4c8], rax",
    "lea     rax, [rel data_140128940]  {\"2.5.4.0\"}",
    "lea     r13d, [r15-0x4]",
    "mov     qword [r11-0x4a0], rax",
    "mov     dword [rsp+0xc0], 0x550502",
    "mov     dword [rsp+0xc4], ebp",
    "mov     qword [r11-0x490], rbp",
    "lea     rax, [rel data_140128948]  {\"1.2.840.113556.1.2.14\"}",
    "mov     r12d, 0xc0000001",
    "mov     qword [r11-0x488], rax",
    "mov     dword [rsp+0xd8], edx",
    "mov     dword [rsp+0xdc], ebp",
    "mov     qword [r11-0x478], rbp",
    "lea     rax, [rel data_140128960]  {\"1.2.840.113556.1.2.36\"}",
    "mov     dword [r11+0x8], r15d",
    "mov     qword [r11-0x470], rax",
    "mov     dword [rsp+0xf0], edx",
    "mov     dword [rsp+0xf4], ebp",
    "mov     qword [r11-0x460], rbp",
    "lea     rax, [rel data_140128978]  {\"1.2.840.113556.1.2.115\"}",
    "mov     r8, r13",
    "mov     qword [r11-0x458], rax",
    "mov     dword [rsp+0x108], 0x55050a",
    "mov     dword [rsp+0x10c], ebp",
    "mov     qword [r11-0x448], rbp",
    "lea     rax, [rel data_140128990]  {\"1.2.840.113556.1.4.307\"}",
    "mov     qword [r11-0x440], rax",
    "mov     dword [rsp+0x120], ecx",
    "mov     dword [rsp+0x124], ebp",
    "mov     qword [r11-0x430], rbp",
    "lea     rax, [rel data_1401289a8]  {\"1.2.840.113556.1.4.375\"}",
    "mov     qword [r11-0x428], rax",
    "mov     dword [rsp+0x138], ecx",
    "mov     dword [rsp+0x13c], ebp",
    "mov     qword [r11-0x418], rbp",
    "lea     rax, [rel data_1401289c0]  {\"1.2.840.113556.1.4.515\"}",
    "mov     qword [r11-0x410], rax",
    "mov     dword [rsp+0x150], edx",
    "mov     dword [rsp+0x154], ebp",
    "mov     qword [r11-0x400], rbp",
    "lea     rax, [rel data_1401289d8]  {\"1.2.840.113556.1.4.1459\"}",
    "mov     qword [r11-0x3f8], rax",
    "mov     dword [rsp+0x168], ecx",
    "mov     dword [rsp+0x16c], ebp",
    "mov     qword [r11-0x3e8], rbp",
    "lea     rax, [rel data_1401289f0]  {\"1.2.840.113556.1.4.1820\"}",
    "mov     qword [r11-0x3e0], rax",
    "lea     rax, [rel data_140128a08]  {\"1.2.840.113556.1.4.1836\"}",
    "mov     dword [rsp+0x180], edx",
    "mov     dword [rsp+0x184], ebp",
    "mov     qword [r11-0x3c8], rax",
    "mov     qword [r11-0x3d0], rbp",
    "lea     rax, [r11-0x4a8]",
    "mov     dword [rsp+0x198], edx",
    "mov     dword [rsp+0x19c], ebp",
    "mov     qword [r11-0x3a8], rax",
    "mov     dword [rsp+0x1b8], ebp",
    "lea     rcx, [r11-0x39c]",
    "xor     edx, edx",
    "call    memset",
    "lea     rax, [rsp+0x570]",
    "lea     rcx, [rsp+0x20c]",
    "mov     qword [rsp+0x1f8], rax",
    "lea     rax, [rsp+0xc8]",
    "mov     r8, r13",
    "xor     edx, edx",
    "mov     dword [rsp+0x1e8], 0x1",
    "mov     qword [rsp+0x1f0], rbp",
    "mov     qword [rsp+0x200], rax",
    "mov     dword [rsp+0x208], ebp",
    "call    memset",
    "and     qword [rsp+0x240], 0x0",
    "and     dword [rsp+0x258], 0x0",
    "lea     rax, [rsp+0x98]",
    "mov     qword [rsp+0x248], rax",
    "lea     rax, [rsp+0xe0]",
    "lea     ebp, [r15-0x2d]",
    "lea     rcx, [rsp+0x25c]",
    "mov     r8, r13",
    "xor     edx, edx",
    "mov     qword [rsp+0x250], rax",
    "mov     dword [rsp+0x238], ebp",
    "call    memset",
    "and     qword [rsp+0x290], 0x0",
    "lea     rax, [rsp+0xf8]",
    "mov     qword [rsp+0x298], rbx",
    "lea     rcx, [rsp+0x2ac]",
    "xor     ebx, ebx",
    "mov     r8, r13",
    "xor     edx, edx",
    "mov     qword [rsp+0x2a0], rax",
    "mov     dword [rsp+0x288], 0x1",
    "mov     dword [rsp+0x2a8], ebx",
    "call    memset",
    "lea     rax, [rsp+0x578]",
    "mov     qword [rsp+0x2e8], rax",
    "lea     rax, [rsp+0x110]",
    "lea     rcx, [rsp+0x2fc]",
    "mov     r8, r13",
    "xor     edx, edx",
    "mov     dword [rsp+0x2d8], 0x1",
    "mov     qword [rsp+0x2f0], rax",
    "mov     qword [rsp+0x2e0], rbx",
    "mov     dword [rsp+0x2f8], ebx",
    "call    memset",
    "lea     rax, [rsp+0x90]",
    "lea     rcx, [rsp+0x34c]",
    "mov     qword [rsp+0x338], rax",
    "lea     rax, [rsp+0x128]",
    "mov     r8, r13",
    "xor     edx, edx",
    "mov     dword [rsp+0x328], 0x1",
    "mov     qword [rsp+0x330], rbx",
    "mov     qword [rsp+0x340], rax",
    "mov     dword [rsp+0x348], ebx",
    "call    memset",
    "lea     rax, [rsp+0x20]",
    "lea     rcx, [rsp+0x39c]",
    "mov     r8, r13",
    "mov     qword [rsp+0x388], rax",
    "lea     rax, [rsp+0x140]",
    "xor     edx, edx",
    "mov     dword [rsp+0x378], 0x1",
    "mov     qword [rsp+0x380], rbx",
    "mov     dword [rsp+0x398], ebx",
    "mov     qword [rsp+0x390], rax",
    "call    memset",
    "lea     rax, [rsi+0x20]",
    "mov     qword [rsp+0x3d8], rax",
    "lea     rax, [rsp+0x158]",
    "lea     rcx, [rsp+0x3ec]",
    "mov     r8, r13",
    "xor     edx, edx",
    "mov     dword [rsp+0x3c8], 0x1",
    "mov     qword [rsp+0x3e0], rax",
    "mov     qword [rsp+0x3d0], rbx",
    "mov     dword [rsp+0x3e8], ebx",
    "call    memset",
    "lea     rax, [rsp+0x28]",
    "lea     rcx, [rsp+0x43c]",
    "mov     r8, r13",
    "mov     qword [rsp+0x428], rax",
    "lea     rax, [rsp+0x170]",
    "xor     edx, edx",
    "mov     dword [rsp+0x418], 0x1",
    "mov     qword [rsp+0x420], rbx",
    "mov     dword [rsp+0x438], ebx",
    "mov     qword [rsp+0x430], rax",
    "call    memset",
    "lea     rax, [rsp+0x188]",
    "lea     rcx, [rsp+0x48c]",
    "mov     r8, r13",
    "xor     edx, edx",
    "mov     qword [rsp+0x480], rax",
    "mov     dword [rsp+0x468], 0x1",
    "mov     qword [rsp+0x470], rbx",
    "mov     qword [rsp+0x478], rdi",
    "mov     dword [rsp+0x488], ebx",
    "call    memset",
    "lea     rax, [rsp+0x98]",
    "lea     rcx, [rsp+0x1a0]",
    "mov     dword [rsp+0x4b8], ebp",
    "mov     qword [rsp+0x4c8], rax",
    "xor     eax, eax",
    "mov     qword [rsp+0x4c0], rbx",
    "mov     qword [rsp+0x39], rax",
    "mov     qword [rsp+0x41], rax",
    "mov     qword [rsp+0x49], rax",
    "mov     word [rsp+0x51], ax",
    "mov     byte [rsp+0x53], al",
    "mov     qword [rsp+0x58], rax",
    "mov     dword [rsp+0x60], eax",
    "mov     qword [rsp+0x68], rax",
    "mov     dword [rsp+0x70], eax",
    "lea     rax, [rsp+0x1b0]",
    "mov     qword [rsp+0x30], rbx",
    "mov     byte [rsp+0x38], bl",
    "mov     qword [rsp+0x78], rax",
    "movzx   eax, word [rsi+0x50]",
    "mov     dword [rsp+0x54], ebx",
    "add     ax, r15w",
    "mov     dword [rsp+0x64], ebx",
    "mov     dword [rsp+0x74], 0xa",
    "mov     word [rsp+0x560], ax",
    "mov     dword [rsp+0x80], 0x1",
    "call    qword [rel UuidCreate]",
    "lea     rbx, [rsp+0x1a0]",
    "xor     edi, edi",
    "lea     rbp, [rsp+0x4d0]",
    "lea     r13d, [r15-0x20]",
    "movzx   r9d, byte [rbx]",
    "mov     edx, 0x21",
    "lea     r8, [rel data_1400f1330]  {u\"%02X\"}",
    "sub     rdx, rdi",
    "mov     rcx, rbp",
    "call    sub_1400c939c",
    "add     rdi, 0x2",
    "add     rbp, 0x4",
    "inc     rbx",
    "sub     r13, 0x1",
    "jne     0x1400bcdc4",
    "mov     r9, qword [rsi+0x40]",
    "mov     r8, qword [rsi+0x10]",
    "lea     rdx, [rel data_140126cd8]  {u\"CN=NTDS Settings,CN=%s%s\"}",
    "lea     rcx, [rsp+0x30]",
    "call    sub_140013b1c",
    "test    eax, eax",
    "je      0x1400bce4e",
    "mov     eax, r12d",
    "mov     rbx, qword [rsp+0x568]",
    "add     rsp, 0x520",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     eax, dword [rsp+0x74]",
    "xor     ebx, ebx",
    "test    eax, eax",
    "je      0x1400bce37",
    "cmp     ebx, eax",
    "jne     0x1400bce4e",
    "lea     rcx, [rbx+rbx*4]",
    "shl     rcx, 0x4",
    "add     rcx, qword [rsp+0x78]",
    "call    sub_1400bb620",
    "test    eax, eax",
    "mov     eax, dword [rsp+0x74]",
    "je      0x1400bce37",
    "lea     r8, [rsp+0x30]",
    "mov     rdx, r14",
    "mov     rcx, rsi",
    "call    sub_1400bc684",
    "mov     r12d, eax",
    "inc     ebx",
    "cmp     ebx, eax",
    "jb      0x1400bce17"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}