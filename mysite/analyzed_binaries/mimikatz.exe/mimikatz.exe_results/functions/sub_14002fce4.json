{
  "address": "0x14002fce4",
  "rules": [
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0xf0",
    "mov     rdi, qword [rcx+0x8]",
    "xor     ebx, ebx",
    "mov     rsi, rdx",
    "mov     rax, qword [rdi+0x8]",
    "lea     rdx, [rsp+0x80]",
    "lea     r14d, [rbx+0x1]",
    "mov     r13, qword [rax+0x30]",
    "mov     qword [rsp+0x20], rdi",
    "mov     rax, qword [rdi]",
    "mov     qword [rsp+0x28], rax",
    "mov     ecx, dword [rdi+0x3c]",
    "mov     r12d, r8d",
    "mov     dword [rsp+0x3c], r9d",
    "mov     dword [rsp+0x40], ebx",
    "mov     dword [rsp+0x44], ebx",
    "mov     dword [rsp+0x38], ecx",
    "mov     qword [rsp+0x48], rbx",
    "mov     dword [rsp+0x50], ebx",
    "mov     dword [rsp+0x54], ebx",
    "mov     qword [rsp+0x30], rbx",
    "mov     rax, rbx",
    "mov     qword [rsp+0x78], rbx",
    "mov     qword [rsp+0x60], rdx",
    "mov     qword [rsp+0x58], rbx",
    "mov     dword [rsp+0x68], 0x64",
    "mov     dword [rsp+0x6c], 0x3b9aca00",
    "mov     dword [rsp+0x70], ebx",
    "mov     byte [rsp+0x74], bl",
    "mov     byte [rsp+0x75], r14b",
    "cmp     ecx, ebx",
    "je      0x140030009",
    "mov     rcx, rax",
    "call    sub_14001e248",
    "mov     rcx, qword [rsp+0x30]",
    "call    sub_140016950",
    "cmp     dword [rsp+0x44], ebx",
    "je      0x14003003a",
    "shr     ecx, 0x3",
    "add     ecx, r14d",
    "call    sub_140016b70",
    "mov     qword [rsp+0x30], rax",
    "cmp     rax, rbx",
    "jne     0x14002fda6",
    "mov     r11d, dword [rsp+0x40]",
    "lea     rcx, [rsp+0x58]",
    "call    sub_140018594",
    "mov     r11d, dword [rsp+0x40]",
    "add     r11d, r14d",
    "mov     dword [rsp+0x40], r11d",
    "jmp     0x14003003f",
    "mov     ecx, dword [rdi+0x30]",
    "call    sub_14001e150",
    "mov     qword [rsp+0x78], rax",
    "cmp     rax, rbx",
    "jne     0x14002fdc2",
    "mov     dword [rsp+0x44], r14d",
    "jmp     0x140030004",
    "cmp     qword [rsp+0x60], rbx",
    "je      0x14003006d",
    "lea     rcx, [rsp+0x58]",
    "call    sub_140018594",
    "mov     rax, qword [rsp+0x140]",
    "mov     dword [rax], r11d",
    "cmp     r11d, ebx",
    "jne     0x140030059",
    "xor     edx, edx",
    "mov     eax, 0x40000000",
    "div     dword [rdi+0x30]",
    "add     eax, r14d",
    "cmp     eax, dword [rsp+0x38]",
    "ja      0x14002fdef",
    "mov     dword [rsp+0x44], r14d",
    "jmp     0x140030009",
    "mov     rax, qword [rsp+0x78]",
    "lea     r11, [rsp+0xf0]",
    "mov     rax, rbx",
    "mov     rbx, qword [r11+0x38]",
    "mov     rbp, qword [r11+0x40]",
    "mov     rsp, r11",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "lea     rcx, [rsp+0x58]",
    "call    sub_1400184e8",
    "mov     rbx, rax",
    "lea     rax, [rel data_1400f3f08]  {\"Main freelist: \"}",
    "mov     edx, r14d",
    "mov     qword [rsp+0x48], rax",
    "mov     rax, qword [rdi+0x18]",
    "mov     rcx, qword [rax+0x50]",
    "movzx   eax, byte [rcx+0x26]",
    "movzx   r9d, byte [rcx+0x25]",
    "movzx   r8d, byte [rcx+0x21]",
    "shl     r9d, 0x8",
    "shl     r8d, 0x8",
    "or      r9d, eax",
    "movzx   eax, byte [rcx+0x27]",
    "shl     r9d, 0x8",
    "or      r9d, eax",
    "movzx   eax, byte [rcx+0x24]",
    "shl     eax, 0x18",
    "or      r9d, eax",
    "movzx   eax, byte [rcx+0x22]",
    "or      r8d, eax",
    "movzx   eax, byte [rcx+0x20]",
    "shl     eax, 0x18",
    "shl     r8d, 0x8",
    "or      r8d, eax",
    "movzx   eax, byte [rcx+0x23]",
    "lea     rcx, [rsp+0x20]",
    "or      r8d, eax",
    "call    sub_14002f340",
    "mov     qword [rsp+0x48], rbx",
    "cmp     byte [rdi+0x21], bl",
    "je      0x14002fec7",
    "mov     r8, qword [rsp+0x30]",
    "mov     r9d, eax",
    "and     eax, 0x7",
    "mov     cl, al",
    "mov     edx, r14d",
    "shr     r9, 0x3",
    "shl     dl, cl",
    "or      byte [r9+r8], dl",
    "mov     rax, qword [rdi+0x18]",
    "mov     rdx, qword [rax+0x50]",
    "movzx   eax, byte [rdx+0x42]",
    "movzx   ecx, byte [rdx+0x41]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdx+0x40]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdx+0x43]",
    "or      ecx, eax",
    "je      0x14002ff01",
    "cmp     r12d, ebx",
    "mov     r8d, ebx",
    "jle     0x14002fe82",
    "mov     rax, qword [rdi+0x8]",
    "mov     ebp, ebx",
    "btr     qword [rax+0x30], 0x15",
    "cmp     r12d, ebx",
    "jle     0x14002ff62",
    "lea     rdx, [rel data_1400f3f48]  {\"incremental_vacuum enabled with \u2026\"}",
    "lea     rcx, [rsp+0x20]",
    "call    sub_14002f1a4",
    "mov     rax, qword [rdi+0x18]",
    "mov     rcx, qword [rax+0x50]",
    "movzx   eax, byte [rcx+0x36]",
    "movzx   r9d, byte [rcx+0x35]",
    "shl     r9d, 0x8",
    "or      r9d, eax",
    "movzx   eax, byte [rcx+0x34]",
    "shl     eax, 0x18",
    "shl     r9d, 0x8",
    "or      r9d, eax",
    "movzx   eax, byte [rcx+0x37]",
    "or      r9d, eax",
    "cmp     r8d, r9d",
    "je      0x14002ff01",
    "mov     rax, rsi",
    "mov     rcx, r12",
    "mov     rax, qword [rdi+0x8]",
    "mov     esi, r14d",
    "mov     qword [rax+0x30], r13",
    "cmp     dword [rsp+0x38], r14d",
    "jb      0x140030004",
    "cmp     dword [rsp+0x3c], ebx",
    "je      0x14002ff62",
    "lea     rdx, [rel data_1400f3f18]  {\"max rootpage (%d) disagrees with\u2026\"}",
    "lea     rcx, [rsp+0x20]",
    "call    sub_14002f1a4",
    "jmp     0x14002ff01",
    "cmp     r8d, dword [rax]",
    "cmovl   r8d, dword [rax]",
    "add     rax, 0x4",
    "sub     rcx, r14",
    "jne     0x14002fe72",
    "cmp     dword [rsp+0x3c], ebx",
    "je      0x140030004",
    "cmp     dword [rsi], ebx",
    "je      0x14002ff56",
    "mov     rax, qword [rsp+0x30]",
    "mov     ecx, esi",
    "mov     r12d, esi",
    "and     ecx, 0x7",
    "mov     ebp, r14d",
    "shr     r12, 0x3",
    "shl     ebp, cl",
    "test    byte [r12+rax], bpl",
    "jne     0x14002ffc5",
    "add     ebp, r14d",
    "add     rsi, 0x4",
    "cmp     ebp, r12d",
    "jl      0x14002ff12",
    "cmp     byte [rdi+0x21], bl",
    "je      0x14002ff38",
    "mov     rax, qword [rsp+0x30]",
    "test    byte [r12+rax], bpl",
    "je      0x14002fff7",
    "mov     edx, esi",
    "mov     rcx, rdi",
    "call    sub_1400264c0",
    "cmp     eax, esi",
    "jne     0x14002ffb1",
    "mov     edx, dword [rsi]",
    "lea     r8, [rsp+0x120]",
    "lea     rcx, [rsp+0x20]",
    "mov     r9, 0x7fffffffffffffff",
    "call    sub_14002f584",
    "cmp     dword [rsi], r14d",
    "jle     0x14002ff38",
    "add     esi, r14d",
    "cmp     esi, dword [rsp+0x38]",
    "jbe     0x14002ff78  {\"9\\$<\"}",
    "mov     edx, esi",
    "mov     rcx, rdi",
    "call    sub_1400264c0",
    "cmp     eax, esi",
    "jne     0x14002fff7",
    "lea     rdx, [rel data_1400f3f80]  {\"Page %d is never used\"}",
    "lea     rcx, [rsp+0x20]",
    "mov     r8d, esi",
    "call    sub_14002f1a4",
    "cmp     byte [rdi+0x21], bl",
    "jne     0x14002ffc5",
    "mov     edx, dword [rsi]",
    "lea     rcx, [rsp+0x20]",
    "xor     r9d, r9d",
    "mov     r8b, r14b",
    "call    sub_14002f298",
    "cmp     byte [rdi+0x21], bl",
    "je      0x14002fff7",
    "lea     rdx, [rel data_1400f3f98]  {\"Pointer map page %d is reference\u2026\"}",
    "lea     rcx, [rsp+0x20]",
    "mov     r8d, esi",
    "call    sub_14002f1a4"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}