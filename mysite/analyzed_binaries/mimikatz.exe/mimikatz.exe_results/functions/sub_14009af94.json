{
  "address": "0x14009af94",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "mov     qword [r11+0x10], rbp",
    "mov     qword [r11+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x50",
    "and     qword [r11-0x10], 0x0",
    "and     qword [r11-0x28], 0x0",
    "and     qword [r11-0x18], 0x0",
    "and     qword [r11-0x20], 0x0",
    "mov     ebx, r9d",
    "mov     ebp, r8d",
    "mov     edi, edx",
    "mov     rsi, rcx",
    "test    r8d, r8d",
    "je      0x14009afe6",
    "mov     r9d, dword [rsp+0x80]",
    "lea     rcx, [rsp+0x40]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], 0xf0000000",
    "call    qword [rel CryptAcquireContextW]",
    "test    eax, eax",
    "je      0x14009b048",
    "lea     rax, [r11-0x28]",
    "lea     r9, [r11-0x10]",
    "lea     r8, [rel data_140108510]  {u\"PRIVATEBLOB\"}",
    "mov     qword [r11-0x38], rax",
    "call    sub_1400054a4",
    "jmp     0x14009b048",
    "mov     rcx, qword [rsp+0x30]",
    "mov     rdx, qword [rsp+0x38]",
    "test    rcx, rcx",
    "jne     0x14009b102",
    "mov     rcx, qword [rsp+0x40]",
    "lea     rax, [rsp+0x38]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x28], rax",
    "mov     r8d, edi",
    "mov     rdx, rsi",
    "mov     dword [rsp+0x20], 0x1",
    "call    qword [rel CryptImportKey]",
    "test    eax, eax",
    "jne     0x14009b048",
    "mov     r8, qword [rsp+0x40]",
    "call    sub_14009a99c",
    "cmp     dword [rsp+0xa0], 0x0",
    "je      0x14009b142",
    "test    rdx, rdx",
    "jne     0x14009b102",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140108530]  {u\"ERROR kuhl_m_crypto_exportRawKey\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rdx, [rsp+0x30]",
    "lea     rcx, [rsp+0x48]",
    "call    sub_1400053e4",
    "mov     rcx, qword [rsp+0x38]",
    "test    rcx, rcx",
    "je      0x14009b161",
    "mov     rax, qword [rsp+0x98]",
    "mov     r9, qword [rsp+0x88]",
    "mov     rdx, qword [rsp+0x38]",
    "mov     rcx, qword [rsp+0x30]",
    "mov     qword [rsp+0x28], rax",
    "and     dword [rsp+0x20], 0x0",
    "mov     r8d, ebx",
    "call    sub_14009b188",
    "mov     r9, qword [rsp+0x98]",
    "mov     rcx, qword [rsp+0x88]",
    "lea     rax, [rel data_1400fbdb8]",
    "lea     rdx, [rel data_1400fbdc0]  {u\"capi\"}",
    "test    ebp, ebp",
    "cmovne  rdx, rax",
    "lea     rax, [rel data_1401085b8]  {u\"binary\"}",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14009b814",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14009b161",
    "mov     rcx, qword [rsp+0x40]",
    "test    rcx, rcx",
    "je      0x14009b173",
    "call    qword [rel CryptDestroyKey]",
    "lea     rcx, [rel data_1401085c8]  {u\"\\tPrivate raw export : \"}",
    "call    sub_14000c030",
    "mov     r8d, edi",
    "mov     rdx, rsi",
    "mov     rcx, rbx",
    "call    sub_140009ce8",
    "test    eax, eax",
    "je      0x14009b0d7",
    "mov     rbx, qword [rsp+0x60]",
    "mov     rbp, qword [rsp+0x68]",
    "mov     rsi, qword [rsp+0x70]",
    "add     rsp, 0x50",
    "pop     rdi",
    "retn    ",
    "xor     edx, edx",
    "call    qword [rel CryptReleaseContext]",
    "lea     rcx, [rel data_140108610]  {u\"KO - \"}",
    "call    sub_14000c030",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140108620]  {u\"ERROR kuhl_m_crypto_exportRawKey\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1401085f8]  {u\"OK - '%s'\\n\"}",
    "mov     rdx, rbx",
    "call    sub_14000c030",
    "jmp     0x14009b0f7",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "jmp     0x14009b161"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}