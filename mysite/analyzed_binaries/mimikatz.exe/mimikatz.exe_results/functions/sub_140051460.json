{
  "address": "0x140051460",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     r12, qword [rcx+0x130]",
    "mov     r15, qword [rcx]",
    "xor     ebx, ebx",
    "mov     rsi, r9",
    "mov     r13, r8",
    "mov     r14, rdx",
    "mov     rbp, rcx",
    "mov     qword [rsp+0x28], r15",
    "cmp     r12, rbx",
    "je      0x14005180e",
    "cmp     r14, rbx",
    "je      0x14005181e",
    "cmp     byte [rcx+0x104], 0x1",
    "je      0x14005180e",
    "cmp     rsi, rbx",
    "je      0x14005182e",
    "mov     rdx, r14",
    "mov     rcx, r15",
    "call    sub_140044bf4",
    "cmp     rdx, rbx",
    "jne     0x1400514f0",
    "mov     rbx, qword [rsp+0x80]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rdx, rsi",
    "mov     rcx, r15",
    "call    sub_140044bf4",
    "cmp     r9, rbx",
    "je      0x14005150d",
    "movsx   eax, word [r12+0x46]",
    "sub     eax, 0x1",
    "js      0x14005181e",
    "mov     ebx, dword [rdx]",
    "mov     eax, dword [rdx]",
    "cmp     dword [r9], eax",
    "je      0x14005150d",
    "cmp     r9, rbx",
    "je      0x1400514e9",
    "movsxd  rdx, r8d",
    "mov     rcx, r15",
    "call    sub_140016ba8",
    "mov     rdi, rax",
    "xor     eax, eax",
    "cmp     rdi, rax",
    "je      0x14005180c",
    "cmp     dword [r9], eax",
    "jle     0x140051546",
    "lea     rdx, [rel data_1400f5c90]  {\"number of columns in foreign key\u2026\"}",
    "call    sub_1400191b8",
    "jmp     0x14005180e",
    "mov     ebx, 0x1",
    "jmp     0x14005150f",
    "cmp     dword [r9], 0x1",
    "je      0x1400514e9",
    "xor     ebx, ebx",
    "movsxd  r15, ebx",
    "mov     qword [rdi], r12",
    "mov     rcx, qword [r12+0x20]",
    "mov     qword [rsp+0x78], r15",
    "add     r15, 0x4",
    "mov     qword [rdi+0x8], rcx",
    "shl     r15, 0x4",
    "add     r15, rdi",
    "mov     qword [rdi+0x10], r15",
    "cmp     byte [rbp+0x104], 0x2",
    "jb      0x140051599",
    "lea     rdx, [r9+0x10]",
    "mov     r9d, dword [r9]",
    "mov     eax, dword [r8+0x8]",
    "mov     ecx, ebx",
    "add     ecx, ecx",
    "lea     r8d, [rax+rcx*8+0x41]",
    "xor     eax, eax",
    "cmp     r9, rax",
    "je      0x140051546",
    "mov     r8, qword [r12+0x8]",
    "cdqe    ",
    "lea     rdx, [rel data_1400f5c48]  {\"foreign key on %s should referen\u2026\"}",
    "shl     rax, 0x5",
    "mov     r9, r13",
    "mov     r8, qword [rax+r8]",
    "call    sub_1400191b8",
    "jmp     0x14005181e",
    "mov     r8d, dword [r13+0x8]",
    "mov     rdx, qword [r13]",
    "mov     rcx, r15",
    "call    memcpy",
    "mov     r11d, dword [r13+0x8]",
    "xor     eax, eax",
    "mov     rcx, r15",
    "mov     byte [r11+r15], al",
    "call    sub_140019224",
    "mov     eax, dword [r13+0x8]",
    "mov     dword [rdi+0x28], ebx",
    "inc     eax",
    "add     r15, rax",
    "xor     eax, eax",
    "cmp     r14, rax",
    "jne     0x14005162f",
    "mov     r8, r13",
    "mov     rdx, r15",
    "mov     rcx, rbp",
    "call    sub_14004a2b8",
    "mov     rcx, qword [rdx]",
    "call    sub_140019074",
    "add     rdx, 0x28",
    "sub     r9, 0x1",
    "lea     r8d, [r8+rax+0x1]",
    "jne     0x14005152f",
    "movsxd  r10, ebx",
    "mov     r13d, eax",
    "mov     r9, rax",
    "cmp     r10, rax",
    "mov     qword [rsp+0x88], rax",
    "jle     0x1400515de",
    "movsx   eax, word [r12+0x46]",
    "mov     r10, qword [rsp+0x78]",
    "dec     eax",
    "mov     dword [rdi+0x40], eax",
    "xor     ebx, ebx",
    "lea     rdx, [r14+0x10]",
    "lea     r8, [rdi+0x40]",
    "xor     ebx, ebx",
    "mov     qword [rsp+0x70], rdx",
    "mov     qword [rsp+0x20], r8",
    "mov     eax, dword [rsp+0x90]",
    "mov     rdx, qword [rdi+0x10]",
    "mov     byte [rdi+0x2c], bl",
    "mov     byte [rdi+0x2d], al",
    "sar     eax, 0x8",
    "mov     r8, rdi",
    "mov     byte [rdi+0x2e], al",
    "mov     rcx, qword [r12+0x70]",
    "add     rcx, 0x50",
    "call    sub_14001a4ac",
    "cmp     rax, rdi",
    "jne     0x1400517e0",
    "cmp     r10, rbx",
    "jle     0x1400517a4",
    "movsx   eax, word [r12+0x46]",
    "cmp     r11d, eax",
    "jge     0x14005171c",
    "mov     rbx, qword [r12+0x8]",
    "cmp     rax, rbx",
    "je      0x1400517ed",
    "mov     r15, qword [rsp+0x28]",
    "mov     rcx, r15",
    "call    sub_140016efc",
    "jmp     0x1400517fa",
    "lea     rdx, [rdi+0x48]",
    "lea     r13, [rsi+0x10]",
    "mov     qword [rsp+0x88], rdx",
    "movsxd  rax, r13d",
    "lea     rdx, [rel data_1400f5cf0]  {\"unknown column \"%s\" in foreign k\u2026\"}",
    "mov     rcx, rbp",
    "lea     r8, [rax+rax*4]",
    "mov     r8, qword [r14+r8*8+0x10]",
    "call    sub_1400191b8",
    "jmp     0x1400517f5",
    "cmp     byte [rbp+0x104], 0x2",
    "jb      0x1400516ee",
    "mov     r8, qword [rsp+0x20]",
    "mov     dword [r8], r11d",
    "movsx   eax, word [r12+0x46]",
    "inc     r11d",
    "add     rbx, 0x20",
    "cmp     r11d, eax",
    "jl      0x140051669",
    "mov     qword [r12+0x20], rdi",
    "mov     rdi, rbx",
    "mov     qword [rdi+0x18], rax",
    "mov     qword [rax+0x20], rdi",
    "cmp     rdi, rbx",
    "je      0x14005180e",
    "mov     rdx, qword [r13]",
    "movsxd  rbx, eax",
    "mov     rcx, r15",
    "mov     r8, rbx",
    "call    memcpy",
    "mov     rdx, qword [rsp+0x88]",
    "mov     r10, qword [rsp+0x78]",
    "xor     eax, eax",
    "add     rdx, 0x10",
    "add     r13, 0x28",
    "mov     byte [rbx+r15], al",
    "mov     eax, dword [rsp+0x70]",
    "mov     qword [rsp+0x88], rdx",
    "inc     eax",
    "mov     ebx, 0x0",
    "movsxd  rcx, eax",
    "add     r15, rcx",
    "sub     r10, 0x1",
    "mov     qword [rsp+0x78], r10",
    "jne     0x140051602",
    "mov     rdx, qword [r13]",
    "mov     rcx, qword [rbp+0x188]",
    "jmp     0x140051745",
    "mov     r15, qword [rsp+0x28]",
    "inc     r9",
    "add     r8, 0x10",
    "add     rdx, 0x28",
    "inc     r13d",
    "cmp     r9, r10",
    "mov     qword [rsp+0x88], r9",
    "mov     qword [rsp+0x20], r8",
    "mov     qword [rsp+0x70], rdx",
    "jl      0x140051659",
    "mov     rax, qword [rdx]",
    "mov     rcx, qword [rbp+0x188]",
    "jmp     0x1400516d6",
    "mov     rdx, qword [rdx]",
    "mov     rcx, qword [rbx]",
    "call    sub_1400192b0",
    "mov     rdx, qword [rsp+0x70]",
    "test    eax, eax",
    "je      0x140051696",
    "mov     r8, qword [rsp+0x20]",
    "jmp     0x14005169e",
    "mov     rdx, rdi",
    "mov     rcx, r15",
    "call    sub_1400169a8",
    "jmp     0x14005180e",
    "mov     rcx, qword [r13]",
    "call    sub_140019074",
    "mov     qword [rdx], r15",
    "cmp     byte [rbp+0x104], 0x2",
    "mov     dword [rsp+0x70], eax",
    "jb      0x14005174f",
    "cmp     rcx, rbx",
    "jne     0x14005173c",
    "cmp     bx, word [r12+0x46]",
    "mov     r11d, ebx",
    "jge     0x1400516ad",
    "jmp     0x1400515e0",
    "cmp     rcx, rbx",
    "jne     0x1400516cd",
    "mov     r10, qword [rsp+0x78]",
    "mov     r9, qword [rsp+0x88]",
    "xor     ebx, ebx",
    "cmp     qword [rcx], rdx",
    "je      0x14005174c",
    "jmp     0x14005174f",
    "cmp     rsi, rbx",
    "je      0x1400517a4",
    "cmp     qword [rcx], rax",
    "je      0x1400516dd",
    "jmp     0x1400516ee",
    "mov     qword [rcx], r15",
    "mov     rcx, qword [rcx+0x18]",
    "movsxd  rax, r13d",
    "add     rax, 0x4",
    "shl     rax, 0x4",
    "add     rax, rdi",
    "mov     qword [rcx], rax",
    "mov     rcx, qword [rcx+0x18]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}