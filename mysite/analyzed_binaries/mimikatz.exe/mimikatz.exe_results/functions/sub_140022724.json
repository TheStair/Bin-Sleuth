{
  "address": "0x140022724",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "PEB access/e2c35c8722ff407f92bb1a8869064106",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x20",
    "mov     rdi, qword [rcx+0x28]",
    "mov     rbp, qword [rcx+0x8]",
    "mov     rsi, rcx",
    "mov     eax, dword [rdi+0xbc]",
    "mov     r12, qword [rdi+0x60]",
    "mov     ebx, dword [rdi+0x34]",
    "mov     ecx, 0xc8",
    "sub     eax, ecx",
    "movsxd  rdx, eax",
    "test    eax, eax",
    "jle     0x140022770",
    "mov     r8d, dword [rsi+0x30]",
    "mov     r13d, 0x8",
    "mov     rdx, r12",
    "or      word [rsi+0x34], r13w",
    "mov     rcx, qword [rdi+0x50]",
    "call    sub_14001efb8",
    "test    eax, eax",
    "jne     0x1400227f5",
    "movzx   eax, byte [rdx+rbp]",
    "sub     rdx, rcx",
    "add     ebx, eax",
    "test    rdx, rdx",
    "jg      0x140022762",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "add     rsp, 0x20",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     rcx, qword [rdi+0x50]",
    "mov     r8d, dword [rdi+0xbc]",
    "lea     r9, [r12+0x4]",
    "mov     rax, qword [rcx]",
    "mov     rdx, rbp",
    "call    qword [rax+0x18]",
    "test    eax, eax",
    "jne     0x1400227f5",
    "movsxd  rax, dword [rdi+0xbc]",
    "mov     rcx, qword [rdi+0x50]",
    "mov     r8d, ebx",
    "lea     rdx, [rax+r12+0x4]",
    "call    sub_14001efb8",
    "test    eax, eax",
    "jne     0x1400227f5",
    "mov     eax, dword [rdi+0xbc]",
    "inc     dword [rdi+0x30]",
    "mov     rcx, qword [rdi+0x40]",
    "add     eax, r13d",
    "cdqe    ",
    "add     qword [rdi+0x60], rax",
    "mov     edx, dword [rsi+0x30]",
    "call    sub_14001d808",
    "mov     edx, dword [rsi+0x30]",
    "mov     rcx, rdi",
    "mov     ebx, eax",
    "call    sub_14001f7d8",
    "or      eax, ebx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}