{
  "address": "0x1400758ac",
  "rules": [
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "contain loop"
  ],
  "disassembly": [
    "mov     r8, qword [rcx]",
    "xor     r11d, r11d",
    "cmp     r8, r11",
    "je      0x14007594c",
    "mov     rax, rcx",
    "retn    ",
    "mov     r10b, byte [rdx+0x10]",
    "lea     rcx, [r8+0x40]",
    "mov     r8, qword [rcx]",
    "cmp     r8, r11",
    "jne     0x1400758bf",
    "mov     al, byte [rdx+0x11]",
    "cmp     byte [r8+0x11], al",
    "jne     0x14007593c",
    "cmp     byte [r8+0x10], r10b",
    "jne     0x14007593c",
    "bt      dword [r8+0x28], 0xe",
    "jae     0x1400758f5",
    "mov     r9, qword [rdx]",
    "and     r9, qword [r8]",
    "cmp     r9, qword [r8]",
    "jne     0x140075921",
    "cmp     word [rdx+0x2e], r11w",
    "jne     0x1400758f5",
    "cmp     r9, qword [rdx]",
    "jne     0x14007593c",
    "movzx   eax, word [rdx+0x12]",
    "cmp     word [r8+0x12], ax",
    "jg      0x140075921",
    "bt      dword [rdx+0x28], 0x9",
    "jae     0x1400758f5",
    "movzx   eax, word [rdx+0x14]",
    "cmp     word [r8+0x14], ax",
    "jl      0x14007593c",
    "movzx   eax, word [rdx+0x14]",
    "cmp     word [r8+0x14], ax",
    "jg      0x140075921",
    "test    byte [rdx+0x28], 0x1",
    "je      0x1400758f5",
    "movzx   eax, word [rdx+0x16]",
    "cmp     word [r8+0x16], ax",
    "jge     0x14007594c",
    "movzx   eax, word [rdx+0x16]",
    "cmp     word [r8+0x16], ax",
    "jle     0x140075950",
    "mov     rax, qword [r8]",
    "and     rax, qword [rdx]",
    "cmp     rax, qword [rdx]",
    "je      0x14007594c",
    "xor     eax, eax",
    "retn    "
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}