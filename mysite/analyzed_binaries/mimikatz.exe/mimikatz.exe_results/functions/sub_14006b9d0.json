{
  "address": "0x14006b9d0",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x80",
    "mov     rbx, qword [rcx+0x140]",
    "and     qword [rcx+0x140], 0x0",
    "cmp     dword [rcx+0x30], 0x0",
    "mov     rdi, qword [rcx]",
    "mov     r14, r8",
    "mov     rbp, rdx",
    "mov     rsi, rcx",
    "jne     0x14006bc25",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_14006bfac",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "call    sub_14006b380",
    "lea     r11, [rsp+0x80]",
    "mov     rbx, qword [r11+0x38]",
    "mov     rbp, qword [r11+0x40]",
    "mov     rsi, qword [r11+0x48]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "test    rbx, rbx",
    "je      0x14006bc25",
    "mov     rdx, qword [rbx+0x28]",
    "mov     r15, qword [rbx]",
    "mov     r12d, 0xfff0bdc0",
    "test    rdx, rdx",
    "je      0x14006ba4c",
    "mov     qword [rbx+0x38], rbp",
    "jmp     0x14006ba5a",
    "mov     rax, qword [rdi+0x20]",
    "xor     r12d, r12d",
    "cmp     qword [rax+0x18], rdx",
    "je      0x14006ba4c",
    "test    rbp, rbp",
    "jne     0x14006ba52",
    "lea     rcx, [rax+0x18]",
    "mov     qword [rbp+0x8], rbx",
    "mov     rbp, qword [rbp+0x48]",
    "mov     rcx, qword [rbx]",
    "mov     qword [rsp+0x40], rcx",
    "call    sub_140019074",
    "mov     rdx, qword [rsi]",
    "mov     dword [rsp+0x48], eax",
    "mov     qword [rsp+0x50], rsi",
    "mov     rax, qword [rdx+0x20]",
    "movsxd  r13, r12d",
    "shl     r13, 0x5",
    "mov     qword [rsp+0xb0], r13",
    "mov     rcx, qword [r13+rax]",
    "mov     qword [rsp+0x68], rcx",
    "mov     rax, qword [rdx+0x20]",
    "mov     rcx, qword [rax+r13+0x18]",
    "lea     rax, [rel data_1400f6de8]  {\"trigger\"}",
    "mov     qword [rsp+0x70], rax",
    "lea     rax, [rsp+0x40]",
    "mov     qword [rsp+0x58], rcx",
    "mov     qword [rsp+0x78], rax",
    "xor     eax, eax",
    "cmp     r12d, 0x1",
    "sete    al",
    "lea     rcx, [rsp+0x50]",
    "mov     dword [rsp+0x60], eax",
    "mov     rdx, qword [rbx+0x38]",
    "call    sub_14004d880",
    "test    eax, eax",
    "jne     0x14006bc25",
    "add     rcx, 0x20",
    "inc     r12d",
    "cmp     qword [rcx], rdx",
    "jne     0x14006ba40",
    "mov     rdx, qword [rbx+0x18]",
    "lea     rcx, [rsp+0x50]",
    "call    sub_14004d788",
    "test    eax, eax",
    "jne     0x14006bc25",
    "cmp     byte [rsi+0x104], 0x2",
    "jb      0x14006bb09",
    "cmp     byte [rdi+0xb5], 0x0",
    "jne     0x14006bbce",
    "mov     qword [rsi+0x140], rbx",
    "xor     ebx, ebx",
    "jmp     0x14006bbc5",
    "mov     rax, qword [rdi+0x20]",
    "mov     r8, rbx",
    "mov     rdx, r15",
    "mov     rcx, qword [rax+r13+0x18]",
    "mov     rsi, rbx",
    "add     rcx, 0x38",
    "call    sub_14001a4ac",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14006bbfb",
    "mov     rcx, rsi",
    "call    sub_140065300",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x14006bc25",
    "cmp     byte [rdi+0xb5], 0x0",
    "je      0x14006bc25",
    "mov     rcx, qword [rsi+0x30]",
    "cmp     qword [rsi+0x28], rcx",
    "jne     0x14006bc25",
    "mov     rcx, rdi",
    "call    sub_140016efc",
    "jmp     0x14006bc25",
    "mov     r8d, r12d",
    "xor     edx, edx",
    "mov     rcx, rsi",
    "call    sub_14005398c",
    "mov     r8d, dword [r14+0x8]",
    "mov     rdx, qword [r14]",
    "mov     rcx, rdi",
    "call    sub_140016e18",
    "mov     rcx, qword [rbx+0x8]",
    "mov     r8, qword [rdi+0x20]",
    "mov     qword [rsp+0x30], rax",
    "mov     qword [rsp+0x28], rcx",
    "mov     r14, rax",
    "mov     rax, qword [rsp+0xb0]",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "lea     rdx, [rel data_1400f6ed0]  {\"INSERT INTO %Q.%s VALUES('trigge\u2026\"}",
    "mov     r8, qword [r8+rax]",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20], r15",
    "call    sub_14004dd58",
    "test    r14, r14",
    "je      0x14006bb92",
    "mov     rdx, qword [rsi+0x8]",
    "add     rcx, 0x8",
    "xor     r8d, r8d",
    "call    sub_14001a410",
    "mov     rdx, qword [rax+0x10]",
    "mov     rax, qword [rdx+0x68]",
    "mov     qword [rsi+0x40], rax",
    "mov     qword [rdx+0x68], rsi",
    "mov     edx, r12d",
    "mov     rcx, rsi",
    "call    sub_14004f620",
    "lea     rdx, [rel data_1400f6f10]  {\"type='trigger' AND name='%q'\"}",
    "mov     r8, r15",
    "mov     rcx, rdi",
    "call    _printf_p_l",
    "mov     edx, r12d",
    "mov     rcx, r13",
    "mov     r8, rax",
    "call    sub_140032608",
    "mov     r13, qword [rsp+0xb0]",
    "mov     rdx, r14",
    "mov     rcx, rdi",
    "call    sub_1400169a8"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}