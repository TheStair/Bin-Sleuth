{
  "address": "0x1400c0bec",
  "rules": [
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "encrypt or decrypt data via BCrypt",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0xa0",
    "lea     rax, [rel data_1400e6550]  {u\"Microsoft Software Key Storage P\u2026\"}",
    "lea     r9, [rsp+0x58]",
    "lea     r8, [rel data_140108088]  {u\"provider\"}",
    "mov     rbx, rdx",
    "mov     esi, ecx",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140013220",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_1400ff4d8]  {u\"keyname\"}",
    "mov     rdx, rbx",
    "mov     ecx, esi",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400c10f6",
    "lea     rcx, [rel data_14012c500]  {u\"ERROR kuhl_m_ngc_decrypt ; a /ke\u2026\"}",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x70]",
    "lea     r8, [rel data_1400f8de8]",
    "mov     rdx, rbx",
    "mov     ecx, esi",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400c10ed",
    "lea     rcx, [rel data_14012c490]  {u\"ERROR kuhl_m_ngc_decrypt ; a /pi\u2026\"}",
    "jmp     0x1400c10fd",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x50]",
    "lea     r8, [rel data_1400fbf80]  {u\"data\"}",
    "mov     rdx, rbx",
    "mov     ecx, esi",
    "call    sub_140013220",
    "test    eax, eax",
    "jne     0x1400c0cb6",
    "call    sub_14000c030",
    "mov     rdi, qword [rsp+0x50]",
    "or      r12, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rcx, r12",
    "repne scasw word [rdi]",
    "not     rcx",
    "dec     rcx",
    "mov     rdi, rcx",
    "mov     dword [rsp+0xe8], ecx",
    "test    cl, 0x1",
    "jne     0x1400c0cfa",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x50]",
    "lea     r8, [rel data_14012bec8]  {u\"enckey\"}",
    "mov     rdx, rbx",
    "mov     ecx, esi",
    "call    sub_140013220",
    "test    eax, eax",
    "jne     0x1400c0cb6",
    "test    eax, eax",
    "je      0x1400c10e4",
    "mov     rcx, qword [rsp+0x50]",
    "lea     r8, [rsp+0xe8]",
    "lea     rdx, [rsp+0x78]",
    "call    sub_140012ed0",
    "mov     edi, dword [rsp+0xe8]",
    "lea     rcx, [rel data_14012c400]  {u\"ERROR kuhl_m_ngc_decrypt ; a /da\u2026\"}",
    "jmp     0x1400c10fd",
    "lea     rcx, [rel data_14012c380]  {u\"ERROR kuhl_m_ngc_decrypt ; unabl\u2026\"}",
    "jmp     0x1400c10fd",
    "mov     r9, qword [rsp+0x70]",
    "mov     r8, qword [rsp+0x60]",
    "mov     rdx, qword [rsp+0x58]",
    "lea     rcx, [rel data_14012bee0]  {u\"Provider   : %s\\nKeyName    : %s\u2026\"}",
    "call    sub_14000c030",
    "mov     r14, qword [rsp+0x78]",
    "xor     r8d, r8d",
    "mov     rcx, r14",
    "mov     edx, edi",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x58]",
    "lea     rcx, [rsp+0x90]",
    "xor     r8d, r8d",
    "call    NCryptOpenStorageProvider",
    "test    eax, eax",
    "jne     0x1400c10cb",
    "lea     rcx, [rel data_14012c300]  {u\"ERROR kuhl_m_ngc_decrypt ; NCryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x70]",
    "call    qword [rel lstrlenW]",
    "mov     r8, qword [rsp+0x70]",
    "mov     rdx, qword [rsp+0x60]",
    "mov     rcx, qword [rsp+0x90]",
    "lea     r9d, [rax+rax+0x2]",
    "lea     rax, [rsp+0x68]",
    "mov     qword [rsp+0x38], rax",
    "lea     rax, [rsp+0xe8]",
    "mov     qword [rsp+0x30], rax",
    "mov     dword [rsp+0x28], edi",
    "mov     qword [rsp+0x20], r14",
    "call    sub_1400064d8",
    "test    eax, eax",
    "jne     0x1400c10bc",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0xd0]",
    "add     rsp, 0xa0",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "mov     rcx, qword [rsp+0x90]",
    "call    NCryptFreeObject",
    "jmp     0x1400c10d9",
    "lea     rcx, [rel data_14012bf60]  {u\"Output     : \"}",
    "call    sub_14000c030",
    "mov     r13, qword [rsp+0xe8]",
    "mov     edx, dword [rsp+0x68]",
    "mov     rcx, r13",
    "xor     r8d, r8d",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_14012bf7c]",
    "mov     rdx, rbx",
    "mov     ecx, esi",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400c10b3",
    "mov     rcx, r14",
    "call    qword [rel LocalFree]",
    "jmp     0x1400c1102",
    "mov     rcx, r13",
    "call    qword [rel LocalFree]",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x58]",
    "lea     r8, [rel data_14012bf88]  {u\"encPassword\"}",
    "mov     rdx, rbx",
    "mov     ecx, esi",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400c10b3",
    "mov     rdi, qword [rsp+0x60]",
    "xor     eax, eax",
    "mov     rcx, r12",
    "repne scasw word [rdi]",
    "not     rcx",
    "dec     rcx",
    "mov     rbx, rcx",
    "mov     dword [rsp+0xe8], ecx",
    "test    cl, 0x1",
    "jne     0x1400c0e5e",
    "test    eax, eax",
    "je      0x1400c10a7",
    "mov     rcx, qword [rsp+0x60]",
    "lea     r8, [rsp+0xe8]",
    "lea     rdx, [rsp+0x78]",
    "call    sub_140012ed0",
    "mov     ebx, dword [rsp+0xe8]",
    "lea     rcx, [rel data_14012c280]  {u\"ERROR kuhl_m_ngc_decrypt ; unabl\u2026\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_14012bfa0]  {u\"IV         : \"}",
    "call    sub_14000c030",
    "mov     r12, qword [rsp+0x78]",
    "xor     r8d, r8d",
    "mov     rcx, r12",
    "mov     edx, ebx",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rdi, qword [rsp+0x58]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "repne scasw word [rdi]",
    "not     rcx",
    "dec     rcx",
    "mov     rsi, rcx",
    "mov     dword [rsp+0xe8], ecx",
    "test    cl, 0x1",
    "jne     0x1400c0ed1",
    "test    eax, eax",
    "je      0x1400c1090",
    "mov     rcx, qword [rsp+0x58]",
    "lea     r8, [rsp+0xe8]",
    "lea     rdx, [rsp+0x50]",
    "call    sub_140012ed0",
    "mov     esi, dword [rsp+0xe8]",
    "lea     rcx, [rel data_14012c1f0]  {u\"ERROR kuhl_m_ngc_decrypt ; unabl\u2026\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_14012bfc0]  {u\"EncPassword: \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x50]",
    "xor     r8d, r8d",
    "mov     edx, esi",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     rdx, [rel data_1400e2998]",
    "lea     rcx, [rsp+0x88]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "call    BCryptOpenAlgorithmProvider",
    "test    eax, eax",
    "jne     0x1400c1075",
    "lea     rcx, [rel data_14012c170]  {u\"ERROR kuhl_m_ngc_decrypt ; BCryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "and     dword [rsp+0x30], eax",
    "mov     eax, dword [rsp+0x68]",
    "mov     rcx, qword [rsp+0x88]",
    "mov     dword [rsp+0x28], eax",
    "lea     rdx, [rsp+0x80]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x20], r13",
    "call    BCryptGenerateSymmetricKey",
    "test    eax, eax",
    "jne     0x1400c1056",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "jmp     0x1400c10b3",
    "lea     rcx, [rel data_14012c0f0]  {u\"ERROR kuhl_m_ngc_decrypt ; BCryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x50]",
    "mov     rcx, qword [rsp+0x80]",
    "mov     dword [rsp+0x48], 0x1",
    "lea     rax, [rsp+0xe0]",
    "xor     r9d, r9d",
    "mov     r8d, esi",
    "mov     qword [rsp+0x40], rax",
    "and     dword [rsp+0x38], 0x0",
    "and     qword [rsp+0x30], 0x0",
    "mov     dword [rsp+0x28], ebx",
    "mov     qword [rsp+0x20], r12",
    "call    BCryptDecrypt",
    "test    eax, eax",
    "jne     0x1400c1039",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel LocalFree]",
    "jmp     0x1400c109c",
    "lea     rcx, [rel data_14012c080]  {u\"ERROR kuhl_m_ngc_decrypt ; BCryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0xe0]",
    "lea     ecx, [rax+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1400c1047",
    "mov     rcx, qword [rsp+0x88]",
    "xor     edx, edx",
    "call    BCryptCloseAlgorithmProvider",
    "jmp     0x1400c1083",
    "mov     rcx, qword [rsp+0x80]",
    "call    BCryptDestroyKey",
    "jmp     0x1400c1064",
    "mov     ecx, dword [rsp+0xe0]",
    "mov     rdx, qword [rsp+0x50]",
    "mov     dword [rsp+0x48], 0x1",
    "lea     rax, [rsp+0xe0]",
    "xor     r9d, r9d",
    "mov     r8d, esi",
    "mov     qword [rsp+0x40], rax",
    "mov     dword [rsp+0x38], ecx",
    "mov     rcx, qword [rsp+0x80]",
    "mov     qword [rsp+0x30], rdi",
    "mov     dword [rsp+0x28], ebx",
    "mov     qword [rsp+0x20], r12",
    "call    BCryptDecrypt",
    "test    eax, eax",
    "jne     0x1400c1020",
    "lea     rcx, [rel data_14012c010]  {u\"ERROR kuhl_m_ngc_decrypt ; BCryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0xe0]",
    "lea     rcx, [rel data_14012bfe0]  {u\"\\nPassword   : %.*s\\n\"}",
    "mov     r8, rdi",
    "shr     rdx, 0x1",
    "call    sub_14000c030",
    "jmp     0x1400c102e",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "jmp     0x1400c1047"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}