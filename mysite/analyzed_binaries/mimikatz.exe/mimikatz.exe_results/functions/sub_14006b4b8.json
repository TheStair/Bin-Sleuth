{
  "address": "0x14006b4b8",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     dword [rsp+0x20], r9d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x60",
    "mov     rbx, qword [rcx]",
    "mov     r13, qword [rsp+0xd0]",
    "xor     r15d, r15d",
    "lea     eax, [r15+0x1]",
    "mov     rbp, r8",
    "mov     r12, rdx",
    "mov     rdi, rcx",
    "mov     r14, r15",
    "cmp     dword [rsp+0xe0], r15d",
    "je      0x14006b514",
    "cmp     dword [r8+0x8], r15d",
    "jbe     0x14006b53d",
    "cmp     dword [r8+0x8], r15d",
    "jbe     0x14006b510",
    "movzx   esi, byte [rbx+0xb4]",
    "lea     r9, [rsp+0xa0]",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_14004e6f0",
    "mov     r12, qword [rsp+0xa0]",
    "mov     esi, eax",
    "mov     eax, 0x1",
    "jmp     0x14006b544",
    "mov     esi, eax",
    "jmp     0x14006b54d",
    "lea     rdx, [rel data_1400f6db8]  {\"temporary trigger may not have q\u2026\"}",
    "mov     rdx, r13",
    "mov     rcx, rbx",
    "call    sub_140053434",
    "mov     rdx, qword [rsp+0xc8]",
    "mov     rcx, rbx",
    "call    sub_1400530cc",
    "mov     rdx, qword [rsp+0xd8]",
    "cmp     rdx, r15",
    "je      0x14006b9a3",
    "cmp     r13, r15",
    "je      0x14006b973",
    "cmp     esi, r15d",
    "jl      0x14006b973",
    "cmp     qword [rdi+0x140], r15",
    "jne     0x14006b9b7",
    "mov     rcx, rbx",
    "call    sub_140043de4",
    "cmp     byte [rbx+0x61], r15b",
    "jne     0x14006b973",
    "mov     rbx, qword [rsp+0xa8]",
    "add     rsp, 0x60",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rdx, r14",
    "mov     rcx, rbx",
    "call    sub_14006bfac",
    "cmp     byte [rbx+0xb5], r15b",
    "je      0x14006b582",
    "mov     rdx, r13",
    "mov     rcx, rdi",
    "call    sub_1400549b0",
    "mov     r11, rax",
    "cmp     byte [rbx+0xb5], r15b",
    "jne     0x14006b5bc",
    "cmp     esi, eax",
    "je      0x14006b582",
    "mov     r9d, 0x1",
    "cmp     dword [rbp+0x8], r15d",
    "jne     0x14006b5bc",
    "mov     rdx, qword [r13+0x10]",
    "cmp     rdx, r15",
    "je      0x14006b57e",
    "mov     rdx, qword [rdi]",
    "mov     qword [rsp+0x30], rdi",
    "movsxd  r8, esi",
    "mov     rax, qword [rdx+0x20]",
    "shl     r8, 0x5",
    "cmp     esi, r9d",
    "mov     rcx, qword [r8+rax]",
    "mov     qword [rsp+0xa0], r8",
    "mov     qword [rsp+0x48], rcx",
    "mov     rax, qword [rdx+0x20]",
    "mov     rdx, r13",
    "mov     rcx, qword [r8+rax+0x18]",
    "lea     rax, [rel data_1400f6de8]  {\"trigger\"}",
    "mov     qword [rsp+0x58], r12",
    "mov     qword [rsp+0x50], rax",
    "mov     eax, r15d",
    "mov     qword [rsp+0x38], rcx",
    "sete    al",
    "lea     rcx, [rsp+0x30]",
    "mov     dword [rsp+0x40], eax",
    "call    sub_14004d5a0",
    "cmp     eax, r15d",
    "jne     0x14006b973",
    "mov     r9d, 0x1",
    "cmp     rax, r15",
    "je      0x14006b5c2",
    "mov     qword [r13+0x10], r15",
    "mov     rcx, rbx",
    "call    sub_1400169a8",
    "mov     rdx, r13",
    "mov     rcx, rdi",
    "call    sub_1400549b0",
    "mov     rbp, rax",
    "cmp     rax, r15",
    "jne     0x14006b661",
    "cmp     byte [rbx+0x61], r15b",
    "jne     0x14006b973",
    "mov     rax, qword [rbx+0x20]",
    "mov     rax, qword [rax+0x38]",
    "cmp     qword [r11+0x70], rax",
    "cmove   esi, r9d",
    "jmp     0x14006b5c2",
    "cmp     dword [rax+0x54], r15d",
    "je      0x14006b676",
    "mov     eax, 0x1",
    "cmp     byte [rbx+0xb4], al",
    "jne     0x14006b973",
    "mov     rdx, r12",
    "mov     rcx, rbx",
    "call    sub_14004e64c",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x14006b970",
    "lea     rdx, [rel data_1400f6df0]  {\"cannot create triggers on virtua\u2026\"}",
    "mov     rcx, rdi",
    "jmp     0x14006b506",
    "or      dword [rbx+0xb8], eax",
    "jmp     0x14006b973",
    "xor     r15d, r15d",
    "mov     r9, qword [rbp]",
    "lea     r8, [rel data_1400f6de8]  {\"trigger\"}",
    "mov     rdx, rax",
    "mov     rcx, rdi",
    "call    sub_14004e790",
    "test    eax, eax",
    "jne     0x14006b960",
    "call    sub_1400191b8",
    "jmp     0x14006b973",
    "test    r15, r15",
    "je      0x14006b970",
    "cmp     byte [rdi+0x104], 0x2",
    "jae     0x14006b707",
    "mov     rdx, r15",
    "mov     rcx, rbx",
    "call    sub_1400169a8",
    "mov     rcx, qword [rbp]",
    "lea     rdx, [rel data_1400f4c80]  {\"sqlite_\"}",
    "mov     r8d, 0x7",
    "call    sub_1400192e8",
    "test    eax, eax",
    "jne     0x14006b735",
    "mov     rax, qword [rbx+0x20]",
    "mov     rcx, qword [rsp+0xa0]",
    "xor     r8d, r8d",
    "mov     rcx, qword [rax+rcx+0x18]",
    "mov     rdx, r15",
    "add     rcx, 0x38",
    "call    sub_14001a410",
    "cmp     qword [rax+0x10], r14",
    "je      0x14006b707",
    "mov     rax, qword [rbp+0x18]",
    "mov     ecx, dword [rsp+0xb8]",
    "test    rax, rax",
    "je      0x14006b784",
    "lea     rdx, [rel data_1400f6e40]  {\"cannot create trigger on system \u2026\"}",
    "mov     rcx, rdi",
    "call    sub_1400191b8",
    "jmp     0x14006b960",
    "mov     rcx, rdi",
    "cmp     dword [rsp+0xe8], r14d",
    "jne     0x14006b6fb",
    "cmp     ecx, 0x41",
    "jne     0x14006b7a3",
    "cmp     ecx, 0x41",
    "je      0x14006b77f",
    "mov     edx, esi",
    "call    sub_1400538c0",
    "jmp     0x14006b960",
    "lea     rdx, [rel data_1400f6e20]  {\"trigger %T already exists\"}",
    "mov     r8, r12",
    "call    sub_1400191b8",
    "jmp     0x14006b960",
    "cmp     byte [rdi+0x104], 0x2",
    "jae     0x14006b86b",
    "lea     rdx, [rel data_1400f6ea0]  {\"cannot create INSTEAD OF trigger\u2026\"}",
    "xor     r9d, r9d",
    "mov     r8, r13",
    "mov     rcx, rdi",
    "call    sub_1400191b8",
    "jmp     0x14006b960",
    "test    rax, rax",
    "jne     0x14006b7a3",
    "lea     rax, [rel data_1400f6e68]  {\"BEFORE\"}",
    "mov     esi, 0x21",
    "lea     r8, [rel data_1400f6e70]  {\"AFTER\"}",
    "cmp     ecx, esi",
    "lea     rdx, [rel data_1400f6e78]  {\"cannot create %s trigger on view\u2026\"}",
    "mov     r9, r13",
    "cmove   r8, rax",
    "and     qword [rsp+0x20], r14",
    "mov     rcx, rdi",
    "call    sub_1400191b8",
    "jmp     0x14006b960",
    "mov     r12d, dword [rsp+0xb8]",
    "mov     esi, 0x21",
    "mov     rcx, rbx",
    "lea     edx, [rsi+0x27]",
    "cmp     r12d, 0x41",
    "cmove   r12d, esi",
    "call    sub_140016ba8",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x14006b960",
    "mov     rcx, qword [rbp+0x70]",
    "mov     esi, 0xfff0bdc0",
    "mov     r8d, 0x1",
    "test    rcx, rcx",
    "je      0x14006b7e0",
    "mov     qword [rax], r15",
    "mov     rdx, qword [r13+0x18]",
    "mov     rcx, rbx",
    "xor     r15d, r15d",
    "call    sub_140016dac",
    "cmp     r12d, esi",
    "mov     qword [r14+0x8], rax",
    "mov     rcx, qword [rbx+0x20]",
    "mov     r11, rax",
    "mov     rax, qword [rsp+0xa0]",
    "mov     rdx, qword [rcx+rax+0x18]",
    "lea     eax, [rsi-0x20]",
    "mov     qword [r14+0x28], rdx",
    "mov     rcx, qword [rbp+0x70]",
    "mov     qword [r14+0x30], rcx",
    "mov     cl, byte [rsp+0xc0]",
    "mov     byte [r14+0x10], cl",
    "setne   cl",
    "add     cl, al",
    "mov     byte [r14+0x11], cl",
    "cmp     byte [rdi+0x104], 0x2",
    "jb      0x14006b922",
    "mov     rcx, qword [rbx+0x20]",
    "mov     edx, dword [rsp+0xe0]",
    "movsxd  rax, esi",
    "shl     rax, 0x5",
    "mov     r12, qword [rax+rcx]",
    "test    edx, edx",
    "je      0x14006b800",
    "mov     rax, qword [rbx+0x20]",
    "xor     esi, esi",
    "cmp     qword [rax+0x18], rcx",
    "je      0x14006b7e0",
    "mov     rdx, qword [rsp+0xd8]",
    "test    rdx, rdx",
    "je      0x14006b93f",
    "mov     rcx, qword [r13+0x18]",
    "mov     rax, qword [rdi+0x188]",
    "jmp     0x14006b906",
    "mov     rax, r12",
    "mov     rax, qword [rcx+0x20]",
    "jmp     0x14006b803",
    "add     rax, 0x18",
    "xor     eax, eax",
    "xor     r9d, r9d",
    "mov     r8d, eax",
    "mov     rcx, rbx",
    "call    sub_140043fa4",
    "jmp     0x14006b941",
    "test    rax, rax",
    "jne     0x14006b8fd",
    "mov     edx, 0x5",
    "jmp     0x14006b818",
    "test    edx, edx",
    "je      0x14006b813",
    "cmp     esi, r8d",
    "je      0x14006b80c",
    "add     rax, 0x20",
    "add     esi, r8d",
    "cmp     qword [rax], rcx",
    "jne     0x14006b7d4",
    "mov     qword [r14+0x18], rax",
    "mov     rax, qword [rsp+0xc8]",
    "and     qword [rsp+0xc8], r15",
    "mov     qword [r14+0x20], rax",
    "mov     qword [rdi+0x140], r14",
    "cmp     qword [rax], rcx",
    "je      0x14006b90d",
    "jmp     0x14006b910",
    "mov     r9, qword [rbp]",
    "mov     r8, r15",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x14006b960",
    "mov     edx, 0x7",
    "mov     qword [rax], r11",
    "mov     rax, qword [rax+0x18]",
    "mov     rax, qword [rsp+0xd8]",
    "and     qword [rsp+0xd8], r15",
    "jmp     0x14006b941",
    "mov     r9d, 0x1",
    "lea     rax, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "lea     r8, [rel data_1400f5788]  {\"sqlite_temp_master\"}",
    "cmp     esi, r9d",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], r12",
    "cmovne  r8, rax",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x12]",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x14006b960"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}