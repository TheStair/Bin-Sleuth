{
  "address": "0x1400497c4",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x18], rbx",
    "mov     qword [rax+0x10], rdx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x60",
    "mov     rbp, qword [rcx]",
    "xor     esi, esi",
    "xor     r15d, r15d",
    "mov     r12d, dword [rbp+0x2c]",
    "mov     rbx, r8",
    "mov     rdi, rcx",
    "mov     dword [rsp+0xa0], r12d",
    "cmp     byte [rbp+0x61], sil",
    "jne     0x140049af4",
    "mov     rdx, qword [rsp+0xa8]",
    "mov     rcx, rbp",
    "call    sub_140053434",
    "test    rsi, rsi",
    "je      0x140049b14",
    "mov     r8, rdx",
    "xor     edx, edx",
    "add     r8, 0x8",
    "call    sub_14004e084",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x140049aec",
    "mov     dword [rbp+0x2c], r12d",
    "mov     rbx, qword [rsp+0xb0]",
    "add     rsp, 0x60",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "call    sub_1400169a8",
    "mov     r12d, dword [rsp+0xa0]",
    "mov     rdx, qword [rax+0x70]",
    "mov     r14d, 0xfff0bdc0",
    "test    rdx, rdx",
    "je      0x14004984b",
    "mov     rax, qword [rbp+0x20]",
    "movsxd  rcx, r14d",
    "mov     rdx, rbx",
    "shl     rcx, 0x5",
    "mov     r13, qword [rcx+rax]",
    "or      dword [rbp+0x2c], 0x2",
    "mov     rcx, rbp",
    "call    sub_14004e64c",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140049aec",
    "mov     rax, qword [rdi]",
    "xor     r14d, r14d",
    "mov     rcx, qword [rax+0x20]",
    "cmp     qword [rcx+0x18], rdx",
    "je      0x14004984b",
    "mov     r8, r13",
    "mov     rdx, rax",
    "mov     rcx, rbp",
    "call    sub_14004de30",
    "test    rax, rax",
    "jne     0x140049ada",
    "add     rcx, 0x18",
    "mov     r8, rsi",
    "lea     rdx, [rel data_1400f4df0]  {\"there is already another table o\u2026\"}",
    "mov     rcx, rdi",
    "mov     r8, r13",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "call    sub_14004e0d8",
    "test    rax, rax",
    "jne     0x140049ada",
    "add     rcx, 0x20",
    "inc     r14d",
    "cmp     qword [rcx], rdx",
    "jne     0x14004983f",
    "mov     rdx, r12",
    "mov     rcx, rdi",
    "call    sub_1400496a8",
    "test    eax, eax",
    "jne     0x140049aec",
    "lea     r8, [rel data_1400f4e2c]  {\"table\"}",
    "mov     r9, rsi",
    "mov     rdx, rsi",
    "mov     rcx, rdi",
    "call    sub_14004e790",
    "test    eax, eax",
    "jne     0x140049aec",
    "mov     rcx, rdi",
    "cmp     qword [r12+0x18], r15",
    "je      0x1400498ed",
    "mov     r9, qword [r12]",
    "and     qword [rsp+0x20], r15",
    "mov     r8, r13",
    "mov     edx, 0x1a",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x140049aec",
    "mov     r8, qword [r12]",
    "lea     rdx, [rel data_1400f4e38]  {\"view %s may not be altered\"}",
    "jmp     0x140049ae7",
    "mov     rdx, r12",
    "mov     rcx, rdi",
    "call    sub_140050b50",
    "test    eax, eax",
    "jne     0x140049aec",
    "call    sub_1400191b8",
    "cmp     dword [r12+0x54], r15d",
    "je      0x140049951",
    "mov     rcx, rdi",
    "call    sub_140065300",
    "mov     qword [rsp+0x58], rax",
    "test    rax, rax",
    "je      0x140049aec",
    "mov     rdx, qword [r12+0x60]",
    "jmp     0x140049935",
    "mov     rcx, qword [rdi+0x90]",
    "mov     rdx, rdi",
    "test    rcx, rcx",
    "cmovne  rdx, rcx",
    "mov     byte [rdx+0x21], 0x1",
    "mov     r11, qword [r12]",
    "or      edx, 0xffffffff",
    "mov     rcx, r11",
    "mov     qword [rsp+0x50], r11",
    "call    sub_140018f3c",
    "mov     qword [rsp+0x40], r11",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "mov     ebx, eax",
    "xor     eax, eax",
    "cmp     r14d, 0x1",
    "sete    al",
    "lea     rdx, [rel data_1400f4e60]  {\"UPDATE \"%w\".%s SET sql = sqlite_\u2026\"}",
    "mov     r8, r13",
    "mov     dword [rsp+0x38], eax",
    "mov     qword [rsp+0x30], rsi",
    "mov     qword [rsp+0x28], r11",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], r13",
    "mov     dword [rsp+0xb8], eax",
    "call    sub_14004dd58",
    "mov     r11, qword [rsp+0x50]",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "mov     qword [rsp+0x40], r11",
    "mov     dword [rsp+0x38], ebx",
    "mov     qword [rsp+0x30], rsi",
    "lea     rdx, [rel data_1400f4f10]  {\"UPDATE %Q.%s SET tbl_name = %Q, \u2026\"}",
    "mov     r8, r13",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], rsi",
    "mov     qword [rsp+0x20], rsi",
    "call    sub_14004dd58",
    "lea     rdx, [rel data_1400f5038]  {\"sqlite_sequence\"}",
    "mov     r8, r13",
    "mov     rcx, rbp",
    "call    sub_14004de30",
    "test    rax, rax",
    "je      0x140049a3e",
    "test    rdx, rdx",
    "jne     0x14004992c",
    "cmp     r14d, 0x1",
    "je      0x140049a72",
    "mov     rax, qword [r12]",
    "lea     rdx, [rel data_1400f5048]  {\"UPDATE \"%w\".sqlite_sequence set \u2026\"}",
    "mov     r9, rsi",
    "mov     r8, r13",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004dd58",
    "cmp     qword [rdx], rbp",
    "je      0x14004993a",
    "mov     rax, qword [rdx+0x10]",
    "mov     rcx, qword [rax]",
    "mov     rax, qword [rcx+0x98]",
    "neg     rax",
    "sbb     r15, r15",
    "and     r15, rdx",
    "test    r15, r15",
    "je      0x140049aba",
    "mov     rax, qword [rsp+0x50]",
    "mov     qword [rsp+0x38], rsi",
    "mov     qword [rsp+0x30], r13",
    "mov     qword [rsp+0x28], rax",
    "lea     rdx, [rel data_1400f5090]  {\"UPDATE sqlite_temp_master SET sq\u2026\"}",
    "mov     r8, r13",
    "mov     r9, rax",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rsi",
    "call    sub_14004dd58",
    "mov     rdx, qword [rdx+0x28]",
    "mov     edx, r14d",
    "mov     rcx, rdi",
    "call    sub_140049778",
    "mov     r8d, dword [rsp+0xb8]",
    "mov     rdx, r13",
    "mov     rcx, rdi",
    "call    sub_140049714",
    "jmp     0x140049aec",
    "inc     dword [rdi+0x38]",
    "mov     ebx, dword [rdi+0x38]",
    "mov     r12, qword [rsp+0x58]",
    "mov     edx, ebx",
    "mov     r8, rsi",
    "mov     rcx, r12",
    "call    sub_1400323e0",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, ebx",
    "mov     edx, 0xa5",
    "mov     rcx, r12",
    "call    sub_140032364",
    "mov     r9d, 0xfffffff4",
    "mov     r8, r15",
    "mov     edx, eax",
    "mov     rcx, r12",
    "call    sub_140032c40"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}