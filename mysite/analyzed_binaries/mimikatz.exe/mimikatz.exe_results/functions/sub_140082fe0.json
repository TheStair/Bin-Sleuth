{
  "address": "0x140082fe0",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "sub     rsp, 0x20",
    "cmp     dword [rcx+0x70], 0x64cffc7f",
    "mov     rdi, rcx",
    "jne     0x140083238",
    "mov     rbx, qword [rsp+0x30]",
    "mov     rbp, qword [rsp+0x38]",
    "mov     rsi, qword [rsp+0x40]",
    "mov     rdi, qword [rsp+0x48]",
    "add     rsp, 0x20",
    "pop     r12",
    "retn    ",
    "cmp     qword [rcx+0x8], 0x0",
    "jne     0x140083238",
    "xor     ecx, ecx",
    "cmp     dword [rdi+0x28], ecx",
    "jle     0x140083040",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "call    sub_140083254",
    "mov     rcx, rdi",
    "call    sub_140082dd4",
    "xor     esi, esi",
    "xor     ebp, ebp",
    "cmp     dword [rdi+0x28], esi",
    "jle     0x140083090",
    "mov     rax, qword [rdi+0x20]",
    "add     rax, 0x8",
    "mov     rax, qword [rdi+0x20]",
    "mov     rcx, qword [rax+0x38]",
    "test    rcx, rcx",
    "je      0x1400830a2",
    "xor     ebx, ebx",
    "inc     ecx",
    "add     rax, 0x20",
    "cmp     ecx, dword [rdi+0x28]",
    "jl      0x140083023",
    "cmp     dword [rdx+0x18], 0x0",
    "jne     0x140083238",
    "mov     rcx, rdi",
    "call    sub_14006fa6c",
    "mov     rcx, rdi",
    "call    sub_14004e1e0",
    "mov     rsi, qword [rdi+0x1f0]",
    "jmp     0x1400830f9",
    "call    sub_140054800",
    "inc     esi",
    "inc     rbp",
    "add     rbx, 0x20",
    "cmp     esi, dword [rdi+0x28]",
    "jl      0x14008305d",
    "call    sub_140027dd4",
    "and     qword [rbx+r12+0x8], 0x0",
    "cmp     rbp, 0x1",
    "je      0x140083082",
    "mov     rdx, qword [rax]",
    "test    rdx, rdx",
    "je      0x140083035",
    "test    rsi, rsi",
    "jne     0x1400830bb",
    "mov     r12, qword [rdi+0x20]",
    "mov     rcx, qword [rbx+r12+0x8]",
    "test    rcx, rcx",
    "je      0x140083082",
    "and     qword [rbx+r12+0x18], 0x0",
    "mov     rbp, qword [rsi+0x10]",
    "lea     rcx, [rdi+0x1e8]",
    "call    sub_14001a268",
    "mov     rbx, qword [rdi+0x208]",
    "jmp     0x14008314c",
    "mov     rbx, qword [rbp+0x10]",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "mov     rbp, rbx",
    "test    rbx, rbx",
    "jne     0x1400830bf",
    "add     dword [rbx], 0xffffffff",
    "jne     0x1400830df",
    "test    rbx, rbx",
    "jne     0x140083113",
    "mov     rbx, qword [rbp+0x40]",
    "test    rbx, rbx",
    "je      0x1400830df",
    "mov     rsi, qword [rsi]",
    "mov     rcx, qword [rbx+0x10]",
    "call    qword [rbx+0x8]",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "mov     rbp, qword [rbx+0x10]",
    "mov     r12d, 0x3",
    "lea     rsi, [rbp+0x20]",
    "lea     rcx, [rdi+0x200]",
    "call    sub_14001a268",
    "mov     rsi, qword [rdi+0x1c0]",
    "jmp     0x140083183",
    "add     rsi, 0x28",
    "sub     r12, 0x1",
    "jne     0x140083121",
    "mov     rcx, qword [rsi-0x10]",
    "call    rax",
    "test    rsi, rsi",
    "jne     0x140083166",
    "mov     rax, qword [rsi]",
    "test    rax, rax",
    "je      0x14008312f",
    "test    rbp, rbp",
    "je      0x140083149",
    "mov     rbx, qword [rsi+0x10]",
    "mov     rcx, rdi",
    "mov     rdx, rbx",
    "call    sub_140070be0",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_14006f98c",
    "mov     rsi, qword [rsi]",
    "lea     rcx, [rdi+0x1b8]",
    "call    sub_14001a268",
    "and     dword [rdi+0x50], esi",
    "cmp     qword [rdi+0x158], rsi",
    "je      0x1400831aa",
    "mov     rbx, qword [rbx]",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "mov     rcx, qword [rdi+0x158]",
    "call    sub_14003210c",
    "xor     esi, esi",
    "cmp     dword [rdi+0xdc], esi",
    "jle     0x1400831e4",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "call    sub_1400190a0",
    "mov     rdx, qword [rdi+0xe0]",
    "test    rdx, rdx",
    "je      0x1400831f8",
    "xor     ebx, ebx",
    "mov     rax, qword [rdi+0x20]",
    "mov     dword [rdi+0x70], 0xb5357930",
    "mov     rdx, qword [rax+0x38]",
    "test    rdx, rdx",
    "je      0x140083214",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "mov     rdx, qword [rdi+0xe0]",
    "mov     rax, qword [rdi]",
    "mov     rdx, qword [rbx+rdx]",
    "mov     rcx, rax",
    "call    qword [rax+0x60]",
    "inc     esi",
    "add     rbx, 0x8",
    "cmp     esi, dword [rdi+0xdc]",
    "jl      0x1400831c2",
    "cmp     byte [rdi+0x16e], 0x0",
    "mov     dword [rdi+0x70], 0x9f3c2d33",
    "je      0x140083230",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "mov     rcx, rdi",
    "call    sub_140016950",
    "mov     rcx, qword [rdi+0x190]",
    "call    sub_140016950"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}