{
  "address": "0x14002bcb4",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x20], r9",
    "mov     qword [rsp+0x10], rdx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x48",
    "movsxd  rbx, dword [rsp+0xb0]",
    "mov     eax, dword [rsp+0xb8]",
    "mov     r14, r8",
    "mov     r8, qword [rcx+0x50]",
    "mov     rdi, qword [r14]",
    "lea     r10d, [rbx+rax]",
    "cmp     r10d, ebx",
    "mov     r9, rcx",
    "mov     qword [rsp+0x28], r8",
    "jle     0x14002be47",
    "xor     eax, eax",
    "mov     rbp, qword [rsp+0xc0]",
    "xor     edx, edx",
    "xor     ecx, ecx",
    "lea     rax, [rbp+0x50]",
    "jmp     0x14002bd22",
    "cmp     dword [rax], ebx",
    "jle     0x14002bd13",
    "cmp     rcx, 0x6",
    "jge     0x14002bd26",
    "movsxd  rax, edx",
    "mov     rsi, rbx",
    "mov     qword [rsp+0xa0], rbx",
    "mov     rcx, qword [rbp+rax*8+0x20]",
    "lea     r15, [rbp+rax*8+0x20]",
    "lea     r13, [rbp+rax*4+0x50]",
    "mov     qword [rsp+0x20], rcx",
    "movsxd  rcx, r10d",
    "mov     qword [rsp+0x30], rcx",
    "inc     edx",
    "inc     rcx",
    "add     rax, 0x4",
    "lea     r8, [rsp+0xb0]",
    "mov     edx, esi",
    "mov     rcx, r9",
    "call    sub_140026ecc",
    "mov     r12, rax",
    "test    rax, rax",
    "jne     0x14002bd9d",
    "cmp     byte [r8+0x2], 0x0",
    "je      0x14002bd80",
    "mov     rcx, qword [rbp+0x10]",
    "mov     r9, qword [rsp+0x20]",
    "mov     r8, rsi",
    "mov     rsi, qword [rsp+0xa0]",
    "mov     rdx, qword [rcx+rsi*8]",
    "lea     rax, [rdx+r8]",
    "cmp     rax, r9",
    "jbe     0x14002bdc3",
    "mov     rax, rdi",
    "movsxd  rcx, esi",
    "sub     rax, qword [rsp+0x98]",
    "cmp     rax, rcx",
    "jl      0x14002be3d",
    "mov     rcx, r12",
    "call    memmove",
    "mov     rax, qword [rsp+0xa8]",
    "mov     r8, qword [rsp+0x28]",
    "mov     r11, r12",
    "sub     r12b, r8b",
    "inc     rsi",
    "sub     r11, r8",
    "mov     byte [rax+0x1], r12b",
    "inc     ebx",
    "sar     r11, 0x8",
    "mov     qword [rsp+0xa0], rsi",
    "mov     byte [rax], r11b",
    "add     rax, 0x2",
    "cmp     rsi, qword [rsp+0x30]",
    "mov     qword [rsp+0xa8], rax",
    "jge     0x14002be44",
    "cmp     rdx, r9",
    "jb      0x14002be33",
    "mov     eax, 0x1",
    "jmp     0x14002be49",
    "sub     rdi, rcx",
    "mov     r12, rdi",
    "mov     qword [r14], rdi",
    "cmp     dword [r13], ebx",
    "mov     r9, qword [rsp+0x90]",
    "jg      0x14002bd50",
    "mov     ecx, 0x1130c",
    "call    sub_140084e38",
    "add     rsp, 0x48",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "cmp     byte [r8+0x1], 0x0",
    "mov     rax, qword [rbp+0x18]",
    "movzx   esi, word [rax+rsi*2]",
    "jne     0x14002bd66",
    "add     r13, 0x4",
    "add     r15, 0x8",
    "mov     rax, qword [r15]",
    "mov     qword [rsp+0x20], rax",
    "jmp     0x14002bd50"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}