{
  "address": "0x14003ee54",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "encrypt data using RC4 PRGA",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x30",
    "mov     rbp, qword [rsp+0x70]",
    "movzx   r11d, byte [r8]",
    "movzx   r10d, byte [r8+0x1]",
    "movzx   ebx, byte [rbp]",
    "movzx   eax, byte [rbp+0x1]",
    "add     r11, r8",
    "add     rbx, rbp",
    "mov     r12d, r9d",
    "mov     rsi, r8",
    "mov     r13, rdx",
    "mov     rdi, rcx",
    "mov     r14d, 0x1",
    "cmp     r10d, eax",
    "jne     0x14003eefb",
    "cmp     r10d, 0x7",
    "jle     0x14003ef0b",
    "mov     rax, r10",
    "lea     rcx, [rel data_1400d7278]",
    "xor     r8d, r8d",
    "movzx   r9d, byte [rax+rcx]",
    "xor     r10d, r10d",
    "test    r9d, r9d",
    "jle     0x14003ef2b",
    "cmp     eax, 0x7",
    "jle     0x14003ef15",
    "cmp     eax, 0x7",
    "jle     0x14003ef15",
    "mov     rax, qword [rdi+0x10]",
    "mov     rcx, qword [rax+0x28]",
    "cmp     word [rcx+0x6], r14w",
    "jbe     0x14003ef85",
    "mov     rdx, rbx",
    "mov     rcx, r11",
    "sub     rdx, r11",
    "cmp     r10d, 0x7",
    "jle     0x14003ef5d",
    "mov     r10d, r14d",
    "jmp     0x14003ef65",
    "sub     r10d, eax",
    "jmp     0x14003ef26",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rbp, qword [rsp+0x58]",
    "mov     rsi, qword [rsp+0x60]",
    "mov     rdi, qword [rsp+0x68]",
    "mov     eax, r10d",
    "add     rsp, 0x30",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "mov     eax, dword [rsp+0x78]",
    "mov     r9d, r12d",
    "mov     r8, rsi",
    "mov     dword [rsp+0x28], eax",
    "mov     rdx, r13",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_14003ec60",
    "mov     r10d, eax",
    "jmp     0x14003ef85",
    "mov     cl, byte [r11]",
    "mov     al, byte [rbx]",
    "xor     al, cl",
    "jns     0x14003ef26",
    "add     r8d, r14d",
    "add     rcx, r14",
    "cmp     r8d, r9d",
    "jl      0x14003eec7",
    "sub     r10d, eax",
    "test    r10d, r10d",
    "jle     0x14003ef1f",
    "or      r10d, 0xffffffff",
    "test    byte [r11], 0x80",
    "je      0x14003ef26",
    "test    r10d, r10d",
    "jne     0x14003ef71",
    "and     cl, 0x80",
    "neg     cl",
    "sbb     r10d, r10d",
    "and     r10d, 0xfffffffe",
    "add     r10d, r14d",
    "jmp     0x14003ef26",
    "movzx   eax, byte [rdx+rcx]",
    "movzx   r10d, byte [rcx]",
    "sub     r10d, eax",
    "jne     0x14003eee1",
    "jmp     0x14003ef2b",
    "test    byte [rbx], 0x80",
    "cmovne  r10d, r14d",
    "mov     rax, qword [rdi+0x10]",
    "mov     rcx, qword [rax+0x28]",
    "mov     rax, qword [rcx+0x18]",
    "cmp     byte [rax], 0x0",
    "je      0x14003ef85",
    "or      r10d, 0xffffffff",
    "jmp     0x14003ef26",
    "neg     r10d"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}