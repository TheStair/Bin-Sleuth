{
  "address": "0x1400430d4",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rdi",
    "sub     rsp, 0x20",
    "mov     r11, qword [rcx]",
    "mov     rdi, rcx",
    "xor     ebx, ebx",
    "mov     rax, rbx",
    "mov     rbx, qword [rsp+0x30]",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    ",
    "movzx   eax, byte [rdx]",
    "cmp     eax, 0xab",
    "jne     0x1400430fd",
    "cmp     eax, 0xa4",
    "je      0x140043110  {\"H9Z@\"}",
    "movzx   eax, byte [rdx+0x32]",
    "cmp     qword [rdx+0x40], rbx",
    "jne     0x1400431b6",
    "cmp     eax, 0xa2",
    "je      0x140043110  {\"H9Z@\"}",
    "movsx   rcx, word [rdx+0x2c]",
    "test    ecx, ecx",
    "js      0x14004320e",
    "cmp     eax, 0x24",
    "je      0x140043198",
    "cmp     eax, 0x4d",
    "jne     0x14004311a",
    "mov     rax, qword [rdx+0x40]",
    "mov     dl, byte [r11+0x5e]",
    "mov     r8, rcx",
    "mov     rax, qword [rax+0x8]",
    "shl     r8, 0x5",
    "xor     r9d, r9d",
    "mov     r8, qword [rax+r8+0x10]",
    "mov     rcx, r11",
    "call    sub_1400544b4",
    "mov     rdx, qword [rdx+0x10]",
    "jmp     0x1400430e6",
    "cmp     eax, 0xa9",
    "je      0x140043198",
    "cmp     qword [rax+0x18], 0x0",
    "jne     0x14004320e",
    "test    rdx, rdx",
    "je      0x14004320e",
    "cmp     eax, 0x6d",
    "je      0x1400431a1",
    "mov     rax, qword [rdi]",
    "mov     r9, qword [rbx]",
    "mov     r8, rbx",
    "mov     dl, byte [rax+0x5e]",
    "mov     rcx, rdi",
    "call    sub_1400542e8",
    "neg     rax",
    "sbb     rcx, rcx",
    "and     rbx, rcx",
    "mov     r9, qword [rdx+0x8]",
    "mov     dl, byte [r11+0x5e]",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "call    sub_1400542e8",
    "jmp     0x1400431e2",
    "bt      dword [rdx+0x4], 0x8",
    "jae     0x14004320e",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14004320e",
    "mov     rax, qword [rdx+0x10]",
    "test    rax, rax",
    "je      0x14004314b",
    "mov     rcx, qword [rdx+0x20]",
    "mov     r10, qword [rdx+0x18]",
    "test    rcx, rcx",
    "je      0x140043190",
    "bt      dword [rax+0x4], 0x8",
    "jae     0x14004314b",
    "mov     rdx, r10",
    "jmp     0x1400430e6",
    "bt      dword [rdx+0x4], 0xb",
    "jb      0x140043190",
    "mov     rdx, rax",
    "jmp     0x1400430e6",
    "xor     edx, edx",
    "xor     r8d, r8d",
    "cmp     dword [rcx], edx",
    "jle     0x140043190",
    "lea     r9, [rcx+0x8]",
    "lea     rax, [rdx+rdx*4]",
    "mov     r10, qword [rcx+rax*8+0x8]",
    "inc     r8d",
    "inc     rdx",
    "add     r9, 0x28",
    "cmp     r8d, dword [rcx]",
    "jl      0x14004316c",
    "mov     rax, qword [r9]",
    "bt      dword [rax+0x4], 0x8",
    "jb      0x140043187",
    "jmp     0x140043190"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}