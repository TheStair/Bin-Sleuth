{
  "address": "0x14007c89c",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "64-bit execution via heavens gate/6f3d819d94084ecbbf457d6e8a175a62",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     dword [rsp+0x20], r9d",
    "mov     dword [rsp+0x18], r8d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     rdi, qword [rcx]",
    "mov     rbx, rcx",
    "mov     ebp, edx",
    "mov     rcx, rdi",
    "call    sub_140065300",
    "mov     r10, qword [rbx+0x8]",
    "mov     r15, qword [r10+0x18]",
    "mov     rsi, rax",
    "mov     al, byte [rdi+0x1f]",
    "test    al, al",
    "jne     0x14007c8e5",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rdi+0x1f], al",
    "mov     r13d, dword [rdi+rax*4+0xbc]",
    "inc     dword [rdi+0x38]",
    "mov     r13d, dword [rdi+0x38]",
    "jmp     0x14007c8f5",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rdi+0x1f], al",
    "mov     r12d, dword [rdi+rax*4+0xbc]",
    "inc     dword [rdi+0x38]",
    "mov     r12d, dword [rdi+0x38]",
    "jmp     0x14007c915",
    "mov     al, byte [rdi+0x1f]",
    "test    al, al",
    "jne     0x14007c905",
    "mov     edx, dword [rsp+0x80]",
    "mov     r8d, r13d",
    "mov     rcx, rbx",
    "call    sub_14007ba50",
    "mov     edx, dword [rsp+0x90]",
    "mov     r8d, r12d",
    "mov     rcx, rbx",
    "call    sub_14007ba50",
    "mov     ebx, dword [rsp+0x70]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "mov     r9d, ebx",
    "mov     rcx, rsi",
    "lea     edx, [r8+0x71]",
    "call    sub_140032364",
    "lea     r8, [rel data_1400f386c]",
    "or      r9d, 0xffffffff",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "xor     r9d, r9d",
    "mov     r8d, ebx",
    "lea     edx, [r9+0x39]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x88]",
    "mov     r9d, r13d",
    "mov     edx, r14d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r13d",
    "mov     ebx, eax",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     ebx, dword [rsp+0x98]",
    "mov     dword [rax+0x8], ecx",
    "test    byte [r15+0x20], 0x2",
    "je      0x14007cabe",
    "cmp     ebp, 0x36",
    "je      0x14007c940",
    "inc     dword [rdi+0x38]",
    "test    byte [r15+0x20], 0x1",
    "mov     eax, dword [rdi+0x38]",
    "mov     ecx, 0x39",
    "mov     dword [rsp+0x70], eax",
    "lea     r14d, [rcx+0x2e]",
    "je      0x14007c94b",
    "xor     r15d, r15d",
    "xor     r15d, r15d",
    "xor     r9d, r9d",
    "mov     r8d, r13d",
    "lea     edx, [r15+0x33]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "mov     edx, ebp",
    "sub     edx, 0x36",
    "mov     r14d, eax",
    "je      0x14007ca36",
    "mov     ebp, 0x38",
    "cmp     ebp, ecx",
    "lea     eax, [rcx-0x2]",
    "cmovne  eax, ecx",
    "mov     ebp, eax",
    "jmp     0x14007c945",
    "cmp     r13d, r15d",
    "je      0x14007cb11",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "mov     edx, 0x80",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     edx, 0x33",
    "sub     edx, 0x1",
    "je      0x14007ca2f",
    "mov     r14d, 0x68",
    "cmp     r12d, r15d",
    "je      0x14007cb2b",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x14007cb11",
    "mov     r10d, dword [rsi+0x90]",
    "or      edx, 0xffffffff",
    "mov     rcx, rsi",
    "inc     r10d",
    "call    sub_140032d34",
    "mov     dword [rax+0x8], r10d",
    "jmp     0x14007cac1",
    "cmp     ebp, 0x39",
    "jne     0x14007cac1",
    "mov     edx, 0x32",
    "jmp     0x14007ca3b",
    "cmp     edx, 0x2",
    "jne     0x14007ca4e",
    "mov     rbx, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x14007cb2b",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], r13d",
    "inc     byte [rdi+0x1f]",
    "mov     r9d, ebx",
    "mov     r8d, r12d",
    "mov     edx, ebp",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "movsxd  r11, dword [rsi+0x90]",
    "cmp     r11d, r15d",
    "jle     0x14007caf7",
    "mov     r8d, r12d",
    "mov     r9d, dword [rsi+0x90]",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "lea     edx, [r8+0xb]",
    "add     r9d, 0x3",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "mov     edx, r14d",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     r9d, ebx",
    "mov     dword [rax+0x8], ecx",
    "mov     r8d, r12d",
    "mov     edx, 0x32",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "cmp     ebp, 0x36",
    "je      0x14007caa3",
    "xor     r8d, r8d",
    "lea     edx, [r15+0xb]",
    "jmp     0x14007ca3e",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], r12d",
    "inc     byte [rdi+0x1f]",
    "mov     r9d, ebx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}