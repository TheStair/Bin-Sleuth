{
  "address": "0x14008ac6c",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using DPAPI"
  ],
  "disassembly": [
    "mov     r11, rsp {__return_addr}",
    "mov     qword [r11+0x8 {__saved_rbx}], rbx",
    "push    rbp {__saved_rbp}",
    "push    rsi {__saved_rsi}",
    "push    rdi {__saved_rdi}",
    "push    r12 {__saved_r12}",
    "push    r13 {__saved_r13}",
    "push    r14 {var_30}",
    "push    r15 {__saved_r15}",
    "sub     rsp, 0x90",
    "xor     r13d, r13d  {0x0}",
    "mov     dword [rsp+0x70 {var_58}], 0x18",
    "lea     rax, [rel data_1400e5b78]  {u\"mimikatz\"}",
    "mov     dword [rsp+0x40 {pOptionalEntropy}], r13d  {0x0}",
    "lea     r15d, [r13+0x2]",
    "lea     r9, [r11-0x60 {var_60}]",
    "lea     r8, [rel data_1400fbf80]  {u\"data\"}",
    "mov     rsi, rdx",
    "mov     ebp, ecx",
    "mov     dword [r11-0x54 {var_54}], r15d  {0x2}",
    "mov     qword [r11-0x80 {hMem_2}], r13  {0x0}",
    "mov     qword [r11+0x20 {szDataDescr_1}], r13  {0x0}",
    "mov     qword [r11-0x50 {var_50}], r13  {0x0}",
    "mov     qword [r11-0x48 {var_48}], rax  {data_1400e5b78, u\"mimikatz\"}",
    "mov     qword [rsp+0x20], rax  {data_1400e5b78, u\"mimikatz\"}",
    "call    sub_140013220",
    "lea     r9, [rsp+0xe8 {szDataDescr_1}]",
    "lea     r8, [rel data_1400fbf90]  {u\"description\"}",
    "mov     rdx, rsi",
    "mov     ecx, ebp",
    "mov     qword [rsp+0x20], r13  {0x0}",
    "call    sub_140013220",
    "lea     r9, [rsp+0xe0 {arg_18}]",
    "lea     r8, [rel data_1400fbfa8]  {u\"entropy\"}",
    "mov     rdx, rsi",
    "mov     ecx, ebp",
    "mov     qword [rsp+0x20], r13  {0x0}",
    "call    sub_140013220",
    "cmp     eax, r13d",
    "je      0x14008ad46",
    "lea     r8, [rel data_1400fbfb8]  {u\"machine\"}",
    "xor     r9d, r9d  {0x0}",
    "mov     rdx, rsi",
    "mov     ecx, ebp",
    "mov     qword [rsp+0x20], r13  {0x0}",
    "call    sub_140013220",
    "mov     ecx, 0x4",
    "mov     ebx, r13d  {0x0}",
    "cmp     eax, r13d",
    "lea     r8, [rel data_1400ea8a0]  {u\"system\"}",
    "mov     rdx, rsi",
    "cmovne  ebx, ecx  {0x4}",
    "xor     r9d, r9d  {0x0}",
    "mov     ecx, ebp",
    "mov     qword [rsp+0x20], r13  {0x0}",
    "call    sub_140013220",
    "cmp     eax, r13d",
    "je      0x14008ad8f",
    "mov     rdi, qword [rsp+0xe0 {arg_18}]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax  {0x0}",
    "repne scasw word [rdi]  {0x0}",
    "not     rcx",
    "dec     rcx",
    "mov     dword [rsp+0x40 {pOptionalEntropy}], ecx",
    "test    cl, 0x1",
    "jne     0x14008ad46",
    "lea     r8, [rel data_1400fbfc8]  {u\"prompt\"}",
    "xor     r9d, r9d  {0x0}",
    "mov     rdx, rsi",
    "mov     ecx, ebp",
    "mov     qword [rsp+0x20], r13  {0x0}",
    "call    sub_140013220",
    "lea     r8, [rel data_1400f9d2c]",
    "mov     rdx, rsi",
    "neg     eax",
    "lea     rax, [rsp+0x70 {var_58}]",
    "mov     ecx, ebp",
    "sbb     r14, r14",
    "xor     r9d, r9d  {0x0}",
    "mov     qword [rsp+0x20], r13  {0x0}",
    "and     r14, rax {var_58}",
    "call    sub_140013220",
    "mov     rdx, qword [rsp+0x68 {var_60}]",
    "cmp     eax, r13d",
    "lea     rcx, [rel data_1400fbfd8]  {u\"\\ndata        : %s\\n\"}",
    "mov     r12d, 0x1",
    "cmovne  r12d, r15d  {0x2}",
    "call    sub_14000c030",
    "mov     r15, qword [rsp+0xe8 {szDataDescr_1}]",
    "lea     rdx, [rel data_1400e17cc]",
    "cmp     r15, r13",
    "lea     rcx, [rel data_1400fbee8]  {u\"description : %s\\n\"}",
    "cmovne  rdx, r15",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400fc000]  {u\"flags       : \"}",
    "call    sub_14000c030",
    "mov     edi, r13d  {0x0}",
    "lea     r13, [rel data_1400df900]",
    "bts     ebx, 0x1d",
    "mov     rcx, qword [rsp+0xe0 {arg_18}]",
    "lea     r8, [rsp+0x40 {pOptionalEntropy}]",
    "lea     rdx, [rsp+0x48 {hMem_2}]",
    "call    sub_140012ed0",
    "inc     edi",
    "add     r13, 0x8",
    "cmp     edi, 0x8",
    "jb      0x14008ae24",
    "mov     rdx, qword [r13]",
    "lea     rcx, [rel data_1400e69c8]  {u\"%s ; \"}",
    "call    sub_14000c030",
    "mov     eax, ebx",
    "mov     ecx, edi",
    "shr     eax, cl",
    "test    al, 0x1",
    "je      0x14008ae3e",
    "bt      ebx, 0x1d",
    "jae     0x14008ae62",
    "lea     r13, [rel data_1400d27a8]",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400fc020]  {u\"prompt flags: \"}",
    "call    sub_14000c030",
    "test    r14, r14",
    "je      0x14008ae8b",
    "lea     rdx, [rel data_1400ea8a0]  {u\"system\"}",
    "lea     rcx, [rel data_1400e69c8]  {u\"%s ; \"}",
    "call    sub_14000c030",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400fc040]  {u\"entropy     : \"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x40 {pOptionalEntropy}]",
    "mov     rcx, qword [rsp+0x48 {hMem_2}]",
    "xor     r8d, r8d  {0x0}",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400e9358]",
    "call    sub_14000c030",
    "mov     rdi, qword [rsp+0x68 {var_60}]",
    "xor     eax, eax  {0x0}",
    "or      rcx, 0xffffffffffffffff",
    "lea     r8, [rsp+0x40 {pOptionalEntropy}]",
    "xor     r9d, r9d  {0x0}",
    "repne scasw word [rdi]  {0x0}",
    "mov     rdx, r15",
    "not     rcx",
    "lea     eax, [rcx+rcx]",
    "lea     rcx, [rsp+0x60 {pDataIn}]",
    "mov     dword [rsp+0x60 {pDataIn}], eax",
    "lea     rax, [rsp+0x50 {pDataOut}]",
    "mov     qword [rsp+0x30 {var_98}], rax {pDataOut}",
    "mov     dword [rsp+0x28 {var_a0}], ebx",
    "mov     qword [rsp+0x20 {var_a8}], r14",
    "call    qword [rel CryptProtectData]",
    "test    eax, eax",
    "je      0x14008afbc",
    "mov     ecx, dword [r14+0x4]",
    "call    sub_140009b44",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400fc070]  {u\"ERROR kuhl_m_dpapi_protect ; Cry\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x58 {hMem}]",
    "call    sub_140006e44",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x14008af29",
    "xor     eax, eax  {0x0}",
    "mov     rbx, qword [rsp+0xd0 {__saved_rbx}]",
    "add     rsp, 0x90",
    "pop     r15 {__saved_r15}",
    "pop     r14 {var_30}",
    "pop     r13 {__saved_r13}",
    "pop     r12 {__saved_r12}",
    "pop     rdi {__saved_rdi}",
    "pop     rsi {__saved_rsi}",
    "pop     rbp {__saved_rbp}",
    "retn     {__return_addr}",
    "call    qword [rel LocalFree]",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0xe0 {arg_18}]",
    "lea     r8, [rel data_1400fbf10]",
    "mov     rdx, rsi",
    "mov     ecx, ebp",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14008af85",
    "mov     rdx, rax",
    "xor     ecx, ecx  {0x0}",
    "call    sub_140006ff8",
    "mov     rcx, rdi",
    "call    sub_140006f80",
    "lea     rcx, [rel data_1400fc060]  {u\"Blob:\\n\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x50 {pDataOut}]",
    "mov     rcx, qword [rsp+0x58 {hMem}]",
    "bts     r12d, 0x14",
    "mov     r8d, r12d",
    "call    sub_140012f68",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030",
    "mov     r8d, dword [rsp+0x50 {pDataOut}]",
    "mov     rdx, qword [rsp+0x58 {hMem}]",
    "mov     rcx, qword [rsp+0xe0 {arg_18}]",
    "call    sub_140009ce8",
    "test    eax, eax",
    "je      0x14008afaf",
    "mov     rcx, qword [rsp+0x48 {hMem_2}]",
    "test    rcx, rcx",
    "je      0x14008afe0",
    "mov     rcx, qword [rsp+0x58 {hMem}]",
    "call    qword [rel LocalFree]",
    "jmp     0x14008afd0",
    "mov     rdx, qword [rsp+0xe0 {arg_18}]",
    "lea     rcx, [rel data_1400fbf18]  {u\"Write to file '%s' is OK\\n\"}",
    "call    sub_14000c030",
    "jmp     0x14008afaf"
  ],
  "high_level_IL": [
    "int64_t var_30 = arg3",
    "int32_t var_58 = 0x18",
    "int32_t pOptionalEntropy = 0",
    "int32_t var_54 = 2",
    "void* hMem_2 = nullptr",
    "szDataDescr_1 = nullptr",
    "int64_t var_50 = 0",
    "wchar16 const* const var_48 = u\"mimikatz\"",
    "int64_t var_60",
    "sub_140013220(arg1, arg2, u\"data\", &var_60, u\"mimikatz\")",
    "sub_140013220(arg1, arg2, u\"description\", &szDataDescr_1, nullptr)",
    "if (sub_140013220(arg1, arg2, u\"entropy\", &arg_18, nullptr) != 0)",
    "PWSTR rdi_1 = arg_18",
    "int64_t i = -1",
    "while (i != 0)",
    "bool cond:1_1 = 0 != *rdi_1",
    "rdi_1 = &rdi_1[1]",
    "i -= 1",
    "if (not(cond:1_1))",
    "break",
    "pOptionalEntropy = (not.q(i)).d - 1",
    "if ((((not.q(i)).d - 1).b & 1) == 0)",
    "sub_140012ed0(arg_18, &hMem_2, &pOptionalEntropy)",
    "uint32_t dwFlags = 0",
    "if (sub_140013220(arg1, arg2, u\"machine\", nullptr, nullptr) != 0)",
    "dwFlags = 4",
    "if (sub_140013220(arg1, arg2, u\"system\", nullptr, nullptr) != 0)",
    "dwFlags |= 0x20000000",
    "void* pPromptStruct = sbb.q(arg3, arg3, sub_140013220(arg1, arg2, u\"prompt\", nullptr, nullptr) != 0) & &var_58",
    "int32_t r12 = 1",
    "if (sub_140013220(arg1, arg2, U\"c\", nullptr, nullptr) != 0)",
    "r12 = 2",
    "sub_14000c030(u\"\\ndata        : %s\\n\", var_60)",
    "void* szDataDescr = szDataDescr_1",
    "void* const szDataDescr_2 = &data_1400e17cc",
    "if (szDataDescr != 0)",
    "szDataDescr_2 = szDataDescr",
    "int64_t rdx_9 = sub_14000c030(u\"flags       : \", sub_14000c030(u\"description : %s\\n\", szDataDescr_2))",
    "int32_t i_1 = 0",
    "wchar16 const (** const r13)[0xd] = &data_1400df900",
    "if (((dwFlags u>> i_1.b).b & 1) != 0)",
    "rdx_9 = sub_14000c030(u\"%s ; \", *r13)",
    "i_1 += 1",
    "r13 = &r13[1]",
    "do while (i_1 u< 8)",
    "if (test_bit(dwFlags, 0x1d))",
    "rdx_9 = sub_14000c030(u\"%s ; \", u\"system\")",
    "int64_t rdx_12 = sub_14000c030(u\"prompt flags: \", sub_14000c030(U\"\\n\", rdx_9))",
    "if (pPromptStruct != 0)",
    "rdx_12 = sub_140009b44(*(pPromptStruct + 4))",
    "sub_14000c030(u\"entropy     : \", sub_14000c030(U\"\\n\", rdx_12))",
    "sub_14000c030(u\"\\n\\n\", sub_140012f68(hMem_2, zx.q(pOptionalEntropy), 0))",
    "int64_t rdi_2 = var_60",
    "int64_t i_2 = -1",
    "while (i_2 != 0)",
    "bool cond:4_1 = 0 != *rdi_2",
    "rdi_2 += 2",
    "i_2 -= 1",
    "if (not(cond:4_1))",
    "break",
    "int32_t pDataIn = (not.q(i_2)).d * 2",
    "uint32_t pDataOut",
    "if (CryptProtectData(&pDataIn, szDataDescr, &pOptionalEntropy, nullptr, pPromptStruct, dwFlags, &pDataOut) == 0)",
    "sub_14000c030(u\"ERROR kuhl_m_dpapi_protect ; Cry\u2026\", zx.q(GetLastError()))",
    "char* hMem",
    "HLOCAL rax_9",
    "int64_t rdx_17",
    "rax_9, rdx_17 = sub_140006e44(hMem)",
    "if (rax_9 != 0)",
    "sub_140006ff8(0, rax_9)",
    "rdx_17 = sub_140006f80(rax_9)",
    "sub_14000c030(U\"\\n\", rdx_17)",
    "int32_t rax_10",
    "int64_t rdx_20",
    "rax_10, rdx_20 = sub_140013220(arg1, arg2, u\"out\", &arg_18, nullptr)",
    "if (rax_10 == 0)",
    "sub_14000c030(u\"Blob:\\n\", rdx_20)",
    "sub_14000c030(U\"\\n\", sub_140012f68(hMem, zx.q(pDataOut), r12 | 0x100000))",
    "if (sub_140009ce8(arg_18, hMem, pDataOut) != 0)",
    "sub_14000c030(u\"Write to file '%s' is OK\\n\", arg_18)",
    "LocalFree(hMem)",
    "void* hMem_1 = hMem_2",
    "if (hMem_1 != 0)",
    "LocalFree(hMem_1)",
    "return 0"
  ]
}