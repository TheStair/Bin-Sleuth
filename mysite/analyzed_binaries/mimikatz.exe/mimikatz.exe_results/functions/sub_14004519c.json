{
  "address": "0x14004519c",
  "rules": [
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "decompress data using LZO/4cde8899b401464e87ec185666d6508a",
    "hash data using jshash/f142a7a7597843a791ba4ccc676b6fb1",
    "contain loop",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x20], r9",
    "mov     dword [rsp+0x18], r8d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "mov     r15d, dword [rcx+0x34]",
    "xor     edi, edi",
    "mov     r13, r9",
    "lea     eax, [r15+0x1]",
    "mov     rbp, rdx",
    "mov     rsi, rcx",
    "mov     r14d, edi",
    "mov     dword [rsp+0x3c], edi",
    "mov     dword [rsp+0x34], r15d",
    "mov     dword [rcx+0x34], eax",
    "call    sub_140065300",
    "mov     qword [rsp+0x48], rax",
    "mov     eax, dword [rsp+0xc0]",
    "shr     eax, 0x2",
    "and     eax, 0x1",
    "mov     dword [rsp+0x38], eax",
    "cmp     r13, rdi",
    "je      0x14004523d",
    "cmp     dword [rsi+0x30], edi",
    "jne     0x1400456ce",
    "bt      dword [rbp+0x4], 0xb",
    "jae     0x14004523d",
    "mov     eax, dword [rsp+0xc0]",
    "test    al, 0x1",
    "je      0x140045717",
    "bt      dword [rbp+0x4], 0xb",
    "jae     0x1400456ce",
    "mov     rax, qword [rbp+0x20]",
    "mov     r8d, edi",
    "mov     r10, qword [rax]",
    "cmp     dword [r10], edi",
    "jle     0x14004522e",
    "mov     r12d, dword [rsi+0xac]",
    "mov     ebx, edi",
    "mov     r14d, 0x2",
    "test    al, 0x4",
    "je      0x140045732",
    "bt      dword [rbp+0x4], 0xb",
    "jb      0x140045717",
    "test    byte [rbp+0x4], 0x20",
    "jne     0x1400456ce",
    "cmp     r8d, dword [r10]",
    "cmove   r13, rdi",
    "mov     qword [rsp+0xc8], r13",
    "lea     r9, [r10+0x8]",
    "cmp     r13, rdi",
    "je      0x140045741",
    "mov     dword [rsi+0xac], edi",
    "jmp     0x140045741",
    "mov     rbx, qword [rbp+0x10]",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "lea     edx, [r8+0x1]",
    "mov     qword [rbp+0x10], rdi",
    "call    sub_140044e20",
    "mov     qword [rbp+0x10], rbx",
    "cmp     eax, edi",
    "je      0x140045708",
    "mov     rcx, qword [rbp+0x20]",
    "cmp     qword [rcx+0x50], rdi",
    "jne     0x1400456ce",
    "inc     r8d",
    "add     r9, 0x28",
    "cmp     r8d, dword [r10]",
    "jl      0x140045216",
    "mov     r8d, r15d",
    "mov     rdx, rbp",
    "mov     rcx, rsi",
    "call    sub_1400458a4",
    "cmp     ebx, edi",
    "je      0x140045763",
    "inc     dword [rsi+0x38]",
    "mov     ebx, dword [rsi+0x38]",
    "mov     dword [r13], ebx",
    "mov     r14d, 0x5",
    "jmp     0x14004576a",
    "mov     rax, qword [rbp+0x20]",
    "cmp     dword [rax], 0x2",
    "jg      0x140045710",
    "test    byte [rcx+0xc], 0x9",
    "jne     0x1400456ce",
    "mov     rcx, qword [r9]",
    "call    sub_140044fa4",
    "cmp     eax, edi",
    "jne     0x14004522e",
    "mov     dword [rsi+0xac], r12d",
    "mov     rcx, qword [rsp+0x48]",
    "mov     r8d, ebx",
    "mov     edx, r15d",
    "call    sub_1400450f4",
    "mov     r8, qword [rsp+0xd0]",
    "cmp     r8, rdi",
    "je      0x1400457a5",
    "mov     eax, dword [rsp+0xc0]",
    "cmp     qword [rcx+0x60], rdi",
    "jne     0x1400456ce",
    "mov     eax, dword [rsp+0x34]",
    "mov     rcx, qword [rsp+0xd8]",
    "mov     rbx, qword [rsp+0xb8]",
    "mov     dword [rcx], eax",
    "mov     eax, r14d",
    "add     rsp, 0x70",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     r14d, 0x3",
    "je      0x1400457a5",
    "cmp     qword [rcx+0x30], rdi",
    "jne     0x1400456ce",
    "cmp     r14d, 0x4",
    "je      0x1400457a5",
    "mov     rax, qword [rcx+0x28]",
    "cmp     dword [rax], 0x1",
    "jne     0x1400456ce",
    "mov     rcx, qword [rbp+0x10]",
    "call    sub_140043460",
    "mov     rcx, rdi",
    "movsxd  rdx, eax",
    "cmp     rdx, rdi",
    "jle     0x1400457a5",
    "cmp     qword [rax+0x30], rdi",
    "jne     0x1400456ce",
    "mov     dword [r8+rcx*4], edi",
    "inc     rcx",
    "inc     edi",
    "cmp     rcx, rdx",
    "jl      0x140045797",
    "mov     rax, qword [rax+0x28]",
    "cmp     dword [rax+0x54], edi",
    "jne     0x1400456ce",
    "mov     rdx, qword [rcx]",
    "mov     r8d, edi",
    "mov     r9d, dword [rdx]",
    "cmp     r9d, edi",
    "jle     0x1400452d5",
    "mov     r13, qword [rcx]",
    "mov     rax, qword [rcx+0x28]",
    "mov     r8, qword [rsi]",
    "mov     r12, qword [rax+0x28]",
    "mov     ebx, dword [r13]",
    "mov     qword [rsp+0x58], r13",
    "mov     rdx, qword [r12+0x70]",
    "mov     dword [rsp+0x30], ebx",
    "mov     qword [rsp+0xb0], r12",
    "mov     ecx, 0xfff0bdc0",
    "cmp     rdx, rdi",
    "je      0x140045323",
    "add     rdx, 0x8",
    "movsx   eax, cx",
    "mov     rcx, rsi",
    "mov     edx, eax",
    "mov     dword [rsp+0x44], eax",
    "call    sub_1400538c0",
    "cmp     ebx, 0x1",
    "jne     0x1400453b2  {\"LcD$\"}",
    "mov     r8, qword [r8+0x20]",
    "mov     ecx, edi",
    "cmp     qword [r8+0x18], rdx",
    "je      0x140045323",
    "inc     r8d",
    "add     rdx, 0x28",
    "cmp     r8d, r9d",
    "jl      0x1400452bd",
    "movsxd  r8, dword [rsp+0x30]",
    "mov     ebx, 0x1",
    "mov     r15d, edi",
    "cmp     r8, rdi",
    "mov     r13, rdi",
    "jle     0x140045452",
    "mov     rax, qword [r13+0x8]",
    "cmp     word [rax+0x2c], di",
    "jge     0x1400453b2  {\"LcD$\"}",
    "inc     ecx",
    "movsxd  rax, ecx",
    "shl     rax, 0x5",
    "cmp     qword [rax+r8+0x18], rdx",
    "jne     0x140045313",
    "mov     rax, qword [rdx]",
    "cmp     byte [rax], 0xa2",
    "jne     0x1400456ce",
    "mov     r12, qword [r12+0x10]",
    "movsxd  rax, dword [rsp+0x38]",
    "cmp     r12, rdi",
    "je      0x1400456c1",
    "mov     r14, qword [rsp+0x58]",
    "add     r14, 0x8",
    "mov     r13, qword [rsp+0x48]",
    "lea     edx, [rbx+0x10]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x44]",
    "mov     r9, r12",
    "mov     edx, r15d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], 0x61",
    "mov     ebx, eax",
    "call    sub_14005a1e8",
    "mov     r9, qword [r12]",
    "lea     r8, [rel data_1400f4af0]  {\"USING ROWID SEARCH ON TABLE %s F\u2026\"}",
    "xor     edx, edx",
    "mov     rcx, rsi",
    "mov     r14d, 0x1",
    "call    sub_140032580",
    "mov     edx, ebx",
    "mov     rcx, r13",
    "call    sub_140032d34",
    "mov     r9, rax",
    "mov     eax, dword [r13+0x90]",
    "mov     dword [r9+0x8], eax",
    "jmp     0x14004576a",
    "mov     r13, qword [rsp+0xc8]",
    "mov     r15d, dword [rsp+0x30]",
    "mov     rcx, qword [rbp+0x10]",
    "mov     edx, r15d",
    "call    sub_140043488",
    "mov     r10, rax",
    "mov     rax, qword [r14]",
    "movsx   rcx, word [rax+0x2c]",
    "cmp     ecx, edi",
    "jl      0x140045407",
    "movzx   ecx, word [r12+0x60]",
    "cmp     ecx, r15d",
    "jl      0x14004569b",
    "mov     r12b, 0x44",
    "mov     rax, qword [r12+0x8]",
    "shl     rcx, 0x5",
    "mov     r12b, byte [rcx+rax+0x19]",
    "jmp     0x14004540a",
    "mov     r13, qword [rsp+0xc8]",
    "cmp     qword [r12+0x48], rdi",
    "jne     0x14004569b",
    "movsxd  r8, dword [rsp+0x30]",
    "mov     r12, qword [rsp+0xb0]",
    "inc     r13",
    "inc     r15d",
    "add     r14, 0x28",
    "cmp     r13, r8",
    "jl      0x1400453d4",
    "cmp     ecx, 0x1",
    "je      0x14004542b",
    "mov     dl, r12b",
    "mov     rcx, r10",
    "call    sub_14004328c",
    "movsx   ecx, al",
    "sub     ecx, 0x41",
    "je      0x14004542b",
    "cmp     r14d, edi",
    "jne     0x14004576a",
    "cmp     r14d, edi",
    "jne     0x14004576a",
    "cmp     ecx, 0x3f",
    "jae     0x14004569b",
    "cmp     ebx, edi",
    "je      0x1400456c1",
    "cmp     ebx, edi",
    "je      0x1400456c1",
    "cmp     r12b, 0x43",
    "mov     ebx, edi",
    "setge   bl",
    "jmp     0x1400456c9",
    "cmp     rax, rdi",
    "je      0x1400454ba",
    "mov     r14d, edi",
    "mov     r15d, dword [rsp+0x34]",
    "cmp     r8, rdi",
    "mov     rdx, rdi",
    "mov     eax, edi",
    "mov     qword [rsp+0x50], rdx",
    "mov     dword [rsp+0x40], eax",
    "mov     r13, rdi",
    "jle     0x1400455c1",
    "movzx   eax, word [r12+0x5e]",
    "cmp     eax, r15d",
    "jg      0x140045696",
    "mov     ecx, r15d",
    "mov     eax, 0x1",
    "shl     rax, cl",
    "dec     rax",
    "cmp     rdx, rax",
    "jne     0x140045696",
    "mov     r10, qword [rsp+0x58]",
    "add     r10, 0x8",
    "mov     qword [rsp+0x60], r10",
    "movsxd  rax, dword [rsp+0x38]",
    "cmp     ecx, r15d",
    "jle     0x1400454ba",
    "mov     r13, qword [rsp+0x48]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "lea     edx, [r9+0x11]",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "mov     r9, qword [r12]",
    "lea     r8, [rel data_1400f4b20]  {\"USING INDEX %s FOR IN-OPERATOR\"}",
    "xor     edx, edx",
    "mov     rcx, rsi",
    "mov     ebx, eax",
    "call    sub_140032580",
    "mov     eax, dword [rsp+0x44]",
    "mov     r9d, dword [r12+0x58]",
    "mov     r8d, dword [rsp+0x34]",
    "mov     edx, 0x61",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     rdx, r12",
    "mov     rcx, rsi",
    "call    sub_140032d08",
    "mov     r11, qword [r12+0x38]",
    "mov     r13, qword [rsp+0xc8]",
    "movzx   r14d, byte [r11]",
    "add     r14d, 0x3",
    "mov     dword [rsp+0x3c], r14d",
    "cmp     r13, rdi",
    "je      0x140045672",
    "inc     r15",
    "inc     r11d",
    "add     rbx, 0x2",
    "cmp     r15, rcx",
    "jl      0x14004551d",
    "cmp     r14, rdi",
    "je      0x140045558",
    "cmp     byte [r12+0x62], dil",
    "je      0x140045696",
    "mov     r11, qword [rsp+0x48]",
    "mov     edx, ebx",
    "mov     rcx, r11",
    "call    sub_140032d34",
    "mov     r9, rax",
    "mov     eax, dword [r11+0x90]",
    "mov     dword [r9+0x8], eax",
    "movsxd  rax, dword [rsp+0x38]",
    "jmp     0x1400456a3",
    "inc     dword [rsi+0x38]",
    "mov     r8d, dword [rsi+0x38]",
    "mov     dword [r13], r8d",
    "cmp     r15d, 0x1",
    "jne     0x140045672",
    "cmp     word [rbx], ax",
    "jne     0x140045549",
    "mov     r15d, dword [rsp+0x30]",
    "mov     r14, qword [rsp+0x50]",
    "cmp     r11d, r15d",
    "je      0x1400455b7",
    "mov     rdx, qword [r12+0x40]",
    "mov     rcx, qword [r14]",
    "mov     rdx, qword [rdx+r15*8]",
    "call    sub_1400192b0",
    "cmp     eax, edi",
    "je      0x140045558",
    "mov     r12, qword [r12+0x28]",
    "movsxd  r8, dword [rsp+0x30]",
    "cmp     r12, rdi",
    "jne     0x14004546a",
    "mov     edx, dword [rsp+0x34]",
    "mov     rcx, qword [rsp+0x48]",
    "call    sub_1400450f4",
    "mov     r14d, dword [rsp+0x3c]",
    "mov     rdx, qword [rsp+0x50]",
    "mov     ecx, r11d",
    "mov     eax, 0x1",
    "shl     rax, cl",
    "test    r14, rax",
    "jne     0x1400455b7",
    "mov     ax, word [rsp+0xb0]",
    "movsxd  rcx, dword [rsp+0x30]",
    "or      r14, rax",
    "mov     rax, qword [rsp+0xd0]",
    "mov     qword [rsp+0x50], r14",
    "cmp     rax, rdi",
    "je      0x140045590",
    "mov     eax, dword [rsp+0x40]",
    "mov     r10, qword [rsp+0x60]",
    "inc     r13",
    "inc     eax",
    "add     r10, 0x28",
    "movsxd  rcx, r15d",
    "cmp     r13, rcx",
    "mov     dword [rsp+0x40], eax",
    "mov     qword [rsp+0x60], r10",
    "jl      0x1400454e2",
    "mov     dword [rax+r13*4], r11d",
    "mov     rcx, qword [rbp+0x10]",
    "mov     edx, eax",
    "call    sub_140043488",
    "mov     rbx, qword [r10]",
    "mov     rcx, rsi",
    "mov     r8, rbx",
    "mov     rdx, rax",
    "call    sub_140043358",
    "movsxd  rcx, dword [rsp+0x30]",
    "mov     r11d, edi",
    "mov     r14, rax",
    "movzx   eax, word [rbx+0x2c]",
    "mov     rbx, qword [r12+0x8]",
    "mov     word [rsp+0xb0], ax",
    "mov     r15, rdi"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}