{
  "address": "0x140051dd4",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "PEB access/e2c35c8722ff407f92bb1a8869064106",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using AES MixColumns step/954c5d7507db4ab48ac65ac05419ca28",
    "encrypt data using speck/4b1f3c27d17344b39cf9dede3bcf8b4b",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "check if file exists/4d83966993d04127850572b75c95648d/7fda8288a77741bfa31be8be31ac2a25",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x20], r9",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xc0",
    "mov     rbp, qword [rcx]",
    "xor     r13d, r13d",
    "mov     r12, r9",
    "mov     rax, r13",
    "mov     rbx, r8",
    "mov     rdi, rdx",
    "mov     rsi, rcx",
    "mov     qword [rsp+0x58], r13",
    "mov     qword [rsp+0x88], rbp",
    "mov     qword [rsp+0x60], rax",
    "mov     qword [rsp+0x68], rax",
    "mov     r14d, r13d",
    "mov     qword [rsp+0x48], r13",
    "mov     r15, r13",
    "mov     qword [rsp+0x50], r13",
    "cmp     byte [rbp+0x61], r13b",
    "jne     0x140051fcb",
    "mov     rdi, qword [rsp+0x120]",
    "jmp     0x140052c1e",
    "cmp     dword [rcx+0x30], r13d",
    "jg      0x140051fcb",
    "mov     r13, qword [rsp+0x118]",
    "lea     eax, [r13+0x1]",
    "cmp     byte [rcx+0x104], al",
    "jne     0x140051e5a",
    "cmp     rdi, r15",
    "je      0x140052c4e",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "call    sub_140043de4",
    "call    sub_140062358",
    "cmp     eax, r13d",
    "jne     0x140051fcb",
    "cmp     byte [rsp+0x150], 0x2",
    "jne     0x140051fcb",
    "mov     rdx, r13",
    "mov     rcx, rbp",
    "call    sub_140053434",
    "mov     rax, qword [rsp+0x58]",
    "cmp     rax, r15",
    "je      0x140052c6e",
    "mov     rdx, rdi",
    "mov     rcx, rbp",
    "call    sub_140044bf4",
    "mov     rax, qword [rsp+0x120]",
    "mov     rcx, rsi",
    "mov     rdx, rax",
    "mov     qword [rsp+0x40], rax",
    "call    sub_140051d70",
    "cmp     eax, r13d",
    "jne     0x140052c16",
    "mov     rbx, qword [rsp+0x108]",
    "add     rsp, 0xc0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rdx, rax",
    "mov     rcx, rbp",
    "call    sub_1400169a8",
    "xor     r15d, r15d",
    "cmp     r12, r13",
    "je      0x14005200f",
    "mov     r12, qword [rsi+0x130]",
    "cmp     r12, r13",
    "je      0x140052c16",
    "mov     rax, qword [rsi]",
    "cmp     dword [rbx+0x8], r13d",
    "jbe     0x140051ec1",
    "mov     rcx, qword [r12+0x70]",
    "mov     edi, 0xfff0bdc0",
    "mov     dword [rsp+0x100], edi",
    "cmp     rcx, r13",
    "je      0x140052065",
    "mov     r13, rdi",
    "mov     qword [rsp+0x60], rdi",
    "movzx   edi, byte [rax+0xb4]",
    "lea     r9, [rsp+0x68]",
    "mov     r8, rbx",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004e6f0",
    "mov     r13, qword [rsp+0x68]",
    "mov     qword [rsp+0x60], r13",
    "mov     edi, eax",
    "jmp     0x140051ed0",
    "mov     rbx, qword [r12]",
    "mov     r13, qword [rbp+0x20]",
    "movsxd  rax, edi",
    "shl     rax, 0x5",
    "lea     rdx, [rel data_1400f4c80]  {\"sqlite_\"}",
    "mov     r8d, 0x7",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x78], rax",
    "call    sub_1400192e8",
    "xor     ecx, ecx",
    "cmp     eax, ecx",
    "jne     0x1400520c8",
    "mov     rax, qword [rbp+0x20]",
    "mov     edi, r13d",
    "mov     dword [rsp+0x100], r13d",
    "cmp     qword [rax+0x18], rcx",
    "je      0x140052065",
    "cmp     byte [rbp+0xb5], al",
    "jne     0x140051f1b",
    "xor     eax, eax",
    "mov     dword [rsp+0x100], edi",
    "cmp     edi, eax",
    "jl      0x140052c16",
    "cmp     qword [r12+0x18], rcx",
    "je      0x1400520e0",
    "cmp     byte [rbp+0xb5], cl",
    "jne     0x1400520c8",
    "add     rax, 0x18",
    "mov     ebx, 0x1",
    "mov     ebx, 0x1",
    "mov     rdx, r12",
    "mov     rcx, rsi",
    "call    sub_1400549b0",
    "xor     ecx, ecx",
    "cmp     dword [rbx+0x8], ecx",
    "jne     0x140051f1b",
    "cmp     dword [r12+0x54], ecx",
    "je      0x1400520f0",
    "lea     rdx, [rel data_1400f5db0]  {\"views may not be indexed\"}",
    "cmp     qword [rsp+0x118], rcx",
    "je      0x1400520c8",
    "add     rax, 0x20",
    "add     edi, ebx",
    "cmp     qword [rax], rcx",
    "jne     0x140052053",
    "mov     dword [rsp+0x100], edi",
    "cmp     edi, ebx",
    "jne     0x140051fd8",
    "lea     ebx, [rcx+0x1]",
    "cmp     rax, rcx",
    "je      0x140051f20",
    "mov     rdx, qword [rsp+0x60]",
    "cmp     rdx, rcx",
    "je      0x1400521b7",
    "lea     rdx, [rel data_1400f5dd0]  {\"virtual tables may not be indexe\u2026\"}",
    "jmp     0x1400520d6",
    "mov     rdi, qword [rsp+0x120]",
    "xor     r15d, r15d",
    "jmp     0x140052c1e",
    "lea     rdx, [rel data_1400f5d90]  {\"table %s may not be indexed\"}",
    "test    byte [rax+0x40], 0x20",
    "je      0x140052065",
    "mov     rdx, qword [rbp+0x20]",
    "mov     rcx, qword [rax+0x70]",
    "cmp     qword [rdx+0x38], rcx",
    "je      0x140051fd8",
    "mov     r8, qword [rsi]",
    "mov     qword [rsp+0x90], rsi",
    "movsxd  rdx, edi",
    "mov     rax, qword [r8+0x20]",
    "shl     rdx, 0x5",
    "mov     rcx, qword [rdx+rax]",
    "mov     qword [rsp+0xa8], rcx",
    "mov     rax, qword [r8+0x20]",
    "mov     rcx, qword [rax+rdx+0x18]",
    "lea     rax, [rel data_1400f5d4c]  {\"index\"}",
    "mov     qword [rsp+0xb8], r13",
    "mov     qword [rsp+0xb0], rax",
    "xor     r13d, r13d",
    "mov     qword [rsp+0x98], rcx",
    "mov     eax, r13d",
    "cmp     edi, ebx",
    "lea     rcx, [rsp+0x90]",
    "sete    al",
    "mov     rdx, r12",
    "mov     dword [rsp+0xa0], eax",
    "call    sub_14004d5a0",
    "lea     r8, [r12+0x8]",
    "xor     edx, edx",
    "mov     rcx, rsi",
    "call    sub_14004e084",
    "mov     r12, rax",
    "cmp     rax, r13",
    "je      0x140052c16",
    "mov     rcx, qword [rbp+0x20]",
    "mov     rcx, qword [rcx+0x38]",
    "cmp     qword [rax+0x70], rcx",
    "cmove   edi, ebx",
    "mov     dword [rsp+0x100], edi",
    "jmp     0x140051f20",
    "mov     rax, qword [r12+0x10]",
    "mov     edx, 0x1",
    "mov     r9d, edx",
    "jmp     0x1400521cd",
    "mov     rcx, rbp",
    "call    sub_14004e64c",
    "mov     rbx, rax",
    "mov     qword [rsp+0x58], rax",
    "xor     eax, eax",
    "cmp     rbx, rax",
    "je      0x140052c16",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "jmp     0x1400520b8",
    "mov     r15, qword [rax+0x10]",
    "mov     qword [rsp+0x50], r15",
    "cmp     r15, r13",
    "je      0x140052065",
    "mov     r8, qword [rax]",
    "lea     rdx, [rel data_1400f5d58]  {\"cannot create a TEMP index on no\u2026\"}",
    "mov     rcx, rsi",
    "cmp     rax, rcx",
    "jne     0x1400521c6",
    "mov     r9, qword [r12]",
    "lea     r8, [rel data_1400f5d4c]  {\"index\"}",
    "mov     rdx, rbx",
    "mov     rcx, rsi",
    "call    sub_14004e790",
    "xor     r10d, r10d",
    "cmp     eax, r10d",
    "jne     0x140052c16",
    "mov     ecx, 0x3",
    "mov     rax, qword [rax+0x28]",
    "add     r9d, edx",
    "lea     rdx, [rel data_1400f5e38]  {\"sqlite_autoindex_%s_%d\"}",
    "mov     r8, rbx",
    "mov     rcx, rbp",
    "call    _printf_p_l",
    "xor     r10d, r10d",
    "mov     rbx, rax",
    "mov     qword [rsp+0x58], rax",
    "cmp     rax, r10",
    "je      0x140052c16",
    "cmp     byte [rsi+0x104], 0x2",
    "jae     0x14005220a",
    "mov     qword [rsp+0x50], r15",
    "jmp     0x140052065",
    "mov     r15, qword [r15+0x28]",
    "cmp     r15, r13",
    "jne     0x140051ff5",
    "lea     ecx, [r10+0x1]",
    "cmp     byte [rsi+0x104], r10b",
    "je      0x14005220f",
    "mov     ecx, 0x1",
    "cmp     byte [rbp+0xb5], r10b",
    "jne     0x140052170",
    "mov     eax, dword [r15+0x64]",
    "and     al, cl",
    "cmp     al, 0x2",
    "je      0x140052008",
    "cmp     byte [rsi+0x104], 0x2",
    "lea     rdx, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "jae     0x140052287",
    "add     byte [rax+0x7], cl",
    "jmp     0x14005220f",
    "mov     r9, qword [rsp+0x120]",
    "cmp     r9, r10",
    "jne     0x14005231c",
    "mov     rax, qword [rsp+0x78]",
    "cmp     edi, ecx",
    "lea     r8, [rel data_1400f5788]  {\"sqlite_temp_master\"}",
    "mov     rbx, qword [rax+r13]",
    "cmovne  r8, rdx",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x12]",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x140052c16",
    "mov     r8, qword [rsp+0x78]",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "mov     r8, qword [r8+r13]",
    "call    sub_14004e0d8",
    "xor     r10d, r10d",
    "cmp     rax, r10",
    "je      0x14005220a",
    "xor     r8d, r8d",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "call    sub_14004de30",
    "test    rax, rax",
    "je      0x140052170",
    "mov     rax, qword [rsi]",
    "mov     ecx, dword [rax+0x84]",
    "cmp     dword [r9], ecx",
    "jle     0x14005234b",
    "movsx   eax, word [r12+0x46]",
    "mov     edi, 0x1",
    "sub     eax, edi",
    "movsxd  rcx, eax",
    "shl     rcx, 0x5",
    "add     rcx, qword [r12+0x8]",
    "or      byte [rcx+0x1b], 0x8",
    "mov     rcx, qword [rcx]",
    "mov     qword [rsp+0x68], rcx",
    "call    sub_140019074",
    "lea     r8, [rsp+0x68]",
    "lea     edx, [rdi+0x3a]",
    "xor     r9d, r9d",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x70], eax",
    "call    sub_140043858",
    "xor     edx, edx",
    "mov     r8, rax",
    "mov     rcx, rsi",
    "call    sub_140044974",
    "xor     r10d, r10d",
    "mov     r9, rax",
    "mov     qword [rsp+0x40], rax",
    "cmp     rax, r10",
    "je      0x140052c16",
    "mov     r9, qword [r12]",
    "mov     eax, 0x1",
    "mov     qword [rsp+0x20], rbx",
    "mov     rbx, qword [rsp+0x58]",
    "mov     edx, eax",
    "cmp     edi, eax",
    "mov     eax, 0x3",
    "mov     rcx, rsi",
    "mov     r8, rbx",
    "cmove   edx, eax",
    "call    sub_14004da74",
    "xor     r10d, r10d",
    "cmp     eax, r10d",
    "jne     0x140052c16",
    "xor     r15d, r15d",
    "mov     rcx, rsi",
    "cmp     dword [rsp+0x148], r15d",
    "jne     0x1400521ab",
    "lea     rdx, [rel data_1400f5df8]  {\"there is already a table named %\u2026\"}",
    "jmp     0x1400520ad",
    "cmp     dword [rsi+0x30], r10d",
    "jne     0x140052c16",
    "lea     r8, [rel data_1400f5d4c]  {\"index\"}",
    "lea     rdx, [rel data_1400f4ab0]  {\"too many columns in %s\"}",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "mov     r9, qword [rsp+0x120]",
    "xor     r10d, r10d",
    "mov     ecx, dword [rax]",
    "mov     r8d, dword [rsp+0x140]",
    "sub     ecx, edi",
    "cmp     r8d, 0xffffffff",
    "movsxd  rcx, ecx",
    "cmove   r8d, r10d",
    "lea     rdx, [rcx+rcx*4]",
    "mov     byte [rax+rdx*8+0x20], r8b",
    "jmp     0x14005235a",
    "mov     edx, edi",
    "call    sub_1400538c0",
    "jmp     0x140051fcb",
    "mov     r8, rbx",
    "lea     rdx, [rel data_1400f5e20]  {\"index %s already exists\"}",
    "jmp     0x140051fc6",
    "mov     r8, rbx",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "mov     edi, 0x1",
    "cmp     dword [r9], r10d",
    "jle     0x140052385",
    "call    sub_1400191b8",
    "mov     rcx, rbx",
    "call    sub_140019074",
    "mov     ebx, eax",
    "cmp     r15, r10",
    "je      0x14005239b",
    "mov     r8d, dword [r9]",
    "lea     rdx, [r9+0x8]",
    "mov     ecx, edi",
    "movzx   ecx, word [r15+0x5e]",
    "jmp     0x14005239d",
    "add     rdx, 0x28",
    "sub     r8, rdi",
    "jne     0x140052366",
    "mov     rcx, qword [rcx+0x8]",
    "call    sub_140019074",
    "lea     r14d, [r14+rax+0x1]",
    "xor     r15d, r15d",
    "mov     rax, qword [rsp+0x48]",
    "mov     rdx, qword [rsp+0x58]",
    "lea     ecx, [rbx+0x1]",
    "mov     qword [rdi], rax",
    "movsxd  r8, ecx",
    "mov     rcx, qword [rdi]",
    "add     rax, r8",
    "mov     qword [rsp+0x48], rax",
    "call    memcpy",
    "and     dword [rdi+0x64], 0xfffffff4",
    "mov     eax, dword [rsp+0x128]",
    "mov     r14, qword [rsp+0x78]",
    "xor     r8d, r8d",
    "cmp     eax, r8d",
    "mov     byte [rdi+0x62], al",
    "movzx   eax, byte [rsp+0x150]",
    "mov     ecx, r8d",
    "setne   cl",
    "and     eax, 0x3",
    "mov     qword [rdi+0x18], r12",
    "lea     ebx, [r8+0x1]",
    "and     ecx, ebx",
    "mov     rbx, qword [rsp+0x138]",
    "shl     ecx, 0x3",
    "or      ecx, eax",
    "or      dword [rdi+0x64], ecx",
    "mov     rax, qword [rbp+0x20]",
    "mov     rcx, qword [rax+r14+0x18]",
    "mov     rax, qword [rsp+0x40]",
    "mov     qword [rdi+0x30], rcx",
    "movzx   eax, word [rax]",
    "mov     word [rdi+0x5e], ax",
    "cmp     rbx, r8",
    "je      0x140052471",
    "movzx   edx, word [r9]",
    "lea     r8d, [rax+r14+0x1]",
    "lea     r9, [rsp+0x48]",
    "add     dx, cx",
    "mov     rcx, rbp",
    "call    sub_140051cb8",
    "mov     rdi, rax",
    "xor     eax, eax",
    "cmp     byte [rbp+0x61], al",
    "jne     0x1400526cb",
    "mov     rcx, qword [rdx]",
    "cmp     byte [rcx], 0x6d",
    "jne     0x14005237c",
    "mov     rdi, qword [rsp+0x40]",
    "mov     rdx, rdi",
    "mov     rcx, rbp",
    "call    sub_14004e174",
    "jmp     0x140052c19",
    "mov     rax, qword [r14+r13+0x18]",
    "cmp     byte [rax+0x70], 0x4",
    "mov     rax, qword [rsp+0x40]",
    "sbb     ebx, ebx",
    "lea     r14, [rax+0x8]",
    "neg     ebx",
    "dec     ebx",
    "cmp     byte [rsi+0x104], 0x2",
    "mov     dword [rsp+0x80], ebx",
    "jb      0x1400524a2",
    "mov     qword [rsp+0x20], r8",
    "mov     r9, rbx",
    "mov     rdx, r12",
    "mov     r8d, 0x2",
    "mov     rcx, rsi",
    "call    sub_140042edc",
    "xor     r8d, r8d",
    "mov     qword [rdi+0x48], rbx",
    "mov     qword [rsp+0x138], r8",
    "mov     ecx, r8d",
    "mov     r13, r8",
    "mov     qword [rsp+0x68], r8",
    "lea     rdx, [rel data_1400d66b0]  {\"BINARY\"}",
    "mov     dword [rsp+0x120], ecx",
    "cmp     r8w, word [rdi+0x5e]",
    "jae     0x140052666",
    "mov     qword [rdi+0x50], rax",
    "mov     qword [rsp+0x40], r8",
    "cmp     r15, r8",
    "je      0x140052739",
    "mov     rax, qword [r14]",
    "cmp     byte [rax], 0x71",
    "jne     0x1400524d3",
    "mov     rax, qword [rdi+0x8]",
    "movsxd  rcx, ecx",
    "or      ebx, 0xffffffff",
    "mov     word [rax+rcx*2], bx",
    "mov     rax, qword [rdi+0x40]",
    "lea     r14d, [rbx+0x2]",
    "mov     qword [rax+rcx*8], rdx",
    "jmp     0x14005275e",
    "mov     ebx, r8d",
    "movsxd  r13, ecx",
    "cmp     r8w, word [r15+0x5e]",
    "jae     0x140052755",
    "cmp     byte [rax], 0x6d",
    "jne     0x1400524e4",
    "mov     byte [rax], 0x3b",
    "jmp     0x1400524e4",
    "mov     rcx, rdi",
    "call    sub_140052c8c",
    "xor     r15d, r15d",
    "cmp     qword [rsi+0x130], r15",
    "jne     0x14005277a",
    "mov     r14d, 0x1",
    "xor     ebp, ebp",
    "mov     r9, qword [r14]",
    "mov     qword [rsp+0x20], r8",
    "mov     rdx, r12",
    "mov     r8d, 0x20",
    "mov     rcx, rsi",
    "call    sub_140042edc",
    "xor     r8d, r8d",
    "cmp     dword [rsi+0x30], r8d",
    "jne     0x1400526cb",
    "mov     rcx, qword [rax+0x10]",
    "cmp     byte [rcx], 0x71",
    "jne     0x1400524e4",
    "movzx   r10d, word [rdi+0x60]",
    "mov     r8, r15",
    "lea     eax, [r10-0x1]",
    "movsxd  rdx, eax",
    "cmp     rdx, r15",
    "jl      0x1400527b4",
    "mov     rcx, rdi",
    "call    sub_14004f9fc",
    "mov     rax, qword [rdi+0x8]",
    "mov     word [rax+r13*2], r15w",
    "mov     rcx, qword [rdi+0x40]",
    "mov     r15, qword [rsp+0x50]",
    "mov     rax, qword [r15+0x40]",
    "mov     rax, qword [rax+r14*8]",
    "mov     qword [rcx+r13*8], rax",
    "mov     rax, qword [r15+0x38]",
    "mov     rcx, qword [rdi+0x38]",
    "mov     al, byte [r14+rax]",
    "mov     r14d, 0x1",
    "mov     byte [r13+rcx], al",
    "add     r13, r14",
    "mov     r15, qword [rsp+0x50]",
    "mov     eax, 0xffff",
    "mov     r14d, 0x1",
    "add     word [rdi+0x60], ax",
    "jmp     0x14005271f",
    "mov     rax, qword [r14]",
    "jmp     0x14005251a",
    "mov     byte [rcx], 0x3b",
    "mov     r13, qword [rsp+0x118]",
    "not     r8",
    "mov     qword [rdi+0x68], r8",
    "cmp     r13, r15",
    "je      0x140052832",
    "mov     rax, qword [rdi+0x8]",
    "lea     r9, [rax+rdx*2]",
    "mov     rax, qword [r15+0x8]",
    "movzx   edx, word [rdi+0x5e]",
    "mov     r8, qword [rsp+0x50]",
    "movsxd  r14, ebx",
    "mov     r9d, ebx",
    "mov     rcx, rdi",
    "movsx   r15d, word [rax+r14*2]",
    "call    sub_14004fa5c",
    "cmp     eax, ebp",
    "je      0x1400526e7",
    "mov     rbp, qword [rsp+0x88]",
    "jmp     0x14005275b",
    "movzx   eax, word [r15+0x5e]",
    "add     ebx, r14d",
    "cmp     ebx, eax",
    "jl      0x140052682",
    "cmp     rax, r8",
    "jne     0x14005250f",
    "cmp     r12, qword [rsi+0x130]",
    "jne     0x1400528d9",
    "movsx   eax, word [r12+0x46]",
    "cmp     r10d, eax",
    "jl      0x140052832",
    "sub     rdx, r14",
    "sub     r9, 0x2",
    "cmp     rdx, r15",
    "jge     0x140052796",
    "mov     rax, r14",
    "shl     rax, cl",
    "or      r8, rax",
    "or      ebx, 0xffffffff",
    "bt      dword [rax+0x4], 0xc",
    "jae     0x14005251f",
    "cmp     byte [rax], 0xa2",
    "je      0x14005255b",
    "cmp     byte [rsi+0x104], 0x2",
    "jae     0x140052b96",
    "mov     rbx, qword [r12+0x10]",
    "cmp     rbx, r15",
    "je      0x1400528d9",
    "or      dword [rdi+0x64], 0x20",
    "cmp     r15w, word [r12+0x46]",
    "mov     r8d, dword [rdi+0x64]",
    "mov     edx, r15d",
    "jge     0x140052832",
    "movsx   ecx, word [r9]",
    "cmp     ecx, 0x3e",
    "ja      0x1400527a8",
    "mov     rax, qword [rax+0x10]",
    "movsx   rdx, word [rax+0x2c]",
    "cmp     edx, r8d",
    "jge     0x14005256d",
    "cmp     r12, qword [rsi+0x130]",
    "je      0x1400526bc",
    "cmp     byte [rbp+0xb5], r15b",
    "jne     0x140052bbf",
    "cmp     byte [rbp+0xb5], r15b",
    "je      0x1400529e6",
    "movzx   eax, word [rdi+0x5e]",
    "movsx   r11d, word [r12+0x44]",
    "mov     rax, qword [r12+0x8]",
    "mov     rcx, rdx",
    "shl     rcx, 0x5",
    "cmp     byte [rcx+rax+0x18], r8b",
    "jne     0x140052584",
    "movsx   edx, word [r12+0x44]",
    "jmp     0x140052584",
    "lea     rdx, [rel data_1400f5e50]  {\"expressions prohibited in PRIMAR\u2026\"}",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "cmp     qword [rdi+0x50], r8",
    "jne     0x140052545",
    "cmp     dword [rsp+0x128], 0x5",
    "jne     0x140052c03",
    "cmp     r13, r15",
    "je      0x140052bbf",
    "test    byte [r12+0x40], 0x20",
    "je      0x1400529f7",
    "cmp     r13, r15",
    "je      0x1400529b4",
    "mov     rbx, qword [rbx+0x28]",
    "cmp     rbx, r15",
    "jne     0x140052851",
    "movzx   ecx, word [rbx+0x5e]",
    "mov     r13d, r15d",
    "cmp     ecx, r15d",
    "jle     0x1400528c3",
    "movsx   eax, word [r12+0x46]",
    "add     edx, r14d",
    "cmp     edx, eax",
    "jge     0x140052832",
    "cmp     r10d, r15d",
    "mov     ecx, r15d",
    "jle     0x140052812",
    "mov     rax, qword [rdi+0x8]",
    "mov     word [rax+r13*2], dx",
    "and     dword [rdi+0x64], 0xfffffff7",
    "mov     rax, qword [rdi+0x8]",
    "mov     ecx, 0xfffffffe",
    "mov     word [rax+r13*2], cx",
    "and     dword [rdi+0x64], 0xfffffff7",
    "mov     edx, ecx",
    "jmp     0x14005258d",
    "mov     rax, qword [rsp+0x40]",
    "mov     qword [rsp+0x40], r8",
    "mov     qword [rdi+0x50], rax",
    "mov     rax, qword [r12+0x10]",
    "mov     qword [rdi+0x28], rax",
    "mov     qword [r12+0x10], rdi",
    "jmp     0x14005298b",
    "mov     rcx, qword [r12+0x10]",
    "cmp     rcx, r15",
    "je      0x140052c03",
    "cmp     byte [rsi+0x104], 0x2",
    "jb      0x1400526ce",
    "mov     r13d, 0x1",
    "mov     rcx, rsi",
    "add     dword [rsi+0x38], r13d",
    "mov     r14d, dword [rsi+0x38]",
    "call    sub_140065300",
    "mov     rbx, rax",
    "cmp     rax, r15",
    "je      0x1400526ce",
    "cmp     r13, r15",
    "je      0x140052b96",
    "mov     rcx, qword [rdi+0x30]",
    "mov     rdx, qword [rdi]",
    "mov     r8, rdi",
    "add     rcx, 0x20",
    "call    sub_14001a4ac",
    "cmp     rax, r15",
    "je      0x1400529d9",
    "mov     edx, dword [rbp+0xb0]",
    "mov     rax, qword [rdi+0x18]",
    "mov     dword [rdi+0x58], edx",
    "mov     rcx, qword [rax+0x10]",
    "cmp     word [rbx+0x5e], ax",
    "jne     0x1400528c8",
    "mov     r13, qword [rsp+0x118]",
    "cmp     r13d, ecx",
    "je      0x140052926",
    "mov     r11, qword [rdi+0x8]",
    "mov     r14, r15",
    "mov     r15, qword [rbx+0x8]",
    "sub     r15, r11",
    "mov     ebp, 0x1",
    "jmp     0x1400527ec",
    "mov     cx, bx",
    "mov     r9, qword [rdi+0x8]",
    "cmp     edx, r8d",
    "jl      0x1400525ea",
    "mov     rdx, qword [rax+0x8]",
    "mov     rcx, rdx",
    "call    sub_140019074",
    "mov     rcx, qword [rsp+0x48]",
    "inc     eax",
    "movsxd  rbx, eax",
    "mov     r8, rbx",
    "call    memcpy",
    "mov     rax, qword [rsp+0x48]",
    "mov     r13, rax",
    "add     rax, rbx",
    "mov     ebx, dword [rsp+0x80]",
    "mov     qword [rsp+0x48], rax",
    "xor     r8d, r8d",
    "jmp     0x1400525e5",
    "mov     rax, qword [r14]",
    "cmp     byte [rax], 0x6d",
    "jne     0x1400525cf",
    "mov     rdi, r15",
    "jmp     0x1400526ce",
    "cmp     byte [rcx+0x62], 0x5",
    "je      0x140052c03",
    "cmp     rdi, r15",
    "je      0x140052c19",
    "mov     qword [rsi+0x138], rdi",
    "mov     rdi, qword [rsp+0x40]",
    "jmp     0x140052c26",
    "mov     r15d, dword [rsp+0x100]",
    "mov     edx, r13d",
    "mov     rcx, rsi",
    "mov     r8d, r15d",
    "call    sub_14005398c",
    "xor     r13d, r13d",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, 0xaa",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "mov     r9d, r14d",
    "mov     r8d, r15d",
    "mov     edx, 0x8b",
    "mov     rcx, rbx",
    "mov     dword [rdi+0x58], eax",
    "mov     dword [rsp+0x20], 0x2",
    "call    sub_140032364",
    "cmp     qword [rsp+0x130], r13",
    "je      0x140052ac9",
    "mov     eax, 0x1",
    "or      dword [rbp+0x2c], eax",
    "jmp     0x140052b96",
    "mov     rcx, rbp",
    "call    sub_140016efc",
    "jmp     0x1400526ce",
    "cmp     dword [rcx+0x58], edx",
    "jne     0x140052920",
    "mov     al, byte [rdi+0x62]",
    "cmp     byte [rbx+0x62], al",
    "je      0x14005295a",
    "mov     rbp, qword [rsp+0x88]",
    "movzx   ecx, word [rbx+0x5e]",
    "mov     ax, word [rdi+0x5e]",
    "xor     r15d, r15d",
    "mov     rdx, qword [rdi+0x40]",
    "mov     rcx, qword [rbx+0x40]",
    "mov     rdx, qword [rdx+r14]",
    "mov     rcx, qword [rcx+r14]",
    "call    sub_1400192b0",
    "xor     ecx, ecx",
    "cmp     eax, ecx",
    "jne     0x1400528b0",
    "cmp     edx, r11d",
    "je      0x14005281b",
    "and     r8d, 0xffffffdf",
    "mov     dword [rdi+0x64], r8d",
    "cmp     cx, r15w",
    "jl      0x14005282a",
    "movzx   eax, word [rdi+0x60]",
    "add     ecx, r14d",
    "cmp     ecx, eax",
    "jl      0x1400527fd",
    "lea     r13, [rel data_1400d66b0]  {\"BINARY\"}",
    "mov     rax, qword [r12+0x8]",
    "movsxd  rcx, edx",
    "shl     rcx, 0x5",
    "mov     r13, qword [rcx+rax+0x10]",
    "cmp     r13, r8",
    "jne     0x1400525f1",
    "cmp     qword [rcx+0x28], r15",
    "je      0x140052bf2",
    "mov     rbx, qword [rsp+0x138]",
    "cmp     rbx, r15",
    "je      0x140052c3e",
    "mov     rax, qword [r12]",
    "mov     r8, qword [rbp+0x20]",
    "mov     qword [rsp+0x38], r13",
    "mov     dword [rsp+0x30], r14d",
    "mov     qword [rsp+0x28], rax",
    "mov     rax, qword [rdi]",
    "mov     qword [rsp+0x20], rax",
    "mov     rax, qword [rsp+0x78]",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "mov     r8, qword [r8+rax]",
    "lea     rdx, [rel data_1400f5ef8]  {\"INSERT INTO %Q.%s VALUES('index'\u2026\"}",
    "mov     rcx, rsi",
    "call    sub_14004dd58",
    "xor     eax, eax",
    "cmp     r13, rax",
    "je      0x140052b1b",
    "mov     rax, qword [rsp+0x60]",
    "mov     r9d, dword [rsi+0xf8]",
    "add     r9d, dword [rsi+0xf0]",
    "mov     rcx, qword [rax]",
    "sub     r9d, dword [rax]",
    "movsxd  rax, r9d",
    "cmp     byte [rax+rcx-0x1], 0x3b",
    "jne     0x140052a98",
    "mov     rcx, qword [rcx+0x28]",
    "jmp     0x14005290d",
    "cmp     rcx, rdi",
    "jne     0x140052993",
    "cmp     byte [rsp+0x150], 0x2",
    "jne     0x14005296c",
    "mov     r12b, 0xb",
    "cmp     byte [rbx+0x62], r12b",
    "je      0x140052954",
    "movzx   eax, word [rbx+0x5e]",
    "add     r13d, ebp",
    "add     r11, 0x2",
    "add     r14, 0x8",
    "cmp     r13d, eax",
    "jl      0x140052876",
    "movsxd  rax, ecx",
    "cmp     dx, word [r9+rax*2]",
    "je      0x140052815",
    "mov     rcx, qword [rsp+0x68]",
    "mov     rax, qword [rdi+0x40]",
    "add     r14, 0x28",
    "mov     qword [rax+rcx*8], r13",
    "mov     cl, byte [r14-0x10]",
    "mov     r13, qword [rsp+0x68]",
    "mov     rax, qword [rdi+0x38]",
    "and     cl, bl",
    "mov     byte [r13+rax], cl",
    "mov     ecx, dword [rsp+0x120]",
    "mov     eax, 0x1",
    "add     ecx, eax",
    "add     r13, rax",
    "movzx   eax, word [rdi+0x5e]",
    "cmp     ecx, eax",
    "mov     dword [rsp+0x120], ecx",
    "mov     qword [rsp+0x68], r13",
    "jl      0x1400524c6",
    "mov     rdx, r13",
    "mov     rcx, rsi",
    "call    sub_14004f5b4",
    "xor     r8d, r8d",
    "cmp     rax, r8",
    "je      0x1400526cb",
    "cmp     byte [rbp+0xb5], r8b",
    "jne     0x140052611",
    "mov     rax, qword [rcx+0x28]",
    "mov     qword [rdi+0x28], rax",
    "mov     qword [rcx+0x28], rdi",
    "jmp     0x14005298b",
    "mov     rax, qword [rcx+0x28]",
    "cmp     byte [rax+0x62], 0x5",
    "je      0x140052bf2",
    "mov     r13, qword [rsp+0x118]",
    "cmp     r13, rax",
    "je      0x140052b7f",
    "mov     rdx, r13",
    "mov     rcx, rbp",
    "call    sub_1400169a8",
    "xor     eax, eax",
    "cmp     dword [rsp+0x128], r13d",
    "lea     rax, [rel data_1400f386c]",
    "mov     qword [rsp+0x20], rcx",
    "lea     r8, [rel data_1400f5ed8]  {\" UNIQUE\"}",
    "lea     rdx, [rel data_1400f5ee0]  {\"CREATE%s INDEX %.*s\"}",
    "mov     rcx, rbp",
    "cmove   r8, rax",
    "call    _printf_p_l",
    "mov     r13, rax",
    "dec     r9d",
    "cmp     rcx, r15",
    "je      0x1400529b4",
    "lea     rdx, [rel data_1400f5ec0]  {\"invalid rootpage\"}",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "mov     ecx, 0x1b2bf",
    "call    sub_140084e38",
    "mov     dword [rsi+0x18], eax",
    "jmp     0x1400526ce",
    "cmp     byte [rsi+0x104], 0x2",
    "jb      0x1400526ce",
    "and     dword [rbx+0x64], 0xfffffffe",
    "or      dword [rbx+0x64], 0x2",
    "mov     al, byte [rdi+0x62]",
    "mov     byte [rbx+0x62], al",
    "cmp     al, r12b",
    "je      0x14005294e",
    "movzx   eax, word [r11]",
    "cmp     word [r15+r11], ax",
    "jne     0x1400528b0",
    "lea     rdx, [rel data_1400d66b0]  {\"BINARY\"}",
    "mov     rcx, rax",
    "cmp     qword [rax+0x28], r15",
    "jne     0x140052bdf",
    "xor     r15d, r15d",
    "mov     r8d, r14d",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140051848",
    "mov     edx, r15d",
    "mov     rcx, rsi",
    "call    sub_14004f620",
    "mov     r8, qword [rdi]",
    "lea     rdx, [rel data_1400f5f28]  {\"name='%q' AND type='index'\"}",
    "mov     rcx, rbp",
    "call    _printf_p_l",
    "mov     edx, r15d",
    "mov     rcx, rbx",
    "mov     r8, rax",
    "call    sub_140032608",
    "xor     r15d, r15d",
    "xor     r8d, r8d",
    "lea     r9d, [r15+0x1]",
    "mov     edx, 0x9e",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "jmp     0x140052b82",
    "mov     rax, qword [rsi+0x138]",
    "mov     qword [rdi+0x28], rax",
    "mov     qword [rsi+0x138], rdi",
    "cmp     byte [rbx+0x62], r12b",
    "jne     0x14005295a",
    "lea     rdx, [rel data_1400f5e90]  {\"conflicting ON CONFLICT clauses \u2026\"}",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "mov     edx, dword [rdi+0x58]",
    "mov     rcx, rbx",
    "call    sub_140032d34",
    "mov     ecx, dword [rbx+0x90]",
    "mov     dword [rax+0x8], ecx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}