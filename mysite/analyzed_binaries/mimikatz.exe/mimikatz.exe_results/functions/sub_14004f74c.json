{
  "address": "0x14004f74c",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "movsx   r8d, word [rdx+0x46]",
    "mov     r9, qword [rdx+0x8]",
    "xor     edi, edi",
    "cmp     r8d, edi",
    "mov     r13, rdx",
    "mov     r12, rcx",
    "mov     r10d, edi",
    "jle     0x14004f7a5",
    "mov     rdx, qword [r13]",
    "mov     eax, edi",
    "jmp     0x14004f7b9",
    "mov     r11d, r8d",
    "mov     cl, byte [rdx]",
    "cmp     cl, dil",
    "jne     0x14004f7ad",
    "mov     cl, byte [rdx]",
    "cmp     cl, dil",
    "jne     0x14004f783",
    "cmp     cl, 0x22",
    "jne     0x14004f7b4",
    "lea     ecx, [r10+rax+0x2]",
    "cmp     ecx, 0x32",
    "jge     0x14004f7e9",
    "cmp     cl, 0x22",
    "jne     0x14004f78a",
    "add     r9, 0x20",
    "sub     r11, 0x1",
    "lea     r10d, [r10+rax+0x7]",
    "jne     0x14004f77c",
    "inc     eax",
    "inc     rdx",
    "inc     eax",
    "lea     rax, [rel data_1400f597c]",
    "lea     r15, [rel data_1400f5980]  {\",\\n  \"}",
    "lea     r14, [rel data_1400f5988]",
    "mov     qword [rsp+0x88], rax",
    "lea     rbx, [rel data_1400f386c]",
    "lea     r15, [rel data_1400f5978]",
    "lea     r14, [rel data_1400f4058]",
    "mov     qword [rsp+0x88], rbx",
    "jmp     0x14004f806",
    "inc     eax",
    "inc     rdx",
    "inc     eax",
    "mov     rdx, qword [r9]",
    "mov     eax, edi",
    "jmp     0x14004f78f",
    "lea     r8, [rel data_1400f5990]  {\"CREATE TABLE \"}",
    "mov     rdx, rax",
    "mov     ecx, ebp",
    "call    _fprintf_p_l",
    "mov     rcx, rsi",
    "call    sub_140019074",
    "mov     r8, qword [r13]",
    "lea     rdx, [rsp+0x78]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x78], eax",
    "call    sub_14004f660",
    "movsxd  r12, dword [rsp+0x78]",
    "mov     byte [r12+rsi], 0x28",
    "mov     rax, qword [r13+0x8]",
    "inc     r12d",
    "cmp     di, word [r13+0x46]",
    "mov     qword [rsp+0x80], rax",
    "jge     0x14004f91d",
    "mov     rcx, r12",
    "call    sub_140016efc",
    "xor     eax, eax",
    "jmp     0x14004f93a",
    "lea     eax, [r8+r8*2]",
    "mov     qword [rsp+0x20], r14",
    "lea     ebp, [rcx+rax*2+0x23]",
    "movsxd  rcx, ebp",
    "call    sub_140016870",
    "mov     rsi, rax",
    "cmp     rax, rdi",
    "jne     0x14004f832",
    "sub     ebp, r12d",
    "movsxd  rdx, r12d",
    "lea     r8, [rel data_1400f38e8]",
    "add     rdx, rsi",
    "mov     ecx, ebp",
    "mov     r9, r14",
    "call    _fprintf_p_l",
    "mov     rax, rsi",
    "mov     r14, qword [rsp+0x88]",
    "mov     rbx, qword [rsp+0x70]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     ecx, ebp",
    "movsxd  rbx, r12d",
    "mov     r8, r14",
    "add     rbx, rsi",
    "sub     ecx, r12d",
    "mov     rdx, rbx",
    "call    _fprintf_p_l",
    "mov     rcx, rbx",
    "call    sub_140019074",
    "mov     rbx, qword [rsp+0x80]",
    "lea     rdx, [rsp+0x78]",
    "mov     r8, qword [rbx]",
    "add     r12d, eax",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x78], r12d",
    "mov     r14, r15",
    "call    sub_14004f660",
    "movsx   r11, byte [rbx+0x19]",
    "lea     rdx, [rel data_1400d73f8]",
    "mov     rdx, qword [rdx+r11*8-0x208]",
    "mov     rcx, rdx",
    "call    sub_140019074",
    "movsxd  r12, dword [rsp+0x78]",
    "movsxd  rbx, eax",
    "lea     rcx, [rsi+r12]",
    "mov     r8, rbx",
    "call    memcpy",
    "movsx   eax, word [r13+0x46]",
    "add     qword [rsp+0x80], 0x20",
    "inc     edi",
    "add     r12d, ebx",
    "cmp     edi, eax",
    "jl      0x14004f88c",
    "mov     r14, qword [rsp+0x20]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}