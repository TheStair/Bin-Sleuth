{
  "address": "0x14002c5d8",
  "rules": [
    "decompress data using LZO/368a268678dc46ccbe6ee697869692a3",
    "decompress data using LZO/4cde8899b401464e87ec185666d6508a",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "hash data using jshash/f142a7a7597843a791ba4ccc676b6fb1",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using Curve25519/bf3cf3909d844745bc0e01f23d66c6a9",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "contain loop"
  ],
  "disassembly": [
    "mov     dword [rsp+0x20], r9d",
    "mov     qword [rsp+0x18], r8",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x200",
    "lea     rbp, [rsp+0x40]",
    "xor     r9d, r9d",
    "mov     r14, rcx",
    "xor     ecx, ecx",
    "mov     r10, qword [r14+0x48]",
    "mov     qword [rbp+0x208], rbx",
    "mov     dword [rbp+0x4], r9d",
    "mov     dword [rbp+0x10], r9d",
    "mov     dword [rbp+0x90], r9d",
    "mov     dword [rbp+0xb0], ecx",
    "mov     qword [rbp+0x50], r10",
    "mov     byte [rbp+0xb4], cl",
    "mov     r13d, r9d",
    "mov     dword [rbp+0x100], r9d",
    "mov     qword [rbp+0x110], r9",
    "cmp     r8, r9",
    "jne     0x14002c64e",
    "movzx   r8d, word [r14+0x18]",
    "movzx   ecx, byte [r14+0xc]",
    "lea     ebx, [rcx+r8]",
    "cmp     ebx, 0x2",
    "jge     0x14002c66a",
    "lea     eax, [rcx+0x7]",
    "jmp     0x14002da28",
    "cmp     edx, r9d",
    "jne     0x14002c678",
    "mov     r15d, r9d",
    "mov     dword [rbp+0x40], r9d",
    "jmp     0x14002c6a2",
    "mov     rbx, qword [rbp+0x208]",
    "lea     rsp, [rbp+0x1c0]",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     edx, ebx",
    "jne     0x14002c68d",
    "mov     r15d, r9d",
    "mov     dword [rbp+0x40], r9d",
    "jmp     0x14002c695",
    "lea     eax, [rbx+0x1]",
    "mov     dword [rbp], eax",
    "mov     eax, r15d",
    "sub     eax, ecx",
    "add     eax, ebx",
    "cmp     eax, r8d",
    "jne     0x14002c6c1",
    "lea     r15d, [rdx-0x1]",
    "mov     dword [rbp+0x40], r15d",
    "mov     eax, dword [rbp+0x220]",
    "lea     r15d, [rbx+rax-0x2]",
    "mov     dword [rbp+0x40], r15d",
    "jmp     0x14002c69b",
    "mov     eax, dword [rbp+0x220]",
    "movsxd  rax, ebx",
    "movsxd  rdx, r15d",
    "sub     rdx, rcx",
    "mov     rcx, qword [r14+0x60]",
    "add     rdx, rax",
    "movzx   eax, byte [rcx+rdx*2]",
    "shl     eax, 0x8",
    "movsxd  r8, eax",
    "movzx   eax, byte [rcx+rdx*2+0x1]",
    "or      r8, rax",
    "movzx   eax, word [r14+0x1a]",
    "and     r8, rax",
    "movzx   eax, byte [r14+0x9]",
    "add     eax, 0x8",
    "movsxd  r8, eax",
    "jmp     0x14002c6eb",
    "mov     ebx, 0x2",
    "sub     ebx, eax",
    "lea     eax, [rbx+0x1]",
    "movsxd  r8, eax",
    "jmp     0x14002c952",
    "mov     r12, qword [rbp+0x50]",
    "add     r15d, ebx",
    "add     r8, qword [r14+0x50]",
    "movsxd  rsi, ebx",
    "mov     rcx, r10",
    "movzx   eax, byte [r8+0x2]",
    "movzx   r12d, byte [r8+0x1]",
    "mov     qword [rbp+0x70], r8",
    "shl     r12d, 0x8",
    "mov     dword [rsp+0x20], r9d",
    "or      r12d, eax",
    "movzx   eax, byte [r8]",
    "shl     eax, 0x18",
    "shl     r12d, 0x8",
    "or      r12d, eax",
    "movzx   eax, byte [r8+0x3]",
    "lea     r8, [rbp+rsi*8+0xb8]",
    "or      r12d, eax",
    "mov     edx, r12d",
    "mov     dword [rbp+0x48], r12d",
    "mov     dword [rbp+0x20], r12d",
    "call    sub_1400278a0",
    "xor     r9d, r9d",
    "movsxd  rdx, r15d",
    "mov     edi, eax",
    "mov     dword [rbp+0x24], eax",
    "mov     dword [rbp+0x8], eax",
    "mov     qword [rbp+0x28], rdx",
    "mov     r8d, 0x1",
    "cmp     eax, r9d",
    "jne     0x14002c97b",
    "lea     rcx, [rbp+0xb8]",
    "shl     r8, 0x3",
    "xor     edx, edx",
    "call    memset",
    "mov     r14d, r13d",
    "mov     eax, ebx",
    "sub     r15d, r8d",
    "sub     rsi, r8",
    "sub     ebx, r8d",
    "cmp     eax, r9d",
    "je      0x14002c983",
    "call    sub_14002740c",
    "xor     r9d, r9d",
    "mov     edi, eax",
    "mov     dword [rbp+0x24], eax",
    "mov     dword [rbp+0x8], eax",
    "cmp     eax, r9d",
    "jne     0x14002c94f",
    "mov     r11d, 0x1",
    "mov     r8d, dword [r12+0x30]",
    "mov     eax, 0xaaaaaaab",
    "lea     ecx, [r8-0x8]",
    "mul     ecx",
    "shr     edx, 0x2",
    "add     edx, 0x4",
    "imul    edx, dword [rbp]",
    "add     edx, 0x3",
    "and     edx, 0xfffffffc",
    "lea     eax, [rdx+rdx*4]",
    "lea     eax, [r8+rax*2]",
    "cdqe    ",
    "lea     rcx, [rax+0xf]",
    "cmp     rcx, rax",
    "ja      0x14002c9bf",
    "cmp     byte [r14+0xc], r9b",
    "je      0x14002c808",
    "movsxd  r8, ebx",
    "mov     rdx, qword [rbp+0x28]",
    "lea     r8d, [r9+0x1]",
    "movsxd  rsi, r14d",
    "mov     rbx, r9",
    "cmp     rsi, r9",
    "jle     0x14002da26",
    "mov     rcx, qword [rbp+rbx*8+0xb8]",
    "cmp     rcx, r9",
    "je      0x14002d9ee",
    "and     rcx, 0xfffffffffffffff0",
    "mov     rax, rcx",
    "call    __chkstk",
    "sub     rsp, rcx",
    "lea     r8, [rsp+0x40]",
    "mov     qword [rbp+0x110], r8",
    "cmp     r8, r9",
    "jne     0x14002c9ec",
    "mov     rcx, 0xffffffffffffff0",
    "movzx   eax, byte [r14+0xc]",
    "mov     rcx, qword [r14+0x60]",
    "mov     r8, rsi",
    "sub     r8, rax",
    "add     r8, rdx",
    "movzx   eax, byte [rcx+r8*2]",
    "shl     eax, 0x8",
    "movsxd  r12, eax",
    "movzx   eax, byte [rcx+r8*2+0x1]",
    "or      r12, rax",
    "movzx   eax, word [r14+0x1a]",
    "and     r12, rax",
    "add     r12, qword [r14+0x50]",
    "mov     rdx, r12",
    "mov     qword [rbp+rsi*8+0x60], r12",
    "movzx   eax, byte [r12+0x2]",
    "movzx   r14d, byte [r12+0x1]",
    "shl     r14d, 0x8",
    "or      r14d, eax",
    "movzx   eax, byte [r12+0x3]",
    "shl     r14d, 0x8",
    "or      r14d, eax",
    "movzx   eax, byte [r12]",
    "shl     eax, 0x18",
    "or      r14d, eax",
    "mov     rax, qword [rbp+0x200]",
    "mov     rcx, rax",
    "mov     dword [rbp+0x48], r14d",
    "mov     dword [rbp+0x20], r14d",
    "call    qword [rax+0x78]",
    "mov     rdx, qword [rbp+0x50]",
    "test    byte [rdx+0x26], 0xc",
    "movzx   r14d, ax",
    "mov     rax, qword [rbp+0x200]",
    "mov     dword [rbp+rsi*4+0x78], r14d",
    "je      0x14002c8db",
    "movzx   eax, word [r14+0x1c]",
    "cmp     r15d, eax",
    "jne     0x14002c808",
    "mov     eax, edi",
    "mov     rcx, qword [rbp+rbx*8+0xd0]",
    "cmp     rcx, r9",
    "je      0x14002da1e",
    "add     rbx, r11",
    "cmp     rbx, r12",
    "jl      0x14002d9d1",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_14002242c",
    "xor     r9d, r9d",
    "lea     r11d, [r9+0x1]",
    "movsxd  r11, dword [rbp]",
    "xor     ecx, ecx",
    "movsxd  rax, edx",
    "lea     r9, [r8+rax*8]",
    "mov     dword [rbp+0x18], ecx",
    "mov     r14, rcx",
    "lea     rax, [r9+rax*2]",
    "mov     qword [rbp+0x118], r9",
    "mov     r12, r11",
    "mov     qword [rbp+0x30], rax",
    "mov     rax, qword [rbp+0xb8]",
    "movzx   r10d, byte [rax+0x8]",
    "mov     qword [rbp+0x108], rax",
    "movzx   eax, byte [rax+0x3]",
    "shl     r10w, 0x2",
    "cmp     r11, rcx",
    "mov     dword [rbp+0x58], eax",
    "mov     r8, rax",
    "mov     qword [rbp+0x28], rax",
    "mov     word [rbp+0xc], r10w",
    "jle     0x14002ccb3",
    "mov     edi, 0x7",
    "mov     r14d, r13d",
    "jmp     0x14002d9bd",
    "xor     ecx, ecx",
    "cmp     edi, ecx",
    "jne     0x14002c904",
    "mov     ecx, r12d",
    "sub     ecx, dword [rax+0x50]",
    "lea     eax, [r14+rcx]",
    "cmp     eax, dword [rdx+0x34]",
    "jg      0x14002c96f",
    "mov     rdx, qword [r14+0x28]",
    "mov     rcx, r14",
    "movzx   eax, byte [rdx+0x2]",
    "movzx   r12d, byte [rdx+0x1]",
    "mov     qword [rbp+rsi*8+0x60], rdx",
    "shl     r12d, 0x8",
    "or      r12d, eax",
    "movzx   eax, byte [rdx+0x3]",
    "shl     r12d, 0x8",
    "or      r12d, eax",
    "movzx   eax, byte [rdx]",
    "shl     eax, 0x18",
    "or      r12d, eax",
    "mov     dword [rbp+0x48], r12d",
    "mov     dword [rbp+0x20], r12d",
    "call    qword [r14+0x78]",
    "movzx   r11d, ax",
    "xor     eax, eax",
    "mov     byte [r14+0xc], al",
    "mov     dword [rbp+rsi*4+0x78], r11d",
    "jmp     0x14002c90f",
    "add     rbx, r11",
    "cmp     rbx, rsi",
    "jl      0x14002da01",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_14002242c",
    "xor     r9d, r9d",
    "lea     r11d, [r9+0x1]",
    "mov     rax, qword [rbp+0x50]",
    "xor     r9d, r9d",
    "movzx   ecx, r10w",
    "cmp     r12, r9",
    "mov     eax, dword [rax+0x34]",
    "mov     rsi, r9",
    "lea     edx, [rax+rcx-0xc]",
    "mov     qword [rbp+0x60], r9",
    "mov     rbx, r9",
    "mov     dword [rbp+0x14], edx",
    "lea     r10d, [r9+0x1]",
    "jle     0x14002cddf",
    "mov     r12, qword [rbp+r14*8+0xb8]",
    "movzx   eax, word [r12+0x1a]",
    "mov     r15, qword [r12+0x50]",
    "movzx   ebx, word [r12+0x12]",
    "movzx   esi, word [r12+0x18]",
    "mov     word [rbp+0x14], ax",
    "mov     rax, qword [rbp+0xb8]",
    "mov     rcx, qword [rax+0x50]",
    "add     rbx, r15",
    "mov     al, byte [rcx]",
    "cmp     byte [r15], al",
    "jne     0x14002ce11",
    "mov     r14, qword [rbp+0x200]",
    "movzx   eax, byte [rax+0xc]",
    "mov     edx, dword [rbp+0x40]",
    "mov     r8d, r14d",
    "mov     r14, qword [rbp+0x200]",
    "sub     edx, eax",
    "lea     r9, [rbp+0x8]",
    "add     edx, ebx",
    "mov     rcx, r14",
    "call    sub_14002b788",
    "jmp     0x14002c90b",
    "mov     ecx, 0x1154e",
    "call    sub_140084e38",
    "mov     edi, eax",
    "movsxd  rcx, ecx",
    "mov     r8, r14",
    "mov     rdx, r12",
    "add     rcx, qword [rbp+0x210]",
    "call    memcpy",
    "mov     rax, qword [rbp+0x200]",
    "sub     r12, qword [rax+0x50]",
    "add     r12, qword [rbp+0x210]",
    "mov     qword [rbp+rsi*8+0x60], r12",
    "mov     edx, r12d",
    "mov     r12, qword [rbp+0x50]",
    "movsxd  rax, ebx",
    "lea     r8, [rbp+rax*8+0xb8]",
    "xor     eax, eax",
    "mov     rcx, r12",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x20], eax",
    "call    sub_1400278a0",
    "xor     r9d, r9d",
    "mov     edi, eax",
    "mov     dword [rbp+0x24], eax",
    "mov     dword [rbp+0x8], eax",
    "cmp     eax, r9d",
    "jne     0x14002c97b",
    "cmp     r11d, r9d",
    "mov     ecx, r11d",
    "mov     r15d, r9d",
    "mov     dword [rbp+0x10], ecx",
    "mov     rbx, r9",
    "jle     0x14002d013",
    "mov     rdi, qword [rbp+0x200]",
    "lea     r12, [rbp+0x14c]",
    "mov     ecx, 0x11591",
    "jmp     0x14002ce01",
    "movzx   eax, byte [r12+0xc]",
    "xor     edx, edx",
    "add     eax, esi",
    "movsxd  r8, eax",
    "movsxd  rax, r13d",
    "lea     rcx, [r9+rax*2]",
    "add     r8, r8",
    "call    memset",
    "xor     r11d, r11d",
    "cmp     byte [r12+0xc], r11b",
    "jbe     0x14002cb42",
    "mov     rdx, qword [rbp+0x28]",
    "lea     r8d, [r9+0x1]",
    "jmp     0x14002c765",
    "mov     r12d, dword [rbp+0x48]",
    "mov     r11d, 0x1",
    "mov     r14d, r10d",
    "jmp     0x14002cee0",
    "cmp     r8, r9",
    "jne     0x14002cd49",
    "cmp     r15d, dword [r12]",
    "jne     0x14002cd27",
    "call    sub_140084e38",
    "mov     r14d, dword [rbp+0x4]",
    "mov     edi, eax",
    "jmp     0x14002c967",
    "mov     r9w, word [rbp+0x14]",
    "movzx   eax, word [r12+0x1c]",
    "cmp     esi, eax",
    "jl      0x14002cdfc",
    "mov     rcx, qword [rbp+rsi*8+0xb8]",
    "cmp     dword [rcx+0x14], r9d",
    "jge     0x14002c794",
    "mov     rax, qword [rbp+0xb8]",
    "mov     rbx, r9",
    "mov     rcx, qword [rax+0x50]",
    "movsxd  rax, dword [rbp+0x10]",
    "cmp     rax, r9",
    "movzx   r15d, byte [rcx]",
    "mov     r12, rax",
    "mov     dword [rbp+0x60], r15d",
    "jle     0x14002d2a4",
    "mov     r10, qword [rbp+0x118]",
    "cmp     dword [rbp+rbx*4+0x78], edx",
    "jg      0x14002ce18",
    "mov     r14d, edx",
    "sub     r14d, dword [r13+0x14]",
    "mov     dword [rbp+rsi*4+0x78], r14d",
    "cmp     byte [r13+0xc], r9b",
    "jbe     0x14002cdb3",
    "add     rbx, r10",
    "add     r12, rax",
    "mov     rax, qword [rdi+0x58]",
    "mov     qword [rbp+rbx*8+0x120], rax",
    "lea     eax, [r15+0x1]",
    "mov     dword [rbp+rbx*4+0x150], eax",
    "sub     rbx, r10",
    "sub     r12, rax",
    "xor     r9d, r9d",
    "jmp     0x14002d9bd",
    "mov     r11d, dword [rbp]",
    "mov     edx, dword [rbp+0x18]",
    "mov     r8, qword [rbp+0x28]",
    "lea     eax, [r11-0x1]",
    "mov     dword [rbp+r14*4+0x170], r13d",
    "cmp     edx, eax",
    "jge     0x14002cc8e",
    "movzx   r8d, r9w",
    "mov     r9, qword [rbp+0x110]",
    "mov     edi, 0x1",
    "mov     ecx, 0x115a9",
    "cmp     eax, r11d",
    "mov     r10, qword [rbp+0x110]",
    "lea     esi, [r11+0x1]",
    "jle     0x14002cb06",
    "movsxd  r14, dword [rbp+0x4]",
    "mov     rdx, r9",
    "cmp     r14, r9",
    "mov     r12, r14",
    "jle     0x14002d302",
    "mov     r14d, dword [rbp+0x48]",
    "mov     edi, dword [rbp+0x60]",
    "movsxd  rax, esi",
    "xor     r11d, r11d",
    "lea     r12, [rax+rax]",
    "mov     rax, qword [rbp+0x30]",
    "lea     r8, [rax+rax]",
    "mov     qword [rbp+0x30], r8",
    "lea     rcx, [rbp+0x100]",
    "call    sub_14002ba44",
    "mov     r10, qword [rbp+0x118]",
    "cmp     r14d, ecx",
    "jl      0x14002ce3f",
    "cmp     dword [rbp+rbx*4+0x98], r13d",
    "jge     0x14002cfbd",
    "mov     dword [rbp+rsi*4+0x98], r15d",
    "add     rsi, r10",
    "movsxd  rax, r11d",
    "add     rbx, r10",
    "add     r12, 0x4",
    "cmp     rsi, rax",
    "mov     qword [rbp+0x60], rsi",
    "jl      0x14002cced",
    "lea     r15, [r13+0x28]",
    "mov     esi, r9d",
    "mov     edi, 0x1",
    "mov     r10w, word [rbp+0xc]",
    "mov     r9, qword [rbp+0x118]",
    "xor     eax, eax",
    "cmp     r8, rax",
    "jne     0x14002cc8e",
    "movzx   eax, byte [rbx]",
    "add     rbx, 0x2",
    "shl     eax, 0x8",
    "movsxd  rcx, eax",
    "movzx   eax, byte [rbx-0x1]",
    "or      rcx, rax",
    "movsxd  rax, r13d",
    "add     r13d, edi",
    "and     rcx, r8",
    "add     rcx, r15",
    "mov     qword [r9+rax*8], rcx",
    "cmp     rbx, rdx",
    "jb      0x14002cb74",
    "mov     edi, dword [rbp+0x24]",
    "mov     dword [rbp+0x100], r13d",
    "mov     r9w, word [rbp+0x14]",
    "movzx   r9d, word [rbp+0x14]",
    "mov     rdx, rax",
    "mov     r8, r9",
    "cmp     r14, r9",
    "mov     rsi, r9",
    "jle     0x14002d3d2",
    "cmp     rdx, r9",
    "mov     rax, qword [rbp+rdx*8+0xd0]",
    "mov     r8d, dword [rax+0x4]",
    "mov     rax, qword [rax+0x70]",
    "movzx   ecx, word [rax+0x34]",
    "mov     dword [rbp+rdx*4+0x1a0], r8d",
    "mov     dword [rbp+rdx*4+0x188], r8d",
    "mov     word [rbp+rdx*2+0x30], cx",
    "mov     rax, r9",
    "jle     0x14002d2fa",
    "cmp     dword [rbp+0x220], r9d",
    "mov     byte [rsp+0x20], r9b",
    "lea     r8, [rbp+0x20]",
    "cmovne  r14d, r11d",
    "lea     rdx, [rbp+0x30]",
    "mov     r9d, r14d",
    "mov     r14, qword [rbp+0x50]",
    "mov     rcx, r14",
    "call    sub_14002a71c",
    "xor     r9d, r9d",
    "mov     edi, eax",
    "mov     dword [rbp+0x8], eax",
    "cmp     eax, r9d",
    "jne     0x14002d9b9",
    "mov     rcx, qword [rbp+rbx*8+0xb8]",
    "mov     qword [rbp+rbx*8+0xb8], r9",
    "mov     qword [rbp+rbx*8+0xd0], rcx",
    "mov     qword [rbp+0x30], rcx",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_140022a44",
    "mov     r11d, 0x1",
    "xor     r9d, r9d",
    "add     dword [rbp+0x4], r11d",
    "mov     edi, eax",
    "mov     dword [rbp+0x8], eax",
    "cmp     eax, r9d",
    "je      0x14002d298",
    "mov     r9d, dword [rbp+0x18]",
    "cmp     r14d, r11d",
    "je      0x14002d0ed",
    "lea     rcx, [rbp+0x100]",
    "mov     edx, esi",
    "call    sub_14002ba44",
    "mov     r8, qword [rbp+0x30]",
    "mov     r10, qword [rbp+0x118]",
    "xor     r11d, r11d",
    "movsxd  rsi, dword [rbp+rbx*4+0x98]",
    "mov     rcx, qword [rbp+0x118]",
    "lea     r12d, [rsi-0x1]",
    "movsxd  rax, r12d",
    "movzx   eax, word [rcx+rax*2]",
    "cmp     ax, r9w",
    "jne     0x14002ce86",
    "lea     eax, [r14+0x1]",
    "mov     dword [rbp+0x10], eax",
    "lea     rax, [rbx+0x2]",
    "cmp     rax, 0x5",
    "jg      0x14002cfff",
    "mov     ecx, r14d",
    "mov     dword [rbp+0x10], ecx",
    "jmp     0x14002cfe2",
    "mov     r8, qword [rbp+0x118]",
    "mov     r12d, dword [rbp+0x14]",
    "mov     rdi, qword [rbp+0x28]",
    "mov     r13, qword [rbp+rsi*8+0xb8]",
    "mov     r15d, dword [rbp+rsi*4+0x170]",
    "mov     rax, qword [r13+0x58]",
    "mov     qword [rbp+rbx*8+0x120], rax",
    "mov     dword [rbp+rbx*4+0x150], r15d",
    "mov     eax, 0x4",
    "cmp     rbx, r9",
    "je      0x14002cd27",
    "mov     r13d, dword [rbp+0x100]",
    "mov     edi, dword [rbp+0x24]",
    "mov     rdx, qword [r15]",
    "mov     rcx, r13",
    "call    qword [r13+0x78]",
    "add     esi, edi",
    "add     r15, 0x8",
    "movzx   r11d, ax",
    "movzx   eax, byte [r13+0xc]",
    "cmp     esi, eax",
    "lea     r14d, [r14+r11+0x2]",
    "jl      0x14002cd67",
    "mov     rsi, qword [rbp+0x60]",
    "mov     rdi, qword [rbp+0x200]",
    "mov     edx, dword [rbp+0x14]",
    "mov     r15d, dword [rbp+rsi*4+0x170]",
    "mov     r8, qword [rbp+0x28]",
    "mov     r11d, dword [rbp]",
    "xor     r9d, r9d",
    "mov     dword [rbp+rsi*4+0x78], r14d",
    "lea     r10d, [r9+0x1]",
    "movsxd  rdx, dword [rbp+0x10]",
    "movzx   ecx, word [rbp+r14*4+0x78]",
    "mov     rax, qword [rbp+0x118]",
    "mov     r15, qword [rbp+0x30]",
    "mov     r8, rcx",
    "movsxd  rsi, r13d",
    "lea     rbx, [r15+rdx]",
    "add     edx, ecx",
    "mov     word [rax+rsi*2], cx",
    "mov     dword [rbp+0x10], edx",
    "mov     rdx, qword [rbp+r14*8+0x60]",
    "mov     rcx, rbx",
    "call    memcpy",
    "movzx   r10d, word [rbp+0xc]",
    "mov     r8, qword [rbp+0x110]",
    "mov     r9, qword [rbp+0x118]",
    "lea     rax, [rbx+r10]",
    "xor     edx, edx",
    "mov     qword [r8+rsi*8], rax",
    "sub     word [r9+rsi*2], r10w",
    "cmp     byte [r12+0x8], dl",
    "jne     0x14002cc5a",
    "movzx   eax, word [r12+0x18]",
    "movzx   edx, word [r12+0x12]",
    "add     eax, eax",
    "movsxd  rcx, eax",
    "lea     rax, [r15+rcx]",
    "add     rdx, rax",
    "cmp     rbx, rdx",
    "jae     0x14002cba7",
    "lea     rdx, [r12+0x28]",
    "movzx   eax, byte [rbx]",
    "add     rbx, 0x2",
    "shl     eax, 0x8",
    "movsxd  rcx, eax",
    "movzx   eax, byte [rbx-0x1]",
    "or      rcx, rax",
    "movsxd  rax, r13d",
    "add     r13d, esi",
    "and     rcx, r8",
    "add     rcx, r15",
    "sub     rdx, rsi",
    "mov     qword [r10+rax*8], rcx",
    "jne     0x14002cad4",
    "mov     dword [rbp+0x100], r13d",
    "jmp     0x14002cb0b",
    "mov     rax, qword [rbp+r12*8+0xc8]",
    "mov     rdx, qword [rbp+0x70]",
    "mov     ecx, dword [rax+0x4]",
    "mov     eax, ecx",
    "mov     byte [rdx+0x3], cl",
    "shr     eax, 0x18",
    "mov     byte [rdx], al",
    "mov     eax, ecx",
    "shr     eax, 0x10",
    "mov     byte [rdx+0x1], al",
    "mov     eax, ecx",
    "shr     eax, 0x8",
    "mov     byte [rdx+0x2], al",
    "test    r15b, 0x8",
    "jne     0x14002d437",
    "mov     r15, qword [rbp+0x50]",
    "add     rdx, r11",
    "cmp     rdx, r14",
    "jl      0x14002d2b3",
    "cmp     dword [rbp+rax*4+0x1a0], r8d",
    "je      0x14002d4c6",
    "mov     r14d, dword [rbp+0x4]",
    "mov     rsi, qword [rbp+0x30]",
    "mov     edx, r15d",
    "mov     rcx, rsi",
    "call    sub_1400276c8",
    "mov     r11d, 0x1",
    "xor     r9d, r9d",
    "add     dword [rbp+0x4], r11d",
    "mov     qword [rbp+rbx*8+0xd0], rsi",
    "mov     dword [rbp+rbx*4+0x170], r13d",
    "cmp     byte [r14+0x21], r9b",
    "je      0x14002d294",
    "add     rbx, r11",
    "cmp     rbx, r12",
    "jl      0x14002d199",
    "mov     r14d, dword [rbp+0x4]",
    "jmp     0x14002d9c3",
    "movzx   eax, word [r8+r10]",
    "sub     r8, 0x2",
    "mov     ecx, 0xfffffffe",
    "lea     r14d, [r14+rax+0x2]",
    "movzx   eax, word [r12+r10]",
    "mov     dword [r13+rbx*4-0x4], esi",
    "sub     ecx, eax",
    "dec     esi",
    "sub     r12, 0x2",
    "add     r9d, ecx",
    "cmp     esi, r11d",
    "mov     qword [rbp+0x30], r8",
    "mov     dword [rbp+0x18], r9d",
    "jge     0x14002d092",
    "cmp     dword [rbp+0x220], r11d",
    "jne     0x14002d126",
    "movzx   eax, ax",
    "add     eax, 0x2",
    "sub     dword [rbp+rbx*4+0x78], eax",
    "cmp     r8, r9",
    "jne     0x14002ced1",
    "lea     rcx, [rbp+0x100]",
    "mov     edx, r12d",
    "call    sub_14002ba44",
    "mov     r13d, dword [rbp+0x100]",
    "mov     rcx, qword [rbp+0x118]",
    "mov     edx, dword [rbp+0x14]",
    "mov     r8, qword [rbp+0x28]",
    "xor     r9d, r9d",
    "mov     ecx, 0x1160e",
    "jmp     0x14002ce01",
    "mov     dword [rbp+rax*4+0x74], r9d",
    "mov     dword [rbp+rax*4+0x94], r13d",
    "mov     r11d, 0x1",
    "add     r15d, r11d",
    "add     r14d, r11d",
    "add     rbx, r11",
    "cmp     r15d, ecx",
    "jge     0x14002d019",
    "mov     edx, dword [rbp+rbx*4+0x78]",
    "movzx   ecx, ax",
    "add     ecx, 0x2",
    "add     edx, ecx",
    "cmp     edx, r12d",
    "jg      0x14002cfad",
    "lea     rcx, [rbp+0x100]",
    "mov     edx, esi",
    "call    sub_14002ba44",
    "mov     r13d, dword [rbp+0x100]",
    "mov     r8, qword [rbp+0x118]",
    "xor     r9d, r9d",
    "movsxd  rcx, dword [rbp+0x10]",
    "mov     r11d, 0x4",
    "mov     rax, rcx",
    "cmp     word [r9+rsi*2], r11w",
    "jae     0x14002cc3d",
    "mov     rax, qword [r12+0x50]",
    "mov     rcx, qword [r8+rsi*8]",
    "mov     eax, dword [rax+0x8]",
    "mov     dword [rcx], eax",
    "mov     rax, qword [rdx]",
    "movsxd  rcx, r13d",
    "add     r8d, esi",
    "mov     qword [r10+rcx*8], rax",
    "movzx   eax, byte [r12+0xc]",
    "add     r13d, esi",
    "add     rdx, 0x8",
    "cmp     r8d, eax",
    "jl      0x14002cb1a",
    "mov     dword [rbp+0x100], r13d",
    "jmp     0x14002cb47",
    "mov     r8d, r11d",
    "cmp     byte [r12+0xc], r11b",
    "jbe     0x14002cb47",
    "mov     rax, qword [rbp+0x50]",
    "cmp     byte [rax+0x21], r9b",
    "je      0x14002d643",
    "movsxd  rdx, dword [rbp]",
    "cmp     r14d, edx",
    "je      0x14002d437",
    "mov     r14d, dword [rbp+rbx*4+0x188]",
    "or      dword [rbp+rbx*4+0x188], 0xffffffff",
    "cmp     rbx, rsi",
    "je      0x14002d3b8",
    "mov     eax, dword [rbp+r9+0x188]",
    "mov     r8, rcx",
    "shl     r8, 0x2",
    "cmp     dword [rbp+r8+0x188], eax",
    "jae     0x14002d345",
    "mov     ecx, 0x116a3",
    "call    sub_140084e38",
    "mov     edi, eax",
    "jmp     0x14002c967",
    "add     rax, r11",
    "cmp     rax, rdx",
    "jl      0x14002d2e4",
    "mov     r14d, dword [rbp+0x20]",
    "mov     edx, dword [rsi+0x4]",
    "lea     rax, [rbp+0x8]",
    "mov     r8b, 0x5",
    "mov     qword [rsp+0x20], rax",
    "mov     rax, qword [rbp+0x200]",
    "mov     rcx, r14",
    "mov     r9d, dword [rax+0x4]",
    "call    sub_14002650c",
    "mov     edi, dword [rbp+0x8]",
    "xor     r9d, r9d",
    "lea     r11d, [r9+0x1]",
    "cmp     edi, r9d",
    "jne     0x14002d1e2",
    "movsxd  rcx, dword [rbp]",
    "cmp     rbx, rcx",
    "jge     0x14002d1f5",
    "mov     esi, dword [rbp]",
    "cmp     word [r12+r10], r11w",
    "jne     0x14002d0b5",
    "mov     edi, dword [rbp+0x24]",
    "mov     r11d, 0x1",
    "mov     dword [rbp+rbx*4+0x78], r14d",
    "cmp     rbx, r11",
    "mov     dword [rbp+rbx*4+0x74], r9d",
    "jle     0x14002d148",
    "mov     eax, r15d",
    "mov     edx, r9d",
    "sub     eax, edi",
    "neg     eax",
    "sbb     eax, eax",
    "and     eax, 0x2",
    "sub     edx, eax",
    "movzx   eax, word [r12+r10]",
    "sub     edx, eax",
    "movzx   eax, word [r8+r10]",
    "lea     ecx, [rax+r14+0x2]",
    "cmp     ecx, edx",
    "jg      0x14002d126",
    "add     dword [rbp+rbx*4+0x7c], eax",
    "mov     ecx, dword [rbp+0x10]",
    "mov     dword [rbp+rbx*4+0x98], r12d",
    "cmp     esi, r13d",
    "jge     0x14002cece",
    "lea     eax, [rcx-0x1]",
    "movsxd  r15, eax",
    "mov     dword [rbp+0x60], eax",
    "cmp     r15, r9",
    "mov     rbx, r15",
    "jle     0x14002d16f",
    "mov     r8, qword [rbp+0x28]",
    "jmp     0x14002cee0",
    "cmp     dword [rbp+rbx*4+0x98], r13d",
    "mov     edi, dword [rbp+0x24]",
    "mov     edx, r12d",
    "jl      0x14002cfc5",
    "mov     dword [rbp+rbx*4+0x78], edx",
    "lea     edx, [rsi+0x1]",
    "mov     dword [rbp+rbx*4+0x98], edx",
    "cmp     rdi, r9",
    "jne     0x14002cf9b",
    "mov     r8d, 0x1",
    "add     rax, r15",
    "lea     r8d, [r11-0x3]",
    "mov     eax, 0x1",
    "movsxd  r12, r11d",
    "add     edx, eax",
    "add     r14, rax",
    "cmp     r14, r12",
    "mov     dword [rbp+0x18], edx",
    "jl      0x14002ca45",
    "mov     rsi, qword [rbp+0xd0]",
    "mov     rsi, qword [rbp+0xd0]",
    "mov     r14d, r9d",
    "mov     rbx, r9",
    "movzx   r8d, word [rsi+0x18]",
    "movzx   eax, byte [rsi+0xc]",
    "mov     rcx, rsi",
    "add     r8d, eax",
    "cmp     r13d, r9d",
    "mov     qword [rbp+0x60], rcx",
    "mov     dword [rbp+0x20], r8d",
    "jle     0x14002d64a",
    "lea     rcx, [rbp+0xb8]",
    "lea     rax, [rbp+0xd0]",
    "cmovle  rax, rcx",
    "mov     rax, qword [rax+rdx*8-0x8]",
    "mov     rdx, qword [rax+0x50]",
    "mov     rax, qword [rbp+r12*8+0xc8]",
    "mov     rcx, qword [rax+0x50]",
    "mov     eax, dword [rdx+0x8]",
    "mov     dword [rcx+0x8], eax",
    "add     rsi, r11",
    "mov     r9d, 0x0",
    "cmp     rsi, r12",
    "jl      0x14002d312",
    "jle     0x14002d389",
    "add     rcx, r11",
    "add     edx, r11d",
    "cmp     rcx, r12",
    "jl      0x14002d323",
    "mov     r10d, edx",
    "mov     rbx, rcx",
    "mov     r9, r8",
    "xor     r9d, r9d",
    "mov     eax, r9d",
    "mov     eax, dword [r13+rbx*4-0x8]",
    "xor     r9d, r9d",
    "jmp     0x14002d14e",
    "mov     eax, r9d",
    "mov     rax, rsi",
    "movzx   eax, word [rcx+rsi*2]",
    "cmp     ax, r9w",
    "jne     0x14002cec3",
    "cmp     rbx, r9",
    "jle     0x14002cfd3",
    "sub     dword [rbp+rbx*4+0x7c], ecx",
    "cmp     dword [rbp+rbx*4+0x98], r13d",
    "jl      0x14002cf07",
    "cmp     edx, r13d",
    "jge     0x14002cf98",
    "mov     byte [rax], dl",
    "add     word [r9+rsi*2], r8w",
    "add     ecx, r8d",
    "add     rax, r8",
    "cmp     word [r9+rsi*2], r11w",
    "jb      0x14002cc75",
    "mov     dword [rbp+0x10], ecx",
    "jmp     0x14002cc43",
    "mov     r11d, 0x1",
    "lea     rax, [rbp+0xd0]",
    "lea     r15, [rbp+0x98]",
    "mov     qword [rbp+0x70], rax",
    "mov     eax, dword [rbp+0x4]",
    "mov     r14d, r9d",
    "dec     eax",
    "cmp     eax, r9d",
    "jle     0x14002d78d",
    "mov     r11, qword [rbp+0x110]",
    "mov     rdx, r9",
    "mov     rax, r9",
    "lea     r9, [rbp+0x98]",
    "lea     r10, [rbp+0xd0]",
    "mov     qword [rbp+0x48], rdx",
    "mov     qword [rbp+0x70], r9",
    "mov     qword [rbp+0x18], rax",
    "mov     qword [rbp+0x30], r10",
    "cmp     r11, r12",
    "mov     r10d, r9d",
    "mov     rbx, r9",
    "mov     edx, r11d",
    "mov     rcx, r11",
    "jge     0x14002d353",
    "mov     r15d, dword [rbp+0x60]",
    "mov     r14d, dword [rbp+0x4]",
    "mov     rax, qword [rbp+rsi*8+0xd0]",
    "mov     edx, r14d",
    "mov     rcx, qword [rax+0x70]",
    "movzx   eax, word [rbp+rbx*2+0x30]",
    "mov     word [rcx+0x34], ax",
    "call    sub_14001de9c",
    "mov     r11, qword [rbp+rsi*8+0xd0]",
    "mov     dword [r11+0x4], r14d",
    "mov     r11d, 0x1",
    "mov     eax, dword [r15+0x3c]",
    "lea     edx, [rax+r10+0x1]",
    "mov     rax, qword [rbp+rbx*8+0xd0]",
    "mov     rcx, qword [rax+0x70]",
    "mov     word [rcx+0x34], r9w",
    "call    sub_14001de9c",
    "xor     r9d, r9d",
    "mov     ecx, 0x11659",
    "jmp     0x14002ce01",
    "sub     rbx, r11",
    "sub     r15d, r11d",
    "cmp     rbx, r9",
    "jg      0x14002d035",
    "cmp     dword [r13+rbx*4-0x4], eax",
    "jle     0x14002d1eb",
    "mov     edx, dword [rbp+0x14]",
    "movzx   eax, ax",
    "add     eax, 0x2",
    "jmp     0x14002ced1",
    "lea     rcx, [rbp+0x100]",
    "mov     edx, esi",
    "call    sub_14002ba44",
    "mov     r13d, dword [rbp+0x100]",
    "mov     r8, qword [rbp+0x28]",
    "xor     r9d, r9d",
    "mov     eax, r9d",
    "mov     eax, dword [rbp+rbx*4+0x94]",
    "jmp     0x14002cfd6",
    "movsxd  rsi, dword [rbp+rbx*4+0x98]",
    "mov     rax, rsi",
    "movzx   eax, word [r8+rsi*2]",
    "cmp     ax, r9w",
    "jne     0x14002cf3c",
    "mov     ecx, r9d",
    "movsxd  rax, edx",
    "movzx   eax, word [r8+rax*2]",
    "cmp     ax, r9w",
    "jne     0x14002cf90",
    "mov     edx, dword [rbp+0x18]",
    "mov     r11d, dword [rbp]",
    "add     r13d, r8d",
    "mov     r8, qword [rbp+0x28]",
    "mov     dword [rbp+0x100], r13d",
    "jmp     0x14002cc9a",
    "cmp     dword [rbp+0x218], r9d",
    "je      0x14002d90d",
    "mov     eax, ebx",
    "mov     ecx, ebx",
    "neg     eax",
    "cmp     ebx, r9d",
    "cmovl   ecx, eax",
    "movsxd  rsi, ecx",
    "cmp     byte [rbp+rsi+0xb0], r9b",
    "jne     0x14002d879",
    "cmp     qword [rbp+0x28], r8",
    "je      0x14002d6fe",
    "mov     rcx, qword [rsi+0x50]",
    "mov     eax, dword [rbx]",
    "mov     dword [rcx+0x8], eax",
    "jmp     0x14002d71f",
    "cmp     r14d, dword [r9]",
    "jne     0x14002d531",
    "xor     eax, eax",
    "cmp     dword [rbp+0x58], eax",
    "mov     edx, eax",
    "sete    dl",
    "lea     r11d, [rax+0x1]",
    "mov     eax, dword [rbp+rbx*4+0x74]",
    "mov     r14d, dword [rbp+rbx*4+0x78]",
    "lea     r13, [rbp+0x98]",
    "mov     esi, dword [r13+rbx*4-0x4]",
    "mov     dword [rbp+0x18], eax",
    "sub     esi, r11d",
    "mov     edx, esi",
    "sub     edx, dword [rbp+0x58]",
    "add     edx, r11d",
    "movsxd  rax, edx",
    "mov     qword [rbp+0x30], rax",
    "cmp     word [r10+rax*2], r9w",
    "jne     0x14002d079",
    "mov     r13d, dword [rbp+0x100]",
    "mov     ecx, 0x1162f",
    "jmp     0x14002ce01",
    "mov     ecx, dword [rbp+0x10]",
    "cmp     dword [rbp+rbx*4+0x98], eax",
    "jle     0x14002d009",
    "movzx   ecx, ax",
    "add     ecx, 0x2",
    "jmp     0x14002cf9b",
    "lea     rcx, [rbp+0x100]",
    "call    sub_14002ba44",
    "mov     r13d, dword [rbp+0x100]",
    "mov     r8, qword [rbp+0x118]",
    "xor     r9d, r9d",
    "mov     r10, qword [rbp+0x50]",
    "cmp     byte [r10+0x21], r9b",
    "je      0x14002d904",
    "mov     rbx, qword [rbp+0x200]",
    "cmp     word [rbx+0x18], r9w",
    "jne     0x14002d90d",
    "add     ebx, r11d",
    "cmp     ebx, r14d",
    "jl      0x14002d7a6",
    "cmp     ebx, r9d",
    "jge     0x14002d7dc",
    "mov     ecx, 0x4",
    "sub     rbx, rcx",
    "cmp     ax, cx",
    "jne     0x14002d71f",
    "mov     rdx, qword [rcx+rdx*8-0x8]",
    "lea     r8, [rbp+0x1a0]",
    "mov     rcx, rsi",
    "call    qword [rsi+0x80]",
    "mov     rdx, qword [rbp+0x1a0]",
    "mov     rbx, rdi",
    "lea     rcx, [rdi+0x4]",
    "cmp     rdx, 0x7f",
    "ja      0x14002d6ee",
    "mov     edx, dword [rbp+0x40]",
    "mov     rcx, qword [rbp+0x200]",
    "add     dword [rbp+0x90], r9d",
    "lea     rax, [rbp+0x8]",
    "add     edx, r14d",
    "mov     r8, rbx",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rsi+0x4]",
    "mov     dword [rsp+0x28], eax",
    "mov     qword [rsp+0x20], rdi",
    "call    sub_14002b88c",
    "mov     edi, dword [rbp+0x8]",
    "xor     r9d, r9d",
    "lea     r11d, [r9+0x1]",
    "cmp     edi, r9d",
    "jne     0x14002d1e2",
    "cmp     rbx, r12",
    "jge     0x14002d552",
    "add     r10, 0x8",
    "add     r9, 0x4",
    "cmp     qword [rbp+0x28], 0x0",
    "mov     rcx, qword [r10]",
    "mov     qword [rbp+0x70], r9",
    "mov     qword [rbp+0x30], r10",
    "mov     qword [rbp+0x60], rcx",
    "je      0x14002d624",
    "mov     rsi, qword [rbp+rbx*8+0xb8]",
    "mov     rsi, qword [rbp+rbx*8+0xd0]",
    "jmp     0x14002d4df",
    "movsxd  rsi, dword [rbp]",
    "jmp     0x14002d9b2",
    "cmp     word [rbp+0xc], r9w",
    "jne     0x14002d904",
    "movzx   eax, byte [rbx+0x9]",
    "cmp     eax, dword [rsi+0x14]",
    "jg      0x14002d90d",
    "mov     rsi, qword [rbp+0xd0]",
    "cmp     ecx, r9d",
    "jne     0x14002d7f0",
    "mov     eax, dword [rbp+rsi*4+0x94]",
    "cmp     dword [rbp+rsi*4+0x16c], eax",
    "jl      0x14002d879",
    "mov     rax, qword [rbp+0x200]",
    "mov     rdx, rbx",
    "mov     rcx, rax",
    "call    qword [rax+0x78]",
    "movzx   r9d, ax",
    "call    sub_140019c64",
    "and     dl, 0x7f",
    "mov     eax, 0x1",
    "mov     byte [rcx], dl",
    "jmp     0x14002d6f3",
    "mov     rax, qword [rbp+0x70]",
    "mov     ecx, dword [rbp+0x4]",
    "add     r14d, r11d",
    "add     rax, 0x8",
    "dec     ecx",
    "add     r15, 0x4",
    "cmp     r14d, ecx",
    "mov     qword [rbp+0x70], rax",
    "jl      0x14002d66d",
    "xor     r9d, r9d",
    "cmp     word [rbp+0xc], r9w",
    "jne     0x14002d5a6",
    "mov     eax, dword [rbp+rbx*4+0x1a0]",
    "cmp     dword [rcx+0x4], eax",
    "jne     0x14002d552",
    "add     rax, 0x8",
    "add     rdx, 0x2",
    "inc     r14d",
    "cmp     r14d, r13d",
    "mov     qword [rbp+0x18], rax",
    "mov     qword [rbp+0x48], rdx",
    "jl      0x14002d49d",
    "add     rbx, r11",
    "cmp     rbx, r12",
    "jge     0x14002d4d7",
    "mov     rcx, qword [rbp+0x60]",
    "mov     rax, qword [rbp+0x18]",
    "mov     rdx, qword [rbp+0x48]",
    "mov     r11, qword [rbp+0x110]",
    "mov     dword [rbp+0x20], r8d",
    "movzx   eax, word [rsi+0x18]",
    "movzx   ecx, byte [rsi+0xc]",
    "add     eax, edx",
    "add     ecx, eax",
    "add     r8d, ecx",
    "cmp     r14d, r8d",
    "je      0x14002d4b4",
    "cmp     r12, rsi",
    "jl      0x14002d989",
    "cmp     r12, r9",
    "mov     rbx, r9",
    "jle     0x14002d904",
    "or      edx, 0xffffffff",
    "mov     rcx, rsi",
    "call    sub_140026af4",
    "xor     r9d, r9d",
    "mov     edi, eax",
    "mov     dword [rbp+0x8], eax",
    "cmp     eax, r9d",
    "jne     0x14002d8fe",
    "cmp     ecx, dword [rbp]",
    "mov     eax, dword [rbp+0x58]",
    "jge     0x14002d80a",
    "mov     r13d, r9d",
    "mov     r8d, r9d",
    "mov     r9d, dword [rbp+0x98]",
    "jmp     0x14002d827",
    "lea     r9d, [rax+0x4]",
    "xor     eax, eax",
    "mov     rdi, rax",
    "jmp     0x14002d71f",
    "mov     rsi, qword [rax]",
    "movsxd  rdx, dword [r15]",
    "mov     rax, qword [rbp+0x118]",
    "movzx   eax, word [rax+rdx*2]",
    "movzx   r9d, word [rbp+0xc]",
    "movsxd  rdi, dword [rbp+0x90]",
    "mov     rcx, qword [rbp+0x110]",
    "add     rdi, qword [rbp+0x210]",
    "xor     r8d, r8d",
    "mov     rbx, qword [rcx+rdx*8]",
    "add     r9d, eax",
    "cmp     byte [rsi+0x8], r8b",
    "jne     0x14002d6b3",
    "mov     rsi, qword [rbp+0xd0]",
    "jmp     0x14002d793",
    "mov     rax, qword [rbp+0x48]",
    "mov     rdx, qword [rbp+0x118]",
    "movzx   eax, word [rax+rdx]",
    "cmp     ax, r9w",
    "jne     0x14002d5d8",
    "cmp     edi, r9d",
    "jne     0x14002d5a6",
    "cmp     r15, qword [rsi+0x50]",
    "jb      0x14002d552",
    "mov     r15, qword [rax+r11]",
    "cmp     r14d, r8d",
    "jne     0x14002d50a",
    "xor     r9d, r9d",
    "mov     rcx, qword [rbp+r12*8+0xb8]",
    "cmp     edi, r9d",
    "jne     0x14002d9af",
    "jmp     0x14002d9c6",
    "mov     r8, qword [rbp+rbx*8+0xd0]",
    "mov     rcx, qword [r8+0x50]",
    "cmp     edi, r9d",
    "jne     0x14002d97c",
    "mov     r11d, 0x1",
    "mov     rcx, qword [rbp+0xd0]",
    "lea     r8, [rbp+0x8]",
    "mov     rdx, rbx",
    "call    sub_14002c4fc",
    "mov     edi, dword [rbp+0x8]",
    "xor     r9d, r9d",
    "cmp     edi, r9d",
    "jne     0x14002d8fe",
    "mov     r8d, r9d",
    "cmp     eax, r9d",
    "mov     r9d, dword [rbp+rsi*4+0x98]",
    "sete    r8b",
    "add     r8d, dword [rbp+rsi*4+0x94]",
    "sub     r9d, r8d",
    "cmp     eax, r9d",
    "mov     r13d, r9d",
    "sete    r13b",
    "add     r13d, dword [rbp+rsi*4+0x16c]",
    "mov     rcx, qword [rbp+rsi*8+0xd0]",
    "lea     rax, [rbp+0x100]",
    "mov     edx, r13d",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14002bf50",
    "xor     r9d, r9d",
    "mov     edi, eax",
    "mov     dword [rbp+0x8], eax",
    "cmp     eax, r9d",
    "jne     0x14002d9bd",
    "mov     r14d, dword [rbp+0x4]",
    "mov     ebx, r11d",
    "sub     ebx, r14d",
    "cmp     ebx, r14d",
    "jge     0x14002d88c",
    "cmp     ax, word [rcx+0x10]",
    "jbe     0x14002d600",
    "lea     rcx, [rbp+0x100]",
    "mov     edx, r14d",
    "call    sub_14002ba44",
    "mov     r13d, dword [rbp+0x100]",
    "mov     rcx, qword [rbp+0x60]",
    "xor     r9d, r9d",
    "movzx   eax, byte [r15+0x2]",
    "movzx   edx, byte [r15+0x1]",
    "mov     r9d, dword [rcx+0x4]",
    "mov     rcx, qword [rbp+0x50]",
    "shl     edx, 0x8",
    "mov     r8b, 0x5",
    "or      edx, eax",
    "movzx   eax, byte [r15]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r15+0x3]",
    "or      edx, eax",
    "lea     rax, [rbp+0x8]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14002650c",
    "mov     edi, dword [rbp+0x8]",
    "mov     rcx, qword [rbp+0x60]",
    "xor     r9d, r9d",
    "cmp     r15, qword [rsi+0x58]",
    "jb      0x14002d620",
    "add     r12, r11",
    "mov     r8d, dword [rcx+0x4]",
    "mov     rdx, rcx",
    "mov     rcx, qword [rcx+0x48]",
    "call    sub_14002af2c",
    "xor     r9d, r9d",
    "mov     edi, eax",
    "lea     r11d, [r9+0x1]",
    "movsxd  r12, esi",
    "mov     rbx, r9",
    "cmp     r12, r9",
    "jle     0x14002d9f6",
    "add     rbx, r11",
    "cmp     rbx, r12",
    "jl      0x14002d926",
    "movzx   eax, byte [rcx+0xa]",
    "movzx   edx, byte [rcx+0x9]",
    "mov     r9d, dword [r8+0x4]",
    "shl     edx, 0x8",
    "mov     r8b, 0x5",
    "or      edx, eax",
    "movzx   eax, byte [rcx+0x8]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rcx+0xb]",
    "mov     rcx, r10",
    "or      edx, eax",
    "lea     rax, [rbp+0x8]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14002650c",
    "mov     edi, dword [rbp+0x8]",
    "mov     r10, qword [rbp+0x50]",
    "xor     r9d, r9d",
    "lea     r11d, [r9+0x1]",
    "mov     rcx, qword [rbp+0xd0]",
    "mov     rdx, rcx",
    "mov     r8d, dword [rcx+0x4]",
    "mov     rcx, qword [rcx+0x48]",
    "call    sub_14002af2c",
    "xor     r9d, r9d",
    "mov     edi, eax",
    "mov     ecx, dword [rbp+0x14]",
    "mov     rax, qword [rbp+rsi*8+0xd0]",
    "mov     r13d, dword [rbp+0x100]",
    "sub     ecx, dword [rbp+rsi*4+0x78]",
    "lea     r11d, [r9+0x1]",
    "mov     dword [rax+0x14], ecx",
    "mov     byte [rbp+rsi+0xb0], r11b",
    "cmp     edi, r9d",
    "jne     0x14002d9b9",
    "cmp     edi, r9d",
    "jne     0x14002d9b9",
    "mov     rax, qword [rbp+0x18]",
    "jmp     0x14002d904",
    "mov     r8d, dword [rbp+0x20]",
    "mov     rdx, qword [rbp+0x48]",
    "mov     r9, qword [rbp+0x70]",
    "mov     r10, qword [rbp+0x30]",
    "mov     r11, qword [rbp+0x110]",
    "lea     r9, [rbp+0x8]",
    "mov     r8, r15",
    "mov     rdx, rsi",
    "call    sub_140026a3c",
    "mov     edi, dword [rbp+0x8]",
    "mov     rcx, qword [rbp+0x60]",
    "xor     r9d, r9d"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}