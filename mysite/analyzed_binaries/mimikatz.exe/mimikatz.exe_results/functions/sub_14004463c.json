{
  "address": "0x14004463c",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     dword [rax+0x18], r8d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x80",
    "xor     ebx, ebx",
    "lea     rax, [rax-0x60]",
    "mov     rsi, rdx",
    "mov     qword [rax], rbx",
    "mov     qword [rsp+0x28], rdx",
    "mov     rbp, rcx",
    "mov     qword [rsp+0x30], rax",
    "mov     qword [rsp+0xa8], rbx",
    "cmp     rdx, rbx",
    "je      0x14004495e",
    "mov     rax, rbx",
    "mov     rbx, qword [rsp+0xa0]",
    "add     rsp, 0x80",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     edx, 0x80",
    "mov     rcx, rbp",
    "call    sub_140016c18",
    "mov     rdi, rax",
    "mov     qword [rsp+0x40], rax",
    "cmp     rax, rbx",
    "je      0x140044959",
    "mov     rbx, qword [rsp+0x38]",
    "mov     r8d, dword [rsp+0xb0]",
    "mov     rdx, qword [rsi]",
    "mov     rcx, rbp",
    "call    sub_140044284",
    "mov     r8d, dword [rsp+0xb0]",
    "mov     rcx, rbp",
    "mov     qword [rdi], rax",
    "mov     rdx, qword [rsi+0x28]",
    "call    sub_1400443dc",
    "mov     qword [rdi+0x28], rax",
    "mov     rdx, qword [rsi+0x30]",
    "cmp     rdx, rbx",
    "je      0x1400446e5",
    "mov     rax, rbx",
    "mov     r8d, dword [rsp+0xb0]",
    "xor     r9d, r9d",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "jmp     0x1400446e8",
    "mov     rax, rbx",
    "mov     r8d, dword [rsp+0xb0]",
    "xor     r9d, r9d",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "jmp     0x140044725",
    "mov     r8d, dword [rsp+0xb0]",
    "mov     qword [rdi+0x30], rax",
    "mov     rdx, qword [rsi+0x38]",
    "mov     rcx, rbp",
    "call    sub_140044284",
    "mov     qword [rdi+0x38], rax",
    "mov     rdx, qword [rsi+0x40]",
    "cmp     rdx, rbx",
    "je      0x140044722",
    "mov     rax, rbx",
    "mov     r8d, dword [rsp+0xb0]",
    "xor     r9d, r9d",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "jmp     0x140044778",
    "mov     r8d, dword [rsp+0xb0]",
    "mov     qword [rdi+0x40], rax",
    "mov     rdx, qword [rsi+0x48]",
    "mov     rcx, rbp",
    "call    sub_140044284",
    "mov     qword [rdi+0x48], rax",
    "mov     al, byte [rsi+0x8]",
    "mov     qword [rdi+0x50], rbx",
    "mov     byte [rdi+0x8], al",
    "mov     rax, qword [rsp+0xa8]",
    "mov     qword [rdi+0x58], rax",
    "mov     rdx, qword [rsi+0x60]",
    "cmp     rdx, rbx",
    "je      0x140044775",
    "lea     rax, [rsp+0xa8]",
    "mov     qword [rdi+0x68], rdx",
    "mov     qword [rdi+0x70], rbx",
    "mov     qword [rsp+0x20], rax",
    "mov     rax, qword [rsi+0x78]",
    "mov     rcx, rbx",
    "mov     qword [rsp+0xa8], rbx",
    "cmp     rax, rbx",
    "je      0x1400448e5",
    "mov     eax, dword [rax]",
    "mov     rcx, rbp",
    "dec     eax",
    "movsxd  rdx, eax",
    "shl     rdx, 0x5",
    "add     rdx, 0x30",
    "call    sub_140016ba8",
    "mov     rdx, rax",
    "mov     qword [rsp+0x20], rax",
    "cmp     rax, rbx",
    "je      0x140044880",
    "mov     qword [rdi+0x60], rax",
    "mov     dword [rdi+0x10], ebx",
    "mov     dword [rdi+0x14], ebx",
    "mov     eax, dword [rsi+0xc]",
    "mov     rdx, rbx",
    "and     eax, 0xffffffdf",
    "mov     dword [rdi+0xc], eax",
    "or      eax, 0xffffffff",
    "mov     dword [rdi+0x1c], eax",
    "mov     dword [rdi+0x20], eax",
    "movzx   eax, word [rsi+0xa]",
    "mov     word [rdi+0xa], ax",
    "mov     rax, qword [rsi+0x68]",
    "mov     qword [rsp+0x48], rax",
    "cmp     rax, rbx",
    "je      0x140044880",
    "mov     qword [rdi+0x78], rcx",
    "cmp     qword [rsi+0x70], rbx",
    "je      0x140044928",
    "mov     rsi, qword [rsp+0x20]",
    "mov     rdi, rax",
    "mov     rcx, qword [rsp+0x48]",
    "mov     dword [rsp+0xa8], ebx",
    "mov     eax, dword [rcx]",
    "mov     dword [rdx], eax",
    "cmp     dword [rcx], ebx",
    "jle     0x140044880",
    "mov     eax, dword [rsi+0x18]",
    "mov     qword [rsp+0xa8], rdi",
    "mov     dword [rdi+0x18], eax",
    "mov     rax, qword [rsp+0x30]",
    "mov     qword [rax], rdi",
    "mov     rsi, qword [rsi+0x50]",
    "lea     rax, [rdi+0x50]",
    "mov     qword [rsp+0x30], rax",
    "mov     qword [rsp+0x28], rsi",
    "cmp     rsi, rbx",
    "jne     0x14004467b",
    "cmp     byte [rbp+0x61], bl",
    "jne     0x140044928",
    "mov     rcx, qword [rsp+0xa8]",
    "mov     rdi, qword [rsp+0x40]",
    "mov     rsi, qword [rsp+0x28]",
    "mov     rdi, qword [rdi+0x40]",
    "lea     rsi, [rax+0x40]",
    "cmp     rdi, rbx",
    "jne     0x1400448b1",
    "lea     rax, [rcx+0x10]",
    "mov     rsi, rcx",
    "lea     rdi, [rdx+0x20]",
    "mov     qword [rsp+0xb8], rax",
    "sub     rsi, rdx",
    "mov     rbx, rcx",
    "lea     rax, [rel sub_140044254]",
    "lea     rcx, [rsp+0x50]",
    "mov     rdx, rdi",
    "mov     qword [rsp+0x58], rax",
    "lea     rax, [rel sub_140044278]",
    "mov     qword [rsp+0x68], rbx",
    "mov     qword [rsp+0x50], rbx",
    "mov     qword [rsp+0x78], rdi",
    "mov     qword [rsp+0x60], rax",
    "call    sub_140040a9c",
    "mov     r8, rdi",
    "xor     edx, edx",
    "mov     rcx, rbp",
    "call    sub_14007cf44",
    "mov     qword [rsi], rax",
    "cmp     rax, rbx",
    "je      0x1400448d3",
    "mov     rdx, qword [rsi+rdi]",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "call    sub_14004463c",
    "mov     rdx, qword [rsp+0xb8]",
    "xor     r8d, r8d",
    "mov     qword [rdi], rax",
    "mov     rdx, qword [rdx+0x8]",
    "mov     rcx, rbp",
    "call    sub_140044284",
    "mov     rcx, rbp",
    "mov     qword [rdi-0x8], rax",
    "mov     rax, qword [rsp+0xb8]",
    "mov     rdx, qword [rax]",
    "call    sub_140016dac",
    "add     qword [rsp+0xb8], 0x20",
    "add     rdi, 0x20",
    "mov     qword [rdi-0x30], rax",
    "mov     eax, dword [rsp+0xa8]",
    "inc     eax",
    "cmp     eax, dword [rbx]",
    "mov     dword [rsp+0xa8], eax",
    "jl      0x14004480a",
    "mov     rdi, qword [rsp+0x40]",
    "mov     rsi, qword [rsp+0x28]",
    "mov     rdx, qword [rsp+0x20]",
    "xor     ebx, ebx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}