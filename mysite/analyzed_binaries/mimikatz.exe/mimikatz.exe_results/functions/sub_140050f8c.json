{
  "address": "0x140050f8c",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x20], rsi",
    "mov     dword [rax+0x18], r8d",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     r14, qword [rcx]",
    "movsxd  rbx, r8d",
    "mov     r12d, r9d",
    "mov     rbp, qword [r14+0x20]",
    "mov     r13, rbx",
    "mov     rdi, rdx",
    "mov     rsi, rcx",
    "shl     r13, 0x5",
    "call    sub_140065300",
    "mov     r8d, ebx",
    "mov     edx, 0x1",
    "mov     rcx, rsi",
    "mov     r15, rax",
    "call    sub_14005398c",
    "cmp     dword [rdi+0x54], 0x0",
    "je      0x140050ffc",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_14006b428",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x140051023",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, 0xa0",
    "mov     rcx, r15",
    "call    sub_140032364",
    "test    byte [rdi+0x40], 0x8",
    "je      0x140051040",
    "mov     rdx, rbx",
    "mov     rcx, rsi",
    "call    sub_14006c130",
    "mov     rbx, qword [rbx+0x40]",
    "test    rbx, rbx",
    "jne     0x14005100f",
    "mov     rax, qword [rdi]",
    "mov     r8, qword [r13+rbp]",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "lea     rdx, [rel data_1400f5ba0]  {\"DELETE FROM %Q.%s WHERE tbl_name\u2026\"}",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004dd58",
    "test    r12d, r12d",
    "jne     0x1400510e6",
    "mov     r9, qword [rdi]",
    "mov     r8, qword [r13+rbp]",
    "lea     rdx, [rel data_1400f5b70]  {\"DELETE FROM %Q.sqlite_sequence W\u2026\"}",
    "mov     rcx, rsi",
    "call    sub_14004dd58",
    "xor     r12d, r12d",
    "xor     r12d, r12d",
    "cmp     dword [rdi+0x54], r12d",
    "jne     0x1400510ef",
    "mov     ebp, dword [rsp+0x70]",
    "mov     ebp, dword [rsp+0x70]",
    "mov     rbx, qword [rdi]",
    "xor     r9d, r9d",
    "mov     edx, 0xa2",
    "mov     rcx, r15",
    "mov     r8d, ebp",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8, rbx",
    "mov     rcx, r15",
    "mov     edx, eax",
    "call    sub_140032c40",
    "mov     r11, qword [rsi+0x90]",
    "mov     rax, rsi",
    "cmp     r11, r12",
    "cmovne  rax, r11",
    "mov     byte [rax+0x21], 0x1",
    "jmp     0x140051139",
    "mov     ebp, dword [rdi+0x38]",
    "mov     ecx, r12d",
    "mov     rbx, qword [rsp+0x60]",
    "mov     rbp, qword [rsp+0x68]",
    "mov     rsi, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     rbx, qword [rbx+0x10]",
    "jmp     0x1400511a4",
    "mov     rbx, qword [rdi]",
    "xor     r9d, r9d",
    "mov     r8d, ebp",
    "mov     edx, 0x8f",
    "mov     rcx, r15",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8, rbx",
    "mov     edx, eax",
    "mov     rcx, r15",
    "call    sub_140032c40",
    "mov     edx, ebp",
    "mov     rcx, rsi",
    "call    sub_14004f620",
    "mov     r11, qword [r14+0x20]",
    "mov     rbx, qword [r13+r11+0x18]",
    "test    byte [rbx+0x72], 0x2",
    "je      0x1400511bb",
    "mov     ebx, ebp",
    "cmp     ebp, ecx",
    "jge     0x140051085",
    "cmp     rbx, r12",
    "jne     0x140051183",
    "cmp     rax, r12",
    "jne     0x14005108e",
    "mov     rax, qword [rdi+0x10]",
    "movsxd  rdx, ecx",
    "jmp     0x1400510a3",
    "mov     rdi, qword [rbx+0x10]",
    "cmp     qword [rdi+0x18], r12",
    "je      0x1400511a1",
    "mov     rax, qword [r14+0x20]",
    "mov     rcx, qword [r13+rax+0x18]",
    "mov     eax, 0xfffd",
    "and     word [rcx+0x72], ax",
    "cmp     rdx, r12",
    "je      0x140051098",
    "cmp     ebx, r12d",
    "je      0x1400510e9",
    "mov     rbx, qword [rbx]",
    "mov     rdx, rdi",
    "mov     rcx, r14",
    "call    sub_14004e3b8",
    "mov     qword [rdi+0x8], r12",
    "mov     word [rdi+0x46], r12w",
    "cmp     dword [rax+0x58], ebx",
    "cmovg   ebx, dword [rax+0x58]",
    "cmp     dword [rax+0x58], ecx",
    "jge     0x14005109f",
    "cmp     dword [rdi+0x54], r12d",
    "je      0x140051135",
    "mov     rdx, qword [rdi+0x70]",
    "mov     r8d, 0xfff0bdc0",
    "cmp     rdx, r12",
    "je      0x1400510d8",
    "mov     rax, qword [rax+0x28]",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "call    sub_140050df0",
    "mov     ecx, ebx",
    "jmp     0x140051077",
    "mov     rax, qword [rsi]",
    "mov     r8d, r12d",
    "mov     rcx, qword [rax+0x20]",
    "add     rcx, 0x18",
    "jmp     0x1400510d3",
    "mov     ebx, r12d",
    "cmp     ecx, r12d",
    "je      0x140051083",
    "cmp     qword [rcx], rdx",
    "jne     0x1400510cc",
    "inc     r8d",
    "add     rcx, 0x20"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}