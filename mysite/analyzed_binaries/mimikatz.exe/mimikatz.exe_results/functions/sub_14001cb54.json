{
  "address": "0x14001cb54",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     dword [rax+0x20], r9d",
    "mov     qword [rax+0x18], r8",
    "mov     qword [rax+0x10], rdx",
    "mov     qword [rax+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xb8",
    "mov     esi, r9d",
    "mov     rbx, r8",
    "mov     rbp, rdx",
    "mov     r13, rcx",
    "mov     rax, rbp",
    "lea     rdx, [rsp+0x58]",
    "mov     rcx, r13",
    "call    sub_14001c81c",
    "test    eax, eax",
    "jne     0x14001cf54",
    "mov     ebx, 0xc0a",
    "mov     ecx, dword [rel data_140140360]",
    "cmp     ecx, 0x2",
    "je      0x14001cc3a",
    "add     rsp, 0xb8",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rdi, qword [rsp+0x58]",
    "mov     rax, rdi",
    "mov     qword [rsp+0x70], rax",
    "jmp     0x14001cc07",
    "and     dword [rsp+0x68], 0x0",
    "xor     edx, edx",
    "lea     rcx, [rsp+0x80]",
    "lea     r8d, [rdx+0x24]",
    "call    memset",
    "call    sub_14001a7b4",
    "test    eax, eax",
    "jne     0x14001cc3a",
    "mov     rcx, rax",
    "call    sub_14001c7dc",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x14001cf45",
    "mov     eax, dword [rsp+0x80]",
    "lea     rdx, [rsp+0x78]",
    "lea     rcx, [rsp+0x68]",
    "call    sub_14001acbc",
    "test    eax, eax",
    "jne     0x14001cc52",
    "mov     rcx, rbp",
    "call    qword [rel data_14013d648]",
    "jmp     0x14001cc85",
    "mov     eax, r15d",
    "neg     eax",
    "sbb     r13d, r13d",
    "and     r13d, 0x40000000",
    "add     r13d, 0x80000000",
    "cmp     dword [rsp+0x4c], 0x0",
    "je      0x14001ccb6",
    "test    al, 0x10",
    "jne     0x14001ce4c",
    "lea     r8, [rsp+0x80]",
    "xor     edx, edx",
    "mov     rcx, rbp",
    "call    qword [rel data_14013d678]",
    "test    eax, eax",
    "jne     0x14001cc7e",
    "jmp     0x14001cc92",
    "cmp     eax, 0xffffffff",
    "je      0x14001cc92",
    "neg     r12d",
    "sbb     edi, edi",
    "neg     edi",
    "add     edi, 0x3",
    "mov     edi, 0x1",
    "jmp     0x14001ccc0",
    "mov     rcx, rbp",
    "call    sub_140016950",
    "mov     rdi, qword [rsp+0x58]",
    "mov     ebx, 0x20e",
    "jmp     0x14001cf4a",
    "mov     rbx, qword [rsp+0x108]",
    "mov     rsi, qword [rsp+0x100]",
    "call    sub_14001a7b4",
    "test    eax, eax",
    "jne     0x14001cd6a",
    "mov     eax, dword [rel data_140140360]",
    "neg     r14d",
    "movsxd  r15, r15d",
    "sbb     r14d, r14d",
    "and     r14d, 0x4000082",
    "sub     r14d, 0xffffff80",
    "cmp     eax, 0x2",
    "je      0x14001cd6a",
    "mov     rcx, rdi",
    "call    sub_140016950",
    "mov     eax, ebx",
    "mov     rbx, qword [rsp+0x110]",
    "mov     esi, dword [rsp+0x118]",
    "test    r15, r15",
    "je      0x14001cdcd",
    "and     qword [rsp+0x30], 0x0",
    "xor     r9d, r9d",
    "mov     edx, r13d",
    "lea     r8d, [r9+0x3]",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x28], r14d",
    "mov     dword [rsp+0x20], edi",
    "call    qword [rel data_14013d4c8]",
    "mov     r12, rax",
    "cmp     rax, 0xffffffffffffffff",
    "jne     0x14001cdef",
    "mov     rcx, qword [rsp+0x120]",
    "xor     r13d, r13d",
    "cmp     rcx, r13",
    "je      0x14001ceb7",
    "mov     rcx, rbp",
    "call    sub_140016950",
    "mov     rcx, qword [rsp+0x58]",
    "call    sub_140016950",
    "mov     r11d, dword [rsp+0x48]",
    "test    r11d, r11d",
    "je      0x14001ce63",
    "lea     rdx, [rsp+0x44]",
    "lea     rcx, [rsp+0x40]",
    "call    sub_14001acbc",
    "test    eax, eax",
    "jne     0x14001cd7a",
    "and     dword [rsp+0x60], 0x0",
    "lea     r9, [rsp+0x60]",
    "lea     r8d, [rax+0x3]",
    "mov     rdx, rbx",
    "mov     rcx, rsi",
    "call    sub_14001d088",
    "test    eax, eax",
    "jne     0x14001cdcd",
    "mov     ecx, dword [rsp+0x40]",
    "mov     edx, 0xb3b0",
    "call    sub_14001ad30",
    "cmp     r12, 0xffffffffffffffff",
    "jne     0x14001ce97",
    "test    r15, r15",
    "je      0x14001cd51",
    "mov     rsi, qword [rsp+0x100]",
    "mov     rcx, rbp",
    "mov     rdi, qword [rsi+0x20]",
    "call    sub_140016950",
    "mov     rcx, qword [rsp+0x58]",
    "call    sub_140016950",
    "cmp     rdi, r13",
    "je      0x14001cedf",
    "mov     r11d, dword [rsp+0x48]",
    "neg     r11d",
    "sbb     eax, eax",
    "neg     eax",
    "inc     eax",
    "mov     dword [rcx], eax",
    "mov     edx, dword [rsp+0x44]",
    "mov     r9, qword [rsp+0x70]",
    "lea     r8, [rel data_1400f3b28]  {\"winOpen\"}",
    "mov     ecx, 0xe",
    "mov     dword [rbx+0x20], edx",
    "mov     dword [rsp+0x20], 0xb3bf",
    "call    sub_14001ac00",
    "mov     ecx, 0xb3c0",
    "call    sub_140084ea8",
    "jmp     0x14001cf54",
    "cmp     dword [rsp+0x4c], 0x0",
    "jne     0x14001ce63",
    "and     qword [rsp+0x30], 0x0",
    "xor     r9d, r9d",
    "mov     edx, r13d",
    "lea     r8d, [r9+0x3]",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x28], r14d",
    "mov     dword [rsp+0x20], edi",
    "call    qword [rel data_14013d4e0]",
    "mov     r12, rax",
    "cmp     rax, 0xffffffffffffffff",
    "jne     0x14001cde0",
    "cmp     dword [rsp+0x60], eax",
    "jne     0x14001cde0",
    "lea     rdx, [rsp+0x44]",
    "lea     rcx, [rsp+0x40]",
    "call    sub_14001acbc",
    "test    eax, eax",
    "je      0x14001cdef",
    "mov     rdx, qword [rsp+0x108]",
    "mov     rcx, qword [rsp+0x100]",
    "and     dword [rsp+0x50], 0x0",
    "lea     r9, [rsp+0x50]",
    "lea     r8d, [rax+0x3]",
    "call    sub_14001d088",
    "test    eax, eax",
    "jne     0x14001cd51",
    "lea     rax, [rel data_1400d6f20]",
    "mov     rax, qword [rdi]",
    "jmp     0x14001cee6",
    "mov     rbp, qword [rsp+0x108]",
    "mov     r13, qword [rsp+0x100]",
    "and     esi, 0xfffffff9",
    "or      esi, 0x1",
    "mov     dword [rsp+0x118], esi",
    "jmp     0x14001cb86",
    "jmp     0x14001ccec",
    "cmp     dword [rsp+0x50], eax",
    "jne     0x14001cdef",
    "mov     rdi, qword [rsp+0x108]",
    "lea     rdx, [rel data_1400f3b30]  {\"psow\"}",
    "mov     r8d, 0x1",
    "mov     rcx, rdi",
    "call    sub_1400852e8",
    "cmp     eax, r13d",
    "je      0x14001cf22",
    "or      byte [rbx+0x1c], 0x2",
    "mov     qword [rbx], rax",
    "mov     qword [rbx+0x8], rsi",
    "mov     qword [rbx+0x10], r12",
    "cmp     dword [rsp+0x64], r13d",
    "je      0x14001cefc",
    "and     dword [rsp+0x44], 0x0",
    "and     dword [rsp+0x40], 0x0",
    "mov     eax, esi",
    "and     eax, 0x10",
    "xor     edi, edi",
    "mov     r15d, esi",
    "mov     dword [rsp+0x4c], eax",
    "mov     eax, esi",
    "lea     r8d, [rdi+0x60]",
    "and     eax, 0x1",
    "mov     r14d, esi",
    "mov     r12d, esi",
    "and     r15d, 0x2",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x64], eax",
    "mov     qword [rsp+0x70], rbp",
    "mov     qword [rsp+0x58], rdi",
    "and     r14d, 0x8",
    "and     r12d, 0x4",
    "mov     dword [rsp+0x48], r15d",
    "call    memset",
    "or      qword [rbx+0x10], 0xffffffffffffffff",
    "test    rbp, rbp",
    "jne     0x14001cc04",
    "mov     dword [rbx+0x20], r13d",
    "mov     qword [rbx+0x30], rdi",
    "mov     qword [rbx+0x40], r13",
    "mov     qword [rbx+0x48], r13",
    "mov     qword [rbx+0x50], r13",
    "mov     rax, qword [rel data_14013d178]",
    "mov     qword [rbx+0x58], rax",
    "xor     eax, eax",
    "jmp     0x14001cf54",
    "or      byte [rbx+0x1c], 0x10"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}