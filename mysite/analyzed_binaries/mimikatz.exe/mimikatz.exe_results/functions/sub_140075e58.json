{
  "address": "0x140075e58",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "64-bit execution via heavens gate/d7fcc2def38746b09a33d0c7032e9b82",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x18], rbx",
    "mov     word [rax+0x20], r9w",
    "mov     qword [rax+0x10], rdx",
    "mov     qword [rax+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x100",
    "mov     rax, qword [rcx]",
    "xor     r9d, r9d",
    "mov     rsi, r8",
    "mov     rax, qword [rax]",
    "mov     r8, rdx",
    "mov     rdx, rcx",
    "mov     rcx, qword [rax]",
    "mov     rdi, qword [rdx+0x18]",
    "mov     ebp, r9d",
    "mov     qword [rsp+0x80], rax",
    "mov     qword [rsp+0x48], r9",
    "mov     qword [rsp+0x58], r9",
    "mov     qword [rsp+0x70], rcx",
    "cmp     byte [rcx+0x61], r9b",
    "je      0x140075eb8",
    "mov     eax, dword [rdi+0x28]",
    "mov     dword [rsp+0x64], eax",
    "and     al, 0x20",
    "neg     al",
    "sbb     ecx, ecx",
    "and     ecx, 0xfffffe59",
    "add     ecx, 0x1bf",
    "test    byte [rsi+0x64], 0x4",
    "je      0x140075eda",
    "lea     eax, [r9+0x7]",
    "jmp     0x1400766fd",
    "movzx   r9d, word [rdi+0x1a]",
    "movzx   eax, word [rdi+0x18]",
    "mov     r8d, dword [r8+0x44]",
    "mov     rdx, qword [rdx+0x8]",
    "mov     word [rsp+0x3e], r9w",
    "movzx   r9d, word [rdi+0x1c]",
    "mov     word [rsp+0x3c], r9w",
    "movzx   r9d, word [rdi+0x2e]",
    "mov     qword [rsp+0x28], rsi",
    "mov     word [rsp+0x50], r9w",
    "movzx   r9d, word [rdi+0x2c]",
    "mov     dword [rsp+0x20], ecx",
    "mov     word [rsp+0x40], r9w",
    "mov     r9, qword [rdi]",
    "lea     rcx, [rsp+0x90]",
    "mov     qword [rsp+0x78], r9",
    "movzx   r9d, word [rdi+0x16]",
    "mov     word [rsp+0x30], ax",
    "mov     word [rsp+0x38], r9w",
    "mov     r9d, eax",
    "mov     dword [rsp+0x68], eax",
    "call    sub_1400747c4",
    "xor     r11d, r11d",
    "mov     rbx, rax",
    "mov     word [rdi+0x12], r11w",
    "mov     rax, qword [rsi+0x10]",
    "movzx   eax, word [rax]",
    "lea     ecx, [r11+0xa]",
    "cmp     ax, cx",
    "mov     word [rsp+0x60], ax",
    "jg      0x140075f6f",
    "and     ecx, 0xffffffc3",
    "mov     rbx, qword [rsp+0x130]",
    "add     rsp, 0x100",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "movsx   rcx, ax",
    "call    sub_14001a0b8",
    "sub     ax, 0x21",
    "mov     word [rsp+0x3a], ax",
    "mov     word [rsp+0x3a], r11w",
    "jmp     0x140075f81",
    "mov     rax, qword [rsp+0x78]",
    "mov     dx, word [rsp+0x30]",
    "mov     cx, word [rsp+0x50]",
    "mov     r9w, word [rsp+0x40]",
    "mov     qword [rdi], rax",
    "mov     ax, word [rsp+0x3e]",
    "mov     word [rdi+0x1a], ax",
    "mov     ax, word [rsp+0x3c]",
    "mov     word [rdi+0x18], dx",
    "mov     word [rdi+0x1c], ax",
    "mov     eax, dword [rsp+0x64]",
    "mov     word [rdi+0x2e], cx",
    "mov     dword [rdi+0x28], eax",
    "mov     ax, word [rsp+0x38]",
    "mov     word [rdi+0x2c], r9w",
    "mov     word [rdi+0x16], ax",
    "cmp     dx, cx",
    "jne     0x1400766fb",
    "movzx   r8d, word [rbx+0x14]",
    "mov     dword [rsp+0x34], r11d",
    "mov     word [rsp+0x32], r8w",
    "cmp     r8w, cx",
    "jne     0x140076058",
    "mov     edx, 0x2",
    "mov     ecx, 0x100",
    "lea     r10d, [rdx-0x1]",
    "mov     eax, ebp",
    "movzx   ecx, word [rsi+0x5e]",
    "movzx   eax, dx",
    "inc     eax",
    "cmp     eax, ecx",
    "jge     0x1400766fb",
    "mov     r9w, word [rsp+0x30]",
    "jmp     0x140075ff8",
    "movzx   r9d, word [rsp+0x30]",
    "mov     rax, qword [rsi+0x8]",
    "movsx   rdx, word [rax+r9*2]",
    "cmp     edx, r11d",
    "jl      0x140075fd9",
    "test    byte [rsi+0x64], 0x40",
    "jne     0x1400766fb",
    "mov     rax, qword [rbx+0x30]",
    "test    qword [rdi+0x8], rax",
    "jne     0x14007659b",
    "cmp     edx, 0xffffffff",
    "je      0x14007659b",
    "mov     rax, qword [rsi+0x18]",
    "shl     rdx, 0x5",
    "mov     rcx, qword [rax+0x8]",
    "movzx   eax, byte [rdx+rcx+0x18]",
    "jmp     0x140075fe5",
    "mov     rcx, qword [rsp+0x70]",
    "mov     eax, 0x4000",
    "test    word [rcx+0x5c], ax",
    "jne     0x1400766fb",
    "lea     rcx, [rsp+0x90]",
    "call    sub_140074594",
    "xor     r11d, r11d",
    "mov     ecx, 0x100",
    "mov     rbx, rax",
    "lea     edx, [r11+0x2]",
    "lea     r10d, [r11+0x1]",
    "cmp     ebp, r11d",
    "je      0x140075f8f",
    "test    word [rbx+0x12], cx",
    "je      0x14007601b",
    "mov     eax, r11d",
    "cmp     eax, r11d",
    "jne     0x14007659b",
    "mov     rax, qword [rsi+0x10]",
    "movzx   ebx, dx",
    "cmp     word [rax+rbx*2+0x2], 0x2a",
    "jl      0x1400766fb",
    "cmp     rbx, r11",
    "je      0x1400765cc",
    "jmp     0x1400765cc",
    "mov     rax, qword [rsp+0x128]",
    "test    byte [rax+0x3c], 0x8",
    "je      0x140076036",
    "mov     eax, 0x10",
    "cmp     r8w, ax",
    "je      0x14007659b",
    "mov     ecx, 0x100",
    "mov     edx, 0x2",
    "movzx   r8d, r9w",
    "mov     rdx, rdi",
    "add     r8d, r10d",
    "call    sub_1400756b0",
    "xor     edx, edx",
    "mov     ebp, eax",
    "cmp     eax, edx",
    "jne     0x1400766fb",
    "cmp     byte [rsi+0x62], r11b",
    "je      0x140076060",
    "mov     rax, qword [rbx]",
    "test    byte [rax+0x4], r10b",
    "je      0x14007659b",
    "movzx   ecx, word [rdi+0x2c]",
    "mov     rax, qword [rdi+0x38]",
    "lea     r8d, [rdx+0x1]",
    "add     word [rdi+0x18], r8w",
    "add     word [rdi+0x2e], r8w",
    "mov     qword [rax+rcx*8], rdx",
    "add     word [rdi+0x2c], r8w",
    "bts     dword [rdi+0x28], 0xf",
    "mov     rax, qword [rsi+0x10]",
    "movzx   r9d, word [rax+rbx*2]",
    "mov     rdx, qword [rsp+0x128]",
    "mov     rcx, qword [rsp+0x120]",
    "sub     r9w, word [rax+rbx*2+0x2]",
    "mov     r8, rsi",
    "sub     word [rdi+0x16], r9w",
    "add     r9w, word [rsp+0x138]",
    "add     r9w, 0x5",
    "call    sub_140075e58",
    "mov     ax, word [rsp+0x38]",
    "mov     r9w, word [rsp+0x50]",
    "mov     word [rdi+0x16], ax",
    "mov     ax, word [rsp+0x30]",
    "mov     word [rdi+0x2e], r9w",
    "mov     word [rdi+0x18], ax",
    "mov     eax, dword [rsp+0x64]",
    "mov     dword [rdi+0x28], eax",
    "mov     rax, qword [rsp+0x120]",
    "or      dword [rax+0x28], r10d",
    "movzx   eax, word [rsi+0x5e]",
    "movzx   ecx, r9w",
    "sub     eax, r10d",
    "cmp     ecx, eax",
    "jne     0x140076060",
    "mov     r10d, 0x1",
    "movzx   ecx, word [rdi+0x2c]",
    "mov     rax, qword [rdi+0x38]",
    "mov     r10w, word [rsp+0x32]",
    "mov     qword [rax+rcx*8], rbx",
    "mov     rax, qword [rdi+0x8]",
    "lea     edx, [r11+0x1]",
    "add     word [rdi+0x2c], dx",
    "mov     rcx, qword [rbx+0x30]",
    "not     rax",
    "or      rcx, qword [rsp+0x78]",
    "and     rcx, rax",
    "mov     qword [rdi], rcx",
    "test    dl, r10b",
    "je      0x140076207",
    "mov     rax, qword [rsp+0x120]",
    "or      dword [rax+0x28], edx",
    "jmp     0x14007606c",
    "test    r10b, 0x82",
    "je      0x140076288",
    "mov     r8, qword [rbx]",
    "bt      dword [r8+0x4], 0xb",
    "jae     0x14007613f",
    "mov     eax, dword [rsp+0x64]",
    "mov     rcx, qword [rsp+0x70]",
    "mov     rdx, rdi",
    "mov     dword [rdi+0x28], eax",
    "mov     ax, word [rsp+0x3e]",
    "mov     word [rdi+0x18], r9w",
    "mov     word [rdi+0x1a], ax",
    "mov     ax, word [rsp+0x3c]",
    "mov     word [rdi+0x1c], ax",
    "movzx   eax, word [rsp+0x40]",
    "lea     r8d, [r10+rax]",
    "mov     word [rdi+0x2c], ax",
    "call    sub_1400756b0",
    "xor     r11d, r11d",
    "cmp     eax, r11d",
    "jne     0x1400765c6",
    "mov     eax, 0x100",
    "test    ax, r10w",
    "je      0x1400762a8",
    "mov     rax, qword [rsi+0x8]",
    "movzx   r9d, word [rsp+0x30]",
    "mov     ebp, 0x1",
    "movsx   edx, word [rax+r9*2]",
    "or      dword [rdi+0x28], ebp",
    "mov     ecx, dword [rdi+0x28]",
    "cmp     edx, 0xffffffff",
    "je      0x14007627c",
    "mov     rax, qword [r8+0x20]",
    "cmp     rax, r11",
    "je      0x14007615b",
    "movzx   eax, word [rdi+0x2c]",
    "lea     r11d, [rdx+0x2d]",
    "xor     r9d, r9d",
    "sub     eax, edx",
    "mov     dword [rsp+0x34], r11d",
    "cmp     eax, r9d",
    "jle     0x140076160",
    "mov     r9d, dword [rsp+0x68]",
    "mov     rcx, qword [rsp+0x80]",
    "mov     qword [rsp+0x20], rbx",
    "mov     r8, rsi",
    "test    r10b, 0x24",
    "je      0x140076365",
    "or      dword [rdi+0x28], 0x8",
    "mov     r9w, word [rsp+0x30]",
    "mov     r8d, 0x2",
    "jmp     0x1400761c0",
    "mov     r8d, 0x2",
    "cmp     edx, r11d",
    "jl      0x1400761b5",
    "mov     r11d, dword [rsp+0x34]",
    "cmp     dword [rax], r11d",
    "je      0x14007615b",
    "test    byte [rsi+0x64], 0x80",
    "je      0x1400761ab",
    "movzx   eax, word [rdi+0x2c]",
    "mov     rcx, qword [rdi+0x38]",
    "sub     eax, edx",
    "mov     edx, eax",
    "lea     eax, [r11-0x2d]",
    "or      dword [rdi+0x28], 0x12",
    "mov     rbp, qword [rsp+0x128]",
    "mov     edx, dword [rbp+0x44]",
    "call    sub_140075ce8",
    "test    byte [rdi+0x28], 0x20",
    "mov     r10w, word [rsp+0x32]",
    "mov     r9w, word [rsp+0x30]",
    "mov     edx, 0x1",
    "mov     word [rdi+0x1c], ax",
    "mov     r11, rbx",
    "mov     qword [rsp+0x48], rbx",
    "lea     r8d, [rdx+0x1]",
    "je      0x1400763b7",
    "mov     rax, qword [rsp+0x128]",
    "or      dword [rdi+0x28], 0x22",
    "mov     edx, dword [rax+0x44]",
    "call    sub_140075ce8",
    "xor     ecx, ecx",
    "mov     edx, 0x100",
    "mov     word [rdi+0x1a], ax",
    "mov     rax, rbx",
    "mov     qword [rsp+0x58], rbx",
    "mov     r11, rcx",
    "mov     qword [rsp+0x48], rcx",
    "test    word [rbx+0x12], dx",
    "je      0x1400763c6",
    "mov     rax, qword [rsp+0x58]",
    "mov     r11, qword [rsp+0x48]",
    "mov     dword [rdi+0x28], ecx",
    "jmp     0x1400761bb",
    "mov     r8d, 0x2",
    "cmp     word [rsp+0x138], r11w",
    "jne     0x1400761b5",
    "or      dword [rdi+0x28], 0x4",
    "mov     r9w, word [rsp+0x30]",
    "mov     rax, qword [rsi+0x10]",
    "movzx   ecx, word [rsp+0x30]",
    "movzx   r9d, word [rax+rcx*2]",
    "mov     eax, 0xa",
    "cmp     r11w, ax",
    "jg      0x140076183",
    "movsxd  rcx, dword [rax]",
    "call    sub_14001a0b8",
    "movsx   r11d, ax",
    "jmp     0x140076138",
    "add     rcx, 0x8",
    "sub     rdx, rax",
    "jne     0x14007611b",
    "mov     rax, qword [rcx]",
    "cmp     qword [rax], r8",
    "mov     eax, 0x1",
    "cmove   r11d, r9d",
    "xor     ecx, ecx",
    "mov     rax, rcx",
    "mov     qword [rsp+0x58], rcx",
    "jmp     0x1400761d4",
    "movzx   ecx, word [rdi+0x2c]",
    "mov     rax, qword [rdi+0x38]",
    "mov     rax, qword [rax+rcx*8-0x10]",
    "mov     qword [rsp+0x58], rax",
    "jmp     0x1400761d2",
    "mov     r10w, word [rsp+0x32]",
    "mov     r9w, word [rsp+0x30]",
    "mov     rbp, qword [rsp+0x128]",
    "mov     edx, 0x1",
    "lea     r8d, [rdx+0x1]",
    "jmp     0x1400761d4",
    "movzx   r8d, word [rdi+0x2c]",
    "mov     rcx, qword [rsp+0x70]",
    "lea     rax, [rbx+0x40]",
    "inc     r8d",
    "mov     rdx, rdi",
    "mov     qword [rsp+0x48], rax",
    "call    sub_1400756b0",
    "xor     r9d, r9d",
    "cmp     eax, r9d",
    "jne     0x1400765c6",
    "add     word [rdi+0x18], dx",
    "movzx   edx, word [rbx+0x10]",
    "movzx   r8d, word [rdi+0x18]",
    "cmp     dx, cx",
    "jg      0x140076486",
    "movsx   r8d, word [rdi+0x16]",
    "xor     r9d, r9d",
    "mov     dx, r8w",
    "cmp     rax, r9",
    "je      0x1400763ec",
    "mov     edx, 0x1",
    "movzx   edx, word [rsi+0x5e]",
    "movzx   r8d, r9w",
    "mov     eax, edx",
    "sub     eax, ebp",
    "cmp     r8d, eax",
    "lea     r8d, [rbp+0x1]",
    "jne     0x1400761bb",
    "movsx   rcx, r11w",
    "call    sub_14001a0b8",
    "sub     ax, 0x21",
    "xor     eax, eax",
    "jmp     0x140076190",
    "mov     dword [rsp+0x34], r11d",
    "jmp     0x140076160",
    "cmp     qword [rcx], r9",
    "je      0x14007612f",
    "test    byte [rdi+0x28], r8b",
    "je      0x140076453",
    "xor     ecx, ecx",
    "mov     rax, qword [rdi+0x38]",
    "movzx   ecx, word [rdi+0x2c]",
    "mov     r11, qword [rsp+0x48]",
    "mov     r10w, word [rsp+0x32]",
    "lea     edx, [r9+0x1]",
    "mov     r9w, word [rsp+0x30]",
    "mov     qword [rax+rcx*8], r11",
    "add     word [rdi+0x2c], dx",
    "lea     eax, [rdx+0xf]",
    "or      dword [rdi+0x28], eax",
    "mov     word [rdi+0x1c], dx",
    "lea     r8d, [rdx+0x1]",
    "mov     rax, rbx",
    "jmp     0x1400761ca",
    "mov     rax, qword [rsi+0x10]",
    "movzx   ecx, word [rax+r8*2]",
    "sub     cx, word [rax+r8*2-0x2]",
    "add     word [rdi+0x16], cx",
    "movzx   eax, word [rdi+0x16]",
    "mov     ecx, 0x100",
    "test    cx, r10w",
    "je      0x1400764b0",
    "mov     rax, qword [rsi+0x8]",
    "movzx   ecx, r9w",
    "xor     r9d, r9d",
    "cmp     word [rax+rcx*2], r9w",
    "jl      0x140076486",
    "cmp     r11, r9",
    "je      0x140076403",
    "cmp     word [rax+0x10], r9w",
    "jg      0x1400763e8",
    "test    byte [rsi+0x64], 0x8",
    "jne     0x140076282",
    "movsx   ecx, ax",
    "movsx   eax, r9w",
    "lea     edx, [rcx+rax+0xa]",
    "movsx   eax, word [rsp+0x3a]",
    "add     eax, r11d",
    "cmp     edx, eax",
    "jl      0x14007659b",
    "mov     rbp, qword [rsp+0x128]",
    "mov     r10d, dword [rsp+0x34]",
    "add     ax, 0xa",
    "mov     word [rdi+0x16], ax",
    "mov     r10d, dword [rsp+0x34]",
    "sub     dx, r10w",
    "add     word [rdi+0x16], dx",
    "jmp     0x1400764b5",
    "cmp     rax, r9",
    "je      0x14007641f",
    "cmp     word [r11+0x10], r9w",
    "jg      0x1400763ff",
    "lea     edx, [r8-0x14]",
    "add     dx, word [rax+0x10]",
    "jmp     0x1400763ec",
    "bts     ecx, 0xc",
    "jmp     0x140076274",
    "cmp     dx, bp",
    "jne     0x140076270",
    "movzx   ecx, word [rsp+0x138]",
    "movzx   ebx, word [rdi+0x16]",
    "mov     rbp, qword [rsp+0x120]",
    "movzx   r8d, word [rsp+0x60]",
    "lea     eax, [rcx+r10]",
    "mov     rdx, rdi",
    "add     word [rdi+0x14], ax",
    "lea     eax, [rcx+r10]",
    "add     word [rdi+0x16], ax",
    "mov     rcx, qword [rbp+0x8]",
    "call    sub_140075b94",
    "mov     rdx, rdi",
    "mov     rcx, rbp",
    "call    sub_140075954",
    "mov     ecx, 0x10",
    "mov     ebp, eax",
    "mov     eax, 0x2",
    "test    byte [rdi+0x28], al",
    "mov     ax, word [rsp+0x38]",
    "cmovne  bx, ax",
    "mov     word [rdi+0x16], bx",
    "test    byte [rdi+0x28], cl",
    "jne     0x140076597",
    "movzx   edx, word [rdi+0x16]",
    "movzx   ecx, ax",
    "add     dx, 0x10",
    "call    sub_14001a04c",
    "mov     word [rdi+0x14], ax",
    "mov     rax, qword [rbp+0x20]",
    "movsx   ecx, word [rax+0x4a]",
    "movsx   eax, word [rsi+0x5c]",
    "imul    eax, eax, 0xf",
    "cdq     ",
    "idiv    ecx",
    "movzx   ecx, word [rsp+0x3a]",
    "mov     edx, 0x1",
    "add     ax, word [rdi+0x16]",
    "add     dx, ax",
    "call    sub_14001a04c",
    "test    dword [rdi+0x28], 0x140",
    "mov     word [rdi+0x14], ax",
    "jne     0x1400764fe",
    "cmp     rax, r9",
    "mov     eax, r9d",
    "mov     ecx, r9d",
    "setne   cl",
    "cmp     r11, r9",
    "setne   al",
    "add     ecx, eax",
    "mov     eax, 0xa",
    "sub     r8d, ecx",
    "cmp     dx, ax",
    "jge     0x140076442",
    "cmp     word [rax+0x10], r9w",
    "jle     0x14007641f",
    "sub     dx, 0x14",
    "add     dx, word [r11+0x10]",
    "jmp     0x140076403",
    "bts     ecx, 0x10",
    "cmp     byte [rsi+0x62], r11b",
    "je      0x140076270",
    "mov     word [rdi+0x16], ax",
    "movzx   ecx, word [rsi+0x60]",
    "cmp     word [rdi+0x18], cx",
    "jae     0x140076597",
    "movsx   eax, dx",
    "cmp     eax, r8d",
    "cmovl   r8d, eax",
    "mov     word [rdi+0x16], r8w",
    "jmp     0x1400764b0",
    "mov     edx, eax",
    "cmp     r11, r9",
    "je      0x14007641f",
    "cmp     r10w, r8w",
    "je      0x140076282",
    "mov     eax, dword [rsp+0x34]",
    "mov     rdx, qword [rsp+0x128]",
    "mov     rcx, qword [rsp+0x120]",
    "add     ax, word [rsp+0x138]",
    "mov     r8, rsi",
    "movzx   r9d, ax",
    "call    sub_140075e58",
    "mov     ax, word [rsp+0x38]",
    "cmp     word [r11+0x10], r9w",
    "jle     0x14007641f",
    "sub     dx, 0x14"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}