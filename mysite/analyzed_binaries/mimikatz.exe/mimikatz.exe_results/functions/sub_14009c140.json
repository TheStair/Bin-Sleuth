{
  "address": "0x14009c140",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "create new key via CryptAcquireContext",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x10], rdx",
    "mov     dword [rsp+0x8], ecx",
    "push    rbx",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xd0",
    "mov     r14, rdx",
    "mov     ebx, ecx",
    "xor     edi, edi",
    "mov     r12d, edi",
    "mov     dword [rsp+0x50], edi",
    "mov     r15, rdi",
    "mov     qword [r11-0x78], rdi",
    "lea     rax, [rel data_1400e5020]  {u\"Microsoft Base Smart Card Crypto\u2026\"}",
    "mov     qword [r11-0x70], rax",
    "mov     dword [r11-0x68], 0x1",
    "mov     dword [r11-0x64], edi",
    "mov     dword [r11-0x60], edi",
    "mov     qword [r11-0x58], rdi",
    "mov     dword [r11-0x50], edi",
    "lea     rax, [rel data_1400f9bd8]  {u\"LOCAL_MACHINE\"}",
    "mov     qword [rsp+0x20], rax",
    "lea     r9, [rsp+0x48]",
    "lea     r8, [rel data_1401077a8]  {u\"store\"}",
    "call    sub_140013220",
    "mov     qword [rsp+0x20], rdi",
    "lea     r9, [rsp+0x70]",
    "lea     r8, [rel data_1401018a0]  {u\"name\"}",
    "mov     rdx, r14",
    "mov     ecx, ebx",
    "call    sub_140013220",
    "cmp     eax, edi",
    "je      0x14009c8ef",
    "lea     rcx, [rel data_140109ab0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x48]",
    "lea     rcx, [rel data_140109128]  {u\"Cert store     : %s\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x48]",
    "call    sub_1400055dc",
    "or      eax, 0xc000",
    "lea     rcx, [rel data_1400f9d5c]",
    "mov     qword [rsp+0x20], rcx",
    "mov     r9d, eax",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "lea     ecx, [rdi+0xa]",
    "call    qword [rel CertOpenStore]",
    "mov     rsi, rax",
    "mov     qword [rsp+0xc0], rax",
    "cmp     rax, rdi",
    "je      0x14009c8d9",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140109a30]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x14009c8fb",
    "mov     rbx, qword [rsp+0x70]",
    "mov     rdx, rbx",
    "lea     rcx, [rel data_140109158]  {u\"Cert name      : %s\\n\"}",
    "call    sub_14000c030",
    "mov     qword [rsp+0x28], rdi",
    "mov     qword [rsp+0x20], rbx",
    "mov     r9d, 0x80007",
    "xor     r8d, r8d",
    "mov     edx, 0x10001",
    "mov     rcx, rsi",
    "call    qword [rel CertFindCertificateInStore]",
    "mov     rbx, rax",
    "mov     qword [rsp+0x48], rax",
    "cmp     rax, rdi",
    "je      0x14009c8b5",
    "xor     eax, eax",
    "add     rsp, 0xd0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbx",
    "retn    ",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_1401099a0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140109188]  {u\"Cert validity  : \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x18]",
    "lea     r13d, [rdi+0x40]",
    "add     rcx, r13 {_CERT_INFO::NotBefore}",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400f94f0]  {u\" -> \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x18]",
    "add     rcx, 0x48 {_CERT_INFO::NotAfter}",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     r9, [rsp+0x120]",
    "xor     r8d, r8d",
    "lea     edx, [rdi+0x2]",
    "mov     rcx, rbx",
    "call    qword [rel CertGetCertificateContextProperty]",
    "cmp     eax, edi",
    "je      0x14009c5fe",
    "mov     rbx, qword [rsp+0x40]",
    "mov     edx, dword [rsp+0x120]",
    "mov     ecx, r13d",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "mov     qword [rsp+0x70], rax",
    "cmp     rax, rdi",
    "je      0x14009c5fe",
    "mov     rsi, qword [rsp+0x48]",
    "lea     rax, [rel data_1400e5020]  {u\"Microsoft Base Smart Card Crypto\u2026\"}",
    "mov     qword [rsp+0x20], rax",
    "lea     r9, [rsp+0x98]",
    "lea     r8, [rel data_1400f9bc0]",
    "mov     rdx, r14",
    "mov     esi, dword [rsp+0x110]",
    "mov     ecx, esi",
    "call    sub_140013220",
    "call    sub_140013168",
    "mov     r12, rax",
    "cmp     rax, rdi",
    "je      0x14009c88d",
    "lea     r9, [rsp+0x120]",
    "mov     r8, rax",
    "lea     edx, [rdi+0x2]",
    "mov     rcx, rbx",
    "call    qword [rel CertGetCertificateContextProperty]",
    "cmp     eax, edi",
    "je      0x14009c5ee",
    "mov     edx, 0x1",
    "mov     rcx, rsi",
    "call    qword [rel CertCloseStore]",
    "jmp     0x14009c8fb",
    "mov     rsi, qword [rsp+0x48]",
    "mov     r8, rax",
    "mov     r14, qword [rsp+0x98]",
    "mov     rdx, r14",
    "lea     rcx, [rel data_1401096a0]  {u\"Dst provider   : %s\\nDst contain\u2026\"}",
    "call    sub_14000c030",
    "mov     qword [rsp+0x20], rdi",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_1400f8de8]",
    "mov     rdx, qword [rsp+0x118]",
    "mov     ecx, esi",
    "call    sub_140013220",
    "cmp     eax, edi",
    "je      0x14009c73c",
    "mov     rbx, qword [rsp+0x40]",
    "mov     eax, dword [rsi+0x28]",
    "mov     dword [rsp+0xb8], eax",
    "mov     r8, qword [rsi]",
    "mov     rdx, qword [rsi+0x8]",
    "lea     rcx, [rel data_1401091b0]  {u\"Src provider   : %s\\nSrc contain\u2026\"}",
    "call    sub_14000c030",
    "mov     r9d, dword [rsi+0x10]",
    "cmp     r9d, edi",
    "je      0x14009c46f",
    "mov     rcx, rsi",
    "call    qword [rel CertFreeCertificateContext]",
    "mov     rsi, qword [rsp+0xc0]",
    "jmp     0x14009c8c9",
    "mov     r13d, dword [rsp+0xa4]",
    "mov     esi, dword [rsp+0xa0]",
    "mov     rcx, qword [rsp+0x60]",
    "call    sub_140012dc8",
    "mov     r15, rax",
    "cmp     rax, rdi",
    "je      0x14009c73c",
    "cmp     r12d, edi",
    "je      0x14009c89d",
    "xor     r8d, r8d",
    "mov     rdx, qword [rsi+0x8]",
    "lea     rcx, [rsp+0x88]",
    "call    NCryptOpenStorageProvider",
    "cmp     eax, edi",
    "jne     0x14009c5ab",
    "mov     eax, dword [rsi+0x14]",
    "mov     dword [rsp+0x20], eax",
    "mov     r8, qword [rsi+0x8]",
    "mov     rdx, qword [rsi]",
    "lea     rcx, [rsp+0x78]",
    "call    qword [rel CryptAcquireContextW]",
    "cmp     eax, edi",
    "je      0x14009c451",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_1401093b0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rsi, qword [rsp+0x48]",
    "cmp     r15, rdi",
    "je      0x14009c7b1",
    "mov     eax, 0x5",
    "cmp     eax, dword [rel data_140140848]",
    "sbb     ecx, ecx",
    "and     ecx, 0x80",
    "mov     dword [rsp+0x20], ecx",
    "mov     esi, dword [rsp+0xa0]",
    "mov     r9d, esi",
    "mov     r8, r14",
    "xor     edx, edx",
    "lea     rcx, [rsp+0x128]",
    "call    qword [rel CryptAcquireContextW]",
    "cmp     eax, edi",
    "je      0x14009c71e",
    "mov     edx, eax",
    "lea     rcx, [rel data_1401095b0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x40]",
    "mov     eax, dword [rsi+0x14]",
    "mov     dword [rsp+0x20], eax",
    "xor     r9d, r9d",
    "mov     r8, qword [rsi]",
    "lea     rdx, [rsp+0x68]",
    "mov     rcx, qword [rsp+0x88]",
    "call    NCryptOpenKey",
    "cmp     eax, edi",
    "jne     0x14009c589",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_1401093b0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x40]",
    "jmp     0x14009c5f3",
    "lea     r8, [rsp+0x58]",
    "mov     edx, dword [rsi+0x28]",
    "mov     rcx, qword [rsp+0x78]",
    "call    qword [rel CryptGetUserKey]",
    "cmp     eax, edi",
    "je      0x14009c426",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "jmp     0x14009c8a2",
    "lea     rcx, [rel data_140109840]  {u\"Dst Key Import : \"}",
    "call    sub_14000c030",
    "lea     r11, [rsp+0x80]",
    "mov     qword [rsp+0x28], r11",
    "mov     dword [rsp+0x20], edi",
    "xor     r9d, r9d",
    "mov     r8d, dword [rsp+0x120]",
    "mov     rdx, rbx",
    "mov     rcx, qword [rsp+0x128]",
    "call    qword [rel CryptImportKey]",
    "cmp     eax, edi",
    "je      0x14009c84e",
    "xor     r9d, r9d",
    "mov     r8, r15",
    "lea     edx, [r9+0x20]",
    "mov     rcx, qword [rsp+0x128]",
    "call    qword [rel CryptSetProvParam]",
    "cmp     eax, edi",
    "jne     0x14009c7a8",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_1401097b0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     r13d, dword [rsp+0xa4]",
    "jmp     0x14009c74b",
    "xor     r9d, r9d",
    "mov     r8, r15",
    "lea     edx, [r9+0x20]",
    "mov     rcx, qword [rsp+0x128]",
    "call    qword [rel CryptSetProvParam]",
    "cmp     eax, edi",
    "jne     0x14009c70c",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "jmp     0x14009c603",
    "mov     edx, eax",
    "lea     rcx, [rel data_140109540]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x40]",
    "mov     dword [rsp+0x38], edi",
    "lea     rax, [rsp+0x120]",
    "mov     qword [rsp+0x30], rax",
    "mov     dword [rsp+0x28], edi",
    "mov     qword [rsp+0x20], rdi",
    "xor     r9d, r9d",
    "lea     r8, [rel data_140106c68]  {u\"CAPIPRIVATEBLOB\"}",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x68]",
    "call    NCryptExportKey",
    "cmp     eax, edi",
    "jne     0x14009c56a",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140109330]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x40]",
    "lea     rax, [rsp+0x120]",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], rdi",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "lea     r8d, [rdi+0x7]",
    "mov     rcx, qword [rsp+0x58]",
    "call    qword [rel CryptExportKey]",
    "cmp     eax, edi",
    "je      0x14009c400",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140109920]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rsi, qword [rsp+0x48]",
    "jmp     0x14009c882",
    "lea     rcx, [rel data_140109868]  {u\"OK\\nDst Cert Assoc : \"}",
    "call    sub_14000c030",
    "xor     r9d, r9d",
    "mov     rsi, qword [rsp+0x48]",
    "mov     r8, qword [rsi+0x8]",
    "lea     edx, [r9+0x1a]",
    "mov     rcx, qword [rsp+0x80]",
    "call    qword [rel CryptSetKeyParam]",
    "cmp     eax, edi",
    "je      0x14009c82a",
    "mov     rcx, r15",
    "call    qword [rel LocalFree]",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140109700]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "or      r13d, 0x8",
    "mov     dword [rsp+0x20], r13d",
    "mov     r9d, esi",
    "mov     r8, r14",
    "mov     rdx, r12",
    "lea     rcx, [rsp+0x128]",
    "call    qword [rel CryptAcquireContextW]",
    "cmp     eax, edi",
    "je      0x14009c869",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x128]",
    "call    qword [rel CryptReleaseContext]",
    "jmp     0x14009c74b",
    "mov     r13d, edi",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140109700]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x14009c5f3",
    "mov     edx, eax",
    "lea     rcx, [rel data_1401094c0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x40]",
    "mov     edx, dword [rsp+0x120]",
    "mov     ecx, r13d",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "mov     qword [rsp+0x40], rax",
    "cmp     rax, rdi",
    "je      0x14009c57d",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_1401092a0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x40]",
    "mov     edx, dword [rsp+0x120]",
    "mov     ecx, r13d",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "cmp     rax, rdi",
    "je      0x14009c419",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "jmp     0x14009c892",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_1401098a0]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f9538]",
    "call    sub_14000c030",
    "jmp     0x14009c83e",
    "mov     rcx, qword [rsp+0x88]",
    "call    NCryptFreeObject",
    "jmp     0x14009c5be",
    "mov     rcx, qword [rsp+0x68]",
    "call    NCryptFreeObject",
    "jmp     0x14009c59c",
    "mov     dword [rsp+0x38], edi",
    "lea     rax, [rsp+0x120]",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rsp+0x120]",
    "mov     dword [rsp+0x28], eax",
    "mov     qword [rsp+0x20], rbx",
    "xor     r9d, r9d",
    "lea     r8, [rel data_140106c68]  {u\"CAPIPRIVATEBLOB\"}",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x68]",
    "call    NCryptExportKey",
    "mov     r12d, edi",
    "cmp     eax, edi",
    "sete    r12b",
    "mov     dword [rsp+0x50], r12d",
    "cmp     r12d, edi",
    "jne     0x14009c57d",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x78]",
    "call    qword [rel CryptReleaseContext]",
    "jmp     0x14009c5f3",
    "mov     rcx, qword [rsp+0x58]",
    "call    qword [rel CryptDestroyKey]",
    "jmp     0x14009c43f",
    "lea     rax, [rsp+0x120]",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], rbx",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "lea     r8d, [rdi+0x7]",
    "mov     rcx, qword [rsp+0x58]",
    "call    qword [rel CryptExportKey]",
    "mov     r12d, eax",
    "cmp     eax, edi",
    "jne     0x14009c419",
    "mov     rcx, qword [rsp+0x80]",
    "call    qword [rel CryptDestroyKey]",
    "jmp     0x14009c882",
    "mov     edx, eax",
    "lea     rcx, [rel data_140109440]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "jmp     0x14009c57d",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140109210]  {u\"ERROR kuhl_m_crypto_c_cert_to_hw\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "jmp     0x14009c419"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}