{
  "address": "0x140059298",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "contain loop"
  ],
  "disassembly": [
    "mov     dword [rsp+0x20], r9d",
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x98",
    "mov     r13, qword [rcx]",
    "movzx   r10d, byte [rcx+0xba]",
    "mov     r15d, r8d",
    "mov     eax, dword [r13+0x30]",
    "mov     r14, rdx",
    "mov     rdi, rcx",
    "bt      rax, 0xe",
    "jae     0x14005985b",
    "add     rsp, 0x98",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rcx, qword [rdx+0x70]",
    "mov     edx, 0xfff0bdc0",
    "mov     dword [rsp+0xe0], edx",
    "test    rcx, rcx",
    "je      0x14005931a",
    "mov     rax, qword [r13+0x20]",
    "mov     rbx, qword [r14+0x20]",
    "movsxd  rcx, edx",
    "shl     rcx, 0x5",
    "mov     rsi, r10",
    "mov     qword [rsp+0x80], r10",
    "mov     rax, qword [rcx+rax]",
    "mov     qword [rsp+0x68], rax",
    "test    rbx, rbx",
    "je      0x14005967e",
    "mov     rax, qword [r13+0x20]",
    "xor     edx, edx",
    "add     rax, 0x18",
    "mov     dword [rsp+0xe0], edx",
    "cmp     qword [rax], rcx",
    "je      0x14005931a",
    "mov     rcx, qword [r14+0x70]",
    "mov     rdx, qword [r14]",
    "xor     r8d, r8d",
    "add     rcx, 0x50",
    "call    sub_14001a410",
    "mov     rbx, qword [rax+0x10]",
    "test    rbx, rbx",
    "je      0x14005985b",
    "mov     r8, qword [rsp+0x100]",
    "and     qword [rsp+0x60], 0x0",
    "and     qword [rsp+0x70], 0x0",
    "xor     ebp, ebp",
    "mov     dword [rsp+0x50], ebp",
    "test    r8, r8",
    "je      0x1400593cd",
    "add     rax, 0x20",
    "inc     edx",
    "cmp     qword [rax], rcx",
    "jne     0x140059308",
    "mov     r12, qword [rsp+0x100]",
    "cmp     byte [rdi+0xba], bpl",
    "je      0x1400593e7",
    "mov     rcx, qword [r14]",
    "mov     rdx, qword [rbx+0x10]",
    "test    rcx, rcx",
    "jne     0x140059378",
    "mov     dword [rsp+0xe0], edx",
    "cmp     byte [rbx+0x2c], 0x0",
    "jne     0x1400596fd",
    "mov     r9d, dword [rsp+0x108]",
    "mov     r8, r12",
    "mov     rdx, rbx",
    "mov     rcx, r14",
    "call    sub_1400591d0",
    "test    eax, eax",
    "je      0x140059846",
    "mov     r8, qword [rbx+0x10]",
    "mov     r9, rax",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "call    sub_14004df10",
    "mov     rdx, qword [rbx+0x10]",
    "mov     r8, rax",
    "mov     rcx, r13",
    "call    sub_14004de30",
    "jmp     0x1400593f8",
    "test    rdx, rdx",
    "je      0x14005938e",
    "neg     rdx",
    "sbb     eax, eax",
    "jmp     0x14005938a",
    "lea     rax, [rsp+0x78]",
    "lea     r9, [rsp+0xe0]",
    "mov     r8, rbx",
    "mov     rdx, r14",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14005841c",
    "test    eax, eax",
    "je      0x14005973a",
    "mov     eax, dword [r13+0x30]",
    "bt      rax, 0x13",
    "jb      0x1400596fd",
    "mov     rbx, qword [rbx+0x18]",
    "mov     rsi, qword [rsp+0x80]",
    "test    rbx, rbx",
    "jne     0x1400596a6",
    "cmp     qword [rsp+0x80], rbp",
    "je      0x14005985b",
    "lea     rax, [rsp+0x70]",
    "lea     r9, [rsp+0x60]",
    "mov     r8, rbx",
    "mov     rdx, rsi",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14005841c",
    "test    eax, eax",
    "jne     0x1400595c3",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x1400595c3",
    "xor     edx, edx",
    "cmp     dword [rbx+0x28], edx",
    "jle     0x140059664",
    "call    sub_1400192b0",
    "mov     r8, qword [rsp+0x100]",
    "test    eax, eax",
    "je      0x1400593c8",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "call    sub_1400532cc",
    "mov     rbp, qword [rsp+0x78]",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140059836",
    "test    rsi, rsi",
    "je      0x14005985b",
    "cmp     qword [rdi+0x90], 0x0",
    "jne     0x1400596fd",
    "and     qword [rsp+0xe0], 0x0",
    "and     qword [rsp+0x78], 0x0",
    "test    r12, r12",
    "je      0x1400596d8",
    "cmp     byte [r13+0x61], bpl",
    "jne     0x14005985b",
    "mov     r12, qword [rsp+0x70]",
    "test    r12, r12",
    "je      0x140059438",
    "mov     rbx, qword [rbx+0x8]",
    "mov     rax, qword [rsp+0x68]",
    "test    rbx, rbx",
    "jne     0x140059346",
    "lea     rcx, [rbx+0x40]",
    "mov     rax, qword [rsp+0x68]",
    "test    rbp, rbp",
    "je      0x140059846",
    "mov     r8, qword [rbx]",
    "mov     qword [rax+0x28], r8",
    "mov     rcx, qword [rbx]",
    "mov     rdx, qword [rcx]",
    "mov     qword [rax+0x18], rdx",
    "inc     dword [r8+0x3c]",
    "mov     eax, dword [rdi+0x34]",
    "mov     dword [rsi+0x4c], eax",
    "mov     eax, dword [rsp+0xf8]",
    "inc     dword [rdi+0x34]",
    "test    eax, eax",
    "je      0x1400597ad",
    "cmp     byte [r13+0x61], 0x0",
    "jne     0x14005985b",
    "cmp     byte [rdi+0x20], 0x0",
    "je      0x140059846",
    "test    rsi, rsi",
    "jne     0x140059664",
    "mov     eax, dword [rbx+0x40]",
    "mov     dword [rsp+0x58], eax",
    "lea     rax, [rsp+0x58]",
    "mov     rax, r12",
    "jmp     0x140059444",
    "mov     rsi, qword [rsp+0x80]",
    "movsx   eax, word [r14+0x44]",
    "cmp     dword [rcx], eax",
    "jne     0x1400593b8",
    "mov     rdx, rbp",
    "mov     rcx, r13",
    "call    sub_1400169a8",
    "test    r15d, r15d",
    "je      0x140059826",
    "or      dword [rsp+0x38], 0xffffffff",
    "mov     r9, qword [rsp+0xe0]",
    "mov     dword [rsp+0x30], eax",
    "mov     r8, r14",
    "mov     rdx, rsi",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_140058c48",
    "jmp     0x140059846",
    "mov     rcx, rdi",
    "call    sub_140065300",
    "mov     edx, dword [rbx+0x28]",
    "xor     r12d, r12d",
    "mov     ecx, dword [rax+0x90]",
    "mov     rbp, rax",
    "lea     r15d, [rcx+rdx+0x1]",
    "test    edx, edx",
    "jle     0x140059641",
    "inc     dword [rdi+0x34]",
    "test    r15d, r15d",
    "je      0x140059527",
    "mov     r12, qword [rsp+0x60]",
    "xor     r15d, r15d",
    "mov     rbp, rax",
    "xor     ecx, ecx",
    "mov     qword [rsp+0x78], rax",
    "cmp     dword [rbx+0x28], ecx",
    "mov     dword [rsp+0x54], ecx",
    "jle     0x1400594e6",
    "inc     edx",
    "add     rcx, 0x10",
    "cmp     edx, dword [rbx+0x28]",
    "jl      0x14005939d",
    "cmp     dword [rsp+0x108], ebp",
    "jne     0x1400593c8",
    "and     qword [rsi+0x18], 0x0",
    "mov     rdx, rsi",
    "mov     rcx, r13",
    "call    sub_140053434",
    "mov     r9, qword [rsp+0xe0]",
    "xor     eax, eax",
    "mov     dword [rsp+0x38], 0x1",
    "test    r12, r12",
    "mov     dword [rsp+0x30], r15d",
    "mov     r8, r14",
    "setne   al",
    "mov     rdx, rsi",
    "mov     rcx, rdi",
    "movzx   r12d, byte [rax+rbx+0x2d]",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_140058c48",
    "cmp     byte [rbx+0x2c], 0x0",
    "jne     0x14005981e",
    "movzx   r8d, byte [rbx+0x2c]",
    "and     dword [rsp+0x20], 0x0",
    "or      r9d, 0xffffffff",
    "mov     edx, 0x96",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "mov     r14d, dword [rsp+0xf0]",
    "lea     rsi, [rbx+0x40]",
    "mov     rbp, qword [rsp+0x78]",
    "mov     r15, qword [rsp+0x60]",
    "mov     edx, dword [rsp+0xe0]",
    "mov     dword [rsp+0x40], ebp",
    "or      dword [rsp+0x38], 0xffffffff",
    "mov     rbp, qword [rsp+0x78]",
    "mov     dword [rsp+0x30], r15d",
    "mov     r15, qword [rsp+0x60]",
    "mov     r9, r15",
    "mov     r8, rsi",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_140058680",
    "jmp     0x140059531",
    "cmp     qword [r13+0x1a0], 0x0",
    "je      0x1400594c2",
    "or      dword [rbp], 0xffffffff",
    "movsxd  rax, dword [rcx]",
    "cmp     dword [r8+rax*4], ebp",
    "jge     0x1400593c8",
    "jmp     0x140059664",
    "mov     r12, qword [rsp+0x100]",
    "cmp     r12d, 0xa",
    "je      0x14005981e",
    "mov     ecx, dword [rsi]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r15d",
    "lea     r8d, [rcx+r14+0x1]",
    "mov     edx, 0x32",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "inc     r12d",
    "add     rsi, 0x10",
    "cmp     r12d, dword [rbx+0x28]",
    "jl      0x140059610",
    "mov     r14, qword [rsp+0xe8]",
    "test    r12, r12",
    "je      0x14005965c",
    "mov     rax, qword [rdi+0x90]",
    "mov     rcx, rdi",
    "test    rax, rax",
    "cmovne  rcx, rax",
    "mov     rax, qword [rcx+0x170]",
    "test    rax, rax",
    "je      0x140059576",
    "mov     r11d, dword [rsp+0xf8]",
    "test    r11d, r11d",
    "je      0x1400595aa",
    "inc     ecx",
    "add     rbp, 0x4",
    "add     r15, 0x2",
    "cmp     ecx, dword [rbx+0x28]",
    "mov     dword [rsp+0x54], ecx",
    "jl      0x140059463",
    "test    r12, r12",
    "je      0x14005948c",
    "cmp     r12d, 0x8",
    "mov     r12, qword [rsp+0x100]",
    "je      0x140059826",
    "mov     r15d, dword [rsp+0xf0]",
    "mov     rdx, r12",
    "mov     rcx, r13",
    "call    sub_1400169a8",
    "jmp     0x14005965c",
    "mov     eax, dword [rsp+0x50]",
    "mov     edx, dword [rsp+0xe0]",
    "mov     r9, r15",
    "mov     dword [rsp+0x40], eax",
    "mov     dword [rsp+0x38], 0x1",
    "mov     dword [rsp+0x30], r11d",
    "mov     r8, rsi",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_140058680",
    "mov     rax, qword [rax]",
    "cmp     rax, qword [rbx+0x30]",
    "jne     0x14005956a",
    "movsx   eax, word [r14+0x44]",
    "cmp     dword [rbp], eax",
    "jne     0x140059471",
    "mov     r12, qword [rsp+0x70]",
    "mov     ebp, dword [rsp+0x50]",
    "mov     r15d, dword [rsp+0xf0]",
    "movsx   ecx, word [rsi+0x44]",
    "mov     rax, qword [r12+0x8]",
    "movsx   ecx, word [rax+r15]",
    "jmp     0x140059490",
    "mov     rax, qword [rdi+0x90]",
    "mov     rcx, rdi",
    "test    rax, rax",
    "cmovne  rcx, rax",
    "mov     byte [rcx+0x21], 0x1",
    "jmp     0x140059826",
    "cmp     rax, qword [rbx+0x38]",
    "jne     0x140059576",
    "cmp     byte [rbx+0x2d], 0x8",
    "je      0x1400595aa",
    "mov     rax, qword [rsi+0x8]",
    "mov     r9d, dword [rsp+0xe0]",
    "mov     rdx, qword [rsi]",
    "movsxd  r8, ecx",
    "mov     rcx, rdi",
    "shl     r8, 0x5",
    "mov     r8, qword [r8+rax]",
    "call    sub_14004d970",
    "xor     ecx, ecx",
    "cmp     eax, 0x2",
    "sete    cl",
    "mov     dword [rsp+0x50], ecx",
    "mov     ecx, dword [rsp+0x54]",
    "cmp     byte [rbx+0x2e], 0x8",
    "je      0x1400595aa"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}