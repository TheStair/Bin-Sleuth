{
  "address": "0x140068e28",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], r8",
    "mov     dword [rsp+0x10], edx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x58",
    "mov     r12, qword [rcx+0x10]",
    "mov     rbp, qword [r8+0x30]",
    "xor     esi, esi",
    "and     dword [rsp+0x30], esi",
    "xor     r13d, r13d",
    "cmp     dword [r8+0x38], esi",
    "mov     qword [rsp+0x40], r12",
    "mov     rdi, r8",
    "mov     rbx, rcx",
    "mov     dword [rsp+0x34], r13d",
    "mov     byte [r8], 0x1",
    "jle     0x140069093",
    "cmp     dword [rdi+0x2c], 0x0",
    "je      0x1400690b9",
    "mov     rax, qword [rbp]",
    "xor     r13d, r13d",
    "bt      dword [rax+0x4], 0x18",
    "mov     r14, qword [rax+0x20]",
    "mov     qword [rsp+0x38], r14",
    "jae     0x140068edc",
    "mov     rsi, qword [rdi+0x20]",
    "xor     ebp, ebp",
    "cmp     dword [rdi+0x2c], ebp",
    "jle     0x1400690e2",
    "mov     esi, edx",
    "test    edx, edx",
    "je      0x1400690b9",
    "test    r14, r14",
    "je      0x140068f19",
    "mov     rax, qword [rax+0x40]",
    "mov     r15, qword [rax+0x48]",
    "cmp     dword [rdi+0x2c], r13d",
    "je      0x140068ec1",
    "mov     byte [rdi], 0x0",
    "test    r13d, r13d",
    "je      0x140069100",
    "add     rsi, 0x18",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, esi",
    "lea     edx, [r9+0x12]",
    "mov     rcx, r12",
    "call    sub_140032364",
    "mov     r13d, eax",
    "and     dword [rsp+0xa0], 0x0",
    "xor     r15d, r15d",
    "mov     dword [rsp+0xb8], r15d",
    "mov     r15d, dword [r14]",
    "mov     rcx, rbx",
    "mov     edx, r15d",
    "mov     dword [rsp+0xa0], r15d",
    "call    sub_140049624",
    "xor     r9d, r9d",
    "mov     rdx, r14",
    "mov     rcx, rbx",
    "mov     r8d, eax",
    "mov     byte [rsp+0x20], 0x1",
    "mov     r15d, eax",
    "mov     dword [rsp+0xb8], eax",
    "call    sub_140047f5c",
    "jmp     0x140068f2c",
    "dec     dword [rbx+0x44]",
    "mov     r13d, dword [rbx+0x44]",
    "mov     r9d, 0x10",
    "mov     rdx, r15",
    "mov     rcx, rbx",
    "mov     r8d, r13d",
    "call    sub_1400485c0",
    "mov     rax, qword [rbp+0x8]",
    "test    byte [rax+0x4], 0x20",
    "je      0x140068ec1",
    "add     rsp, 0x58",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     edx, r13d",
    "mov     rcx, r12",
    "call    sub_140032d34",
    "mov     ecx, dword [r12+0x90]",
    "mov     dword [rax+0x8], ecx",
    "mov     r8d, dword [rsi-0x4]",
    "mov     rdx, qword [rsi]",
    "mov     rcx, rbx",
    "call    sub_140047e2c",
    "inc     ebp",
    "add     rsi, 0x20",
    "cmp     ebp, dword [rdi+0x2c]",
    "jl      0x1400690c8",
    "mov     rax, qword [rbp+0x8]",
    "test    byte [rax+0x4], 0x20",
    "je      0x140068fed",
    "test    r13d, r13d",
    "jne     0x140068f3e",
    "cmp     dword [rbp+0x14], 0x0",
    "jl      0x140068f57",
    "test    esi, esi",
    "jne     0x140068ea9",
    "mov     eax, dword [rbp+0x10]",
    "mov     r14d, dword [rsp+0xb8]",
    "xor     r8d, r8d",
    "mov     edx, 0x9a",
    "mov     rcx, r12",
    "mov     r9d, r14d",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     rdx, qword [rbp+0x8]",
    "mov     r8d, 0xfffffff8",
    "mov     rcx, r12",
    "call    sub_140032cc0",
    "movsxd  r11, dword [r12+0x90]",
    "test    r11d, r11d",
    "jle     0x140069049",
    "mov     rdi, qword [rsp+0x38]",
    "mov     r12d, dword [rsp+0xa0]",
    "xor     r14d, r14d",
    "xor     r15d, r15d",
    "add     rdi, 0x8",
    "mov     edx, dword [rbp+0x14]",
    "mov     r9d, 0x1",
    "mov     r8d, r13d",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140063908",
    "dec     dword [rbx+0x44]",
    "mov     r13d, dword [rbx+0x44]",
    "and     dword [rsp+0x20], r13d",
    "mov     r8d, edx",
    "mov     r9d, esi",
    "mov     edx, 0x4e",
    "mov     rcx, r12",
    "call    sub_140032364",
    "inc     dword [rbx+0x38]",
    "mov     esi, dword [rbx+0x38]",
    "mov     r8d, dword [rsp+0xa0]",
    "mov     edx, r14d",
    "mov     rcx, rbx",
    "call    sub_140049678",
    "test    r13d, r13d",
    "je      0x14006906c",
    "mov     rax, qword [r12+0x88]",
    "movzx   r9d, byte [rsp+0xa0]",
    "lea     rcx, [r11+r11*2]",
    "mov     word [rax+rcx*8-0x16], r9w",
    "mov     rdi, qword [rsp+0xb0]",
    "mov     r12, qword [rsp+0x40]",
    "test    r14, r14",
    "jne     0x140068fb4",
    "mov     rdx, qword [rdi]",
    "mov     rcx, rbx",
    "call    sub_1400430d4",
    "inc     r15d",
    "add     rdi, 0x28",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x140068f7c",
    "mov     ecx, dword [rsp+0x30]",
    "mov     edx, dword [rsp+0xa8]",
    "add     rbp, 0x18",
    "inc     ecx",
    "cmp     ecx, dword [rdi+0x38]",
    "mov     dword [rsp+0x30], ecx",
    "jl      0x140068e70",
    "mov     edx, r13d",
    "mov     rcx, r12",
    "call    sub_14003278c",
    "test    esi, esi",
    "jne     0x140068fc3",
    "mov     rax, qword [rbx]",
    "mov     r14, qword [rax+0x10]",
    "cmp     r15d, r12d",
    "jge     0x140068f9b",
    "test    esi, esi",
    "jne     0x14006909f",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, esi",
    "lea     edx, [r9+0x52]",
    "mov     rcx, r12",
    "call    sub_140032364",
    "mov     r9d, 0xfffffffe",
    "mov     r8, r14",
    "mov     edx, eax",
    "mov     rcx, r12",
    "call    sub_140032c40",
    "cmp     dword [rdi+0x2c], esi",
    "je      0x140068fc3",
    "mov     r13d, dword [rsp+0x34]",
    "inc     dword [rbx+0x38]",
    "mov     esi, dword [rbx+0x38]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}