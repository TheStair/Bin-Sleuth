{
  "address": "0x140028898",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "mov     dword [rax+0x10], edx",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "mov     r13b, r9b",
    "mov     ebx, r8d",
    "mov     rsi, rcx",
    "mov     r9d, edx",
    "cmp     r13b, 0x4",
    "jne     0x14002893d",
    "xor     ebp, ebp",
    "cmp     byte [rcx], bpl",
    "jne     0x140028952",
    "mov     r8, qword [rcx+0x50]",
    "movzx   eax, byte [r8+0x2]",
    "movzx   ecx, byte [r8+0x1]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [r8+0x3]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [r8]",
    "shl     eax, 0x18",
    "or      ecx, eax",
    "cmp     ecx, edx",
    "je      0x1400288ff",
    "movzx   r14d, word [rsi+0x18]",
    "mov     r12, rbp",
    "cmp     r14, rbp",
    "jle     0x140028a62",
    "call    sub_1400275e0",
    "cmp     eax, ebp",
    "jne     0x14002891f",
    "mov     eax, ebx",
    "mov     byte [r8+0x3], bl",
    "shr     eax, 0x18",
    "mov     byte [r8], al",
    "mov     eax, ebx",
    "shr     eax, 0x10",
    "mov     byte [r8+0x1], al",
    "mov     eax, ebx",
    "shr     eax, 0x8",
    "mov     byte [r8+0x2], al",
    "mov     ecx, 0x105a5",
    "cmp     ebp, r14d",
    "jne     0x14002891d",
    "mov     rcx, qword [rsi+0x60]",
    "movzx   eax, byte [rcx+r12*2]",
    "shl     eax, 0x8",
    "movsxd  rdi, eax",
    "movzx   eax, byte [rcx+r12*2+0x1]",
    "or      rdi, rax",
    "movzx   eax, word [rsi+0x1a]",
    "and     rdi, rax",
    "add     rdi, qword [rsi+0x50]",
    "cmp     r13b, 0x3",
    "jne     0x140028a21",
    "lea     r11, [rsp+0x40]",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x40]",
    "mov     rsi, qword [r11+0x48]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     r9d, dword [rsp+0x78]",
    "xor     eax, eax",
    "cmp     r13b, 0x5",
    "jne     0x140028aef",
    "movzx   eax, byte [rdi+0x2]",
    "movzx   ecx, byte [rdi+0x1]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdi+0x3]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdi]",
    "shl     eax, 0x18",
    "or      ecx, eax",
    "cmp     ecx, r9d",
    "jne     0x140028ad6",
    "lea     r8, [rsp+0x20]",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    qword [rsi+0x80]",
    "movzx   r11d, word [rsp+0x34]",
    "cmp     r11d, dword [rsp+0x30]",
    "jae     0x140028ad1",
    "mov     ecx, 0x105ca",
    "jmp     0x1400288f8",
    "mov     r8, qword [rsi+0x50]",
    "movzx   eax, byte [rsi+0x9]",
    "add     eax, 0x8",
    "movsxd  rdx, eax",
    "movzx   eax, byte [rdx+r8+0x2]",
    "movzx   ecx, byte [rdx+r8+0x1]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdx+r8]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdx+r8+0x3]",
    "or      ecx, eax",
    "cmp     ecx, r9d",
    "jne     0x140028aef",
    "inc     r12",
    "inc     ebp",
    "cmp     r12, r14",
    "jge     0x140028a62",
    "mov     eax, ebx",
    "mov     byte [rdi+0x3], bl",
    "shr     eax, 0x18",
    "mov     byte [rdi], al",
    "mov     eax, ebx",
    "shr     eax, 0x10",
    "mov     byte [rdi+0x1], al",
    "mov     eax, ebx",
    "shr     eax, 0x8",
    "mov     byte [rdi+0x2], al",
    "mov     r9d, dword [rsp+0x78]",
    "mov     rax, qword [rsi+0x48]",
    "movzx   edx, word [rsp+0x36]",
    "mov     ecx, dword [rax+0x34]",
    "add     rdx, rdi",
    "add     rcx, qword [rsi+0x50]",
    "cmp     rdx, rcx",
    "ja      0x140028ae5",
    "call    sub_140084e38",
    "jmp     0x14002891f",
    "mov     eax, ebx",
    "mov     byte [rdx+r8+0x3], bl",
    "shr     eax, 0x18",
    "mov     byte [rdx+r8], al",
    "mov     eax, ebx",
    "shr     eax, 0x10",
    "mov     byte [rdx+r8+0x1], al",
    "mov     eax, ebx",
    "shr     eax, 0x8",
    "mov     byte [rdx+r8+0x2], al",
    "jmp     0x14002891d",
    "jmp     0x140028963",
    "mov     ecx, 0x105b8",
    "jmp     0x1400288f8",
    "movzx   eax, byte [rdx-0x2]",
    "movzx   ecx, byte [rdx-0x3]",
    "mov     r9d, dword [rsp+0x78]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdx-0x4]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdx-0x1]",
    "or      ecx, eax",
    "cmp     r9d, ecx",
    "jne     0x140028ad6",
    "movzx   ecx, word [rsp+0x36]",
    "mov     eax, ebx",
    "shr     eax, 0x18",
    "mov     byte [rcx+rdi-0x1], bl",
    "mov     byte [rcx+rdi-0x4], al",
    "mov     eax, ebx",
    "shr     eax, 0x10",
    "mov     byte [rcx+rdi-0x3], al",
    "mov     eax, ebx",
    "shr     eax, 0x8",
    "mov     byte [rcx+rdi-0x2], al",
    "jmp     0x140028a62"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}