{
  "address": "0x14004bb00",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x20], r9",
    "mov     dword [rsp+0x18], r8d",
    "mov     dword [rsp+0x10], edx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x58",
    "mov     rdi, qword [rcx]",
    "movsxd  rbx, edx",
    "mov     r13, rcx",
    "mov     qword [rsp+0x30], rdi",
    "call    sub_140065300",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x14004bc9c",
    "add     rsp, 0x58",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     r14d, dword [rsp+0xa8]",
    "mov     rsi, qword [rsp+0xb8]",
    "shl     rbx, 0x5",
    "add     rbx, qword [rdi+0x20]",
    "xor     ebp, ebp",
    "lea     rdi, [rel data_1400d7338]",
    "mov     r8d, dword [rax+0x38]",
    "mov     byte [rsp+rbp+0xa0], 0x0",
    "mov     dword [rsp+rbp*4+0x38], r8d",
    "test    rsi, rsi",
    "je      0x14004bbef",
    "mov     rax, qword [rdi]",
    "test    rax, rax",
    "je      0x14004bc04",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r14d",
    "mov     edx, 0x89",
    "mov     rcx, r12",
    "call    sub_140032364",
    "mov     rax, qword [rsp+0xc0]",
    "mov     r8, qword [rbx]",
    "lea     rdx, [rel data_1400f5520]  {\"DELETE FROM %Q.%s WHERE %s=%Q\"}",
    "mov     r9, r15",
    "mov     rcx, r13",
    "mov     qword [rsp+0x28], rsi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004dd58",
    "jmp     0x14004bc04",
    "lea     rax, [rel data_1400d7368]",
    "add     rdi, 0x10",
    "inc     rbp",
    "cmp     rdi, rax",
    "jl      0x14004bb5e",
    "mov     r8, qword [rbx]",
    "lea     rdx, [rel data_1400f5508]  {\"CREATE TABLE %Q.%s(%s)\"}",
    "mov     r9, r15",
    "mov     rcx, r13",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004dd58",
    "mov     r11d, dword [r13+0x7c]",
    "mov     byte [rsp+rbp+0xa0], 0x10",
    "mov     dword [rsp+rbp*4+0x38], r11d",
    "jmp     0x14004bc04",
    "mov     r15, qword [rdi-0x8]",
    "mov     r8, qword [rbx]",
    "mov     rcx, qword [rsp+0x30]",
    "mov     rdx, r15",
    "call    sub_14004de30",
    "test    rax, rax",
    "jne     0x14004bbb0",
    "cmp     qword [rel data_1400d7338], 0x0",
    "mov     r14d, dword [rsp+0xb0]",
    "lea     rsi, [rel data_1400d7338]",
    "je      0x14004bc9c",
    "mov     ebp, dword [rsp+0xa8]",
    "lea     rbx, [rsp+0xa0]",
    "lea     rdi, [rsp+0x38]",
    "add     rsi, 0x10",
    "inc     r14d",
    "add     rdi, 0x4",
    "inc     rbx",
    "cmp     qword [rsi], 0x0",
    "jne     0x14004bc48",
    "mov     rax, qword [r12+0x88]",
    "movzx   edx, byte [rbx]",
    "lea     rcx, [r11+r11*2]",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     r9d, dword [rdi]",
    "mov     r8d, r14d",
    "mov     edx, 0x62",
    "mov     rcx, r12",
    "mov     dword [rsp+0x28], 0x3",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032678",
    "movsxd  r11, dword [r12+0x90]",
    "test    r11d, r11d",
    "jle     0x14004bc88"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}