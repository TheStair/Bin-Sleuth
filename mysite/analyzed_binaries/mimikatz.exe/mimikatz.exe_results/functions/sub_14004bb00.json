{
  "address": "0x14004bb00",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x20 {arg_20}], r9",
    "mov     dword [rsp+0x18 {arg_18}], r8d",
    "mov     dword [rsp+0x10 {arg_10}], edx",
    "push    rbx {__saved_rbx}",
    "push    rbp {__saved_rbp}",
    "push    rsi {__saved_rsi}",
    "push    rdi {__saved_rdi}",
    "push    r12 {__saved_r12}",
    "push    r13 {__saved_r13}",
    "push    r14 {__saved_r14}",
    "push    r15 {__saved_r15}",
    "sub     rsp, 0x58",
    "mov     rdi, qword [rcx]",
    "movsxd  rbx, edx",
    "mov     r13, rcx",
    "mov     qword [rsp+0x30 {var_68}], rdi",
    "call    sub_140065300",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x14004bc9c",
    "add     rsp, 0x58",
    "pop     r15 {__saved_r15}",
    "pop     r14 {__saved_r14}",
    "pop     r13 {__saved_r13}",
    "pop     r12 {__saved_r12}",
    "pop     rdi {__saved_rdi}",
    "pop     rsi {__saved_rsi}",
    "pop     rbp {__saved_rbp}",
    "pop     rbx {__saved_rbx}",
    "retn     {__return_addr}",
    "mov     r14d, dword [rsp+0xa8 {arg_10}]",
    "mov     rsi, qword [rsp+0xb8 {arg_20}]",
    "shl     rbx, 0x5",
    "add     rbx, qword [rdi+0x20]",
    "xor     ebp, ebp  {0x0}",
    "lea     rdi, [rel data_1400d7338]",
    "mov     r8d, dword [rax+0x38]",
    "mov     byte [rsp+rbp+0xa0 {arg_8}], 0x0",
    "mov     dword [rsp+rbp*4+0x38 {var_60}], r8d",
    "test    rsi, rsi",
    "je      0x14004bbef",
    "mov     rax, qword [rdi]",
    "test    rax, rax",
    "je      0x14004bc04",
    "and     dword [rsp+0x20 {var_78}], 0x0",
    "mov     r9d, r14d",
    "mov     edx, 0x89",
    "mov     rcx, r12",
    "call    sub_140032364",
    "mov     rax, qword [rsp+0xc0 {arg5}]",
    "mov     r8, qword [rbx]",
    "lea     rdx, [rel data_1400f5520]  {\"DELETE FROM %Q.%s WHERE %s=%Q\"}",
    "mov     r9, r15",
    "mov     rcx, r13",
    "mov     qword [rsp+0x28 {var_70}], rsi",
    "mov     qword [rsp+0x20 {var_78}], rax",
    "call    sub_14004dd58",
    "jmp     0x14004bc04",
    "lea     rax, [rel data_1400d7368]",
    "add     rdi, 0x10",
    "inc     rbp",
    "cmp     rdi, rax",
    "jl      0x14004bb5e",
    "mov     r8, qword [rbx]",
    "lea     rdx, [rel data_1400f5508]  {\"CREATE TABLE %Q.%s(%s)\"}",
    "mov     r9, r15",
    "mov     rcx, r13",
    "mov     qword [rsp+0x20 {var_78}], rax",
    "call    sub_14004dd58",
    "mov     r11d, dword [r13+0x7c]",
    "mov     byte [rsp+rbp+0xa0 {arg_8}], 0x10",
    "mov     dword [rsp+rbp*4+0x38 {var_60}], r11d",
    "jmp     0x14004bc04",
    "mov     r15, qword [rdi-0x8]",
    "mov     r8, qword [rbx]",
    "mov     rcx, qword [rsp+0x30 {var_68}]",
    "mov     rdx, r15",
    "call    sub_14004de30",
    "test    rax, rax",
    "jne     0x14004bbb0",
    "cmp     qword [rel data_1400d7338], 0x0",
    "mov     r14d, dword [rsp+0xb0 {arg_18}]",
    "lea     rsi, [rel data_1400d7338]",
    "je      0x14004bc9c  {0x0}",
    "mov     ebp, dword [rsp+0xa8 {arg_10}]",
    "lea     rbx, [rsp+0xa0 {arg_8}]",
    "lea     rdi, [rsp+0x38 {var_60}]",
    "add     rsi, 0x10",
    "inc     r14d",
    "add     rdi, 0x4",
    "inc     rbx",
    "cmp     qword [rsi], 0x0",
    "jne     0x14004bc48",
    "mov     rax, qword [r12+0x88]",
    "movzx   edx, byte [rbx]",
    "lea     rcx, [r11+r11*2]",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     r9d, dword [rdi]",
    "mov     r8d, r14d",
    "mov     edx, 0x62",
    "mov     rcx, r12",
    "mov     dword [rsp+0x28 {var_70}], 0x3",
    "mov     dword [rsp+0x20 {var_78_1}], ebp",
    "call    sub_140032678",
    "movsxd  r11, dword [r12+0x90]",
    "test    r11d, r11d",
    "jle     0x14004bc88"
  ],
  "high_level_IL": [
    "void* rdi = *arg1",
    "int64_t* result",
    "int512_t zmm0",
    "int512_t zmm1",
    "result, zmm0, zmm1 = sub_140065300(arg1)",
    "int64_t* result_1 = result",
    "if (result != 0)",
    "int64_t* rbx_2 = (sx.q(arg2) << 5) + *(rdi + 0x20)",
    "int64_t rbp_1 = 0",
    "int64_t var_70",
    "void var_60",
    "char const (** const i)[0xd] = &data_1400d7338",
    "while (i s< &data_1400d7368)",
    "void* rax = sub_14004de30(rdi, i[-1], *rbx_2)",
    "int32_t var_78",
    "if (rax != 0)",
    "int32_t r8_2 = *(rax + 0x38)",
    "*(&arg_8 + rbp_1) = 0",
    "*(&var_60 + (rbp_1 << 2)) = r8_2",
    "if (arg4 == 0)",
    "var_78 = 0",
    "result, zmm0, zmm1 = sub_140032364(result_1, 0x89, r8_2, arg2, zmm1, 0)",
    "var_70 = arg4",
    "var_78.q = arg5",
    "result, zmm0, zmm1 = sub_14004dd58(arg1, \"DELETE FROM %Q.%s WHERE %s=%Q\", *rbx_2, zmm0)",
    "result = *i",
    "if (result != 0)",
    "var_78.q = result",
    "result, zmm0, zmm1 = sub_14004dd58(arg1, \"CREATE TABLE %Q.%s(%s)\", *rbx_2, zmm0)",
    "int32_t r11_1 = *(arg1 + 0x7c)",
    "*(&arg_8 + rbp_1) = 0x10",
    "*(&var_60 + (rbp_1 << 2)) = r11_1",
    "i = &i[2]",
    "rbp_1 += 1",
    "int32_t r14_2 = arg3",
    "char const (** const rsi_2)[0xd] = &data_1400d7338",
    "void* rbx_3 = &arg_8",
    "void* rdi_1 = &var_60",
    "var_70.d = 3",
    "int32_t var_78_1 = arg2",
    "result = sub_140032678(result_1, 0x62, r14_2, *rdi_1)",
    "int64_t r11_2 = sx.q(result_1[0x12].d)",
    "if (r11_2.d s> 0)",
    "result = result_1[0x11]",
    "*(&result[r11_2 * 3] - 0x16) = zx.w(*rbx_3)",
    "rsi_2 = &rsi_2[2]",
    "r14_2 += 1",
    "rdi_1 += 4",
    "rbx_3 += 1",
    "do while (*rsi_2 != 0)",
    "return result"
  ]
}