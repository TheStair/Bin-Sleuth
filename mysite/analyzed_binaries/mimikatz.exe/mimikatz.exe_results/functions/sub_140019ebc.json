{
  "address": "0x140019ebc",
  "rules": [
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rdi",
    "sub     rsp, 0x20",
    "mov     rdi, rdx",
    "mov     eax, r8d",
    "lea     ebx, [r8-0x1]",
    "cdq     ",
    "sub     eax, edx",
    "sar     eax, 0x1",
    "inc     eax",
    "movsxd  rdx, eax",
    "call    sub_140016c18",
    "mov     r11, rax",
    "test    rax, rax",
    "je      0x140019f5a",
    "mov     rax, r11",
    "mov     rbx, qword [rsp+0x30]",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    ",
    "xor     r10d, r10d",
    "movsxd  r9, ebx",
    "test    ebx, ebx",
    "jle     0x140019f4a",
    "mov     eax, r10d",
    "cdq     ",
    "sub     eax, edx",
    "sar     eax, 0x1",
    "movsxd  rcx, eax",
    "mov     byte [rcx+r11], 0x0",
    "inc     rdi",
    "dec     r9",
    "shr     r9, 0x1",
    "inc     r9",
    "movsx   edx, byte [rdi-0x1]",
    "movsx   r8d, byte [rdi]",
    "mov     al, 0x7",
    "mov     ecx, r8d",
    "add     rdi, 0x2",
    "sar     ecx, 0x6",
    "and     cl, 0x1",
    "imul    cl",
    "mov     ecx, edx",
    "sar     ecx, 0x6",
    "sub     r8b, al",
    "and     cl, 0x1",
    "mov     al, 0x7",
    "and     r8b, 0xf",
    "imul    cl",
    "sub     dl, al",
    "mov     eax, r10d",
    "shl     dl, 0x4",
    "add     r10d, 0x2",
    "or      r8b, dl",
    "cdq     ",
    "sub     eax, edx",
    "sar     eax, 0x1",
    "sub     r9, 0x1",
    "movsxd  rcx, eax",
    "mov     byte [rcx+r11], r8b",
    "jne     0x140019efd"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}