{
  "address": "0x1400c5084",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "sub     rsp, 0x20",
    "xor     esi, esi",
    "mov     rbx, rcx",
    "cmp     word [rcx], si",
    "je      0x1400c51d6",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rsi, qword [rsp+0x48]",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    ",
    "cmp     qword [rcx+0x8], rsi",
    "je      0x1400c51d6",
    "movzx   edx, word [rcx]",
    "lea     ecx, [rsi+0x40]",
    "add     rdx, 0x2",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "cmp     rax, rsi",
    "je      0x1400c51d6",
    "movzx   r8d, word [rbx]",
    "mov     rdx, qword [rbx+0x8]",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     rcx, rdi",
    "call    qword [rel CredIsMarshaledCredentialW]",
    "cmp     eax, esi",
    "je      0x1400c51cd",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_14012f0f0]  {u\"\\n\\t * Marshaled: \"}",
    "call    sub_14000c030",
    "lea     r8, [rsp+0x38]",
    "lea     rdx, [rsp+0x30]",
    "mov     rcx, rdi",
    "call    qword [rel CredUnmarshalCredentialW]",
    "cmp     eax, esi",
    "je      0x1400c51b9",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14012f260]  {u\"ERROR kuhl_m_sekurlsa_trymarshal\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x30]",
    "lea     ebx, [rsi+0x1]",
    "mov     ecx, edx",
    "sub     ecx, ebx",
    "je      0x1400c5171",
    "mov     rax, qword [rsp+0x38]",
    "mov     edx, dword [rax]",
    "cmp     edx, 0x18",
    "jne     0x1400c51a0",
    "sub     ecx, ebx",
    "je      0x1400c515b",
    "lea     rcx, [rel data_14012f140]  {u\"ERROR kuhl_m_sekurlsa_trymarshal\u2026\"}",
    "lea     rcx, [rel data_14012f118]  {u\"[Cert] SHA1:\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x38]",
    "add     rcx, 0x4",
    "xor     r8d, r8d",
    "lea     edx, [r8+0x14]",
    "mov     rdx, qword [rsp+0x38]",
    "lea     rcx, [rel data_14012f1c0]  {u\"[UsernameTarget] %s\\n\"}",
    "mov     rdx, qword [rdx]",
    "call    sub_14000c030",
    "jmp     0x1400c51ac",
    "sub     ecx, ebx",
    "je      0x1400c513f",
    "mov     rcx, qword [rsp+0x38]",
    "call    qword [rel CredFree]",
    "jmp     0x1400c51cd",
    "lea     rcx, [rel data_14012f1f0]  {u\"[BinaryBlob] \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x38]",
    "mov     r8d, ebx",
    "mov     edx, dword [rcx]",
    "mov     rcx, qword [rcx+0x8]",
    "jmp     0x1400c5199",
    "cmp     ecx, ebx",
    "je      0x1400c5131",
    "call    sub_140012f68",
    "jmp     0x1400c51ac",
    "lea     rcx, [rel data_14012f210]  {u\"[UsernameForPacked] ?\"}",
    "call    sub_14000c030",
    "jmp     0x1400c51ac",
    "lea     rcx, [rel data_14012f240]  {u\"[?] ? %u ?\"}",
    "jmp     0x1400c51a7",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}