{
  "address": "0x14007a71c",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0xe0",
    "mov     rbx, r8",
    "mov     r8, qword [r8]",
    "mov     rbp, r9",
    "mov     rdi, rcx",
    "test    r8, r8",
    "je      0x14007a7e1",
    "mov     r8, rdx",
    "mov     rdx, rbx",
    "call    sub_14007b43c",
    "cmp     byte [rbx+0x20], 0x0",
    "jne     0x14007a7e1",
    "bt      dword [rbp+0x4], 0x10",
    "jae     0x14007a9e5",
    "cmp     qword [rbx+0x28], 0x0",
    "jne     0x14007a804",
    "call    sub_14007a6c4",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x14007a9e9",
    "mov     qword [rbx+0x50], rbp",
    "cmp     qword [rbx+0x48], 0x0",
    "mov     rsi, qword [rdi]",
    "je      0x14007a844",
    "mov     rax, qword [rbx+0x18]",
    "test    rax, rax",
    "je      0x14007a812",
    "cmp     qword [rbx+0x30], 0x0",
    "je      0x14007a81b",
    "lea     r11, [rsp+0xe0]",
    "mov     rbx, qword [r11+0x10]",
    "mov     rbp, qword [r11+0x18]",
    "mov     rsi, qword [r11+0x20]",
    "mov     rsp, r11",
    "pop     rdi",
    "retn    ",
    "mov     rdx, qword [rax+0x10]",
    "mov     rcx, qword [rdi]",
    "xor     r8d, r8d",
    "call    sub_140044284",
    "xor     r8d, r8d",
    "mov     qword [rbx+0x10], rax",
    "mov     rdx, qword [rsi+0x18]",
    "mov     rcx, qword [rdi]",
    "call    sub_140044284",
    "mov     qword [rbx+0x18], rax",
    "mov     rdx, qword [rsi+0x28]",
    "test    rdx, rdx",
    "je      0x14007a7a2",
    "mov     r9d, 0x4c",
    "lea     rax, [rel data_1400d87a0]  {\"row_number\"}",
    "mov     dword [rsp+0x40], ecx",
    "mov     qword [rsp+0x20], rax",
    "lea     r8d, [r9+0xe]",
    "lea     edx, [r9+0x9]",
    "lea     rax, [rel data_1400d87b0]  {\"dense_rank\"}",
    "mov     dword [rsp+0x58], ecx",
    "lea     ecx, [rdx+0x7]",
    "mov     qword [rsp+0x38], rax",
    "lea     rax, [rel data_1400d87bc]  {\"rank\"}",
    "mov     dword [rsp+0x30], edx",
    "mov     qword [rsp+0x50], rax",
    "lea     rax, [rel data_1400d87c8]  {\"percent_rank\"}",
    "mov     dword [rsp+0x48], edx",
    "mov     qword [rsp+0x68], rax",
    "lea     rax, [rel data_1400d87d8]  {\"cume_dist\"}",
    "mov     dword [rsp+0x60], edx",
    "mov     qword [rsp+0x80], rax",
    "lea     rax, [rel data_1400d87e4]  {\"ntile\"}",
    "mov     dword [rsp+0x70], ecx",
    "mov     qword [rsp+0x98], rax",
    "lea     rax, [rel data_1400d881c]  {\"lead\"}",
    "mov     dword [rsp+0x74], edx",
    "mov     qword [rsp+0xb0], rax",
    "lea     rax, [rel data_1400d8824]",
    "mov     dword [rsp+0x88], ecx",
    "mov     dword [rsp+0xa4], edx",
    "mov     dword [rsp+0xd8], edx",
    "mov     rdx, qword [rbp+0x38]",
    "mov     qword [rsp+0xc8], rax",
    "xor     edi, edi",
    "mov     dword [rsp+0x28], r9d",
    "lea     rax, [rsp+0x20]",
    "mov     dword [rsp+0x2c], r8d",
    "mov     dword [rsp+0x44], r8d",
    "mov     dword [rsp+0x5c], r8d",
    "mov     dword [rsp+0x78], r8d",
    "mov     dword [rsp+0x8c], 0x56",
    "mov     dword [rsp+0x90], r8d",
    "mov     dword [rsp+0xa0], r9d",
    "mov     dword [rsp+0xa8], r8d",
    "mov     dword [rsp+0xb8], r9d",
    "mov     dword [rsp+0xbc], r8d",
    "mov     dword [rsp+0xc0], r8d",
    "mov     dword [rsp+0xd0], r9d",
    "mov     dword [rsp+0xd4], r8d",
    "xor     ecx, ecx",
    "lea     rdx, [rel data_1400f76f8]  {\"FILTER clause may only be used w\u2026\"}",
    "lea     rdx, [rel data_1400f76b0]  {\"RANGE with offset PRECEDING/FOLL\u2026\"}",
    "jmp     0x14007a837",
    "cmp     dword [rax], 0x1",
    "je      0x14007a81b",
    "xor     eax, eax",
    "mov     rcx, qword [rdi]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "call    sub_140043fa4",
    "jmp     0x14007a7a4",
    "mov     rdx, qword [rbx+0x28]",
    "test    rdx, rdx",
    "je      0x14007a98a",
    "inc     rcx",
    "inc     edi",
    "add     rax, 0x18",
    "cmp     rcx, 0x8",
    "jl      0x14007a963",
    "mov     rcx, rdi",
    "call    sub_1400191b8",
    "jmp     0x14007a9e5",
    "xor     eax, eax",
    "mov     rcx, qword [rdi]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "call    sub_140043fa4",
    "jmp     0x14007a7c3",
    "mov     qword [rbx+0x28], rax",
    "mov     rdx, qword [rsi+0x30]",
    "test    rdx, rdx",
    "je      0x14007a7c1",
    "mov     rdx, qword [rbx+0x30]",
    "test    rdx, rdx",
    "je      0x14007a99b",
    "mov     rcx, rsi",
    "call    sub_140043de4",
    "cmp     rdx, qword [rax]",
    "je      0x14007a979",
    "jmp     0x14007a9e5",
    "mov     ecx, 0x59",
    "cmp     byte [rbx+0x20], cl",
    "jne     0x14007a81b",
    "mov     qword [rbx+0x30], rax",
    "mov     al, byte [rsi+0x21]",
    "mov     byte [rbx+0x21], al",
    "mov     al, byte [rsi+0x22]",
    "mov     byte [rbx+0x22], al",
    "mov     al, byte [rsi+0x20]",
    "mov     byte [rbx+0x20], al",
    "mov     al, byte [rsi+0x24]",
    "mov     byte [rbx+0x24], al",
    "jmp     0x14007a7ec",
    "and     qword [rbx+0x28], 0x0",
    "and     qword [rbx+0x30], 0x0",
    "movsxd  rax, edi",
    "lea     r8, [rax+rax*2]",
    "mov     byte [rbx+0x24], 0x0",
    "mov     al, byte [rsp+r8*8+0x28]",
    "mov     dl, byte [rsp+r8*8+0x2c]",
    "mov     byte [rbx+0x20], al",
    "mov     al, byte [rsp+r8*8+0x30]",
    "mov     byte [rbx+0x21], dl",
    "mov     byte [rbx+0x22], al",
    "cmp     dl, 0x56",
    "jne     0x14007a9e5",
    "mov     rcx, rsi",
    "call    sub_140043de4",
    "lea     r8, [rel data_1400f4be0]",
    "mov     edx, 0x96",
    "mov     rcx, rsi",
    "call    sub_14004397c",
    "mov     qword [rbx+0x28], rax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}