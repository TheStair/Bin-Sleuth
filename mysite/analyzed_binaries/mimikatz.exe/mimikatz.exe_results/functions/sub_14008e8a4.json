{
  "address": "0x14008e8a4",
  "rules": [
    "encrypt or decrypt data via BCrypt",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0xc0",
    "mov     rdi, r9",
    "mov     esi, edx",
    "mov     rbx, rcx",
    "cmp     edx, 0x3",
    "jb      0x14008ea08",
    "and     qword [rsp+0x48], 0x0",
    "mov     r9d, dword [rsp+0xf0]",
    "lea     rax, [rsp+0xd8]",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0x50]",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x38], rax",
    "mov     rax, qword [rsp+0xf8]",
    "and     dword [rsp+0x30], 0x0",
    "and     qword [rsp+0x28], 0x0",
    "mov     edx, esi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14008c9b4",
    "test    eax, eax",
    "je      0x14008ea7f",
    "mov     r11w, word [rcx]",
    "lea     r10, [rel data_1400d3fc4]",
    "cmp     r11w, word [r10]",
    "jne     0x14008e8e6",
    "lea     r11, [rsp+0xc0]",
    "mov     rbx, qword [r11+0x10]",
    "mov     rsi, qword [r11+0x20]",
    "mov     rsp, r11",
    "pop     rdi",
    "retn    ",
    "mov     r9, qword [rsp+0x50]",
    "mov     r8d, dword [rsp+0xd8]",
    "mov     rdx, qword [rsp+0x100]",
    "lea     rcx, [rel data_1400fe688]  {u\"%s: %.*S\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x50]",
    "\ud83d\udeab\ud83d\udeabsbb     eax, eax",
    "sbb     eax, 0xffffffff",
    "mov     r11b, byte [rcx+0x2]",
    "cmp     r11b, byte [r10+0x2]",
    "jne     0x14008e8e6",
    "test    r8, r8",
    "je      0x14008e9fa",
    "xor     eax, eax",
    "jmp     0x14008e8eb",
    "lea     rcx, [rel data_1400fe720]  {u\"ERROR kuhl_m_dpapi_chrome_decryp\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x14008ea7f",
    "test    r9, r9",
    "je      0x14008e9fa",
    "test    eax, eax",
    "jne     0x14008ea08",
    "lea     rcx, [rel data_1400fe640]  {u\" * using BCrypt with AES-256-GCM\u2026\"}",
    "call    sub_14000c030",
    "xor     edx, edx",
    "lea     rcx, [rsp+0x60]",
    "lea     r8d, [rdx+0x58]",
    "call    memset",
    "lea     eax, [rsi-0x1f]",
    "lea     rcx, [rbx+0x3]",
    "mov     qword [rsp+0x68], rcx",
    "lea     rcx, [rsi+rcx-0x13]",
    "mov     edx, eax",
    "mov     qword [rsp+0x88], rcx",
    "mov     ecx, 0x40",
    "mov     dword [rsp+0x60], 0x58",
    "mov     dword [rsp+0x64], 0x1",
    "mov     dword [rsp+0x70], 0xc",
    "mov     dword [rsp+0x90], 0x10",
    "mov     dword [rsp+0xd8], eax",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14008ea7f",
    "and     dword [rsp+0x48], 0x0",
    "mov     edx, dword [rsp+0x70]",
    "mov     r8d, dword [rsp+0xd8]",
    "add     rdx, qword [rsp+0x68]",
    "lea     rax, [rsp+0xd8]",
    "lea     r9, [rsp+0x60]",
    "mov     qword [rsp+0x40], rax",
    "mov     dword [rsp+0x38], r8d",
    "mov     qword [rsp+0x30], rbx",
    "and     dword [rsp+0x28], 0x0",
    "and     qword [rsp+0x20], 0x0",
    "mov     rcx, rdi",
    "call    BCryptDecrypt",
    "test    eax, eax",
    "js      0x14008e9e7",
    "lea     rcx, [rel data_1400fe6a0]  {u\"ERROR kuhl_m_dpapi_chrome_decryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     r8d, dword [rsp+0xd8]",
    "mov     rdx, qword [rsp+0x100]",
    "lea     rcx, [rel data_1400fe688]  {u\"%s: %.*S\\n\"}",
    "mov     r9, rbx",
    "call    sub_14000c030",
    "jmp     0x14008e9f5",
    "call    qword [rel LocalFree]",
    "mov     rcx, rbx",
    "jmp     0x14008ea79"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}