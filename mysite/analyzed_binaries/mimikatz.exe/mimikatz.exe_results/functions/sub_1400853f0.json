{
  "address": "0x1400853f0",
  "rules": [
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     rax, rsp {__return_addr}",
    "mov     qword [rax+0x8 {__saved_rbx}], rbx",
    "mov     qword [rax+0x10 {__saved_rbp}], rbp",
    "mov     qword [rax+0x18 {__saved_rsi}], rsi",
    "mov     qword [rax+0x20 {__saved_rdi}], rdi",
    "push    r12 {__saved_r12}",
    "sub     rsp, 0x20",
    "lea     rdx, [rel data_1400f7cc8]  {\"SQLITE_\"}",
    "mov     r8d, 0x7",
    "mov     rbx, rcx",
    "call    sub_1400192e8",
    "test    eax, eax",
    "jne     0x140085426",
    "mov     rcx, rbx",
    "call    sub_140019074",
    "lea     rdi, [rel data_1400d6370]",
    "movsxd  rsi, eax",
    "add     rbx, 0x7",
    "lea     rax, [rel data_1400d6400]",
    "add     rdi, 0x8",
    "cmp     rdi, rax",
    "jl      0x140085438",
    "movzx   eax, byte [rsi+rbp]",
    "lea     rcx, [rel data_1400d6500]",
    "test    byte [rax+rcx], 0x46",
    "je      0x14008548b",
    "mov     rbp, qword [rdi]",
    "mov     r8d, esi",
    "mov     rcx, rbx",
    "mov     rdx, rbp",
    "call    sub_1400192e8",
    "test    eax, eax",
    "jne     0x14008545e",
    "xor     eax, eax  {0x0}",
    "mov     eax, 0x1",
    "jmp     0x140085470",
    "mov     rbx, qword [rsp+0x30 {__saved_rbx}]",
    "mov     rbp, qword [rsp+0x38 {__saved_rbp}]",
    "mov     rsi, qword [rsp+0x40 {__saved_rsi}]",
    "mov     rdi, qword [rsp+0x48 {__saved_rdi}]",
    "add     rsp, 0x20",
    "pop     r12 {__saved_r12}",
    "retn     {__return_addr}"
  ],
  "high_level_IL": [
    "char* rbx = arg1",
    "if (sub_1400192e8(arg1, \"SQLITE_\", 7, &__return_addr) == 0)",
    "rbx = &rbx[7]",
    "int32_t rax_1 = sub_140019074(rbx)",
    "char const (** const i)[0x13] = &data_1400d6370",
    "int64_t rsi = sx.q(rax_1)",
    "char const (* rbp_1)[0x13] = *i",
    "if (sub_1400192e8(rbx, rbp_1, rsi.d, rax_1) == 0 && (*(zx.q((*rbp_1)[rsi]) + &data_1400d6500) & 0x46) == 0)",
    "return 1",
    "rax_1 = 0x400d6400",
    "i = &i[1]",
    "do while (i s< &data_1400d6400)",
    "return 0"
  ]
}