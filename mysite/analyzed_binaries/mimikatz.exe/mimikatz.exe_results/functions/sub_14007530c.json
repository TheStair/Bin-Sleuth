{
  "address": "0x14007530c",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x20], r9",
    "mov     qword [rsp+0x18], r8",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "xor     ebx, ebx",
    "mov     rax, r9",
    "mov     rbp, rcx",
    "cmp     dword [rdx+0x14], ebx",
    "mov     rcx, qword [rdx+0x20]",
    "mov     r9, r8",
    "lea     r11d, [rbx+0x1]",
    "lea     r10d, [rbx+0x40]",
    "mov     r15, rdx",
    "mov     word [rsp+0x78], bx",
    "mov     esi, ebx",
    "jle     0x14007537d",
    "mov     r13, qword [rsp+0x90]",
    "mov     r12d, ebx",
    "cmp     r13, rbx",
    "je      0x1400753e2",
    "mov     r8d, dword [rax+0x44]",
    "mov     edx, dword [rdx+0x14]",
    "add     rcx, 0x30",
    "mov     rcx, qword [rbp]",
    "movsxd  rdi, esi",
    "movsxd  r14, r12d",
    "lea     rax, [rdi+rdi*4]",
    "shl     rax, 0x2",
    "lea     rdx, [rax+r14*8+0x70]",
    "call    sub_140016ba8",
    "mov     r11, rax",
    "mov     qword [rsp+0x20], rax",
    "cmp     rax, rbx",
    "jne     0x140075421",
    "cmp     dword [r13], ebx",
    "mov     r9d, ebx",
    "mov     rdx, rbx",
    "jle     0x1400753d9",
    "add     rcx, r10",
    "sub     rdx, r11",
    "jne     0x14007535b",
    "test    qword [rcx], r9",
    "jne     0x140075375",
    "lea     rcx, [rax+0x70]",
    "mov     dword [r11], esi",
    "mov     dword [r11+0x10], r12d",
    "mov     qword [r11+0x8], rcx",
    "lea     rax, [rdi+rdi*2]",
    "mov     r10d, ebx",
    "lea     rdi, [rcx+rax*4]",
    "mov     qword [r11+0x18], rdi",
    "mov     qword [rsp+0x28], rdi",
    "lea     rax, [rdi+r14*8]",
    "mov     qword [r11+0x20], rax",
    "mov     qword [r11+0x60], r15",
    "mov     qword [r11+0x68], rbp",
    "cmp     dword [r15+0x14], ebx",
    "mov     r9, qword [r15+0x20]",
    "jle     0x14007558c",
    "lea     rdx, [rel data_1400f4490]  {\"out of memory\"}",
    "mov     rcx, rbp",
    "call    sub_1400191b8",
    "xor     eax, eax",
    "jmp     0x1400755d3",
    "cmp     r9d, dword [r13]",
    "cmove   r12d, dword [r13]",
    "movsxd  r10, dword [r13]",
    "lea     rcx, [r13+0x20]",
    "mov     r13, qword [rsp+0x88]",
    "cmp     dword [rcx-0x14], r8d",
    "jne     0x140075375",
    "movzx   eax, word [rcx-0x1c]",
    "btr     eax, 0xb",
    "cmp     eax, ebx",
    "je      0x140075375",
    "cmp     r12d, ebx",
    "jle     0x1400755c0",
    "mov     rsi, qword [rsp+0x88]",
    "mov     rbp, qword [rsp+0x80]",
    "mov     edi, 0x40",
    "lea     r11d, [rdi-0x3f]",
    "lea     r14d, [rdi-0x30]",
    "lea     r8, [rcx+0x4]",
    "mov     edx, 0x180",
    "movzx   r13d, bx",
    "mov     rbx, qword [rsp+0x70]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     r13, qword [rsp+0x90]",
    "mov     eax, dword [r13+0x44]",
    "cmp     dword [r8+0x28], eax",
    "jne     0x1400753d1",
    "add     esi, r11d",
    "mov     rax, qword [rsp+0x98]",
    "mov     cx, word [rsp+0x78]",
    "mov     word [rax], cx",
    "mov     rax, r11",
    "lea     rdx, [r13+0x20]",
    "mov     r11d, 0x1",
    "add     r10d, r11d",
    "add     r9, rdi",
    "cmp     r10d, dword [r15+0x14]",
    "jl      0x14007548c",
    "test    qword [r9+0x30], rbp",
    "jne     0x140075561",
    "test    byte [rcx], 0x2",
    "jne     0x1400753d1",
    "mov     rax, qword [rdx-0x18]",
    "movsx   ecx, word [rax+0x2c]",
    "mov     dword [rdi+rbx*8], ecx",
    "mov     al, byte [rdx]",
    "add     rdx, 0x28",
    "and     al, r11b",
    "mov     byte [rdi+rbx*8+0x4], al",
    "add     rbx, r11",
    "cmp     rbx, r14",
    "jl      0x14007559b",
    "mov     r11, qword [rsp+0x20]",
    "mov     eax, dword [rsi+0x44]",
    "cmp     dword [r9+0x1c], eax",
    "jne     0x140075561",
    "mov     r11, qword [rsp+0x20]",
    "mov     rdi, qword [rsp+0x28]",
    "mov     word [rsp+0x78], r13w",
    "mov     r13, qword [rsp+0x90]",
    "movsxd  r14, r12d",
    "movzx   ecx, word [r9+0x14]",
    "mov     eax, ecx",
    "btr     eax, 0xb",
    "cmp     eax, ebx",
    "je      0x140075561",
    "add     rdx, r11",
    "add     r9d, r11d",
    "add     rcx, 0x28",
    "cmp     rdx, r10",
    "jl      0x1400753a9",
    "test    byte [rsi+0x3c], 0x8",
    "je      0x1400754ce",
    "mov     r8, qword [rcx-0x18]",
    "cmp     byte [r8], 0xa2",
    "jne     0x1400753d1",
    "mov     eax, dword [r9+0x28]",
    "mov     dword [r8+0x4], r10d",
    "mov     dword [r8-0x4], eax",
    "mov     dx, word [r9+0x14]",
    "mov     eax, 0x1fff",
    "and     dx, ax",
    "cmp     dx, r11w",
    "jne     0x1400754f2",
    "mov     rax, qword [r9]",
    "test    byte [rax+0x4], r11b",
    "jne     0x1400754ce",
    "cmp     dx, di",
    "jne     0x1400754fd",
    "mov     edx, 0x2",
    "test    dx, cx",
    "jne     0x140075561",
    "mov     eax, 0x180",
    "test    ax, dx",
    "je      0x140075519",
    "mov     al, byte [r9+0x17]",
    "jmp     0x140075514",
    "mov     byte [r8], dl",
    "test    dl, 0x3c",
    "je      0x140075558",
    "mov     eax, 0x100",
    "cmp     dx, ax",
    "setne   al",
    "add     al, 0x47",
    "mov     byte [r8], al",
    "jmp     0x140075558",
    "add     r8, 0xc",
    "mov     edx, 0x180",
    "mov     rcx, qword [r9]",
    "mov     rcx, qword [rcx+0x18]",
    "call    sub_140043460",
    "cmp     eax, r11d",
    "jle     0x140075558",
    "cmp     r10d, r14d",
    "jge     0x140075544",
    "cmp     dx, r14w",
    "jne     0x14007554e",
    "mov     eax, r11d",
    "mov     ecx, r10d",
    "shl     ax, cl",
    "or      r13w, ax",
    "cmp     dx, 0x4",
    "jne     0x140075558",
    "mov     byte [r8], 0x8",
    "mov     byte [r8], 0x20"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}