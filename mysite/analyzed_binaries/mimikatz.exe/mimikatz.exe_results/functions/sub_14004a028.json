{
  "address": "0x14004a028",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "mov     qword [rsp+0x10], rdx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "mov     r12, qword [rcx]",
    "mov     rbx, r8",
    "lea     r8, [rdx+0x8]",
    "xor     r14d, r14d",
    "xor     edx, edx",
    "mov     rdi, r9",
    "mov     rbp, rcx",
    "mov     r13, r14",
    "mov     r15, r14",
    "call    sub_14004e084",
    "mov     rsi, rax",
    "cmp     rax, r14",
    "je      0x14004a270",
    "mov     rdx, qword [rsp+0xb8]",
    "mov     rcx, r12",
    "call    sub_140053434",
    "cmp     r13, r14",
    "je      0x14004a290",
    "mov     rdx, rax",
    "mov     rcx, rbp",
    "call    sub_1400496a8",
    "cmp     eax, r14d",
    "jne     0x14004a270",
    "cmp     r15, r14",
    "je      0x14004a2a0",
    "mov     rdx, r13",
    "mov     rcx, r12",
    "call    sub_1400169a8",
    "cmp     qword [rsi+0x18], r14",
    "lea     rax, [rel data_1400f534c]  {\"view\"}",
    "lea     r8, [rel data_1400f5358]  {\"virtual table\"}",
    "cmove   rax, r14",
    "cmp     dword [rsi+0x54], r14d",
    "cmove   r8, rax",
    "cmp     r8, r14",
    "je      0x14004a0bb",
    "mov     rbx, qword [rsp+0xc0]",
    "add     rsp, 0x70",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rdx, r15",
    "mov     rcx, r12",
    "call    sub_1400169a8",
    "mov     rcx, qword [rsi+0x70]",
    "mov     edx, 0xfff0bdc0",
    "mov     dword [rsp+0xb0], edx",
    "cmp     rcx, r14",
    "je      0x14004a0fa",
    "mov     r9, qword [rsi]",
    "lea     rdx, [rel data_1400f5368]  {\"cannot rename columns of %s \"%s\"\"}",
    "mov     rcx, rbp",
    "call    sub_1400191b8",
    "jmp     0x14004a270",
    "mov     rax, qword [r12+0x20]",
    "mov     r9, qword [rsi]",
    "movsxd  rcx, edx",
    "shl     rcx, 0x5",
    "mov     edx, 0x1a",
    "mov     qword [rsp+0x20], r14",
    "mov     rax, qword [rcx+rax]",
    "mov     rcx, rbp",
    "mov     r8, rax",
    "mov     qword [rsp+0x60], rax",
    "call    sub_14004da74",
    "cmp     eax, r14d",
    "jne     0x14004a270",
    "mov     rax, qword [r12+0x20]",
    "mov     edx, r14d",
    "add     rax, 0x18",
    "mov     dword [rsp+0xb0], edx",
    "cmp     qword [rax], rcx",
    "je      0x14004a0fa",
    "mov     rdx, rbx",
    "mov     rcx, r12",
    "call    sub_14004e64c",
    "mov     r13, rax",
    "cmp     rax, r14",
    "je      0x14004a270",
    "add     rax, 0x20",
    "inc     edx",
    "cmp     qword [rax], rcx",
    "jne     0x14004a0e8",
    "movsx   r11d, word [rsi+0x46]",
    "test    r11d, r11d",
    "jle     0x14004a170",
    "mov     dword [rsp+0xb0], edx",
    "mov     rcx, rbp",
    "cmp     r14d, r11d",
    "jne     0x14004a18c",
    "mov     rbx, qword [rsi+0x8]",
    "mov     rax, qword [rbp+0x90]",
    "mov     rdx, rdi",
    "test    rax, rax",
    "cmovne  rcx, rax",
    "mov     byte [rcx+0x21], 0x1",
    "mov     rcx, r12",
    "call    sub_14004e64c",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x14004a26d",
    "lea     rdx, [rel data_1400f4550]  {\"no such column: \"%s\"\"}",
    "mov     r8, r13",
    "call    sub_1400191b8",
    "jmp     0x14004a26d",
    "inc     r14d",
    "add     rbx, 0x20",
    "cmp     r14d, r11d",
    "jl      0x14004a155",
    "xor     r14d, r14d",
    "mov     rcx, qword [rdi]",
    "xor     edi, edi",
    "lea     rax, [rel data_1400d6500]",
    "movzx   edx, byte [rcx]",
    "mov     rcx, qword [rsi]",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "movzx   ebx, byte [rdx+rax]",
    "mov     rax, qword [rsp+0x60]",
    "mov     qword [rsp+0x50], rcx",
    "and     ebx, 0x80",
    "cmp     dword [rsp+0xb0], 0x1",
    "lea     rdx, [rel data_1400f5390]  {\"UPDATE \"%w\".%s SET sql = sqlite_\u2026\"}",
    "sete    dil",
    "mov     r8, rax",
    "mov     dword [rsp+0x48], edi",
    "mov     dword [rsp+0x40], ebx",
    "mov     qword [rsp+0x38], r15",
    "mov     dword [rsp+0x30], r14d",
    "mov     qword [rsp+0x28], rcx",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004dd58",
    "mov     rax, qword [rsi]",
    "mov     dword [rsp+0x38], ebx",
    "mov     rbx, qword [rsp+0x60]",
    "mov     qword [rsp+0x30], r15",
    "lea     r8, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "lea     rdx, [rel data_1400f5460]  {\"UPDATE temp.%s SET sql = sqlite_\u2026\"}",
    "mov     rcx, rbp",
    "mov     r9, rbx",
    "mov     dword [rsp+0x28], r14d",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004dd58",
    "mov     edx, dword [rsp+0xb0]",
    "mov     rcx, rbp",
    "call    sub_140049778",
    "mov     r8d, edi",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "call    sub_140049714",
    "mov     rcx, qword [rbx]",
    "mov     rdx, r13",
    "call    sub_1400192b0",
    "test    eax, eax",
    "je      0x14004a170"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}