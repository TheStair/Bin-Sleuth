{
  "address": "0x1400b82c4",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "mov     qword [r11+0x10], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x60",
    "mov     r12d, r8d",
    "lea     rax, [r11+0x20]",
    "lea     r9, [r11-0x48]",
    "lea     r8, [rel data_140124300]  {\"1.2.840.113556.1.4.1\"}",
    "mov     rsi, rdx",
    "mov     rbp, rcx",
    "mov     qword [r11-0x58], rax",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b84b8",
    "lea     r11, [rsp+0x60]",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x28]",
    "mov     rsp, r11",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "mov     edi, dword [rsp+0x98]",
    "mov     ecx, 0x40",
    "lea     rdx, [rdi+0x2]",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400b84b8",
    "mov     rdx, qword [rsp+0x30]",
    "mov     r8, rdi",
    "mov     rcx, rax",
    "call    memcpy",
    "lea     r11, [rsp+0x98]",
    "lea     r9, [rsp+0x30]",
    "lea     r8, [rel data_1400eecd8]  {\"1.2.840.113556.1.4.27\"}",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x20], r11",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b84af",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "lea     rdx, [rel data_140125550]  {u\"BCKUPKEY_\"}",
    "mov     rcx, rbx",
    "call    qword [rel wcsstr]",
    "cmp     rbx, rax",
    "jne     0x1400b8498",
    "mov     edx, dword [rsp+0x98]",
    "mov     rcx, qword [rsp+0x30]",
    "mov     r8d, 0x100001",
    "call    sub_140012f68",
    "lea     rdx, [rel data_140125568]  {u\"BCKUPKEY_P Secret\"}",
    "mov     rcx, rbx",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "je      0x1400b83a1",
    "cmp     dword [rsp+0x98], 0x10",
    "jne     0x1400b83d2",
    "lea     rdx, [rel data_140125590]  {u\"BCKUPKEY_PREFERRED Secret\"}",
    "mov     rcx, rbx",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "jne     0x1400b83d2",
    "lea     rcx, [rbx+0x12]",
    "mov     edx, 0x20",
    "call    qword [rel wcschr]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1400b84af",
    "lea     rcx, [rel data_1401255c8]  {u\"Link to key with GUID: \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x30]",
    "call    sub_1400130e8",
    "lea     rcx, [rel data_1401255f8]  {u\" (not an object GUID)\\n\"}",
    "call    sub_14000c030",
    "jmp     0x1400b84af",
    "sub     rdi, rbx",
    "mov     ecx, 0x40",
    "sub     rdi, 0x12",
    "sar     rdi, 0x1",
    "add     di, di",
    "lea     r8d, [rdi+0x4]",
    "movzx   edx, r8w",
    "mov     word [rsp+0x3a], r8w",
    "mov     word [rsp+0x38], r8w",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x40], rax",
    "test    rax, rax",
    "je      0x1400b84af",
    "mov     ecx, 0x7b",
    "lea     rdx, [rbx+0x12]",
    "movzx   r8d, di",
    "mov     word [rax], cx",
    "mov     rcx, qword [rsp+0x40]",
    "add     rcx, 0x2",
    "call    memcpy",
    "movzx   r11d, word [rsp+0x38]",
    "mov     rax, qword [rsp+0x40]",
    "shr     r11, 0x1",
    "mov     ecx, 0x7d",
    "lea     rdx, [rsp+0x48]",
    "mov     word [rax+r11*2-0x2], cx",
    "lea     rcx, [rsp+0x38]",
    "call    RtlGUIDFromString",
    "test    eax, eax",
    "js      0x1400b848b",
    "mov     rcx, qword [rsp+0x40]",
    "call    qword [rel LocalFree]",
    "jmp     0x1400b84af",
    "mov     r8d, dword [rsp+0x98]",
    "mov     rdx, qword [rsp+0x30]",
    "lea     rcx, [rsp+0x48]",
    "mov     r9d, r12d",
    "call    sub_1400a3a90"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}