{
  "address": "0x14005702c",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "encrypt data using Curve25519/ba11e775237f4334901cb73b0f61e10d",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "push    rsi",
    "push    rdi",
    "push    r13",
    "sub     rsp, 0x80",
    "mov     rbx, rcx",
    "mov     rcx, qword [r8]",
    "lea     r13, [rel __dos_header]",
    "movaps  xmmword [rsp+0x70], xmm6",
    "movzx   eax, word [rcx+0x8]",
    "mov     rdi, r8",
    "and     eax, 0x3f",
    "movzx   edx, byte [rax+r13+0xd7190]",
    "sub     edx, 0x1",
    "je      0x140057281",
    "mov     rdx, rcx",
    "mov     rcx, qword [rbx]",
    "call    sub_140031744",
    "sub     edx, 0x1",
    "je      0x1400571ec",
    "call    sub_140031294",
    "mov     edi, 0x32",
    "lea     r8, [rel data_1400f4020]  {\"%!.15g\"}",
    "lea     rdx, [rsp+0x30]",
    "mov     ecx, edi",
    "movapd  xmm3, xmm0",
    "movapd  xmm6, xmm0",
    "movq    r9, xmm3",
    "call    _fprintf_p_l",
    "lea     r8d, [rdi-0x1e]",
    "lea     rdx, [rsp+0xb0]",
    "lea     rcx, [rsp+0x30]",
    "mov     r9b, 0x1",
    "call    sub_140019354",
    "ucomisd xmm6, qword [rsp+0xb0]",
    "je      0x140057256",
    "sub     edx, 0x1",
    "je      0x14005714b",
    "or      rax, 0xffffffffffffffff",
    "lea     rdx, [rsp+0x30]",
    "mov     r8d, eax",
    "movapd  xmm3, xmm6",
    "lea     r8, [rel data_1400f6208]  {\"%!.20e\"}",
    "lea     rdx, [rsp+0x30]",
    "mov     ecx, edi",
    "movq    r9, xmm3",
    "call    _fprintf_p_l",
    "mov     dl, 0x1",
    "call    sub_140031c84",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x14005728c",
    "cmp     edx, 0x1",
    "je      0x14005709e",
    "movaps  xmm6, xmmword [rsp+0x70]",
    "lea     r11, [rsp+0x80]",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x28]",
    "mov     rsp, r11",
    "pop     r13",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "mov     rcx, rbx",
    "call    sub_1400363a8",
    "jmp     0x14005728c",
    "mov     al, byte [rax]",
    "xor     r8d, r8d",
    "xor     ecx, ecx",
    "test    al, al",
    "je      0x14005717f",
    "call    sub_140035e04",
    "mov     rcx, qword [rdi]",
    "mov     rbp, rax",
    "call    sub_140035e5c",
    "mov     rcx, rbx",
    "movsxd  rsi, eax",
    "lea     rdx, [rsi+rsi+0x4]",
    "call    sub_140056624",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x14005728c",
    "and     qword [rsp+0x20], 0x0",
    "mov     r8d, 0x4",
    "lea     rdx, [rel data_1400f3870]  {\"NULL\"}",
    "jmp     0x140057267",
    "movsxd  rax, r8d",
    "lea     rdx, [rax+rcx+0x3]",
    "mov     rcx, rbx",
    "call    sub_140056624",
    "mov     r11, rax",
    "test    rax, rax",
    "je      0x14005728c",
    "mov     rdx, rdi",
    "xor     ecx, ecx",
    "test    rsi, rsi",
    "jle     0x140057106",
    "mov     rcx, qword [rbx]",
    "mov     r9b, 0x1",
    "call    sub_140031820",
    "cmp     eax, 0x12",
    "jne     0x14005728c",
    "mov     byte [rax], 0x27",
    "cmp     byte [rdi], 0x0",
    "mov     r8d, 0x1",
    "je      0x1400571cd",
    "inc     rdx",
    "inc     r8d",
    "mov     al, byte [rdx]",
    "test    al, al",
    "jne     0x14005716c",
    "inc     rcx",
    "mov     byte [rdi+rsi*2+0x2], 0x27",
    "mov     byte [rdi+rsi*2+0x3], 0x0",
    "or      rax, 0xffffffffffffffff",
    "mov     byte [rdi], 0x58",
    "mov     byte [rdi+0x1], 0x27",
    "mov     rcx, qword [rbx]",
    "mov     r9b, 0x1",
    "mov     r8d, eax",
    "mov     rdx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140031820",
    "cmp     eax, 0x12",
    "jne     0x14005713e",
    "lea     rdx, [rax+0x3]",
    "movsxd  rax, r8d",
    "inc     r8d",
    "mov     rdx, r11",
    "mov     byte [rax+r11], 0x27",
    "movsxd  rax, r8d",
    "mov     byte [rax+r11], 0x0",
    "lea     rax, [rel sub_140016950]",
    "jmp     0x140057262",
    "lea     rdx, [rax+0x1]",
    "cmp     al, 0x27",
    "jne     0x140057173",
    "mov     rcx, rdi",
    "call    sub_140016950",
    "jmp     0x14005728c",
    "mov     rcx, rbx",
    "call    sub_1400363a8",
    "movzx   eax, byte [rcx+rbp]",
    "shr     rax, 0x4",
    "mov     al, byte [rax+r13+0xd7528]",
    "mov     byte [rdx-0x1], al",
    "movsx   rax, byte [rcx+rbp]",
    "inc     rcx",
    "and     eax, 0xf",
    "mov     al, byte [rax+r13+0xd7528]",
    "mov     byte [rdx], al",
    "add     rdx, 0x2",
    "cmp     rcx, rsi",
    "jl      0x1400570d5",
    "mov     qword [rsp+0x20], rax",
    "inc     rdi",
    "cmp     byte [rdi], 0x0",
    "jne     0x1400571ad",
    "mov     byte [rdx], 0x27",
    "inc     r8d",
    "inc     rdx",
    "mov     cl, byte [rdi]",
    "inc     r8d",
    "mov     byte [rdx], cl",
    "inc     rdx",
    "cmp     byte [rdi], 0x27",
    "jne     0x1400571c5"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}