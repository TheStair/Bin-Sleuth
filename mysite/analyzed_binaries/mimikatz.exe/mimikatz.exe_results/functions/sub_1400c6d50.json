{
  "address": "0x1400c6d50",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xd0",
    "mov     rax, qword [rdx+0x8]",
    "xor     r15d, r15d",
    "mov     rbx, rcx",
    "mov     qword [rsp+0x38], rax",
    "mov     qword [rsp+0x48], rax",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x58], rax",
    "lea     rcx, [rsp+0x78]",
    "lea     r13, [rel data_1400d2d10]",
    "mov     qword [rsp+0x50], rcx",
    "movsxd  rcx, dword [rel data_1401404c0]",
    "mov     word [rsp+0x78], r15w",
    "mov     word [rsp+0x7a], r15w",
    "mov     qword [rsp+0x80], r15",
    "mov     qword [rsp+0x30], r15",
    "imul    rcx, rcx, 0xa8",
    "movsxd  rax, dword [rcx+r13+0x98]",
    "movsxd  rcx, dword [rcx+r13+0x68]",
    "mov     qword [rsp+0x40], r15",
    "add     rax, qword [r8]",
    "mov     qword [rsp+0x20], r15",
    "mov     rdi, r9",
    "mov     qword [rsp+0x60], rax",
    "mov     rax, qword [r8+0x8]",
    "mov     rsi, r8",
    "mov     qword [rsp+0x68], rax",
    "mov     rax, qword [rdx]",
    "mov     r12d, r15d",
    "mov     rdx, qword [rcx+rax]",
    "mov     ebp, r15d",
    "mov     qword [r8], rdx",
    "cmp     rdx, r15",
    "je      0x1400c721f",
    "mov     rbx, qword [rsp+0x110]",
    "add     rsp, 0xd0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "movsxd  rdx, dword [rel data_1401404c0]",
    "lea     ecx, [r15+0x40]",
    "imul    rdx, rdx, 0xa8",
    "mov     rdx, qword [rdx+r13+0x70]",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x30], rax",
    "cmp     rax, r15",
    "je      0x1400c721f",
    "movsxd  r8, dword [rel data_1401404c0]",
    "lea     rcx, [rsp+0x30]",
    "mov     rdx, rsi",
    "imul    r8, r8, 0xa8",
    "mov     r8, qword [r8+r13+0x70]",
    "call    sub_14000b6d8",
    "cmp     eax, r15d",
    "je      0x1400c7214",
    "mov     rcx, qword [rsp+0x30]",
    "call    qword [rel LocalFree]",
    "mov     rax, qword [rsp+0x30]",
    "mov     r14d, dword [rax+0x4]",
    "cmp     r14d, r15d",
    "je      0x1400c7214",
    "mov     rax, qword [rdi+0x8]",
    "mov     r13d, r15d",
    "cmp     rax, r15",
    "setne   r13b",
    "cmp     r13d, r15d",
    "je      0x1400c6ead",
    "mov     rax, qword [rbx]",
    "cmp     dword [rax+0x10], 0x1db0",
    "jb      0x1400c6f28",
    "movdqu  xmm0, xmmword [rax]",
    "mov     rax, qword [rbx]",
    "movdqu  xmmword [rsp+0x90], xmm0",
    "cmp     dword [rax+0x10], 0x1770",
    "jb      0x1400c6ead",
    "movsxd  rax, dword [rel data_1401404c0]",
    "lea     rcx, [rel data_1400d2d10]",
    "imul    rax, rax, 0xa8",
    "mov     rax, qword [rax+rcx+0x70]",
    "add     rax, qword [rsi]",
    "mov     qword [rsp+0x120], rax",
    "mov     qword [rsi], rax",
    "movsxd  rax, dword [rel data_1401404c0]",
    "imul    rax, rax, 0xa8",
    "mov     eax, dword [rax+rcx+0x80]",
    "mov     ecx, 0x40",
    "imul    eax, r14d",
    "mov     edx, eax",
    "mov     ebx, eax",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x40], rax",
    "cmp     rax, r15",
    "je      0x1400c7214",
    "mov     rax, qword [rdi+0x18]",
    "cmp     rax, r15",
    "setne   r12b",
    "cmp     r12d, r15d",
    "je      0x1400c6eee",
    "mov     rax, qword [rbx+0x8]",
    "lea     edx, [r15+0x10]",
    "lea     rcx, [rsp+0x90]",
    "mov     r8, qword [rax+0x18]",
    "call    qword [r8]",
    "lea     rcx, [rsp+0x40]",
    "mov     r8, rbx",
    "mov     rdx, rsi",
    "call    sub_14000b6d8",
    "cmp     eax, r15d",
    "je      0x1400c7209",
    "mov     rdx, qword [rdi+0x10]",
    "cmp     rdx, r15",
    "setne   bpl",
    "cmp     ebp, r15d",
    "je      0x1400c6f28",
    "movdqu  xmm0, xmmword [rax]",
    "mov     rax, qword [rbx+0x8]",
    "lea     rcx, [rsp+0xa0]",
    "mov     edx, 0x10",
    "movdqu  xmmword [rsp+0xa0], xmm0",
    "mov     r8, qword [rax+0x18]",
    "call    qword [r8]",
    "mov     rcx, qword [rsp+0x40]",
    "call    qword [rel LocalFree]",
    "mov     rdx, qword [rsi]",
    "lea     rcx, [rel data_14012fbe8]  {u\"data copy @ %p\"}",
    "mov     r8d, r14d",
    "call    sub_14000c030",
    "movsxd  rax, r13d",
    "xor     ecx, ecx",
    "mov     qword [rsp+0x128], rax",
    "movsxd  rax, r12d",
    "mov     dword [rdi+0x20], 0x1",
    "mov     qword [rsp+0x88], rax",
    "movsxd  rax, ebp",
    "mov     qword [rsp+0x118], rcx",
    "mov     qword [rsp+0x70], rax",
    "test    r14d, r14d",
    "je      0x1400c714d",
    "lea     rcx, [rsp+0xb0]",
    "mov     r8d, 0x20",
    "call    memcpy",
    "mov     r11, qword [rbx+0x8]",
    "lea     rcx, [rsp+0xb0]",
    "mov     rax, qword [r11+0x18]",
    "mov     edx, 0x20",
    "call    qword [rax]",
    "cmp     dword [rdi+0x20], 0x0",
    "je      0x1400c7209",
    "mov     r12, qword [rsp+0x120]",
    "movsxd  rax, dword [rel data_1401404c0]",
    "mov     rdx, qword [rsp+0x60]",
    "lea     rbx, [rel data_1400d2d10]",
    "imul    rax, rax, 0xa8",
    "mov     r8d, dword [rax+rbx+0xa0]",
    "lea     rcx, [rel data_14012fcd0]  {u\"\\n   \\_ *Password replace @ %p (\u2026\"}",
    "call    sub_14000c030",
    "movsxd  rdx, dword [rel data_1401404c0]",
    "mov     ecx, 0x40",
    "imul    rdx, rdx, 0xa8",
    "mov     rdx, qword [rdx+rbx+0xa0]",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x50], rax",
    "test    rax, rax",
    "je      0x1400c7209",
    "movsxd  rax, dword [rel data_1401404c0]",
    "mov     rbx, qword [rsp+0x40]",
    "lea     rdx, [rel data_1400d2d10]",
    "imul    rax, rax, 0xa8",
    "mov     rbp, qword [rax+rdx+0x80]",
    "movsxd  rax, dword [rax+rdx+0x78]",
    "imul    rbp, rcx",
    "add     rbp, rax",
    "add     rbx, rbp",
    "mov     ecx, dword [rbx]",
    "call    sub_140097e7c",
    "lea     rcx, [rel data_14012fc08]  {u\"\\n   \\_ %s \"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "mov     r11, qword [rbx+0x10]",
    "xor     ecx, ecx",
    "lea     r13, [rel data_1400f9e08]",
    "mov     qword [rsi], r11",
    "cmp     qword [rsp+0x128], rcx",
    "je      0x1400c7077",
    "movsxd  r8, dword [rel data_1401404c0]",
    "lea     rdx, [rsp+0x50]",
    "lea     rcx, [rsp+0x60]",
    "imul    r8, r8, 0xa8",
    "mov     r8, qword [r8+rbx+0xa0]",
    "call    sub_14000b6d8",
    "mov     dword [rdi+0x20], eax",
    "test    eax, eax",
    "je      0x1400c71ea",
    "cmp     qword [rsp+0x88], rcx",
    "je      0x1400c70a1",
    "cmp     dword [rbx], 0x11",
    "je      0x1400c7077",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14012fc30]  {u\"ERROR kuhl_m_sekurlsa_enum_kerbe\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400ee4b8]  {u\"null\"}",
    "call    sub_14000c030",
    "jmp     0x1400c71fe",
    "cmp     qword [rsp+0x70], rcx",
    "je      0x1400c70c8",
    "cmp     dword [rbx], 0x11",
    "jne     0x1400c70a1",
    "cmp     dword [rbx], 0x12",
    "je      0x1400c7077",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel LocalFree]",
    "lea     rax, [r12+rbp]",
    "mov     qword [rsp+0x20], rbx",
    "lea     r13, [rel data_140105b90]  {u\"null             \"}",
    "mov     qword [rsi], rax",
    "mov     dword [rbx], ecx",
    "mov     qword [rbx+0x8], rcx",
    "lea     rcx, [rel data_14012fc20]",
    "mov     ebp, 0x10",
    "call    sub_14000c030",
    "cmp     dword [rbx], 0x12",
    "jne     0x1400c70c8",
    "cmp     qword [rbx+0x8], 0x10",
    "jne     0x1400c70a1",
    "cmp     qword [rbx+0x8], 0x10",
    "jne     0x1400c7077",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14012fc30]  {u\"ERROR kuhl_m_sekurlsa_enum_kerbe\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f13d8]",
    "mov     rdx, r13",
    "call    sub_14000c030",
    "jmp     0x1400c712e",
    "cmp     qword [rbx+0x8], 0x20",
    "jne     0x1400c70c8",
    "lea     rax, [rsp+0xa0]",
    "lea     rax, [rsp+0x90]",
    "jmp     0x1400c7095",
    "cmp     dword [rdi+0x20], 0x0",
    "je      0x1400c7209",
    "mov     rcx, qword [rsp+0x118]",
    "inc     r15d",
    "inc     rcx",
    "mov     qword [rsp+0x118], rcx",
    "cmp     r15d, r14d",
    "jb      0x1400c6ff1",
    "lea     rax, [rsp+0xb0]",
    "mov     ebp, 0x20",
    "mov     qword [rsp+0x20], rax",
    "jmp     0x1400c70f2",
    "lea     rdx, [rsp+0x20]",
    "mov     r8, rbp",
    "mov     rcx, rsi",
    "call    sub_14000b6d8",
    "mov     dword [rdi+0x20], eax",
    "test    eax, eax",
    "je      0x1400c711a",
    "mov     qword [rsp+0x20], rax",
    "mov     ebp, 0x10",
    "jmp     0x1400c70f2"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}