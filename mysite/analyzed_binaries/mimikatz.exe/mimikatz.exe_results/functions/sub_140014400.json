{
  "address": "0x140014400",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x50",
    "mov     rbx, r8",
    "mov     r14d, edx",
    "mov     r12, rcx",
    "xor     esi, esi",
    "call    qword [rel GetCurrentProcess]",
    "mov     rbp, rax",
    "cmp     qword [rbx], rsi",
    "je      0x14001451e",
    "mov     dword [rsp+0x30], 0x2",
    "and     dword [rsp+0x28], esi",
    "and     dword [rsp+0x20], esi",
    "mov     dword [rbx+0x8], r14d",
    "mov     r9, rbx",
    "mov     r8, rax",
    "mov     rcx, rax",
    "mov     r13, qword [rbx]",
    "lea     r8, [rsp+0x90]",
    "mov     rcx, r12",
    "mov     rdx, r13",
    "xor     edi, edi",
    "call    NtCompareTokens",
    "test    eax, eax",
    "js      0x1400144bd",
    "lea     r11, [rsp+0x50]",
    "mov     eax, 0x1",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x38]",
    "mov     rsp, r11",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400f1820]  {u\"ERROR kull_m_token_getTokensUniq\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f18b0]  {u\"ERROR kull_m_token_equal ; NtCom\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "movzx   edi, byte [rsp+0x90]",
    "test    edi, edi",
    "je      0x1400144cf",
    "test    rbx, rbx",
    "jne     0x14001455c",
    "mov     rsi, rbx",
    "mov     rbx, qword [rbx+0x10]",
    "test    rbx, rbx",
    "jne     0x140014433",
    "mov     r9d, 0x4",
    "lea     rax, [rsp+0x98]",
    "lea     r8, [rsp+0x44]",
    "lea     edx, [r9+0x8]",
    "mov     rcx, r12",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel GetTokenInformation]",
    "test    eax, eax",
    "je      0x1400144cb",
    "test    rsi, rsi",
    "je      0x14001455c",
    "test    edi, edi",
    "jne     0x1400144df",
    "mov     r9d, 0x4",
    "lea     rax, [rsp+0x98]",
    "lea     r8, [rsp+0x40]",
    "lea     edx, [r9+0x8]",
    "mov     rcx, r13",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel GetTokenInformation]",
    "test    eax, eax",
    "je      0x1400144cb",
    "lea     edx, [rbx+0x18]",
    "lea     ecx, [rbx+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsi+0x10], rax",
    "test    rax, rax",
    "je      0x14001455c",
    "mov     eax, dword [rsp+0x40]",
    "xor     edi, edi",
    "cmp     dword [rsp+0x44], eax",
    "sete    dil",
    "jmp     0x1400144cb",
    "mov     dword [rsp+0x30], 0x2",
    "and     dword [rsp+0x28], ebx",
    "and     dword [rsp+0x20], ebx",
    "mov     dword [rax+0x8], r14d",
    "mov     r9, qword [rsi+0x10]",
    "mov     r8, rbp",
    "mov     rcx, rbp",
    "jmp     0x14001453b",
    "mov     rdx, r12",
    "call    qword [rel DuplicateHandle]",
    "test    eax, eax",
    "jne     0x14001455c"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}