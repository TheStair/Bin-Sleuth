{
  "address": "0x14002f07c",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rsi",
    "push    rdi",
    "sub     rsp, 0x20",
    "mov     rsi, rdx",
    "mov     rbx, rcx",
    "xor     edi, edi",
    "call    sub_140029cbc",
    "cmp     eax, 0x10",
    "jne     0x14002f0a7",
    "test    eax, eax",
    "jne     0x14002f191",
    "and     qword [rsi], rdi",
    "xor     eax, eax",
    "jmp     0x14002f191",
    "mov     rbx, qword [rsp+0x30]",
    "mov     rsi, qword [rsp+0x38]",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    ",
    "mov     r9, qword [rbx+0x88]",
    "mov     cl, byte [r9+0x8]",
    "test    cl, cl",
    "jne     0x14002f0c4",
    "movzx   eax, word [r9+0x18]",
    "add     rdi, rax",
    "cmp     byte [r9+0x2], cl",
    "jne     0x14002f0cc",
    "movzx   ecx, word [rbx+0x56]",
    "movzx   eax, word [r9+0x18]",
    "cmp     ecx, eax",
    "jne     0x14002f135",
    "cmp     byte [rbx+0x54], 0x0",
    "mov     rcx, rbx",
    "je      0x14002f189",
    "test    cl, cl",
    "je      0x14002f0fb",
    "mov     rdx, rcx",
    "mov     rcx, qword [r9+0x60]",
    "movzx   eax, byte [rcx+rdx*2]",
    "shl     eax, 0x8",
    "movsxd  r8, eax",
    "movzx   eax, byte [rcx+rdx*2+0x1]",
    "or      r8, rax",
    "movzx   eax, word [r9+0x1a]",
    "and     r8, rax",
    "add     r8, qword [r9+0x50]",
    "movzx   eax, byte [r8+0x2]",
    "movzx   edx, byte [r8+0x1]",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r8]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r8+0x3]",
    "movzx   eax, byte [r9+0x9]",
    "add     eax, 0x8",
    "movsxd  rcx, eax",
    "add     rcx, qword [r9+0x50]",
    "movzx   eax, byte [rcx+0x2]",
    "movzx   edx, byte [rcx+0x1]",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rcx]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rcx+0x3]",
    "jmp     0x14002f17a",
    "mov     qword [rsi], rdi",
    "call    sub_140029cbc",
    "call    sub_140029c74",
    "mov     r11, qword [rbx+0x88]",
    "movzx   eax, word [r11+0x18]",
    "cmp     word [rbx+0x56], ax",
    "jae     0x14002f0d0",
    "or      edx, eax",
    "mov     rcx, rbx",
    "call    sub_140029c00",
    "jmp     0x14002f0a7",
    "inc     word [rbx+0x56]",
    "mov     r9, r11"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}