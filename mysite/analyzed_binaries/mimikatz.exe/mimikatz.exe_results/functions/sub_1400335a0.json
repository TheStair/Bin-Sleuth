{
  "address": "0x1400335a0",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "decompress data using LZO/368a268678dc46ccbe6ee697869692a3",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "resolve function by parsing PE exports",
    "encrypt data using chaskey/9e1fd69e115146dfb5013a18fb36c920",
    "hash data using aphash/0032995a5e514e2ebf12018a2932c851",
    "load assembly via IAssembly/08d07504566140e580f88ed84a643e72",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x38",
    "mov     rax, qword [rcx]",
    "mov     rbx, rcx",
    "mov     ecx, dword [rdx+0x34]",
    "mov     qword [rsp+0x98], rax",
    "movsx   eax, word [rdx+0x100]",
    "mov     r12, rdx",
    "mov     dword [rsp+0x80], eax",
    "mov     eax, dword [rdx+0x80]",
    "mov     dword [rsp+0x88], ecx",
    "mov     dword [rsp+0x90], eax",
    "mov     eax, dword [rdx+0x38]",
    "mov     edi, 0x1",
    "lea     esi, [rcx+rax]",
    "test    ecx, ecx",
    "jne     0x1400335fc",
    "mov     eax, dword [rbx+0x90]",
    "lea     ecx, [rax+rax*2]",
    "mov     eax, dword [rdx+0x3c]",
    "lea     rdx, [rsp+0x90]",
    "lea     ecx, [rcx*8+0x7]",
    "and     ecx, 0xfffffff8",
    "sub     eax, ecx",
    "movsxd  r15, ecx",
    "mov     rcx, rbx",
    "add     r15, qword [rbx+0x88]",
    "movsxd  rbp, eax",
    "and     rbp, 0xfffffffffffffff8",
    "call    sub_1400327c4",
    "xor     r10d, r10d",
    "cmp     byte [r12+0x20], r10b",
    "je      0x140033649",
    "test    esi, esi",
    "jle     0x1400335fc",
    "mov     al, r10b",
    "mov     al, dil",
    "cmp     byte [r12+0x21], r10b",
    "jne     0x14003364c",
    "add     esi, edi",
    "and     eax, 0xfffffffc",
    "movsxd  r13, esi",
    "mov     rdi, r10",
    "mov     dword [rbx+0xc8], eax",
    "mov     rax, r10",
    "imul    r13, r13, 0x38",
    "add     r13, 0x7",
    "and     r13, 0xfffffffffffffff8",
    "cmp     r13, rbp",
    "jg      0x1400336a8",
    "mov     ecx, 0xa",
    "cmp     esi, ecx",
    "cmovl   esi, ecx",
    "btr     dword [rbx+0xc8], 0x7",
    "movzx   eax, al",
    "and     eax, edi",
    "shl     eax, 0x7",
    "or      dword [rbx+0xc8], eax",
    "mov     eax, dword [rbx+0xc8]",
    "cmp     byte [r12+0x103], r10b",
    "je      0x14003367c",
    "mov     rdi, r13",
    "sub     rbp, r13",
    "lea     rax, [r15+rbp]",
    "jmp     0x1400336ab",
    "add     rdi, r14",
    "sub     rbp, r14",
    "lea     rax, [r15+rbp]",
    "jmp     0x1400336da",
    "movsxd  rdx, dword [rsp+0x80]",
    "mov     qword [rbx+0x68], rax",
    "mov     rax, r10",
    "mov     r14, rdx",
    "imul    r14, r14, 0x38",
    "add     r14, 0x7",
    "and     r14, 0xfffffffffffffff8",
    "cmp     r14, rbp",
    "jg      0x1400336d7",
    "add     rdi, rax",
    "sub     rbp, rax",
    "lea     rcx, [r15+rbp]",
    "jmp     0x14003370e",
    "mov     qword [rbx+0x80], rax",
    "movsxd  rax, dword [rsp+0x90]",
    "mov     rcx, r10",
    "lea     rax, [rax*8+0x7]",
    "and     rax, 0xfffffffffffffff8",
    "cmp     rax, rbp",
    "mov     qword [rsp+0x20], rax",
    "jg      0x14003370b",
    "add     rdi, rax",
    "sub     rbp, rax",
    "lea     rcx, [r15+rbp]",
    "jmp     0x14003374a",
    "movsxd  r8, dword [rsp+0x88]",
    "mov     qword [rbx+0x70], rcx",
    "mov     rcx, r10",
    "mov     r9, r8",
    "shl     r9, 0x3",
    "mov     qword [rsp+0x90], r9",
    "lea     rax, [r9+0x7]",
    "and     rax, 0xfffffffffffffff8",
    "cmp     rax, rbp",
    "mov     qword [rsp+0x28], rax",
    "jg      0x140033747",
    "mov     rax, qword [r12+0x118]",
    "mov     edi, 0x1",
    "mov     qword [rbx+0xb0], rax",
    "movzx   eax, byte [r12+0x103]",
    "mov     qword [r12+0x118], r10",
    "shl     eax, 0x2",
    "xor     eax, dword [rbx+0xc8]",
    "and     eax, 0xc",
    "xor     dword [rbx+0xc8], eax",
    "cmp     byte [rbp+0x61], r10b",
    "je      0x140033854",
    "mov     rdx, rdi",
    "mov     rcx, rbp",
    "call    sub_140016c18",
    "xor     r10d, r10d",
    "mov     qword [rbx+0xf8], rax",
    "mov     r11, rax",
    "cmp     byte [rbp+0x61], r10b",
    "jne     0x1400337f1",
    "mov     rbp, qword [rsp+0x98]",
    "mov     qword [rbx+0x78], rcx",
    "cmp     rdi, r10",
    "je      0x140033808",
    "cmp     edx, r10d",
    "mov     rax, qword [rbx+0x80]",
    "mov     dword [rbx+0x2c], r8d",
    "mov     word [rbx+0x20], dx",
    "jle     0x140033882",
    "mov     word [rbx+0x20], r10w",
    "mov     dword [rbx+0x2c], r10d",
    "mov     dword [rbx+0x28], r10d",
    "jmp     0x1400338be",
    "mov     r9, qword [rsp+0x90]",
    "mov     r8d, dword [rsp+0x88]",
    "mov     edx, dword [rsp+0x80]",
    "mov     rcx, qword [rbx+0x68]",
    "cmp     rcx, r10",
    "jne     0x140033792",
    "cmp     esi, r10d",
    "mov     rax, qword [rbx+0x68]",
    "mov     dword [rbx+0x28], esi",
    "jle     0x1400338ad",
    "add     rax, 0x8",
    "or      dword [rbx+0x34], 0xffffffff",
    "mov     dword [rbx+0x24], 0x2df20da3",
    "mov     dword [rbx+0x38], r10d",
    "mov     byte [rbx+0xc2], 0x2",
    "mov     dword [rbx+0x3c], r10d",
    "mov     dword [rbx+0x30], edi",
    "mov     byte [rbx+0xc3], 0xff",
    "mov     dword [rbx+0x40], r10d",
    "mov     qword [rbx+0x50], r10",
    "add     rsp, 0x38",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rax, qword [rbx+0x80]",
    "mov     qword [rbx+0x68], rcx",
    "cmp     rax, r10",
    "jne     0x1400337ae",
    "cmp     r13, rdi",
    "jg      0x140033792",
    "mov     rcx, qword [rbx+0x78]",
    "mov     r8, r9",
    "xor     edx, edx",
    "call    memset",
    "xor     r10d, r10d",
    "add     rax, 0x8",
    "sub     edx, edi",
    "mov     qword [rax+0x20], rbp",
    "mov     word [rax], di",
    "mov     dword [rax+0x18], r10d",
    "add     rax, 0x38",
    "cmp     edx, r10d",
    "jg      0x14003386c",
    "mov     qword [rbx+0x80], rax",
    "mov     rax, qword [rbx+0x70]",
    "cmp     rax, r10",
    "jne     0x1400337cf",
    "cmp     r14, rdi",
    "jg      0x1400337ae",
    "sub     rdi, r13",
    "lea     rcx, [rdi+rax]",
    "mov     ecx, 0x80",
    "sub     esi, edi",
    "mov     qword [rax+0x20], rbp",
    "mov     word [rax], cx",
    "mov     dword [rax+0x18], r10d",
    "add     rax, 0x38",
    "cmp     esi, r10d",
    "jg      0x140033892",
    "mov     qword [rbx+0x70], rax",
    "mov     rax, qword [rbx+0x78]",
    "cmp     rax, r10",
    "jne     0x1400337ed",
    "mov     rcx, qword [rsp+0x20]",
    "cmp     rcx, rdi",
    "jg      0x1400337cf",
    "sub     rdi, r14",
    "lea     rax, [rdi+r11]",
    "mov     qword [rbx+0x78], rax",
    "mov     rcx, qword [rsp+0x28]",
    "cmp     rcx, rdi",
    "jg      0x1400337ed",
    "sub     rdi, rcx",
    "lea     rax, [rdi+r11]",
    "sub     rdi, rcx",
    "lea     rax, [rdi+r11]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}