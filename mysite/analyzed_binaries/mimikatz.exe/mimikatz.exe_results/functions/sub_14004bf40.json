{
  "address": "0x14004bf40",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     dword [rax+0x20], r9d",
    "mov     qword [rax+0x18], r8",
    "mov     qword [rax+0x10], rdx",
    "mov     qword [rax+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x98",
    "mov     r12, qword [rcx]",
    "mov     ebx, dword [rsp+0x100]",
    "mov     r15, rcx",
    "mov     ecx, 0x1",
    "mov     dword [rsp+0x4c], ebx",
    "mov     r13, r8",
    "add     ebx, ecx",
    "mov     byte [rsp+0x30], cl",
    "mov     r14, rdx",
    "lea     eax, [rbx+0x1]",
    "mov     dword [rsp+0x100], ebx",
    "mov     qword [rsp+0x88], r12",
    "lea     ebp, [rcx+rax]",
    "mov     dword [rsp+0x60], eax",
    "mov     dword [rsp+0x3c], eax",
    "mov     dword [rsp+0x38], ebp",
    "add     ebp, ecx",
    "mov     ebx, ebp",
    "add     ebp, ecx",
    "mov     dword [rsp+0x50], ebp",
    "add     ebp, ecx",
    "mov     dword [rsp+0x58], ebx",
    "mov     dword [rsp+0x54], ebp",
    "add     ebp, ecx",
    "mov     rcx, r15",
    "cmp     dword [r15+0x38], ebp",
    "mov     eax, ebp",
    "cmovg   eax, dword [r15+0x38]",
    "mov     dword [r15+0x38], eax",
    "call    sub_140065300",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x14004c717",
    "add     rsp, 0x98",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "test    r14, r14",
    "je      0x14004c717",
    "cmp     dword [r14+0x38], 0x0",
    "je      0x14004c717",
    "mov     rdx, qword [r14]",
    "lea     r8, [rel data_1400d751c]",
    "lea     rcx, [rel data_1400f5550]  {\"sqlite\\_%\"}",
    "mov     r9d, 0x5c",
    "call    sub_1400568c8",
    "test    eax, eax",
    "je      0x14004c717",
    "mov     rcx, qword [r14+0x70]",
    "mov     edi, 0xfff0bdc0",
    "mov     dword [rsp+0x40], edi",
    "test    rcx, rcx",
    "je      0x14004c04f",
    "mov     rax, qword [r12+0x20]",
    "mov     r8, qword [r14]",
    "xor     r9d, r9d",
    "movsxd  rcx, edi",
    "lea     edx, [r9+0x1c]",
    "shl     rcx, 0x5",
    "mov     rcx, qword [rcx+rax]",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, r15",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x14004c717",
    "mov     rax, qword [r12+0x20]",
    "xor     edi, edi",
    "add     rax, 0x18",
    "mov     dword [rsp+0x40], edi",
    "cmp     qword [rax], rcx",
    "je      0x14004c04f",
    "mov     eax, dword [rsp+0x108]",
    "mov     edx, 0x1",
    "mov     r9, r14",
    "mov     ecx, eax",
    "mov     dword [rsp+0x68], eax",
    "add     eax, edx",
    "mov     dword [rsp+0x34], eax",
    "add     eax, edx",
    "mov     edx, ecx",
    "cmp     dword [r15+0x34], eax",
    "mov     r8d, edi",
    "mov     rcx, r15",
    "cmovg   eax, dword [r15+0x34]",
    "mov     dword [rsp+0x20], 0x61",
    "mov     dword [r15+0x34], eax",
    "call    sub_14005a1e8",
    "mov     r8, qword [r14]",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "call    sub_1400323e0",
    "mov     r12, qword [r14+0x10]",
    "mov     edx, 0x8",
    "test    r12, r12",
    "je      0x14004c60b",
    "add     rax, 0x20",
    "inc     edi",
    "cmp     qword [rax], rcx",
    "jne     0x14004c040",
    "xor     r12d, r12d",
    "cmp     r13, r12",
    "jne     0x14004c717",
    "lea     r8d, [rdx-0x6]",
    "mov     dword [rsp+0x40], edi",
    "cmp     byte [rsp+0x30], r12b",
    "je      0x14004c717",
    "mov     rax, qword [r12+0x48]",
    "neg     rax",
    "sbb     cl, cl",
    "and     cl, byte [rsp+0x30]",
    "test    byte [r14+0x40], 0x20",
    "mov     byte [rsp+0x30], cl",
    "je      0x14004c72b",
    "cmp     r13, r12",
    "jne     0x14004c5fd",
    "mov     ebx, dword [rsp+0x54]",
    "mov     r8d, dword [rsp+0x68]",
    "lea     edx, [r12+0x5d]",
    "mov     r9d, ebx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "lea     edx, [r12+0x14]",
    "xor     r9d, r9d",
    "mov     r8d, ebx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x50]",
    "lea     edx, [r12+0x49]",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "mov     ebx, eax",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r13d, dword [rsp+0x38]",
    "mov     r8d, dword [rsp+0x58]",
    "lea     r9d, [r12+0x3]",
    "lea     edx, [r12+0x5c]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "lea     r8, [rel data_1400f555c]",
    "xor     r9d, r9d",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "mov     ebp, dword [rsp+0x4c]",
    "mov     edi, dword [rsp+0xf8]",
    "lea     edx, [r12+0x79]",
    "mov     r9d, ebp",
    "mov     r8d, edi",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "lea     edx, [r12+0x7a]",
    "mov     r9d, r13d",
    "mov     r8d, edi",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "movsxd  rax, dword [rsi+0x90]",
    "cmp     eax, r12d",
    "jle     0x14004c704",
    "movzx   ebx, word [r12+0x60]",
    "mov     r8, qword [r12]",
    "test    byte [r12+0x64], dl",
    "je      0x14004c124",
    "mov     eax, dword [r12+0x64]",
    "and     al, 0x3",
    "cmp     al, r8b",
    "jne     0x14004c72b",
    "mov     r12, qword [r12+0x28]",
    "test    r12, r12",
    "jne     0x14004c0e0",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rsi+0x88]",
    "lea     edx, [r12+0x8]",
    "mov     word [rax+rcx*8-0x16], dx",
    "lea     r13d, [rbx-0x1]",
    "movzx   r13d, word [r12+0x5e]",
    "dec     r13d",
    "jmp     0x14004c128",
    "movzx   ebx, word [r12+0x5e]",
    "mov     r8, qword [r14]",
    "test    r13, r13",
    "je      0x14004c0ee",
    "mov     r8d, dword [rsp+0x34]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x24]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x3c]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x5c], eax",
    "lea     edx, [r8+0x46]",
    "call    sub_140032364",
    "mov     eax, dword [rsi+0x90]",
    "mov     dword [rsp+0x44], eax",
    "test    r13d, r13d",
    "jle     0x14004c484",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rsi+0x88]",
    "mov     edx, 0x2",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     edx, dword [rsp+0x50]",
    "mov     rcx, rsi",
    "call    sub_1400323e0",
    "mov     r8d, dword [rsp+0x34]",
    "lea     r11d, [r13+rbp]",
    "cmp     dword [r15+0x38], r11d",
    "mov     edx, 0x61",
    "mov     rcx, rsi",
    "cmovg   r11d, dword [r15+0x38]",
    "mov     dword [rsp+0x20], edi",
    "mov     dword [r15+0x38], r11d",
    "mov     r9d, dword [r12+0x58]",
    "call    sub_140032364",
    "mov     rdx, r12",
    "mov     rcx, r15",
    "call    sub_140032d08",
    "mov     r9d, dword [rsp+0x60]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r8d, ebx",
    "mov     edx, 0x46",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     ebx, dword [rsp+0x100]",
    "movzx   r8d, word [r12+0x5e]",
    "and     dword [rsp+0x20], 0x0",
    "lea     r9d, [rbx+0x2]",
    "mov     edx, 0x46",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "xor     r8d, r8d",
    "lea     r9d, [rbx+0x1]",
    "lea     edx, [r8+0x3f]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "lea     r8, [rel data_1400d7360]",
    "mov     r9d, 0xfffffff8",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "movsxd  rax, dword [rsi+0x90]",
    "test    eax, eax",
    "jle     0x14004c1f7",
    "mov     r13d, dword [rsp+0x38]",
    "mov     r9d, ebx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r13d",
    "mov     r13d, 0x1",
    "lea     edx, [r13+0x3e]",
    "mov     r8d, r13d",
    "call    sub_140032364",
    "lea     r9d, [r13-0x9]",
    "lea     r8, [rel data_1400d73b0]",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "movsxd  r11, dword [rsi+0x90]",
    "test    r11d, r11d",
    "jle     0x14004c4db",
    "dec     dword [r15+0x44]",
    "mov     eax, dword [r15+0x44]",
    "mov     rcx, qword [rsp+0x88]",
    "movsxd  rdx, r13d",
    "mov     dword [rsp+0x48], eax",
    "shl     rdx, 0x2",
    "call    sub_140016c18",
    "mov     rbx, rax",
    "mov     qword [rsp+0x78], rax",
    "test    rax, rax",
    "je      0x14004c5eb",
    "mov     r9d, dword [rsp+0x44]",
    "mov     r8d, dword [rsp+0x34]",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0x5",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     eax, dword [rsp+0x54]",
    "xor     r8d, r8d",
    "lea     edx, [r8+0x3f]",
    "mov     r9d, ebx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "lea     r8, [rel data_1400d7420]",
    "mov     r9d, 0xfffffff8",
    "mov     rcx, rsi",
    "mov     edx, eax",
    "call    sub_140032c40",
    "movsxd  r11, dword [rsi+0x90]",
    "test    r11d, r11d",
    "jle     0x14004c545",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "lea     edx, [r13+0x1]",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     r13, qword [rsp+0xf0]",
    "mov     r8d, 0x2",
    "lea     edx, [r8+0x6]",
    "xor     edi, edi",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "lea     edx, [rdi+0xb]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "mov     eax, dword [rsi+0x90]",
    "mov     dword [rsp+0x44], eax",
    "lea     eax, [rdi+0x1]",
    "cmp     r13d, eax",
    "jne     0x14004c2c0",
    "mov     ebx, dword [rsp+0x38]",
    "mov     r8d, dword [rsp+0x58]",
    "mov     r9d, 0x3",
    "lea     edx, [r9+0x59]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "lea     r8, [rel data_1400f555c]",
    "xor     r9d, r9d",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "mov     r13d, dword [rsp+0xf8]",
    "mov     r9d, dword [rsp+0x4c]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r8d, r13d",
    "mov     edx, 0x79",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     eax, dword [rsp+0x4c]",
    "mov     r9d, ebx",
    "mov     r8d, r13d",
    "mov     edx, 0x7a",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "movsxd  r11, dword [rsi+0x90]",
    "test    r11d, r11d",
    "jle     0x14004c5d6",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "mov     word [rax+rcx*8-0x16], r13w",
    "cmp     r13d, edi",
    "jle     0x14004c3b3",
    "cmp     word [r12+0x5e], ax",
    "jne     0x14004c2c0",
    "mov     edx, dword [rsp+0x5c]",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "mov     edx, 0x8",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     r9d, dword [rsp+0x3c]",
    "mov     r8d, r13d",
    "mov     edx, 0x46",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x48]",
    "xor     r8d, r8d",
    "lea     edx, [r8+0xb]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0x44]",
    "mov     rcx, rsi",
    "dec     edx",
    "call    sub_140032d34",
    "cmp     r13d, edi",
    "mov     ecx, dword [rsi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "mov     ebx, edi",
    "jle     0x14004c45b",
    "mov     rax, rdi",
    "mov     qword [rsp+0x80], rbx",
    "mov     qword [rsp+0x70], rax",
    "mov     r14d, eax",
    "cmp     byte [r12+0x62], dil",
    "je      0x14004c2c0",
    "mov     edx, dword [rsp+0x48]",
    "mov     rcx, rsi",
    "call    sub_14003278c",
    "mov     rdx, qword [rsp+0x78]",
    "mov     rcx, qword [rsp+0x88]",
    "call    sub_1400169a8",
    "mov     edi, dword [rsp+0x40]",
    "mov     ebx, dword [rsp+0x100]",
    "mov     rdi, qword [rsp+0x78]",
    "mov     r14d, dword [rsp+0x34]",
    "mov     r15d, 0x1",
    "mov     rax, qword [rsp+0x70]",
    "add     rdx, 0x4",
    "inc     r14d",
    "add     rax, 0x8",
    "cmp     r14d, r13d",
    "mov     qword [rsp+0x80], rdx",
    "mov     qword [rsp+0x70], rax",
    "jl      0x14004c2dc",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rsi+0x88]",
    "mov     r8d, 0x80",
    "mov     word [rax+rcx*8-0x16], r8w",
    "mov     r9d, dword [rsp+0x48]",
    "lea     edx, [rdi+0x33]",
    "mov     r8d, ebp",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "mov     edx, dword [rdi]",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     r9d, ebx",
    "mov     dword [rax+0x8], ecx",
    "lea     eax, [rbx+rbp]",
    "mov     r8d, r14d",
    "mov     edx, 0x5a",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "add     ebx, r15d",
    "add     rdi, 0x4",
    "cmp     ebx, r13d",
    "jl      0x14004c412",
    "mov     r14, qword [rsp+0xe8]",
    "mov     r15, qword [rsp+0xe0]",
    "mov     rdx, qword [r12+0x40]",
    "mov     rcx, r15",
    "mov     rdx, qword [rax+rdx]",
    "call    sub_14004f5b4",
    "mov     r9d, dword [rsp+0x3c]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r8d, r14d",
    "mov     edx, 0x46",
    "mov     rcx, rsi",
    "mov     rdi, rax",
    "call    sub_140032364",
    "mov     ebx, dword [rsp+0x38]",
    "mov     r8d, dword [rsp+0x34]",
    "mov     r9d, r14d",
    "mov     edx, 0x5a",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "lea     r11d, [r14+rbp]",
    "lea     edx, [r9+0x34]",
    "mov     r8d, ebx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r11d",
    "call    sub_140032364",
    "mov     r9d, 0xfffffffe",
    "mov     r8, rdi",
    "mov     rcx, rsi",
    "mov     edx, eax",
    "mov     ebx, eax",
    "call    sub_140032c40",
    "mov     rdx, qword [rsp+0x80]",
    "mov     dword [rdx], ebx",
    "movsxd  rax, dword [rsi+0x90]",
    "xor     edi, edi",
    "cmp     eax, edi",
    "jle     0x14004c385",
    "mov     r14, qword [rsp+0xe8]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}