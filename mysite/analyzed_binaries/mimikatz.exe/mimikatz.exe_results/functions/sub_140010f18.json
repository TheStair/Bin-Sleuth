{
  "address": "0x140010f18",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "mov     qword [r11+0x20], r9",
    "mov     qword [r11+0x18], r8",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xb0",
    "mov     r12, r8",
    "mov     r15, rdx",
    "mov     rdi, rcx",
    "xor     r14d, r14d",
    "mov     dword [rsp+0x48], r14d",
    "xor     r13d, r13d",
    "mov     dword [rsp+0x44], r13d",
    "and     qword [rsp+0x50], r13",
    "and     qword [r11-0x50], r13",
    "xor     eax, eax",
    "mov     qword [r11-0x48], rax",
    "and     dword [rsp+0x40], eax",
    "and     dword [rsp+0x60], eax",
    "mov     qword [r11-0x70], rax",
    "xor     edx, edx",
    "lea     r8d, [r14+0x38]",
    "mov     rbx, qword [rsp+0x118]",
    "mov     rcx, rbx",
    "call    memset",
    "mov     dword [rbx], 0x34",
    "mov     dword [rbx+0x4], 0x4008000",
    "mov     r9, rbx",
    "lea     r8, [rsp+0x50]",
    "lea     rdx, [rel data_14013f700]",
    "mov     rcx, rdi",
    "call    sub_140011384",
    "test    eax, eax",
    "je      0x14001133e",
    "mov     edi, 0x1",
    "mov     r12, qword [rsp+0x108]",
    "mov     rbx, qword [rsp+0x100]",
    "mov     dword [rsp+0x90], 0x2",
    "mov     qword [rsp+0x88], r12",
    "lea     rax, [rsp+0x60]",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0x40]",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0x88]",
    "mov     qword [rsp+0x20], rax",
    "lea     edi, [r14+0x1]",
    "mov     r9d, edi",
    "mov     r8, qword [rsp+0x50]",
    "lea     rdx, [rel data_1400de77e]",
    "lea     rcx, [rel data_1400de930]",
    "call    NdrClientCall2",
    "test    eax, eax",
    "jne     0x1400110fd",
    "xor     edi, edi",
    "test    r13d, r13d",
    "jne     0x140011369",
    "mov     r8d, eax",
    "mov     edx, eax",
    "lea     rcx, [rel data_1400ef190]  {u\"ERROR kull_m_rpc_drsr_getDomainA\u2026\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x40]",
    "cmp     edx, 0x2",
    "jne     0x1400110a8",
    "mov     eax, edi",
    "mov     rbx, qword [rsp+0xe0]",
    "add     rsp, 0xb0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "test    r12, r12",
    "jne     0x140011367",
    "mov     rbx, qword [rsp+0x100]",
    "test    rbx, rbx",
    "je      0x14001123e",
    "mov     rdx, r12",
    "lea     rcx, [rsp+0x78]",
    "call    RtlInitUnicodeString",
    "mov     rdx, qword [rsp+0x110]",
    "lea     rcx, [rsp+0x78]",
    "call    RtlGUIDFromString",
    "xor     r13d, r13d",
    "test    eax, eax",
    "setns   r13b",
    "mov     dword [rsp+0x44], r13d",
    "mov     rbx, qword [rsp+0x100]",
    "jmp     0x14001130a",
    "lea     rcx, [rel data_1400ef0e0]  {u\"ERROR kull_m_rpc_drsr_getDomainA\u2026\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x40]",
    "xor     ebx, ebx",
    "mov     dword [rsp+0x58], ebx",
    "test    rbx, rbx",
    "je      0x140011369",
    "mov     qword [rsp+0x20], r15",
    "xor     r9d, r9d",
    "lea     r8, [rsp+0xa0]",
    "lea     rdx, [rsp+0x70]",
    "mov     rcx, qword [rsp+0xf0]",
    "call    sub_1400141e8",
    "test    eax, eax",
    "je      0x14001130a",
    "lea     rdx, [rel data_1400ef238]  {u\"S-1-5-21-\"}",
    "mov     rcx, rbx",
    "call    qword [rel wcsstr]",
    "cmp     rax, rbx",
    "jne     0x140011182",
    "jmp     0x140011353",
    "lea     rcx, [rel data_1400eff60]  {u\"ERROR kull_m_rpc_drsr_free_DRS_M\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x14001110e",
    "cmp     edx, 0x2",
    "je      0x1400110dc",
    "test    r14d, r14d",
    "jne     0x1400110b8",
    "test    r14d, r14d",
    "jne     0x140011086",
    "lea     rdx, [rsp+0x98]",
    "mov     rcx, qword [rsp+0x70]",
    "call    ConvertSidToStringSidW",
    "test    eax, eax",
    "je      0x1400112fc",
    "mov     edx, 0x40",
    "mov     rcx, rbx",
    "call    qword [rel wcschr]",
    "test    rax, rax",
    "je      0x14001119c",
    "mov     edx, 0xb",
    "jmp     0x1400111cb",
    "test    r14d, r14d",
    "je      0x140011367",
    "mov     r12, qword [rsp+0x108]",
    "test    r12, r12",
    "je      0x140011155",
    "lea     rdx, [rel sub_14001224c]",
    "lea     rcx, [rsp+0x60]",
    "call    sub_140010a8c",
    "jmp     0x14001110e",
    "cmp     edx, 0x3",
    "je      0x1400110ef",
    "cmp     edx, edi",
    "je      0x1400110ef",
    "mov     rdx, r15",
    "lea     rcx, [rel data_1400ef030]  {u\"ERROR kull_m_rpc_drsr_getDomainA\u2026\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x40]",
    "jmp     0x1400110b8",
    "add     ebx, edi",
    "mov     dword [rsp+0x58], ebx",
    "jmp     0x14001101b",
    "mov     r12d, ebx",
    "imul    r12, r12, 0x88",
    "mov     rdx, qword [rsp+0x68]",
    "mov     rdx, qword [r12+rdx+0x8]",
    "mov     rcx, r15",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "je      0x140011063",
    "mov     rcx, qword [rsp+0xa0]",
    "call    qword [rel LocalFree]",
    "and     qword [rsp+0x28], 0x0",
    "lea     rax, [rsp+0x118]",
    "mov     qword [rsp+0x20], rax",
    "mov     r9d, 0x6",
    "mov     r8, qword [rsp+0x98]",
    "lea     edx, [r9+0x5]",
    "mov     rcx, qword [rsp+0x50]",
    "call    sub_1400114c4",
    "test    eax, eax",
    "je      0x1400112f1",
    "mov     edx, 0x3d",
    "mov     rcx, rbx",
    "call    qword [rel wcschr]",
    "test    rax, rax",
    "je      0x1400111b3",
    "mov     edx, 0x8",
    "jmp     0x1400111cb",
    "and     qword [rsp+0x28], 0x0",
    "lea     rax, [rsp+0x118]",
    "mov     qword [rsp+0x20], rax",
    "mov     r9d, 0x6",
    "mov     r8, rbx",
    "mov     rcx, qword [rsp+0x50]",
    "call    sub_1400114c4",
    "test    eax, eax",
    "je      0x14001130a",
    "cmp     edx, 0xffffffff",
    "je      0x1400110ef",
    "cmp     ebx, dword [rsp+0x60]",
    "jae     0x14001108e",
    "mov     r14d, edi",
    "mov     dword [rsp+0x48], edi",
    "mov     rax, qword [rsp+0x68]",
    "movdqu  xmm0, xmmword [r12+rax+0x74]",
    "mov     rax, qword [rsp+0xf8]",
    "movdqu  xmmword [rax], xmm0",
    "mov     edx, dword [rsp+0x40]",
    "mov     rdx, qword [rsp+0x68]",
    "mov     rdx, qword [r12+rdx]",
    "mov     rcx, r15",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "je      0x140011063",
    "mov     rcx, qword [rsp+0x70]",
    "call    qword [rel LocalFree]",
    "mov     rdx, qword [rsp+0x118]",
    "lea     rcx, [rsp+0x78]",
    "call    RtlInitUnicodeString",
    "mov     rdx, qword [rsp+0x110]",
    "lea     rcx, [rsp+0x78]",
    "call    RtlGUIDFromString",
    "xor     r13d, r13d",
    "test    eax, eax",
    "setns   r13b",
    "mov     dword [rsp+0x44], r13d",
    "mov     rcx, qword [rsp+0x118]",
    "call    qword [rel LocalFree]",
    "mov     dx, 0x5c",
    "mov     rcx, rbx",
    "call    qword [rel wcschr]",
    "neg     rax",
    "sbb     edx, edx",
    "and     edx, 0x9",
    "add     edx, 0xfffffff9",
    "mov     edx, edi",
    "jmp     0x1400111cb",
    "mov     rdx, qword [rsp+0x118]",
    "lea     rcx, [rsp+0x78]",
    "call    RtlInitUnicodeString",
    "mov     rdx, qword [rsp+0x110]",
    "lea     rcx, [rsp+0x78]",
    "call    RtlGUIDFromString",
    "xor     r13d, r13d",
    "test    eax, eax",
    "setns   r13b",
    "mov     dword [rsp+0x44], r13d",
    "mov     rcx, qword [rsp+0x118]",
    "call    qword [rel LocalFree]",
    "jmp     0x14001130a",
    "mov     r8d, edx",
    "lea     rcx, [rel data_1400efff0]  {u\"ERROR kull_m_rpc_drsr_free_DRS_M\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x14001110e",
    "mov     edx, dword [rsp+0x40]",
    "jmp     0x140011086"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}