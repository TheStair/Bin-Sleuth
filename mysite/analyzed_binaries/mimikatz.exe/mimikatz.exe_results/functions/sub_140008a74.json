{
  "address": "0x140008a74",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x70",
    "xor     esi, esi",
    "mov     rbx, r9",
    "mov     r12, rdx",
    "mov     r13, rcx",
    "cmp     dword [rsp+0xb0], esi",
    "je      0x140008acb",
    "mov     edi, r8d",
    "test    rbx, rbx",
    "je      0x140008acb",
    "mov     ebp, 0x14",
    "mov     r8d, edi",
    "lea     rcx, [rsp+0x50]",
    "cmp     edi, ebp",
    "mov     rdx, r12",
    "cmova   r8, rbp",
    "call    memcpy",
    "mov     rcx, rbx",
    "call    qword [rel lstrlenW]",
    "lea     rcx, [rsp+0x50]",
    "mov     ebp, 0x14",
    "lea     eax, [rax+rax+0x2]",
    "mov     dword [rsp+0x30], ebp",
    "mov     qword [rsp+0x28], rcx",
    "mov     r9, rbx",
    "mov     r8d, edi",
    "mov     rdx, r12",
    "mov     ecx, 0x8004",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140003e0c",
    "mov     esi, eax",
    "jmp     0x140008b29",
    "lea     edi, [rsi+0x10]",
    "cmp     r8d, edi",
    "jne     0x140008acb",
    "mov     rax, qword [rsp+0xc0]",
    "mov     r9, qword [rsp+0xb8]",
    "lea     rdx, [rsp+0x50]",
    "mov     r8d, ebp",
    "mov     rcx, r13",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140008b78",
    "mov     esi, eax",
    "test    esi, esi",
    "je      0x140008b59",
    "test    rbx, rbx",
    "je      0x140008b32",
    "movdqu  xmm0, xmmword [rdx]",
    "lea     rcx, [rax-0x48]",
    "mov     r8, rbx",
    "mov     edx, edi",
    "movdqu  xmmword [rax-0x48], xmm0",
    "call    sub_1400088dc",
    "lea     r12, [rsp+0x40]",
    "jmp     0x140008ace",
    "lea     r11, [rsp+0x70]",
    "mov     eax, esi",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x28]",
    "mov     rsi, qword [r11+0x30]",
    "mov     rsp, r11",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "test    rbx, rbx",
    "je      0x140008b0e"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}