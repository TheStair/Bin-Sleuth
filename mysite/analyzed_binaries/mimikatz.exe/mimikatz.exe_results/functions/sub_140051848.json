{
  "address": "0x140051848",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x50",
    "mov     rax, qword [rdx+0x18]",
    "mov     r12d, dword [rcx+0x34]",
    "mov     rbp, rdx",
    "mov     rdx, qword [rcx]",
    "mov     qword [rsp+0xa8], rax",
    "lea     eax, [r12+0x1]",
    "mov     dword [rsp+0x40], eax",
    "inc     eax",
    "mov     rdi, rcx",
    "mov     dword [rcx+0x34], eax",
    "mov     rcx, qword [rbp+0x30]",
    "mov     r15d, r8d",
    "mov     dword [rsp+0x98], r12d",
    "mov     ebx, 0xfff0bdc0",
    "mov     r8d, 0x1",
    "test    rcx, rcx",
    "je      0x1400518ba",
    "mov     rax, qword [rdx+0x20]",
    "mov     r8, qword [rbp]",
    "xor     r9d, r9d",
    "movsxd  rcx, ebx",
    "lea     edx, [r9+0x1b]",
    "shl     rcx, 0x5",
    "mov     rcx, qword [rcx+rax]",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, rdi",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x140051c9e",
    "mov     rax, qword [rdx+0x20]",
    "xor     ebx, ebx",
    "add     rax, 0x18",
    "jmp     0x1400518b5",
    "mov     rbx, qword [rsp+0xa0]",
    "add     rsp, 0x50",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, rdi",
    "call    sub_140065300",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140051c9e",
    "cmp     qword [rax], rcx",
    "jne     0x1400518ae",
    "test    r15d, r15d",
    "js      0x14005190c",
    "add     ebx, r8d",
    "add     rax, 0x20",
    "mov     eax, dword [rbp+0x58]",
    "mov     dword [rsp+0x90], eax",
    "mov     dword [rsp+0x90], r15d",
    "jmp     0x140051916",
    "movzx   ecx, word [rbp+0x5e]",
    "xor     r9d, r9d",
    "mov     r8d, r14d",
    "mov     dword [rsp+0x20], ecx",
    "lea     edx, [r9+0x72]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r9d, 0xfffffff7",
    "mov     r8, r13",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "mov     r9, qword [rsp+0xa8]",
    "mov     r8d, ebx",
    "mov     edx, r12d",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], 0x61",
    "call    sub_14005a1e8",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x24]",
    "mov     r8d, r12d",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     cl, byte [rdi+0x1f]",
    "xor     edx, edx",
    "mov     dword [rsp+0xa8], eax",
    "cmp     cl, dl",
    "jne     0x1400519b1",
    "inc     dword [rax]",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "call    sub_140053f50",
    "mov     r14d, dword [rdi+0x34]",
    "lea     ecx, [r14+0x1]",
    "mov     r13, rax",
    "mov     dword [rdi+0x34], ecx",
    "test    rax, rax",
    "je      0x140051936",
    "dec     cl",
    "movzx   eax, cl",
    "mov     byte [rdi+0x1f], al",
    "mov     r12d, dword [rdi+rax*4+0xbc]",
    "inc     dword [rdi+0x38]",
    "mov     r12d, dword [rdi+0x38]",
    "jmp     0x1400519c1",
    "mov     r9d, dword [rsp+0xa8]",
    "mov     r8d, dword [rsp+0x98]",
    "and     dword [rsp+0x20], 0x0",
    "inc     r9d",
    "mov     edx, 0x5",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0xa8]",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "test    r15d, r15d",
    "jns     0x140051a8b",
    "mov     rcx, qword [rdi+0x10]",
    "call    sub_14003278c",
    "mov     rax, qword [rdi+0x90]",
    "mov     r8d, dword [rsp+0x98]",
    "mov     dword [rsp+0x38], edx",
    "cmp     rax, rdx",
    "mov     qword [rsp+0x30], rdx",
    "mov     rcx, rdi",
    "cmovne  rcx, rax",
    "lea     rax, [rsp+0x44]",
    "mov     r9d, r12d",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x20], edx",
    "mov     byte [rcx+0x20], 0x1",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "call    sub_140055bac",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r12d",
    "mov     r8d, r14d",
    "mov     edx, 0x83",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0x44]",
    "test    edx, edx",
    "je      0x140051a2c",
    "mov     r9d, dword [rsp+0x90]",
    "mov     dword [rsp+0x20], ebx",
    "mov     ebx, dword [rsp+0x40]",
    "mov     r8d, ebx",
    "mov     edx, 0x62",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r9d, 0xfffffff7",
    "mov     r8, r13",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "movsxd  r11, dword [rsi+0x90]",
    "xor     r13d, r13d",
    "cmp     r11d, r13d",
    "mov     eax, 0x10",
    "jle     0x140051af0",
    "mov     r8d, dword [rsp+0x90]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, ebx",
    "mov     edx, 0x89",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8d, r14d",
    "mov     rcx, rsi",
    "lea     edx, [r9+0x22]",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "mov     r15d, eax",
    "cmp     byte [rbp+0x62], r13b",
    "je      0x140051b7c",
    "cmp     r15d, r13d",
    "mov     edx, r13d",
    "lea     rcx, [r11+r11*2]",
    "cmovge  dx, ax",
    "mov     rax, qword [rsi+0x88]",
    "or      dx, 0x1",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     rax, qword [rdi+0x90]",
    "mov     rcx, rdi",
    "cmp     rax, r13",
    "cmovne  rcx, rax",
    "mov     eax, 0x1",
    "mov     byte [rcx+0x21], al",
    "mov     r13d, dword [rsi+0x90]",
    "mov     r9d, 0x1",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "lea     edx, [r9+0xa]",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "movzx   ecx, word [rbp+0x5e]",
    "mov     r13d, dword [rsi+0x90]",
    "mov     dword [rsp+0x28], ecx",
    "mov     r9d, eax",
    "mov     r8d, r14d",
    "mov     edx, 0x7d",
    "mov     rcx, rsi",
    "mov     ebx, eax",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032678",
    "mov     r8, rbp",
    "mov     edx, 0x2",
    "mov     rcx, rdi",
    "call    sub_140053a88",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     ebx, dword [rsp+0x40]",
    "mov     dword [rax+0x8], ecx",
    "jmp     0x140051b9c",
    "xor     ebp, ebp",
    "xor     ebp, ebp",
    "xor     r9d, r9d",
    "mov     r8d, ebx",
    "mov     edx, 0x82",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "jmp     0x140051bd7",
    "mov     r9d, r12d",
    "mov     r8d, r14d",
    "mov     edx, 0x7e",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "bt      dword [rbp+0x64], 0x9",
    "jb      0x140051bd5",
    "cmp     r12d, ebp",
    "je      0x140051c2e",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "mov     edx, 0x10",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     r9d, r12d",
    "mov     r8d, ebx",
    "mov     edx, 0x84",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "movsxd  r11, dword [rsi+0x90]",
    "cmp     r11d, ebp",
    "jle     0x140051c0f",
    "mov     r9d, r13d",
    "mov     r8d, r14d",
    "mov     edx, 0x3",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "mov     edx, r15d",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     r8d, dword [rsp+0x98]",
    "xor     r9d, r9d",
    "mov     dword [rax+0x8], ecx",
    "mov     rcx, rsi",
    "lea     edi, [r9+0x75]",
    "mov     dword [rsp+0x20], ebp",
    "mov     edx, edi",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8d, ebx",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8d, r14d",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x140051c2e",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], r12d",
    "mov     eax, 0x1",
    "add     byte [rdi+0x1f], al"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}