{
  "address": "0x14005d1fc",
  "rules": [
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/7a997b34591146dbbd4411d920ff141c",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/14b9db6dcaf34a3e86e9217d3cc476a8",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data using aphash/98bdcb90423346b7a1fc9c166925c881",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/2ee106c7c5d34df799b377fb04fb2ee1",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/5d37b64795ca4da78dcc19574a757de4",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x60",
    "mov     rax, qword [rcx]",
    "xor     ebp, ebp",
    "mov     r14d, r9d",
    "mov     rbx, r8",
    "mov     rsi, rdx",
    "mov     rdi, rcx",
    "mov     qword [rsp+0x50], rax",
    "mov     dword [rsp+0x44], ebp",
    "mov     dword [rsp+0x40], ebp",
    "mov     dword [rsp+0x3c], ebp",
    "cmp     r8, rbp",
    "je      0x14005db61",
    "xor     eax, eax",
    "cmp     qword [rcx+0x178], rbp",
    "jne     0x14005db61",
    "cmp     qword [r8+0x68], rbp",
    "jne     0x14005db61",
    "call    sub_14006b428",
    "cmp     rax, rbp",
    "jne     0x14005db61",
    "cmp     dword [rsi+0x54], ebp",
    "jne     0x14005db61",
    "cmp     r14d, 0xb",
    "jne     0x14005d28b",
    "mov     r8, qword [rbx+0x28]",
    "mov     r13d, 0x1",
    "cmp     dword [r8], r13d",
    "jne     0x14005db61",
    "cmp     word [rsi+0x44], bp",
    "jl      0x14005d285",
    "cmp     qword [r8+0x30], rbp",
    "jne     0x14005db61",
    "mov     r14d, 0x2",
    "movzx   r14d, byte [rsi+0x4c]",
    "cmp     r14d, 0xb",
    "jne     0x14005d28b",
    "cmp     qword [rbx+0x30], rbp",
    "jne     0x14005db61",
    "cmp     qword [rbx+0x48], rbp",
    "jne     0x14005db61",
    "cmp     qword [rbx+0x38], rbp",
    "jne     0x14005db61",
    "cmp     qword [rbx+0x60], rbp",
    "jne     0x14005db61",
    "cmp     qword [rbx+0x50], rbp",
    "jne     0x14005db61",
    "test    byte [rbx+0xc], r13b",
    "jne     0x14005db61",
    "mov     rax, qword [rbx]",
    "cmp     dword [rax], r13d",
    "jne     0x14005db61",
    "mov     rax, qword [rax+0x8]",
    "cmp     byte [rax], 0xaf",
    "jne     0x14005db61",
    "add     r8, 0x8",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "call    sub_14004e084",
    "xor     r9d, r9d",
    "mov     r12, rax",
    "cmp     rax, r9",
    "je      0x14005db61",
    "mov     eax, dword [rsi+0x38]",
    "cmp     dword [r12+0x38], eax",
    "jne     0x14005d333",
    "mov     ecx, dword [rsi+0x40]",
    "mov     eax, dword [r12+0x40]",
    "shr     ecx, 0x5",
    "shr     eax, 0x5",
    "not     ecx",
    "not     eax",
    "xor     ecx, eax",
    "test    r13b, cl",
    "jne     0x14005db61",
    "mov     rax, qword [rsi+0x70]",
    "cmp     qword [r12+0x70], rax",
    "je      0x14005db61",
    "cmp     dword [r12+0x54], r9d",
    "jne     0x14005db61",
    "cmp     qword [r12+0x18], r9",
    "jne     0x14005db61",
    "movzx   ecx, word [rsi+0x46]",
    "cmp     cx, word [r12+0x46]",
    "jne     0x14005db61",
    "movzx   eax, word [r12+0x44]",
    "cmp     word [rsi+0x44], ax",
    "jne     0x14005db61",
    "movsx   r15d, cx",
    "mov     r13d, r9d",
    "cmp     r15d, r9d",
    "jle     0x14005d465",
    "mov     rbp, qword [rsi+0x10]",
    "mov     r13d, 0x1",
    "mov     rbx, qword [rsi+0x8]",
    "mov     r11, qword [r12+0x8]",
    "add     rbx, 0x8",
    "add     r11, 0x10",
    "mov     rdx, qword [rsi+0x30]",
    "cmp     rdx, r9",
    "je      0x14005d500",
    "mov     eax, dword [rsp+0x3c]",
    "cmp     byte [rbp+0x62], r9b",
    "mov     rbx, qword [r12+0x10]",
    "cmovne  eax, r13d",
    "mov     dword [rsp+0x3c], eax",
    "cmp     rbx, r9",
    "je      0x14005db61",
    "mov     rcx, qword [rbx+0x8]",
    "mov     rdx, qword [r11]",
    "cmp     rcx, r9",
    "jne     0x14005d3c7",
    "mov     rax, qword [rsp+0x50]",
    "bt      qword [rax+0x30], 0xe",
    "jae     0x14005d517",
    "mov     rcx, qword [r12+0x30]",
    "or      r8d, 0xffffffff",
    "call    sub_140048d24",
    "xor     r9d, r9d",
    "cmp     eax, r9d",
    "jne     0x14005db61",
    "xor     edi, edi",
    "cmp     rdx, r9",
    "je      0x14005db61",
    "neg     rdx",
    "sbb     eax, eax",
    "jmp     0x14005d3d8",
    "test    byte [rax+0x30], 0x80",
    "jne     0x14005db61",
    "cmp     qword [rsi+0x20], r9",
    "jne     0x14005db61",
    "cmp     rbx, rdi",
    "mov     rdi, qword [rsp+0xa0]",
    "je      0x14005db61",
    "mov     rbx, qword [rbx+0x28]",
    "cmp     rbx, rdi",
    "jne     0x14005d494",
    "call    sub_1400192b0",
    "xor     r9d, r9d",
    "cmp     eax, r9d",
    "jne     0x14005db61",
    "mov     rcx, qword [r12+0x70]",
    "mov     dword [rsp+0x38], 0xfff0bdc0",
    "cmp     rcx, r9",
    "je      0x14005d557",
    "mov     eax, dword [rbp+0x58]",
    "cmp     dword [rbx+0x58], eax",
    "jne     0x14005d4d4",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "call    sub_14005d0ec",
    "cmp     eax, edi",
    "jne     0x14005d4ac",
    "cmp     byte [rbx+0x10], r9b",
    "je      0x14005d3f1",
    "mov     rcx, rdi",
    "call    sub_140065300",
    "mov     edx, dword [rsp+0x38]",
    "mov     rcx, rdi",
    "mov     rbp, rax",
    "call    sub_1400538c0",
    "mov     ebx, dword [rdi+0x34]",
    "mov     edx, dword [rsp+0xc0]",
    "lea     r15d, [rbx+0x1]",
    "mov     r8, rsi",
    "lea     ecx, [r15+0x1]",
    "mov     dword [rsp+0xb0], ebx",
    "mov     dword [rdi+0x34], ecx",
    "mov     rcx, rdi",
    "call    sub_14005a538",
    "mov     cl, byte [rdi+0x1f]",
    "xor     edx, edx",
    "mov     dword [rsp+0x48], eax",
    "cmp     cl, dl",
    "jne     0x14005d5af",
    "mov     rax, qword [rax+0x20]",
    "mov     edx, r9d",
    "add     rax, 0x18",
    "mov     dword [rsp+0x38], edx",
    "cmp     qword [rax], rcx",
    "je      0x14005d557",
    "mov     rbp, qword [rbp+0x28]",
    "xor     r9d, r9d",
    "jmp     0x14005d46f",
    "mov     rax, qword [rsi+0x70]",
    "cmp     qword [r12+0x70], rax",
    "je      0x14005db61",
    "cmp     rbp, r9",
    "jle     0x14005d449",
    "cmp     byte [r11+0x8], r9b",
    "je      0x14005db61",
    "sub     cl, r13b",
    "movzx   eax, cl",
    "mov     byte [rdi+0x1f], al",
    "mov     eax, dword [rdi+rax*4+0xbc]",
    "mov     dword [rsp+0x30], eax",
    "add     dword [rdi+0x38], r13d",
    "mov     ecx, dword [rdi+0x38]",
    "mov     dword [rsp+0x30], ecx",
    "jmp     0x14005d5c3",
    "add     rax, 0x20",
    "add     edx, r13d",
    "cmp     qword [rax], rcx",
    "jne     0x14005d547",
    "cmp     rbp, r9",
    "je      0x14005d4dd",
    "mov     eax, 0x1",
    "add     rbx, 0x20",
    "add     r11, 0x20",
    "add     r13d, eax",
    "add     rbp, rax",
    "cmp     r13d, r15d",
    "jl      0x14005d3a7",
    "mov     r8, qword [r11-0x8]",
    "mov     rdx, qword [rbx]",
    "mov     ecx, r9d",
    "cmp     r8, r9",
    "mov     eax, r9d",
    "sete    cl",
    "cmp     rdx, r9",
    "sete    al",
    "cmp     eax, ecx",
    "jne     0x14005db61",
    "sub     al, r13b",
    "movzx   eax, al",
    "mov     byte [rdi+0x1f], al",
    "mov     r13d, dword [rdi+rax*4+0xbc]",
    "add     dword [rdi+0x38], r13d",
    "mov     r13d, dword [rdi+0x38]",
    "jmp     0x14005d5e5",
    "mov     al, byte [rdi+0x1f]",
    "cmp     al, dl",
    "jne     0x14005d5d4",
    "mov     dword [rsp+0x38], edx",
    "mov     al, byte [r11+0x9]",
    "cmp     byte [rbx+0x11], al",
    "jne     0x14005db61",
    "cmp     rdx, r9",
    "je      0x14005d449",
    "test    byte [r12+0x40], 0x20",
    "jne     0x14005d879",
    "xor     eax, eax",
    "cmp     word [rsi+0x44], ax",
    "jge     0x14005d621",
    "mov     r8d, dword [rsp+0xc0]",
    "mov     r9, rsi",
    "mov     edx, r15d",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x34], r13d",
    "mov     dword [rsp+0x20], 0x62",
    "call    sub_14005a1e8",
    "mov     rax, qword [rsp+0x50]",
    "test    byte [rax+0x2c], 0x4",
    "jne     0x14005d684",
    "mov     rax, qword [rdx+0x8]",
    "mov     r8, qword [r8+0x8]",
    "mov     r10d, 0x1",
    "sub     r8, rax",
    "xor     r13d, r13d",
    "mov     r8d, dword [rsp+0x38]",
    "mov     r9, r12",
    "mov     edx, ebx",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], 0x61",
    "call    sub_14005a1e8",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x24]",
    "mov     r8d, ebx",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "xor     ecx, ecx",
    "cmp     word [rsi+0x44], cx",
    "mov     dword [rsp+0x40], eax",
    "jl      0x14005d79a",
    "cmp     dword [rsp+0x3c], eax",
    "jne     0x14005d637",
    "cmp     qword [rsi+0x10], rax",
    "jne     0x14005d637",
    "cmp     edx, r9d",
    "jne     0x14005db61",
    "add     rax, r10",
    "test    ecx, ecx",
    "jne     0x14005d42d",
    "mov     eax, dword [rsp+0x40]",
    "cmp     eax, r13d",
    "je      0x14005dac4",
    "mov     rbx, qword [r12+0x10]",
    "xor     eax, eax",
    "cmp     rbx, rax",
    "je      0x14005d8bb",
    "cmp     qword [rsi+0x10], rcx",
    "jne     0x14005d7cc",
    "mov     dword [rsp+0x20], ecx",
    "mov     r9d, r13d",
    "mov     r8d, ebx",
    "mov     rcx, rbp",
    "mov     edx, 0x80",
    "call    sub_140032364",
    "mov     ecx, dword [rsp+0x34]",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x20], ecx",
    "lea     edx, [r9+0x1f]",
    "mov     r8d, r15d",
    "mov     rcx, rbp",
    "mov     r13d, eax",
    "call    sub_140032364",
    "mov     r8, rsi",
    "mov     edx, r14d",
    "mov     rcx, rdi",
    "mov     ebx, eax",
    "call    sub_140053bf0",
    "mov     edx, ebx",
    "mov     rcx, rbp",
    "call    sub_140032d34",
    "mov     ecx, dword [rbp+0x90]",
    "mov     r14d, dword [rsp+0x34]",
    "mov     dword [rax+0x8], ecx",
    "mov     eax, dword [rsp+0x48]",
    "xor     ecx, ecx",
    "cmp     eax, ecx",
    "jle     0x14005d74f",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     rcx, rbp",
    "lea     edx, [r9+0x24]",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0xb]",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "mov     ebx, eax",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x44], eax",
    "call    sub_140032d34",
    "mov     ecx, dword [rbp+0x90]",
    "mov     ebx, dword [rsp+0xb0]",
    "mov     dword [rax+0x8], ecx",
    "cmp     r14d, 0x2",
    "je      0x14005d684",
    "movzx   edx, byte [rax]",
    "movzx   ecx, byte [rax+r8]",
    "sub     edx, ecx",
    "jne     0x14005d440",
    "mov     ecx, dword [rsp+0x34]",
    "cmp     ecx, r13d",
    "je      0x14005dae8",
    "mov     edx, eax",
    "mov     rcx, rbp",
    "call    sub_140032d34",
    "mov     ecx, dword [rbp+0x90]",
    "mov     dword [rax+0x8], ecx",
    "mov     eax, dword [rsp+0x38]",
    "mov     r9d, dword [rbx+0x58]",
    "mov     r8d, dword [rsp+0xb0]",
    "mov     edx, 0x61",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140032d08",
    "mov     eax, dword [rsp+0xc0]",
    "mov     r9d, dword [r14+0x58]",
    "mov     r8d, r15d",
    "mov     edx, 0x62",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     rdx, r14",
    "mov     rcx, rdi",
    "call    sub_140032d08",
    "movsxd  r11, dword [rbp+0x90]",
    "xor     edx, edx",
    "cmp     r11d, edx",
    "jle     0x14005d934",
    "xor     edi, edi",
    "mov     r8d, ebx",
    "mov     edx, 0x80",
    "jmp     0x14005d7b3",
    "mov     rax, qword [rsp+0x50]",
    "test    byte [rax+0x2c], 0x8",
    "jne     0x14005d7cc",
    "mov     ebx, dword [rsp+0xb0]",
    "mov     dword [rsp+0x20], ecx",
    "mov     rcx, qword [rdi+0x10]",
    "mov     r9d, r14d",
    "mov     r8d, eax",
    "mov     edx, 0x97",
    "call    sub_140032364",
    "mov     ecx, 0x1",
    "cmp     r14d, ecx",
    "je      0x14005d684",
    "mov     ecx, 0x1",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x14005dae8",
    "mov     r8d, dword [rsp+0xb0]",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x20], edx",
    "lea     edx, [r9+0x24]",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0xb0]",
    "mov     r9d, esi",
    "mov     dword [rsp+0x48], eax",
    "mov     eax, 0x1",
    "mov     rcx, rbp",
    "lea     edx, [rax+0x7e]",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     rax, qword [rsp+0x50]",
    "test    byte [rax+0x2c], 0x4",
    "je      0x14005d9e3",
    "mov     rax, qword [rbp+0x88]",
    "lea     rcx, [r11+r11*2]",
    "lea     r10d, [rdx+0x1]",
    "mov     word [rax+rcx*8-0x16], r10w",
    "mov     rdi, qword [rsp+0xa0]",
    "mov     rbx, qword [rbx+0x28]",
    "cmp     rbx, rdi",
    "jne     0x14005d89b",
    "mov     dword [rsp+0x20], ecx",
    "mov     r9d, r13d",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "mov     r14d, dword [rsp+0x34]",
    "mov     r13d, eax",
    "jmp     0x14005d756",
    "mov     r8d, r15d",
    "mov     edx, 0x79",
    "mov     bl, 0x29",
    "xor     eax, eax",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     edx, 0x82",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     bl, 0x39",
    "jmp     0x14005d7d8",
    "mov     ebx, dword [rsp+0x44]",
    "cmp     ebx, r13d",
    "je      0x14005db7b",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x14005db06",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], ecx",
    "mov     ecx, 0x1",
    "add     byte [rdi+0x1f], cl",
    "jmp     0x14005daed",
    "xor     ebx, ebx",
    "movzx   esi, word [rbx+0x60]",
    "xor     eax, eax",
    "cmp     esi, eax",
    "mov     r11d, eax",
    "jle     0x14005d9bc",
    "mov     rdx, rbx",
    "mov     rcx, r14",
    "call    sub_14005d0ec",
    "cmp     eax, edi",
    "jne     0x14005d8b3",
    "mov     r9d, dword [rsp+0x30]",
    "mov     eax, 0x1",
    "mov     r8d, ebx",
    "lea     edx, [rax+0x7e]",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     rax, qword [rsp+0x50]",
    "test    byte [rax+0x2c], 0x4",
    "je      0x14005d7d6",
    "mov     ebx, dword [rsp+0xb0]",
    "mov     dword [rsp+0x20], r8d",
    "mov     r9d, r13d",
    "mov     edx, 0x5",
    "mov     rcx, rbp",
    "mov     r8d, ebx",
    "call    sub_140032364",
    "xor     r13d, r13d",
    "mov     r8d, ebx",
    "lea     ebx, [r13+0x75]",
    "xor     r9d, r9d",
    "mov     rcx, rbp",
    "mov     edx, ebx",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     edx, ebx",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "jmp     0x14005d87c",
    "mov     rax, qword [rbp+0x88]",
    "lea     rcx, [r11+r11*2]",
    "movzx   edx, bl",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     r9d, dword [rsp+0x30]",
    "mov     r8d, r15d",
    "mov     edx, 0x7a",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     r9d, 0xfffffffa",
    "mov     r8, rsi",
    "mov     edx, eax",
    "mov     rcx, rbp",
    "call    sub_140032c40",
    "movsxd  r11, dword [rbp+0x90]",
    "xor     r8d, r8d",
    "cmp     r11d, r8d",
    "jle     0x14005d827",
    "mov     eax, ecx",
    "jmp     0x14005db63",
    "cmp     qword [rdi+0x88], r13",
    "je      0x14005db20",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], esi",
    "add     byte [rdi+0x1f], cl",
    "cmp     esi, r13d",
    "je      0x14005db06",
    "mov     r9d, esi",
    "mov     r8d, r15d",
    "mov     edx, 0x84",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "movsxd  r11, dword [rbp+0x90]",
    "cmp     r11d, ebx",
    "jle     0x14005da36",
    "mov     eax, dword [r14+0x64]",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "jne     0x14005d9fb",
    "xor     ebx, ebx",
    "cmp     r11d, esi",
    "jne     0x14005d9dd",
    "mov     rbx, qword [rbx+0x40]",
    "xor     edi, edi",
    "mov     r14, qword [rsi+0x10]",
    "mov     esi, dword [rsp+0x30]",
    "mov     rbx, qword [rsp+0xa8]",
    "add     rsp, 0x60",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "lea     edx, [r9+0x45]",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, rbp",
    "call    sub_140032d34",
    "mov     ecx, dword [rbp+0x90]",
    "xor     r9d, r9d",
    "mov     dword [rax+0x8], ecx",
    "lea     edx, [r9+0x75]",
    "mov     r8d, r15d",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "mov     rcx, rdi",
    "call    sub_14005a74c",
    "mov     r13d, dword [rsp+0x48]",
    "mov     dword [rsp+0x20], ebx",
    "mov     ebx, dword [rsp+0xb0]",
    "lea     r9d, [r13+0x1]",
    "mov     r8d, ebx",
    "mov     edx, 0x5",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "mov     edx, r13d",
    "mov     rcx, rbp",
    "call    sub_140032d34",
    "mov     ecx, dword [rbp+0x90]",
    "xor     r13d, r13d",
    "mov     r8d, ebx",
    "mov     dword [rax+0x8], ecx",
    "lea     ebx, [r13+0x75]",
    "xor     r9d, r9d",
    "mov     rcx, rbp",
    "mov     edx, ebx",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     edx, ebx",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "mov     r14, qword [r14+0x28]",
    "jmp     0x14005d884",
    "mov     rax, qword [rbp+0x88]",
    "or      r13b, 0x8",
    "lea     rcx, [r11+r11*2]",
    "movzx   edx, r13b",
    "mov     word [rax+rcx*8-0x16], dx",
    "or      r13b, 0x1",
    "mov     esi, dword [rsp+0x30]",
    "jmp     0x14005d9e5",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     edx, 0x82",
    "mov     rcx, rbp",
    "mov     r13b, 0x10",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "mov     rdi, qword [rsp+0xa0]",
    "lea     rcx, [rel data_1400d66b0]  {\"BINARY\"}",
    "call    sub_1400192b0",
    "cmp     eax, edi",
    "jne     0x14005d9b4",
    "cmp     r14, r13",
    "je      0x14005daa8",
    "test    byte [r12+0x40], 0x20",
    "je      0x14005d9fb",
    "inc     r11d",
    "add     rbx, 0x8",
    "cmp     r11d, esi",
    "jl      0x14005d990",
    "mov     rdx, qword [rbx]",
    "cmp     rdx, rdi",
    "je      0x14005d9b4"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}