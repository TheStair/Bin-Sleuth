{
  "address": "0x140096e2c",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x30",
    "mov     edx, 0x20",
    "mov     rsi, rcx",
    "lea     ecx, [rdx+0x20]",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14009713e",
    "mov     rax, rbx",
    "mov     rbx, qword [rsp+0x60]",
    "add     rsp, 0x30",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, rsi",
    "call    qword [rel _wcsdup]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140096e98",
    "mov     edx, dword [rbx]",
    "mov     ecx, 0x40",
    "shl     rdx, 0x4",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rbx+0x8], rax",
    "test    rax, rax",
    "je      0x14009713e",
    "and     qword [rsp+0x78], 0x0",
    "mov     rcx, rax",
    "jmp     0x140096e79",
    "mov     rcx, rsi",
    "call    qword [rel _wcsdup]",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x14009713e",
    "lea     r8, [rsp+0x78]",
    "lea     rdx, [rel data_1400fd6f4]",
    "call    sub_1400c9548",
    "test    rax, rax",
    "jne     0x140096e75",
    "and     qword [rsp+0x78], 0x0",
    "lea     r8, [rsp+0x78]",
    "lea     rdx, [rel data_1400fd6f4]",
    "mov     rcx, rax",
    "call    sub_1400c9548",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140097135",
    "inc     dword [rbx]",
    "xor     ecx, ecx",
    "mov     rcx, rdi",
    "call    qword [rel free]",
    "mov     rcx, r13",
    "call    qword [rel free]",
    "xor     edi, edi",
    "mov     rax, qword [rbx+0x8]",
    "mov     ecx, 0x40",
    "mov     edx, dword [rdi+rax+0x4]",
    "shl     rdx, 0x5",
    "call    qword [rel LocalAlloc]",
    "mov     rcx, qword [rbx+0x8]",
    "mov     qword [rdi+rcx+0x8], rax",
    "mov     rax, qword [rbx+0x8]",
    "cmp     qword [rdi+rax+0x8], 0x0",
    "je      0x140097112",
    "and     qword [rsp+0x70], 0x0",
    "mov     rcx, rax",
    "jmp     0x140096f24",
    "lea     r8, [rsp+0x78]",
    "lea     rdx, [rel data_1400fd6f4]",
    "xor     ecx, ecx",
    "add     rdi, 0x10",
    "call    sub_1400c9548",
    "mov     rsi, rax",
    "test    rax, rax",
    "jne     0x140096ef3",
    "and     qword [rsp+0x70], 0x0",
    "lea     r8, [rsp+0x70]",
    "lea     rdx, [rel data_1401056e8]",
    "mov     rcx, rsi",
    "call    sub_1400c9548",
    "test    rax, rax",
    "je      0x140097112",
    "lea     r8, [rsp+0x70]",
    "lea     rdx, [rel data_1401056e8]",
    "call    sub_1400c9548",
    "test    rax, rax",
    "jne     0x140096f1a",
    "mov     rcx, qword [rbx+0x8]",
    "mov     dword [rdi+rcx], 0x1",
    "mov     rcx, rsi",
    "call    qword [rel _wcsdup]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140096f43",
    "xor     esi, esi",
    "mov     rax, qword [rbx+0x8]",
    "inc     dword [rdi+rax+0x4]",
    "xor     ecx, ecx",
    "mov     rcx, rbp",
    "call    qword [rel free]",
    "lea     r8, [rsp+0x70]",
    "lea     rdx, [rel data_1401056e8]",
    "xor     ecx, ecx",
    "add     rsi, 0x20",
    "call    sub_1400c9548",
    "test    rax, rax",
    "jne     0x140096f98",
    "mov     rcx, rax",
    "call    qword [rel _wcsdup]",
    "mov     rcx, qword [rbx+0x8]",
    "mov     rdx, qword [rdi+rcx+0x8]",
    "mov     qword [rsi+rdx], rax",
    "mov     rax, qword [rbx+0x8]",
    "mov     rcx, qword [rdi+rax+0x8]",
    "cmp     qword [rsi+rcx], 0x0",
    "je      0x1400970f2",
    "mov     rcx, qword [rbx+0x8]",
    "lea     r8, [rsp+0x20]",
    "mov     rdx, qword [rdi+rcx+0x8]",
    "mov     rcx, rax",
    "mov     dword [rdx+rsi+0x8], 0x3",
    "and     qword [rsp+0x20], 0x0",
    "lea     rdx, [rel data_1401056ec]",
    "call    sub_1400c9548",
    "test    rax, rax",
    "je      0x1400970f2",
    "lea     r8, [rsp+0x20]",
    "lea     rdx, [rel data_1401056ec]",
    "xor     ecx, ecx",
    "call    sub_1400c9548",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x1400970f2",
    "mov     rcx, rax",
    "call    qword [rel _wcsdup]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x14009705f",
    "mov     rax, qword [rbx+0x8]",
    "mov     rcx, qword [rdi+rax+0x8]",
    "mov     edx, dword [rcx+rsi+0x10]",
    "mov     ecx, 0x40",
    "shl     rdx, 0x3",
    "call    qword [rel LocalAlloc]",
    "mov     rcx, qword [rbx+0x8]",
    "mov     rdx, qword [rdi+rcx+0x8]",
    "mov     qword [rdx+rsi+0x18], rax",
    "mov     rax, qword [rbx+0x8]",
    "mov     rcx, qword [rdi+rax+0x8]",
    "cmp     qword [rcx+rsi+0x18], 0x0",
    "je      0x1400970f2",
    "and     qword [rsp+0x68], 0x0",
    "mov     rcx, rax",
    "jmp     0x140097040",
    "and     qword [rsp+0x68], 0x0",
    "lea     r8, [rsp+0x68]",
    "lea     rdx, [rel data_1401056f0]",
    "mov     rcx, r12",
    "call    sub_1400c9548",
    "test    rax, rax",
    "je      0x1400970f2",
    "lea     r8, [rsp+0x68]",
    "lea     rdx, [rel data_1401056f0]",
    "call    sub_1400c9548",
    "test    rax, rax",
    "jne     0x140097031",
    "xor     ebp, ebp",
    "mov     rax, qword [rbx+0x8]",
    "mov     rcx, qword [rdi+rax+0x8]",
    "inc     dword [rcx+rsi+0x10]",
    "xor     ecx, ecx",
    "mov     rcx, rbp",
    "call    qword [rel free]",
    "mov     rcx, rax",
    "call    qword [rel _wcsdup]",
    "mov     rcx, qword [rbx+0x8]",
    "lea     r8, [rsp+0x68]",
    "mov     rdx, qword [rdi+rcx+0x8]",
    "mov     rcx, qword [rdx+rsi+0x18]",
    "lea     rdx, [rel data_1401056f0]",
    "mov     qword [rcx+rbp], rax",
    "xor     ecx, ecx",
    "add     rbp, 0x8",
    "call    sub_1400c9548",
    "test    rax, rax",
    "jne     0x1400970bb"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}