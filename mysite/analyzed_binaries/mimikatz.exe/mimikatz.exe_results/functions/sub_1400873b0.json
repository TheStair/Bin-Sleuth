{
  "address": "0x1400873b0",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rsi",
    "push    rdi",
    "sub     rsp, 0x20",
    "mov     rsi, rcx",
    "mov     rcx, qword [rcx+0x10]",
    "xor     edi, edi",
    "mov     rbx, rdx",
    "cmp     rcx, rdi",
    "je      0x14008753e",
    "cmp     dword [rbx+0xa0], edi",
    "mov     rsi, qword [rsp+0x38]",
    "mov     rbx, qword [rsp+0x30]",
    "sete    dil",
    "mov     eax, edi",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    ",
    "lea     rdx, [rel data_1400f89f0]  {\"CPGenKey\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x1400873f0",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a00]  {\"CPDeriveKey\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x140087410",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0xc], eax",
    "jmp     0x1400874ff",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a10]  {\"CPDestroyKey\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x140087430",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x10], eax",
    "jmp     0x1400874ff",
    "cmp     dword [rbx+0xc], edi",
    "je      0x140087536",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a20]  {\"CPSetKeyParam\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x140087450",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x14], eax",
    "jmp     0x1400874ff",
    "mov     eax, edi",
    "cmp     dword [rbx+0x10], edi",
    "je      0x140087536",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a30]  {\"CPGetKeyParam\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x140087470",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x18], eax",
    "jmp     0x1400874ff",
    "cmp     dword [rbx+0x14], edi",
    "je      0x140087536",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a40]  {\"CPExportKey\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x14008748d",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x1c], eax",
    "jmp     0x1400874ff",
    "cmp     dword [rbx+0x18], edi",
    "je      0x140087536",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a50]  {\"CPImportKey\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x1400874aa",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x20], eax",
    "jmp     0x1400874ff",
    "cmp     dword [rbx+0x1c], edi",
    "je      0x140087536",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a60]  {\"CPEncrypt\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x1400874c7",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x24], eax",
    "jmp     0x1400874ff",
    "cmp     dword [rbx+0x20], edi",
    "je      0x140087536",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a70]  {\"CPDecrypt\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x1400874e4",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x28], eax",
    "jmp     0x1400874ff",
    "cmp     dword [rbx+0x24], edi",
    "je      0x140087536",
    "mov     rcx, qword [rsi+0x10]",
    "lea     rdx, [rel data_1400f8a80]  {\"CPDuplicateKey\"}",
    "call    qword [rel _stricmp]",
    "cmp     eax, edi",
    "jne     0x1400874ff",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x2c], eax",
    "jmp     0x1400874ff",
    "cmp     dword [rbx+0x28], edi",
    "je      0x140087536",
    "mov     eax, dword [rsi+0x30]",
    "mov     dword [rbx+0x30], eax",
    "cmp     dword [rbx+0x2c], edi",
    "je      0x140087536",
    "mov     eax, 0x1",
    "cmp     dword [rbx+0x30], edi",
    "jne     0x140087538",
    "mov     dword [rbx+0xa0], eax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}