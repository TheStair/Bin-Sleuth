{
  "address": "0x1400b77f0",
  "rules": [
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8 {__saved_rbx}], rbx",
    "mov     qword [rsp+0x10 {__saved_rbp}], rbp",
    "mov     dword [rsp+0x20 {arg_20}], r9d",
    "push    rsi {__saved_rsi}",
    "push    rdi {__saved_rdi}",
    "push    r12 {__saved_r12}",
    "push    r13 {__saved_r13}",
    "push    r15 {__saved_r15}",
    "sub     rsp, 0x40",
    "mov     rsi, rcx",
    "lea     rcx, [rel data_140125218]  {u\"** SAM ACCOUNT **\\n\\n\"}",
    "mov     r13, r8",
    "mov     rdi, rdx",
    "call    sub_14000c030",
    "lea     r11, [rsp+0x88 {arg_20}]",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1401242e8]  {\"1.2.840.113556.1.4.221\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20 {var_48}], r11 {arg_20}",
    "call    sub_140011c40",
    "mov     r15d, 0x1",
    "test    rax, rax",
    "je      0x1400b786b",
    "lea     rax, [rsp+0x88 {arg_20}]",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1401242d0]  {\"1.2.840.113556.1.4.656\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20 {var_48_1}], rax {arg_20}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b78b0",
    "lea     r9, [rsp+0x88 {arg_20}]",
    "lea     r8, [rsp+0x30 {pSid_1}]",
    "lea     rcx, [rel data_140125240]  {u\"SAM Username         : \"}",
    "mov     edx, r15d  {0x1}",
    "call    sub_140011d08",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1401242b8]  {\"1.2.840.113556.1.4.302\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b798d",
    "lea     r9, [rsp+0x88 {arg_20}]",
    "lea     r8, [rsp+0x30 {pSid_1}]",
    "lea     rcx, [rel data_140125270]  {u\"User Principal Name  : \"}",
    "mov     edx, r15d  {0x1}",
    "call    sub_140011d08",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1401242a0]  {\"1.2.840.113556.1.4.8\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b79fe",
    "mov     rax, qword [rsp+0x30 {pSid_1}]",
    "mov     edx, dword [rax]",
    "mov     eax, 0x30000000",
    "cmp     edx, eax",
    "ja      0x1400b793c",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_140124288]  {\"1.2.840.113556.1.4.159\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b7a42",
    "mov     r12, qword [rsp+0x30 {pSid_1}]",
    "lea     rcx, [rel data_1401252e8]  {u\"User Account Control : %08x ( \"}",
    "mov     edx, dword [r12]",
    "call    sub_14000c030",
    "xor     ebx, ebx  {0x0}",
    "lea     rbp, [rel data_14013b000]",
    "mov     eax, edx",
    "sub     eax, 0x30000001",
    "je      0x1400b797a",
    "je      0x1400b7933",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_140124270]  {\"1.2.840.113556.1.4.96\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b7a86",
    "lea     rcx, [rel data_140125328]  {u\"Account expiration   : \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x30 {pSid_1}]",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "add     ebx, r15d",
    "add     rbp, 0x8",
    "cmp     ebx, 0x20",
    "jb      0x1400b79cd",
    "mov     rdx, qword [rbp]",
    "lea     rcx, [rel data_1400f13d0]",
    "call    sub_14000c030",
    "lea     r8, [rel data_140124f88]  {u\"MACHINE_ACCOUNT\"}",
    "sub     eax, r15d",
    "je      0x1400b7971",
    "lea     r8, [rel data_140124f70]  {u\"USER_OBJECT\"}",
    "jmp     0x1400b7981",
    "mov     eax, edx",
    "test    edx, edx",
    "je      0x1400b792a",
    "lea     r8, [rel data_140124240]  {\"1.2.840.113556.1.4.609\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140011bcc",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400b7ae8",
    "lea     rcx, [rel data_140125358]  {u\"Password last change : \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x30 {pSid_1}]",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     eax, dword [r12]",
    "bt      eax, ebx",
    "jae     0x1400b79e6",
    "lea     rcx, [rel data_1400e8e8c]",
    "call    sub_14000c030",
    "lea     r8, [rel data_140124fa8]  {u\"TRUST_ACCOUNT\"}",
    "jmp     0x1400b7981",
    "sub     eax, 0xffffffe",
    "je      0x1400b7968",
    "lea     rcx, [rel data_1401252a0]  {u\"Account Type         : %08x ( %s\u2026\"}",
    "call    sub_14000c030",
    "lea     r8, [rel data_140124ea0]  {u\"DOMAIN_OBJECT\"}",
    "jmp     0x1400b7981",
    "sub     eax, 0x10000000",
    "je      0x1400b7921",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_140124258]  {\"1.2.840.113556.1.4.146\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b7c8b",
    "lea     rcx, [rel data_140125388]  {u\"SID history:\\n\"}",
    "call    sub_14000c030",
    "xor     r12d, r12d  {0x0}",
    "cmp     dword [rbx], r12d",
    "jbe     0x1400b7ae8",
    "lea     r8, [rel data_140124fc8]  {u\"APP_BASIC_GROUP\"}",
    "jmp     0x1400b7981",
    "cmp     eax, r15d",
    "je      0x1400b795f",
    "lea     r8, [rel data_140124ec0]  {u\"GROUP_OBJECT\"}",
    "jmp     0x1400b7981",
    "sub     eax, r15d",
    "je      0x1400b7918",
    "lea     rax, [rsp+0x88 {arg_20}]",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1400eed20]  {\"1.2.840.113556.1.4.125\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20 {var_48_6}], rax {arg_20}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b7cca",
    "lea     rcx, [rel data_1401253a8]  {u\"Object Security ID   : \"}",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x30 {pSid_1}]",
    "mov     rcx, rbx",
    "call    sub_14001311c",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    qword [rel GetSidSubAuthorityCount]",
    "mov     rcx, rbx",
    "movzx   edx, byte [rax]",
    "sub     edx, r15d",
    "call    qword [rel GetSidSubAuthority]",
    "lea     rcx, [rel data_1401253d8]  {u\"Object Relative ID   : %u\\n\"}",
    "mov     ebx, dword [rax]",
    "mov     edx, ebx",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140125410]  {u\"\\nCredentials:\\n\"}",
    "call    sub_14000c030",
    "lea     r11, [rsp+0x88 {arg_20}]",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1400eed80]  {\"1.2.840.113556.1.4.90\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20 {var_48_2}], r11 {arg_20}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b7bb0",
    "xor     ebp, ebp  {0x0}",
    "lea     r8, [rel data_140124fe8]  {u\"APP_QUERY_GROUP\"}",
    "jmp     0x1400b7981",
    "lea     r8, [rel data_1400e8c48]  {u\"unknown\"}",
    "jmp     0x1400b7981",
    "lea     r8, [rel data_140124ee0]  {u\"NON_SECURITY_GROUP_OBJECT\"}",
    "jmp     0x1400b7981",
    "sub     eax, 0xfffffff",
    "je      0x1400b790f",
    "cmp     dword [r13], 0x0",
    "je      0x1400b7d7c",
    "lea     rcx, [rel data_14010e0f0]  {u\"\\nSupplemental Credentials:\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x30 {pSid_1}]",
    "call    sub_1400b7d94",
    "lea     rax, [rsp+0x88 {arg_20}]",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1400eed68]  {\"1.2.840.113556.1.4.94\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20 {var_48_3}], rax {arg_20}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b7bf9",
    "mov     edx, dword [rsp+0x88 {arg_20}]",
    "mov     rcx, qword [rsp+0x30 {pSid_1}]",
    "and     dword [rsp+0x20 {var_48_2}], 0x0",
    "lea     r9, [rel data_14010e090]  {u\"NTLM\"}",
    "mov     r8d, ebx",
    "call    sub_1400b70cc",
    "lea     rcx, [rel data_140108e34]",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x8]",
    "mov     rcx, qword [rcx+rbp+0x8]",
    "call    sub_14001311c",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "add     r12d, r15d",
    "add     rbp, 0x10",
    "cmp     r12d, dword [rbx]",
    "jb      0x1400b7ab6",
    "lea     r8, [rel data_140124f18]  {u\"ALIAS_OBJECT\"}",
    "jmp     0x1400b7981",
    "cmp     eax, r15d",
    "jne     0x1400b7956",
    "mov     rbx, qword [rsp+0x70 {__saved_rbx}]",
    "mov     rbp, qword [rsp+0x78 {__saved_rbp}]",
    "add     rsp, 0x40",
    "pop     r15 {__saved_r15}",
    "pop     r13 {__saved_r13}",
    "pop     r12 {__saved_r12}",
    "pop     rdi {__saved_rdi}",
    "pop     rsi {__saved_rsi}",
    "retn     {__return_addr}",
    "cmp     dword [r13+0x4], 0x0",
    "je      0x1400b7d7c",
    "lea     rax, [rsp+0x88 {arg_20}]",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1400eed50]  {\"1.2.840.113556.1.4.55\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20 {var_48_4}], rax {arg_20}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b7c42",
    "mov     edx, dword [rsp+0x88 {arg_20}]",
    "mov     rcx, qword [rsp+0x30 {pSid_1}]",
    "lea     r9, [rel data_1400ee440]  {u\"ntlm\"}",
    "mov     r8d, ebx",
    "mov     dword [rsp+0x20 {var_48_3}], r15d  {0x1}",
    "call    sub_1400b70cc",
    "lea     r8, [rel data_140124f38]  {u\"NON_SECURITY_ALIAS_OBJECT\"}",
    "jmp     0x1400b7981",
    "lea     rcx, [rel data_140125430]  {u\"LAPS:\\n\"}",
    "call    sub_14000c030",
    "mov     edx, dword [r13]",
    "lea     r9, [rsp+0x88 {arg_20}]",
    "lea     r8, [rsp+0x30 {pSid_1}]",
    "mov     rcx, rdi",
    "call    sub_140011cac",
    "test    rax, rax",
    "je      0x1400b7d22",
    "lea     rax, [rsp+0x88 {arg_20}]",
    "lea     r9, [rsp+0x30 {pSid_1}]",
    "lea     r8, [rel data_1400eed38]  {\"1.2.840.113556.1.4.160\"}",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20 {var_48_5}], rax {arg_20}",
    "call    sub_140011c40",
    "test    rax, rax",
    "je      0x1400b7c8b",
    "mov     edx, dword [rsp+0x88 {arg_20}]",
    "mov     rcx, qword [rsp+0x30 {pSid_1}]",
    "and     dword [rsp+0x20 {var_48_4}], 0x0",
    "lea     r9, [rel data_14010e0b0]  {u\"LM  \"}",
    "mov     r8d, ebx",
    "call    sub_1400b70cc",
    "mov     edx, dword [rdi]",
    "mov     r8d, dword [r13+0x4]",
    "xor     ecx, ecx  {0x0}",
    "test    edx, edx",
    "je      0x1400b7d7c",
    "mov     r8, qword [rsp+0x30 {pSid_1}]",
    "mov     edx, dword [rsp+0x88 {arg_20}]",
    "lea     rcx, [rel data_140125440]  {u\"  Password   : %.*S\\n\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x88 {arg_20}]",
    "mov     rcx, qword [rsp+0x30 {pSid_1}]",
    "lea     r9, [rel data_14010e0a0]  {u\"lm  \"}",
    "mov     r8d, ebx",
    "mov     dword [rsp+0x20 {var_48_5}], r15d  {0x1}",
    "call    sub_1400b70cc",
    "mov     rax, qword [rdi+0x8]",
    "add     rax, 0x8",
    "je      0x1400b7d7c",
    "add     ecx, r15d",
    "add     rax, 0x18",
    "cmp     ecx, edx",
    "jb      0x1400b7d32",
    "cmp     dword [rax], r15d",
    "jne     0x1400b7d7c",
    "cmp     dword [rax], r8d",
    "je      0x1400b7d44",
    "jmp     0x1400b7d7c",
    "mov     rax, qword [rax+0x8]",
    "mov     rbx, qword [rax+0x8]",
    "test    rbx, rbx",
    "je      0x1400b7d7c",
    "lea     rcx, [rel data_140125470]  {u\"  Last change: \"}",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "arg_20 = arg4",
    "sub_14000c030(u\"** SAM ACCOUNT **\\n\\n\", arg2)",
    "int32_t* pSid_1",
    "if (sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.221\", &pSid_1, &arg_20) != 0)",
    "sub_140011d08(u\"SAM Username         : \", 1, &pSid_1, &arg_20)",
    "if (sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.656\", &pSid_1, &arg_20) != 0)",
    "sub_140011d08(u\"User Principal Name  : \", 1, &pSid_1, &arg_20)",
    "if (sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.302\", &pSid_1, nullptr) != 0)",
    "sub_14000c030(u\"Account Type         : %08x ( %s\u2026\", zx.q(*pSid_1))",
    "if (sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.8\", &pSid_1, nullptr) != 0)",
    "int32_t* pSid_2 = pSid_1",
    "int64_t rdx_6 = sub_14000c030(u\"User Account Control : %08x ( \", zx.q(*pSid_2))",
    "int32_t i = 0",
    "wchar16 const (** rbp_1)[0x7] = &data_14013b000",
    "if (test_bit(*pSid_2, i))",
    "rdx_6 = sub_14000c030(u\"%s \", *rbp_1)",
    "i += 1",
    "rbp_1 = &rbp_1[1]",
    "do while (i u< 0x20)",
    "sub_14000c030(u\")\\n\", rdx_6)",
    "int64_t rax_14",
    "int64_t rdx_9",
    "rax_14, rdx_9 = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.159\", &pSid_1, nullptr)",
    "if (rax_14 != 0)",
    "sub_14000c030(u\"Account expiration   : \", rdx_9)",
    "sub_14000c030(U\"\\n\", sub_1400130c0(pSid_1))",
    "int64_t rax_15",
    "int64_t rdx_12",
    "rax_15, rdx_12 = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.96\", &pSid_1, nullptr)",
    "if (rax_15 != 0)",
    "sub_14000c030(u\"Password last change : \", rdx_12)",
    "sub_14000c030(U\"\\n\", sub_1400130c0(pSid_1))",
    "void* rax_16",
    "int64_t rdx_15",
    "rax_16, rdx_15 = sub_140011bcc(arg1, arg2, \"1.2.840.113556.1.4.609\")",
    "if (rax_16 != 0)",
    "int64_t rdx_16 = sub_14000c030(u\"SID history:\\n\", rdx_15)",
    "int32_t i_1 = 0",
    "if (*rax_16 u> 0)",
    "int64_t rbp_2 = 0",
    "sub_14000c030(u\"  \", rdx_16)",
    "*(*(rax_16 + 8) + rbp_2 + 8)",
    "rdx_16 = sub_14000c030(U\"\\n\", sub_14001311c())",
    "i_1 += 1",
    "rbp_2 += 0x10",
    "do while (i_1 u< *rax_16)",
    "int64_t rax_17",
    "int64_t rdx_19",
    "rax_17, rdx_19 = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.146\", &pSid_1, nullptr)",
    "if (rax_17 != 0)",
    "sub_14000c030(u\"Object Security ID   : \", rdx_19)",
    "int32_t* pSid = pSid_1",
    "sub_14000c030(U\"\\n\", sub_14001311c())",
    "uint32_t rbx_2 = *GetSidSubAuthority(pSid, zx.d(*GetSidSubAuthorityCount(pSid)) - 1)",
    "sub_14000c030(u\"\\nCredentials:\\n\", sub_14000c030(u\"Object Relative ID   : %u\\n\", zx.q(rbx_2)))",
    "if (sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.90\", &pSid_1, &arg_20) != 0)",
    "int32_t* var_48_2",
    "var_48_2.d = 0",
    "sub_1400b70cc(pSid_1, arg_20, rbx_2, u\"NTLM\", var_48_2.d)",
    "if (sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.94\", &pSid_1, &arg_20) != 0)",
    "int32_t* var_48_3",
    "var_48_3.d = 1",
    "sub_1400b70cc(pSid_1, arg_20, rbx_2, u\"ntlm\", var_48_3.d)",
    "if (sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.55\", &pSid_1, &arg_20) != 0)",
    "int32_t* var_48_4",
    "var_48_4.d = 0",
    "sub_1400b70cc(pSid_1, arg_20, rbx_2, u\"LM  \", var_48_4.d)",
    "if (sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.160\", &pSid_1, &arg_20) != 0)",
    "int32_t* var_48_5",
    "var_48_5.d = 1",
    "sub_1400b70cc(pSid_1, arg_20, rbx_2, u\"lm  \", var_48_5.d)",
    "int64_t result",
    "int64_t rdx_34",
    "result, rdx_34 = sub_140011c40(arg1, arg2, \"1.2.840.113556.1.4.125\", &pSid_1, &arg_20)",
    "if (result != 0)",
    "sub_14000c030(u\"\\nSupplemental Credentials:\\n\", rdx_34)",
    "result, rdx_34 = sub_1400b7d94(pSid_1)",
    "if (*arg3 != 0 && arg3[1] != 0)",
    "sub_14000c030(u\"LAPS:\\n\", rdx_34)",
    "result = sub_140011cac(arg2, *arg3, &pSid_1, &arg_20)",
    "if (result != 0)",
    "result = sub_14000c030(u\"  Password   : %.*S\\n\", zx.q(arg_20))",
    "uint64_t rdx_37 = zx.q(*arg2)",
    "int32_t i_2 = 0",
    "if (rdx_37.d != 0)",
    "result = *(arg2 + 8)",
    "if (*result == arg3[1])",
    "int64_t result_1 = result",
    "result += 8",
    "if (result_1 != -8 && *result == 1)",
    "result = *(result + 8)",
    "FILETIME* rbx_3 = *(result + 8)",
    "if (rbx_3 != 0)",
    "sub_14000c030(u\"  Last change: \", rdx_37)",
    "return sub_14000c030(U\"\\n\", sub_1400130c0(rbx_3))",
    "break",
    "i_2 += 1",
    "result += 0x18",
    "do while (i_2 u< rdx_37.d)",
    "return result"
  ]
}