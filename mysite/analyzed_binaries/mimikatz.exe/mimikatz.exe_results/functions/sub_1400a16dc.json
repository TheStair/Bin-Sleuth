{
  "address": "0x1400a16dc",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data via WinCrypt",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "encrypt or decrypt via WinCrypt",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "hash data using SHA1/c2500829472b45ec8a799f66d8a3387f",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "initialize hashing via WinCrypt",
    "encrypt data using RC4 via WinAPI",
    "hash data using SHA1 via WinCrypt",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "hash data using SHA1",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x18], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x60",
    "xor     r12d, r12d",
    "mov     esi, r9d",
    "mov     rdi, r8",
    "and     dword [rax+0x10], r12d",
    "and     qword [rax-0x40], r12",
    "and     qword [rax-0x38], r12",
    "cmp     edx, 0x41",
    "jbe     0x1400a1ad5",
    "lea     r11, [rsp+0x60]",
    "mov     eax, r12d",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x30]",
    "mov     rsp, r11",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "mov     rax, qword [rcx]",
    "cmp     rax, qword [rel data_14010ec58]  {\"SuppData\"}",
    "jne     0x1400a1725",
    "mov     rbx, rcx",
    "lea     eax, [rdx-0x40]",
    "mov     eax, dword [rcx+0x14]",
    "lea     rbx, [rcx+0x18]",
    "sub     eax, 0x40",
    "jmp     0x1400a172b",
    "mov     rcx, qword [rsp+0x50]",
    "xor     r9d, r9d",
    "mov     rdx, rbx",
    "lea     r8d, [r9+0x20]",
    "call    qword [rel CryptHashData]",
    "mov     rcx, qword [rsp+0x50]",
    "lea     r11, [rsp+0x88]",
    "mov     qword [rsp+0x28], r11",
    "and     qword [rsp+0x20], r12",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, esi",
    "call    qword [rel CryptSignHashW]",
    "test    eax, eax",
    "je      0x1400a1ab6",
    "mov     dword [rsp+0x30], eax",
    "lea     rax, [rsp+0x50]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, 0x8004",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel CryptCreateHash]",
    "test    eax, eax",
    "je      0x1400a1ad5",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010ee80]  {u\"ERROR kuhl_m_lsadump_decryptSCCa\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x88]",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x1400a1aca",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel CryptDestroyHash]",
    "mov     rcx, qword [rsp+0x50]",
    "lea     rax, [rsp+0x88]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x28], rax",
    "xor     r8d, r8d",
    "mov     edx, esi",
    "mov     qword [rsp+0x20], rbp",
    "call    qword [rel CryptSignHashW]",
    "test    eax, eax",
    "je      0x1400a1a97",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010edf0]  {u\"ERROR kuhl_m_lsadump_decryptSCCa\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rax, [rsp+0x48]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, 0x8004",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel CryptCreateHash]",
    "test    eax, eax",
    "je      0x1400a1aab",
    "mov     rcx, rbp",
    "call    qword [rel LocalFree]",
    "jmp     0x1400a1aca",
    "mov     r8d, dword [rsp+0x88]",
    "mov     rcx, qword [rsp+0x48]",
    "xor     r9d, r9d",
    "mov     rdx, rbp",
    "call    qword [rel CryptHashData]",
    "mov     rcx, qword [rsp+0x48]",
    "xor     r9d, r9d",
    "lea     r8d, [r9+0x20]",
    "lea     rdx, [rbx+0x20]",
    "call    qword [rel CryptHashData]",
    "mov     r8, qword [rsp+0x48]",
    "lea     r11, [rsp+0x58]",
    "xor     r9d, r9d",
    "mov     edx, 0x6801",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], r11",
    "call    qword [rel CryptDeriveKey]",
    "test    eax, eax",
    "je      0x1400a1a76",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010ed60]  {u\"ERROR kuhl_m_lsadump_decryptSCCa\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0x30]",
    "xor     r9d, r9d",
    "lea     rax, [rbx+0x40]",
    "mov     qword [rsp+0x28], rcx",
    "mov     rcx, qword [rsp+0x58]",
    "lea     r8d, [r9+0x1]",
    "xor     edx, edx",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel CryptDecrypt]",
    "mov     r12d, eax",
    "test    eax, eax",
    "je      0x1400a1a55",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010ece0]  {u\"ERROR kuhl_m_lsadump_decryptSCCa\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x30]",
    "lea     rcx, [rbx+0x58]",
    "lea     r9, [rel sub_140012524]",
    "lea     r8, [rsp+0x38]",
    "add     edx, 0xffffffe8",
    "call    sub_140010970",
    "test    eax, eax",
    "je      0x1400a1a69",
    "mov     rcx, qword [rsp+0x48]",
    "call    qword [rel CryptDestroyHash]",
    "jmp     0x1400a1aab",
    "mov     rcx, qword [rsp+0x58]",
    "call    qword [rel CryptDestroyKey]",
    "jmp     0x1400a1a8a",
    "mov     rax, qword [rsp+0x38]",
    "xor     esi, esi",
    "cmp     dword [rax], esi",
    "jbe     0x1400a1a42",
    "lea     rdx, [rel sub_14001254c]",
    "lea     rcx, [rsp+0x38]",
    "call    sub_140010a8c",
    "jmp     0x1400a1a69",
    "xor     edi, edi",
    "lea     rdx, [rbx+rax+0x8]",
    "lea     rcx, [rel data_1400d55d0]",
    "mov     r8b, 0x1",
    "call    RtlEqualUnicodeString",
    "test    al, al",
    "je      0x1400a19fe",
    "mov     rbx, qword [rdi+rax+0x20]",
    "mov     edx, dword [rbx]",
    "test    edx, edx",
    "je      0x1400a194c",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x38]",
    "mov     r8d, 0x100001",
    "mov     edx, dword [rdi+rcx+0x18]",
    "mov     rcx, qword [rdi+rcx+0x20]",
    "mov     rcx, qword [rsp+0x38]",
    "lea     r9, [rel sub_1400121ac]",
    "lea     r8, [rsp+0x40]",
    "mov     edx, dword [rdi+rcx+0x18]",
    "mov     rcx, qword [rdi+rcx+0x20]",
    "call    sub_140010970",
    "test    eax, eax",
    "je      0x1400a1a23",
    "test    byte [rbx+0x4], 0x1",
    "je      0x1400a196e",
    "cmp     edx, 0x4",
    "je      0x1400a1926",
    "mov     ebx, esi",
    "lea     rcx, [rel data_14010ec68]  {u\"  [%u] %wZ\"}",
    "mov     edx, esi",
    "shl     rbx, 0x5",
    "lea     r8, [rbx+rax+0x8]",
    "call    sub_14000c030",
    "mov     r11, qword [rsp+0x38]",
    "lea     rcx, [rel data_1400d55a8]",
    "lea     rdx, [rbx+r11+0x8]",
    "mov     r8b, 0x1",
    "call    RtlEqualUnicodeString",
    "test    al, al",
    "mov     rax, qword [rsp+0x38]",
    "je      0x1400a198a",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rax, qword [rsp+0x38]",
    "inc     esi",
    "add     rdi, 0x20",
    "cmp     esi, dword [rax]",
    "jb      0x1400a18c6",
    "mov     rdx, qword [rsp+0x40]",
    "xor     ebx, ebx",
    "cmp     dword [rdx], ebx",
    "jbe     0x1400a19eb",
    "test    byte [rbx+0x4], 0x2",
    "je      0x1400a1a23",
    "lea     rcx, [rel data_14010ec80]  {u\"\\n    LM: \"}",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "lea     rcx, [rbx+0x8]",
    "lea     edx, [r8+0x10]",
    "call    sub_140012f68",
    "test    byte [rbx+0x4], 0x2",
    "je      0x1400a1a23",
    "lea     rcx, [rel data_14010ecb0]  {u\"\\nUnknown version: %u\\n\"}",
    "call    sub_14000c030",
    "jmp     0x1400a1a23",
    "lea     rdx, [rel sub_1400121d4]",
    "lea     rcx, [rsp+0x40]",
    "call    sub_140010a8c",
    "jmp     0x1400a1a23",
    "lea     rcx, [rbx+rbx*2]",
    "lea     rcx, [rdx+rcx*8+0x8]",
    "xor     edx, edx",
    "call    sub_1400c51e8",
    "mov     rdx, qword [rsp+0x40]",
    "inc     ebx",
    "cmp     ebx, dword [rdx]",
    "jb      0x1400a19d0",
    "lea     rcx, [rel data_14010ec98]  {u\"\\n  NTLM: \"}",
    "call    sub_14000c030",
    "lea     rcx, [rbx+0x18]",
    "jmp     0x1400a1940",
    "lea     rcx, [rel data_14010ec98]  {u\"\\n  NTLM: \"}",
    "call    sub_14000c030",
    "lea     rcx, [rbx+0xc]",
    "xor     r8d, r8d",
    "lea     edx, [r8+0x10]",
    "jmp     0x1400a1a1e",
    "call    sub_140012f68"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}