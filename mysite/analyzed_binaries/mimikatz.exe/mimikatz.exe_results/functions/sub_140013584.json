{
  "address": "0x140013584",
  "rules": [
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "mov     qword [rax+0x8], rcx",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, rdx",
    "repne scasw word [rdi]",
    "mov     r14, rdx",
    "xor     ebx, ebx",
    "not     rcx",
    "mov     r15, r8",
    "lea     rdi, [rcx-0x1]",
    "lea     ecx, [rbx+0x40]",
    "add     edi, edi",
    "lea     eax, [rdi+0x6]",
    "lea     esi, [rdi+0x8]",
    "mov     edx, eax",
    "mov     ebp, eax",
    "call    qword [rel LocalAlloc]",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x1400136b4",
    "mov     rbp, qword [rsp+0x60]",
    "mov     rsi, qword [rsp+0x68]",
    "mov     eax, ebx",
    "mov     rbx, qword [rsp+0x58]",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "lea     ecx, [rbx+0x40]",
    "mov     edx, esi",
    "mov     r13d, esi",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x1400136ab",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "lea     eax, [rbx+0x3c]",
    "shr     r13, 0x1",
    "shr     rbp, 0x1",
    "mov     word [rsi], ax",
    "mov     word [r12], ax",
    "lea     eax, [rbx+0x2f]",
    "mov     word [rsi+0x2], ax",
    "lea     eax, [rbx+0x3e]",
    "lea     rcx, [r12+0x2]",
    "mov     word [rsi+r13*2-0x4], ax",
    "mov     r8, rdi",
    "mov     rdx, r14",
    "mov     word [r12+rbp*2-0x4], ax",
    "call    memcpy",
    "lea     rcx, [rsi+0x4]",
    "mov     r8, rdi",
    "mov     rdx, r14",
    "call    memcpy",
    "mov     rcx, qword [rsp+0x50]",
    "mov     rdx, r12",
    "call    qword [rel wcsstr]",
    "test    rax, rax",
    "je      0x1400136a2",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "lea     rdi, [rax+rbp*2-0x2]",
    "mov     rdx, rsi",
    "mov     rcx, rdi",
    "call    qword [rel wcsstr]",
    "test    rax, rax",
    "je      0x1400136a2",
    "cmp     rdi, rax",
    "setbe   bl",
    "test    ebx, ebx",
    "je      0x1400136a2",
    "sub     rax, rdi",
    "mov     ecx, 0x40",
    "sar     rax, 0x1",
    "add     eax, eax",
    "mov     ebp, eax",
    "lea     rdx, [rax+0x2]",
    "call    qword [rel LocalAlloc]",
    "mov     qword [r15], rax",
    "test    rax, rax",
    "je      0x1400136a2",
    "mov     r8, rbp",
    "mov     rdx, rdi",
    "mov     rcx, rax",
    "call    memcpy"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}