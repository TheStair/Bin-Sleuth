{
  "address": "0x1400b192c",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/dec108a2f8464ac388ec29affb61c4d8",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/88b7572ed916436d804701d7ca2c8848",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/1d2aacee85cc43a0a1c1ba47e394ae52"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x30",
    "xor     ebx, ebx",
    "lea     r9, [rax+0x18]",
    "lea     r8, [rel data_14010d0f0]",
    "mov     rsi, rdx",
    "mov     ebp, ecx",
    "mov     rdi, rbx",
    "mov     qword [rax-0x28], rbx",
    "call    sub_140013220",
    "cmp     eax, ebx",
    "je      0x1400b19c9",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_1400fb7d8]",
    "mov     rdx, rsi",
    "mov     ecx, ebp",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_140013220",
    "cmp     eax, ebx",
    "je      0x1400b1ad1",
    "mov     rdi, qword [rsp+0x60]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "repne scasw word [rdi]",
    "not     rcx",
    "lea     rsi, [rcx-0x1]",
    "lea     rdx, [rcx+rcx+0x22]",
    "lea     ecx, [rbx+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "cmp     rax, rbx",
    "je      0x1400b1add",
    "lea     rcx, [rel data_14011ef20]  {u\"ERROR kuhl_m_sid_filterFromArgs \u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x60]",
    "lea     rdx, [rsp+0x68]",
    "call    ConvertStringSidToSidW",
    "cmp     eax, ebx",
    "je      0x1400b1abb",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rbp, qword [rsp+0x58]",
    "mov     rax, rdi",
    "add     rsp, 0x30",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "mov     r9, qword [rsp+0x60]",
    "lea     r8, [rel data_14011ede0]  {u\"(sAMAccountName=%s)\"}",
    "lea     rdx, [rsi+0x12]",
    "mov     rcx, rax",
    "call    sub_1400c939c",
    "lea     rcx, [rsi+0x11]",
    "movsxd  rdx, eax",
    "cmp     rdx, rcx",
    "je      0x1400b1add",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14011ee90]  {u\"ERROR kuhl_m_sid_filterFromArgs \u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x1400b1add",
    "mov     rcx, qword [rsp+0x68]",
    "call    qword [rel IsValidSid]",
    "cmp     eax, ebx",
    "je      0x1400b1aa2",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "mov     rdi, rax",
    "jmp     0x1400b1add",
    "lea     rcx, [rel data_14011ee30]  {u\"ERROR kuhl_m_sid_filterFromArgs \u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x68]",
    "call    qword [rel GetLengthSid]",
    "mov     ebp, eax",
    "lea     ecx, [rbp+rbp*2]",
    "mov     r12d, ecx",
    "lea     rdx, [rcx+rcx+0x1a]",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "cmp     rax, rbx",
    "je      0x1400b1aae",
    "mov     rcx, qword [rsp+0x68]",
    "call    qword [rel LocalFree]",
    "jmp     0x1400b1add",
    "mov     rax, qword [rel data_14011ee08]  {u\"(objectSid=\"}",
    "mov     qword [rdi], rax",
    "mov     rax, qword [rel data_14011ee08[4]]  {u\"ectSid=\"}",
    "mov     qword [rdi+0x8], rax",
    "mov     rax, qword [rel data_14011ee08[8]]  {u\"id=\"}",
    "mov     qword [rdi+0x10], rax",
    "cmp     ebp, ebx",
    "jbe     0x1400b1a95",
    "mov     eax, 0x29",
    "mov     word [rdi+r12*2+0x16], ax",
    "jmp     0x1400b1aae",
    "lea     rsi, [rdi+0x16]",
    "mov     rax, qword [rsp+0x68]",
    "lea     r8, [rel data_14011ee20]  {u\"\\%02x\"}",
    "mov     edx, 0x4",
    "movzx   r9d, byte [rbx+rax]",
    "mov     rcx, rsi",
    "call    sub_1400c939c",
    "add     rsi, 0x6",
    "inc     rbx",
    "sub     rbp, 0x1",
    "jne     0x1400b1a6a"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}