{
  "address": "0x14005a874",
  "rules": [
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/2ee106c7c5d34df799b377fb04fb2ee1",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/5d37b64795ca4da78dcc19574a757de4",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/7a997b34591146dbbd4411d920ff141c",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "encrypt data using HC-128/9c50649e7db346e5b98b1de875012b97",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/14b9db6dcaf34a3e86e9217d3cc476a8",
    "hash data using aphash/98bdcb90423346b7a1fc9c166925c881",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x20], r9",
    "mov     qword [rax+0x18], r8",
    "mov     qword [rax+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x148",
    "mov     rdi, qword [rcx]",
    "xor     r13d, r13d",
    "or      r14d, 0xffffffff",
    "mov     r15, r9",
    "mov     rbx, r8",
    "mov     rsi, rdx",
    "mov     qword [rsp+0xe8], rdi",
    "mov     rbp, rcx",
    "mov     dword [rsp+0x98], r13d",
    "mov     dword [rax-0xf4], r13d",
    "mov     dword [rax-0xc4], r13d",
    "mov     dword [rsp+0x8c], r14d",
    "mov     dword [rsp+0x74], r13d",
    "mov     dword [rsp+0xc0], r13d",
    "mov     dword [rsp+0xb4], r13d",
    "mov     byte [rsp+0x190], r13b",
    "mov     byte [rsp+0x70], r13b",
    "mov     qword [rsp+0xd8], r13",
    "mov     dword [rsp+0x78], r13d",
    "mov     dword [rsp+0xc8], r13d",
    "mov     r12, r13",
    "mov     qword [rsp+0x80], r13",
    "cmp     dword [rcx+0x30], r13d",
    "jne     0x14005bc9b",
    "mov     rsi, qword [rsp+0x1b8]",
    "mov     rbx, qword [rsp+0x198]",
    "xor     r14d, r14d",
    "jmp     0x14005b028",
    "cmp     byte [rdi+0x61], r13b",
    "jne     0x14005bc9b",
    "mov     rdx, rbx",
    "mov     rbx, qword [rsp+0xe8]",
    "mov     rcx, rbx",
    "call    sub_140053434",
    "mov     rax, qword [rsp+0xd8]",
    "cmp     rax, r14",
    "je      0x14005b053",
    "mov     dword [rsp+0x90], r13d",
    "cmp     rbx, r13",
    "je      0x14005a96b",
    "mov     rdx, rsi",
    "mov     rcx, rbx",
    "call    sub_14006ea08",
    "mov     rax, qword [rsp+0x1a0]",
    "cmp     rax, r14",
    "je      0x14005b07c",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_140044bf4",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "call    sub_1400549b0",
    "mov     r12, rax",
    "cmp     rax, r13",
    "je      0x14005bcd0",
    "bt      dword [r8+0xc], 0x9",
    "jae     0x14005a96b",
    "mov     rdx, r15",
    "mov     rcx, rbx",
    "call    sub_1400530cc",
    "cmp     r12, r14",
    "je      0x14005b097",
    "mov     r8d, 0x1",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_140062ba0",
    "mov     r12, r13",
    "jmp     0x14005bc9b",
    "mov     rcx, qword [rax+0x70]",
    "mov     esi, 0xfff0bdc0",
    "cmp     rcx, r13",
    "je      0x14005a9a8",
    "cmp     qword [r8+0x50], r13",
    "jne     0x14005a96b",
    "add     rsp, 0x148",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rdx, r12",
    "mov     rcx, rbx",
    "call    sub_1400169a8",
    "mov     rax, qword [rdi+0x20]",
    "mov     r8, qword [r12]",
    "xor     r9d, r9d",
    "movsxd  rcx, esi",
    "lea     edx, [r9+0x12]",
    "shl     rcx, 0x5",
    "mov     rcx, qword [rcx+rax]",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, rbp",
    "call    sub_14004da74",
    "cmp     eax, r13d",
    "jne     0x14005bcd0",
    "mov     rax, qword [rdi+0x20]",
    "mov     esi, r13d",
    "add     rax, 0x18",
    "jmp     0x14005a9a3",
    "mov     rax, qword [r8]",
    "mov     qword [r8], r13",
    "lea     r8d, [r13+0x1]",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "mov     qword [rsp+0xd8], rax",
    "call    sub_140062ba0",
    "mov     rbx, r13",
    "mov     qword [rsp+0x1a0], rbx",
    "mov     eax, dword [r12+0x40]",
    "xor     r9d, r9d",
    "mov     rdx, r12",
    "shr     eax, 0x5",
    "lea     r8d, [r9+0x7b]",
    "mov     rcx, rbp",
    "and     al, 0x1",
    "mov     dword [rsp+0xe0], eax",
    "lea     rax, [rsp+0xb8]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14006c2e8",
    "cmp     qword [r12+0x18], r13",
    "mov     rdi, rax",
    "mov     qword [rsp+0xf0], rax",
    "mov     eax, r13d",
    "setne   al",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "mov     dword [rsp+0xcc], eax",
    "call    sub_140050b50",
    "cmp     eax, r13d",
    "jne     0x14005bcd0",
    "cmp     qword [rax], rcx",
    "jne     0x14005a99d",
    "mov     r8d, dword [rsp+0xb8]",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "call    sub_140054a34",
    "cmp     eax, r13d",
    "jne     0x14005bcd0",
    "inc     esi",
    "add     rax, 0x20",
    "mov     rcx, rbp",
    "call    sub_140065300",
    "mov     r13, rax",
    "xor     eax, eax",
    "cmp     r13, rax",
    "je      0x14005bccb",
    "mov     r12, rax",
    "jmp     0x14005bc9b",
    "cmp     byte [rbp+0x1e], al",
    "jne     0x14005aa78",
    "cmp     rbx, rax",
    "jne     0x14005aa84",
    "or      dword [r13+0xc8], 0x20",
    "mov     edx, 0x1",
    "mov     edx, eax",
    "cmp     rdi, rax",
    "je      0x14005aa89",
    "mov     r8, r12",
    "mov     edx, esi",
    "mov     rcx, rbp",
    "call    sub_14005a538",
    "mov     ecx, dword [rbp+0x38]",
    "xor     r9d, r9d",
    "mov     dword [rsp+0xbc], eax",
    "movsx   eax, word [r12+0x46]",
    "lea     r8d, [rcx+0x1]",
    "lea     eax, [rax+rcx+0x1]",
    "mov     edx, r8d",
    "mov     dword [rsp+0xd4], r8d",
    "mov     dword [rbp+0x38], eax",
    "mov     dword [rsp+0x88], edx",
    "cmp     dword [r12+0x54], r9d",
    "je      0x14005ab11",
    "mov     r9d, dword [rsp+0x1b0]",
    "mov     r8, rbx",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], esi",
    "call    sub_14005d1fc",
    "cmp     eax, edi",
    "jne     0x14005bc25",
    "mov     r8d, esi",
    "mov     rcx, rbp",
    "call    sub_14005398c",
    "xor     edi, edi",
    "cmp     r15, rdi",
    "jne     0x14005aabd",
    "mov     ebx, dword [r12+0x40]",
    "lea     eax, [rdx+0x1]",
    "shr     ebx, 0x7",
    "mov     dword [rsp+0xb0], eax",
    "not     bl",
    "and     bl, 0x1",
    "cmp     r15, r9",
    "je      0x14005ac47",
    "lea     edx, [r8+0x1]",
    "inc     eax",
    "mov     dword [rsp+0x88], edx",
    "mov     dword [rbp+0x38], eax",
    "mov     ebx, edi",
    "xor     r14d, r14d",
    "mov     rdi, qword [rsp+0x1a0]",
    "cmp     rdi, r9",
    "je      0x14005af85",
    "cmp     dword [r15+0x8], r9d",
    "mov     edx, r9d",
    "jle     0x14005ac47",
    "cmp     ebx, r14d",
    "je      0x14005b010",
    "cmp     qword [rbp+0x98], r14",
    "jne     0x14005bc4a",
    "xor     edx, edx",
    "lea     rcx, [rsp+0x100]",
    "lea     r8d, [rdx+0x38]",
    "call    memset",
    "mov     rax, qword [rsp+0xd8]",
    "xor     ebx, ebx",
    "mov     qword [rsp+0x100], rbp",
    "mov     dword [rsp+0x74], r14d",
    "cmp     rax, rbx",
    "je      0x14005afdf",
    "inc     dword [rbp+0x38]",
    "mov     edi, dword [r13+0x90]",
    "mov     r14d, dword [rbp+0x38]",
    "xor     r9d, r9d",
    "inc     edi",
    "mov     r8d, r14d",
    "lea     edx, [r9+0xd]",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "and     qword [rsp+0x110], 0x0",
    "neg     bl",
    "mov     rbx, qword [rsp+0x1a0]",
    "sbb     eax, eax",
    "lea     r8, [rsp+0x100]",
    "and     eax, dword [rsp+0xb0]",
    "mov     rcx, rbp",
    "mov     rdx, rbx",
    "mov     dword [rsp+0x108], eax",
    "movsx   eax, word [r12+0x46]",
    "mov     byte [rsp+0x100], 0xd",
    "mov     dword [rsp+0x10c], eax",
    "mov     dword [rsp+0x104], r14d",
    "call    sub_1400692cc",
    "mov     ecx, dword [rsp+0x108]",
    "mov     dword [rsp+0x78], ecx",
    "xor     ecx, ecx",
    "cmp     eax, ecx",
    "jne     0x14005bc98",
    "mov     rcx, r9",
    "mov     rsi, qword [rsp+0x1b8]",
    "mov     r9d, 0x1",
    "mov     r8d, ebx",
    "mov     rcx, r13",
    "lea     edx, [r9+0x50]",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     edx, 0x1",
    "mov     rcx, r13",
    "call    sub_140033bb0",
    "lea     r9, [rel data_1400f62f8]  {\"rows inserted\"}",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, r13",
    "mov     qword [rsp+0x20], r14",
    "call    sub_140033c58",
    "jmp     0x14005b010",
    "cmp     qword [rbp+0x88], r14",
    "je      0x14005bc4a",
    "mov     r14d, ebx",
    "mov     dword [rsp+0xd0], ebx",
    "jmp     0x14005ad6d",
    "mov     r14d, dword [rax]",
    "lea     rcx, [rsp+0x100]",
    "mov     rdx, rax",
    "mov     dword [rsp+0xd0], r14d",
    "call    sub_140042e3c",
    "cmp     eax, ebx",
    "je      0x14005ad6d",
    "mov     r12, rcx",
    "mov     rax, qword [rsp+0xe8]",
    "cmp     byte [rax+0x61], cl",
    "jne     0x14005bc98",
    "mov     rax, qword [r15]",
    "inc     edx",
    "add     rcx, 0x10",
    "mov     dword [rax+rcx-0x8], r14d",
    "cmp     edx, dword [r15+0x8]",
    "jl      0x14005ab41",
    "cmp     dword [r15+0x8], r9d",
    "jle     0x14005ac47",
    "mov     rcx, rbp",
    "call    sub_14005a74c",
    "cmp     r15, rbx",
    "jne     0x14005ad84",
    "mov     r12, rbx",
    "jmp     0x14005bc9b",
    "cmp     dword [rbp+0x30], ecx",
    "jne     0x14005bc98",
    "mov     r14, r9",
    "movsx   ecx, word [r12+0x46]",
    "mov     r9d, dword [rsp+0x98]",
    "cmp     ecx, ebx",
    "jle     0x14005adb7",
    "cmp     r14d, ebx",
    "jle     0x14005ad84",
    "mov     edx, r14d",
    "mov     rcx, r13",
    "call    sub_1400326bc",
    "lea     edx, [rdi-0x1]",
    "mov     rcx, r13",
    "call    sub_140032d34",
    "mov     r9, rax",
    "mov     eax, dword [r13+0x90]",
    "mov     dword [r9+0x8], eax",
    "mov     rax, qword [rbx]",
    "xor     ebx, ebx",
    "mov     r14d, dword [rax]",
    "mov     dword [rsp+0xd0], r14d",
    "cmp     qword [rsp+0xf0], rbx",
    "jne     0x14005ae3d",
    "movsx   eax, word [r12+0x46]",
    "cmp     r11d, eax",
    "jl      0x14005ac33",
    "mov     rax, qword [r15]",
    "mov     r15, qword [r12+0x8]",
    "mov     qword [rsp+0xa0], rax",
    "mov     rax, qword [rax+r14]",
    "mov     qword [rsp+0xf8], rax",
    "cmp     r15, rbx",
    "jne     0x14005afee",
    "mov     rdx, qword [r12+0x8]",
    "mov     r8d, ecx",
    "add     rdx, 0x1b",
    "movsx   eax, word [r12+0x44]",
    "mov     dword [rsp+0x8c], eax",
    "mov     ecx, dword [rbp+0x34]",
    "mov     byte [rsp+0x190], 0x1",
    "lea     eax, [rcx+0x1]",
    "mov     dword [rsp+0x74], ecx",
    "mov     dword [rbp+0x34], eax",
    "mov     al, byte [rbp+0x1f]",
    "cmp     al, bl",
    "jne     0x14005ae61",
    "mov     r8, r12",
    "mov     edx, esi",
    "mov     rcx, rbp",
    "call    sub_14005a47c",
    "cmp     eax, ebx",
    "jne     0x14005ae3d",
    "inc     edi",
    "add     r14, 0x10",
    "cmp     edi, dword [r15+0x8]",
    "jl      0x14005ab62",
    "mov     rcx, qword [r15]",
    "mov     rcx, qword [rcx+r14]",
    "call    sub_14004509c",
    "xor     r9d, r9d",
    "cmp     eax, r9d",
    "je      0x14005adfd",
    "mov     rax, qword [rsp+0xa0]",
    "mov     ecx, dword [rsp+0x8c]",
    "cmp     edi, r11d",
    "mov     dword [rax+r14+0x8], r11d",
    "movsx   eax, word [r12+0x44]",
    "movzx   ebx, bl",
    "cmovne  ebx, r9d",
    "cmp     r11d, eax",
    "cmove   ecx, edi",
    "mov     dword [rsp+0x8c], ecx",
    "movsx   eax, word [r12+0x46]",
    "inc     r11d",
    "add     r15, 0x20",
    "cmp     r11d, eax",
    "mov     rax, qword [rsp+0xf8]",
    "jl      0x14005ab90",
    "mov     r9d, dword [r15+0x8]",
    "cmp     r14d, r9d",
    "je      0x14005b0ab",
    "cmp     r14d, ebx",
    "je      0x14005b0ab",
    "movzx   eax, byte [rdx]",
    "add     rdx, 0x20",
    "shr     eax, 0x1",
    "and     eax, 0x1",
    "add     r9d, eax",
    "sub     r8, 0x1",
    "jne     0x14005ada2",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rbp+0x1f], al",
    "mov     esi, dword [rbp+rax*4+0xbc]",
    "inc     dword [rbp+0x38]",
    "mov     esi, dword [rbp+0x38]",
    "jmp     0x14005ae70",
    "mov     eax, dword [rsp+0x104]",
    "mov     dword [rsp+0x90], eax",
    "movsx   eax, word [r12+0x46]",
    "mov     r11d, r9d",
    "cmp     eax, r9d",
    "jle     0x14005abf8",
    "or      r14d, 0xffffffff",
    "mov     rax, qword [r15]",
    "mov     rbx, qword [rsp+0x198]",
    "movsxd  rcx, edi",
    "add     rcx, rcx",
    "lea     rdx, [rel data_1400f6250]  {\"table %S has no column named %s\"}",
    "mov     r8, rbx",
    "mov     rcx, qword [rax+rcx*8]",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, rbp",
    "call    sub_1400191b8",
    "mov     byte [rbp+0x1d], 0x1",
    "cmp     byte [rsp+0xe0], r9b",
    "jne     0x14005adfd",
    "mov     rdx, qword [r15]",
    "mov     rcx, rax",
    "call    sub_1400192b0",
    "xor     r9d, r9d",
    "cmp     eax, r9d",
    "je      0x14005abbf",
    "jmp     0x14005abf0",
    "mov     rsi, qword [rsp+0xe8]",
    "xor     r14d, r14d",
    "test    byte [rsi+0x30], 0x80",
    "je      0x14005b0ee",
    "lea     rdx, [rel data_1400f62a8]  {\"%d values for %d columns\"}",
    "mov     r8d, r14d",
    "mov     rcx, rbp",
    "call    sub_1400191b8",
    "xor     r14d, r14d",
    "sub     ecx, r9d",
    "cmp     r14d, ecx",
    "je      0x14005b0ab",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rbp+0x1f], al",
    "mov     edi, dword [rbp+rax*4+0xbc]",
    "inc     dword [rbp+0x38]",
    "mov     edi, dword [rbp+0x38]",
    "jmp     0x14005ae8e",
    "mov     al, byte [rbp+0x1f]",
    "cmp     al, bl",
    "jne     0x14005ae7f",
    "mov     r12, qword [rsp+0x80]",
    "mov     dword [rsp+0x8c], edi",
    "mov     bl, r9b",
    "mov     r15, qword [rsp+0x1a8]",
    "mov     ebx, dword [rsp+0xcc]",
    "cmp     ebx, r14d",
    "jne     0x14005b1b0",
    "cmp     byte [rbp+0x1e], r14b",
    "jne     0x14005b0ee",
    "mov     rbx, qword [rsp+0x198]",
    "mov     dword [rsp+0x28], r14d",
    "mov     dword [rsp+0x20], ecx",
    "lea     rdx, [rel data_1400f6270]  {\"table %S has %d columns but %d v\u2026\"}",
    "xor     r9d, r9d",
    "mov     rcx, rbp",
    "mov     r8, rbx",
    "call    sub_1400191b8",
    "jmp     0x14005ae2d",
    "cmp     edi, ebx",
    "je      0x14005ad65",
    "cmp     byte [rbp+0x1f], 0x8",
    "jae     0x14005af60",
    "mov     r8d, ecx",
    "mov     r9d, r14d",
    "mov     edx, 0x70",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "mov     eax, dword [rsp+0x104]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0xe]",
    "mov     rcx, r13",
    "mov     r8d, eax",
    "mov     dword [rsp+0x20], ebx",
    "mov     dword [rsp+0x90], eax",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x78]",
    "mov     r9d, r14d",
    "mov     edx, 0x5c",
    "mov     rcx, r13",
    "mov     ebx, eax",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x74]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, edi",
    "mov     edx, 0x79",
    "mov     rcx, r13",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x74]",
    "mov     r9d, esi",
    "mov     edx, 0x7a",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "lea     edx, [r8+0xb]",
    "mov     r9d, ebx",
    "mov     rcx, r13",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, r13",
    "call    sub_140032d34",
    "xor     ebx, ebx",
    "mov     r9, rax",
    "mov     eax, dword [r13+0x90]",
    "mov     dword [r9+0x8], eax",
    "cmp     esi, ebx",
    "je      0x14005af60",
    "mov     rsi, qword [rsp+0x1b8]",
    "cmp     rsi, r14",
    "je      0x14005b22a",
    "cmp     dword [r12+0x54], r14d",
    "je      0x14005b10a",
    "cmp     qword [rbp+0x98], r14",
    "jne     0x14005b0ee",
    "mov     rsi, qword [rsp+0x1b8]",
    "xor     r14d, r14d",
    "jmp     0x14005b020",
    "mov     rdi, qword [rsp+0x1a0]",
    "cmp     byte [rbp+0x1f], 0x8",
    "jae     0x14005ad65",
    "movzx   eax, byte [rbp+0x1f]",
    "mov     dword [rbp+rax*4+0xbc], esi",
    "inc     byte [rbp+0x1f]",
    "mov     r10b, byte [rsp+0x190]",
    "cmp     r10b, r14b",
    "je      0x14005b272",
    "mov     rcx, rbp",
    "cmp     dword [r12+0x54], r14d",
    "je      0x14005b1dc",
    "lea     rax, [rsp+0xc4]",
    "xor     r9d, r9d",
    "mov     rdx, r12",
    "mov     qword [rsp+0x38], rax",
    "lea     rax, [rsp+0x94]",
    "lea     r8d, [r9+0x62]",
    "mov     qword [rsp+0x30], rax",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x28], r14",
    "or      dword [rsp+0x20], 0xffffffff",
    "call    sub_14005cf58",
    "mov     ebx, eax",
    "mov     ebx, r14d",
    "jmp     0x14005b142",
    "inc     dword [rbp+0x38]",
    "mov     r9d, dword [rbp+0x38]",
    "lea     edx, [r14+0x46]",
    "xor     r8d, r8d",
    "mov     rcx, r13",
    "mov     dword [rsp+0xc8], r9d",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "movzx   eax, byte [rbp+0x1f]",
    "mov     dword [rbp+rax*4+0xbc], edi",
    "inc     byte [rbp+0x1f]",
    "jmp     0x14005ad65",
    "cmp     rdi, r14",
    "je      0x14005b2a9",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x20], r14d",
    "mov     r14d, dword [rsp+0x74]",
    "lea     edx, [r9+0x24]",
    "mov     r8d, r14d",
    "mov     rcx, r13",
    "call    sub_140032364",
    "mov     r10b, byte [rsp+0x190]",
    "mov     dword [rsp+0xc0], eax",
    "mov     eax, dword [r13+0x90]",
    "mov     dword [rsp+0xb4], eax",
    "jmp     0x14005b2ae",
    "mov     rdx, qword [rsi]",
    "call    sub_140051d70",
    "cmp     eax, r14d",
    "jne     0x14005b018",
    "mov     r8, qword [r12]",
    "lea     rdx, [rel data_1400f62c8]  {\"UPSERT not implemented for virtu\u2026\"}",
    "call    sub_1400191b8",
    "jmp     0x14005b018",
    "mov     rsi, qword [rsp+0x1b8]",
    "mov     rbx, qword [rsp+0x198]",
    "mov     r12, rax",
    "jmp     0x14005b028",
    "mov     r8, qword [r12+0x10]",
    "movsxd  rdx, ebx",
    "mov     r9d, r14d",
    "cmp     rdx, r14",
    "mov     rcx, r14",
    "jle     0x14005b19c",
    "lea     eax, [rbx+0x2]",
    "mov     rcx, rsi",
    "movsxd  rdx, eax",
    "shl     rdx, 0x2",
    "call    sub_140016c18",
    "mov     r10, rax",
    "mov     qword [rsp+0x80], rax",
    "cmp     rax, r14",
    "je      0x14005bcb3",
    "mov     r14d, dword [rsp+0x74]",
    "mov     r8d, dword [rsp+0x90]",
    "xor     r9d, r9d",
    "mov     rcx, r13",
    "lea     edx, [r9+0xe]",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     r10b, byte [rsp+0x190]",
    "mov     dword [rsp+0xb4], eax",
    "mov     dword [rsp+0xc0], eax",
    "or      esi, 0xffffffff",
    "add     dword [rbp+0x44], esi",
    "test    byte [rsp+0xb8], 0x1",
    "mov     edi, dword [rbp+0x44]",
    "mov     dword [rsp+0x98], edi",
    "je      0x14005b5be",
    "mov     rbx, qword [rsp+0x198]",
    "mov     rdx, qword [rsp+0x198]",
    "mov     ecx, dword [rsp+0x94]",
    "mov     eax, dword [rsp+0xb0]",
    "mov     dword [rdx+0x4c], ecx",
    "mov     dword [rsi+0x30], eax",
    "mov     eax, dword [rsp+0xc4]",
    "mov     qword [rsi+0x28], rdx",
    "mov     dword [rsi+0x34], ecx",
    "mov     dword [rsi+0x38], eax",
    "cmp     qword [rsi], r14",
    "je      0x14005b22a",
    "inc     dword [rbp+0x38]",
    "mov     ecx, dword [rbp+0x38]",
    "mov     ebx, dword [rsp+0xcc]",
    "movsxd  rax, r9d",
    "mov     dword [r10+rax*4], ecx",
    "mov     r9d, edx",
    "xor     r14d, r14d",
    "movsx   edx, word [r12+0x46]",
    "mov     rcx, rbp",
    "inc     edx",
    "call    sub_140049624",
    "xor     ebx, ebx",
    "mov     r15d, eax",
    "mov     dword [rsp+0xa8], eax",
    "movsxd  rax, dword [rsp+0x8c]",
    "cmp     eax, ebx",
    "jge     0x14005b306",
    "mov     r8, rsi",
    "mov     rcx, rbp",
    "call    sub_14006eb30",
    "inc     dword [rbp+0x38]",
    "mov     eax, dword [rbp+0x38]",
    "mov     dword [r10+rcx*4], eax",
    "movzx   eax, word [r8+0x60]",
    "inc     rcx",
    "add     dword [rbp+0x38], eax",
    "cmp     rcx, rdx",
    "mov     r8, qword [r8+0x28]",
    "jl      0x14005b17e",
    "mov     r15d, dword [rsp+0x1b0]",
    "lea     ebx, [rsi+0x47]",
    "cmp     dword [r12+0x54], r14d",
    "je      0x14005b5f3",
    "cmp     r10b, bl",
    "je      0x14005b325",
    "mov     dword [rsp+0x20], ebx",
    "mov     r9d, r15d",
    "mov     r8d, esi",
    "lea     edx, [rsi+0x47]",
    "jmp     0x14005b396",
    "mov     rdx, qword [rsp+0xf0]",
    "cmp     rdx, r14",
    "je      0x14005b987",
    "mov     r9d, 0x1",
    "mov     r8d, ebx",
    "mov     rcx, r13",
    "lea     edx, [r9+0x52]",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "movsxd  rsi, dword [rsp+0x8c]",
    "cmp     esi, r14d",
    "jl      0x14005b705  {\"E9t$Tu;D8\"}",
    "mov     r9d, dword [rsp+0xd4]",
    "xor     r8d, r8d",
    "mov     edx, ebx",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "lea     rdx, [rax+rax*4]",
    "mov     rax, qword [rsp+0xd8]",
    "mov     r8d, r15d",
    "mov     rdx, qword [rax+rdx*8+0x8]",
    "mov     rcx, rbp",
    "call    sub_140047e2c",
    "mov     r9d, eax",
    "mov     r8d, r14d",
    "mov     edx, 0x5a",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "jmp     0x14005b341",
    "mov     rcx, r13",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "cmp     r9w, word [r12+0x46]",
    "mov     rdx, r9",
    "mov     r14d, r9d",
    "mov     qword [rsp+0xa0], rdx",
    "jge     0x14005b546",
    "mov     edx, edi",
    "mov     rcx, r13",
    "call    sub_14003278c",
    "cmp     byte [rsp+0x190], r14b",
    "je      0x14005bbdc",
    "movsx   eax, word [r12+0x46]",
    "mov     ecx, dword [rsp+0xb0]",
    "mov     dword [rsp+0x40], edi",
    "sub     ecx, eax",
    "mov     dword [rsp+0x38], r15d",
    "xor     r9d, r9d",
    "sub     ecx, esi",
    "lea     r8d, [r9+0x7b]",
    "mov     dword [rsp+0x30], ecx",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x28], r12",
    "mov     dword [rsp+0x20], esi",
    "call    sub_14006cb54",
    "cmp     dword [r12+0x54], r14d",
    "jne     0x14005b747",
    "cmp     byte [rsp+0x190], r14b",
    "je      0x14005b630",
    "mov     ebx, dword [rsp+0xcc]",
    "xor     r14d, r14d",
    "cmp     ebx, r14d",
    "jne     0x14005b564",
    "mov     r8, qword [rsp+0x1a8]",
    "lea     edi, [r15+0x1]",
    "sub     esi, r15d",
    "mov     r15, qword [rsp+0xd8]",
    "mov     rbx, r9",
    "mov     dword [rsp+0xb8], esi",
    "mov     dword [rsp+0x90], edi",
    "mov     qword [rsp+0xf8], rbx",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     rcx, r13",
    "lea     edx, [r9+0x33]",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "xor     r14d, r14d",
    "mov     r9d, r15d",
    "lea     edx, [r14+0x46]",
    "mov     r8d, esi",
    "mov     rcx, r13",
    "mov     ebx, eax",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, r13",
    "call    sub_140032d34",
    "mov     ecx, dword [r13+0x90]",
    "mov     dword [rsp+0x20], r14d",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "lea     edx, [r14+0xf]",
    "mov     dword [rax+0x8], ecx",
    "cmp     qword [rsp+0x1a0], r14",
    "je      0x14005bc1b",
    "mov     ebx, dword [rsp+0x74]",
    "mov     r9d, dword [rsp+0xb4]",
    "mov     edx, 0x5",
    "mov     rcx, r13",
    "mov     r8d, ebx",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0xc0]",
    "mov     rcx, r13",
    "call    sub_140032d34",
    "mov     ecx, dword [r13+0x90]",
    "xor     r9d, r9d",
    "mov     dword [rax+0x8], ecx",
    "lea     edx, [r9+0x75]",
    "mov     r8d, ebx",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     r15, qword [rsp+0x1a8]",
    "mov     ebx, dword [rsp+0xc8]",
    "jmp     0x14005bc2a",
    "mov     edi, dword [rsp+0x88]",
    "xor     r8d, r8d",
    "mov     edx, ebx",
    "mov     r9d, edi",
    "cmp     byte [rsp+0xe0], r14b",
    "jne     0x14005b747",
    "cmp     qword [rsp+0x1a0], r14",
    "je      0x14005b658",
    "mov     edi, dword [rsp+0x88]",
    "mov     r8d, dword [rsp+0x74]",
    "mov     r9d, esi",
    "mov     dword [rsp+0x20], edi",
    "mov     edx, 0x5a",
    "movsx   eax, word [r12+0x46]",
    "mov     rdx, qword [rsp+0xf0]",
    "mov     dword [rsp+0x40], edi",
    "mov     ecx, r15d",
    "xor     r9d, r9d",
    "sub     ecx, eax",
    "mov     eax, dword [rsp+0x1b0]",
    "lea     r8d, [r9+0x7b]",
    "mov     dword [rsp+0x38], eax",
    "dec     ecx",
    "mov     dword [rsp+0x30], ecx",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x28], r12",
    "mov     dword [rsp+0x20], 0x1",
    "call    sub_14006cb54",
    "movsx   r8d, word [r12+0x46]",
    "inc     r8d",
    "mov     edx, r15d",
    "mov     rcx, rbp",
    "call    sub_140049678",
    "jmp     0x14005b5c1",
    "lea     r8d, [r15+0x1]",
    "mov     rdx, r12",
    "mov     rcx, r13",
    "call    sub_14005a384",
    "mov     al, byte [rsp+0x190]",
    "cmp     al, r9b",
    "jne     0x14005b43b",
    "cmp     dword [r8+0x8], r9d",
    "mov     rdx, r9",
    "mov     r14d, r9d",
    "mov     qword [rsp+0xa0], rdx",
    "jle     0x14005b42a",
    "mov     r15, qword [rsp+0x1a8]",
    "jmp     0x14005bc2a",
    "mov     r9d, dword [rsp+0xb4]",
    "xor     r8d, r8d",
    "mov     rcx, r13",
    "lea     edx, [r8+0xb]",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0xc0]",
    "mov     rcx, r13",
    "call    sub_140032d34",
    "mov     ecx, dword [r13+0x90]",
    "mov     dword [rax+0x8], ecx",
    "cmp     byte [rbp+0x1e], r14b",
    "jne     0x14005bc4a",
    "movsxd  rax, dword [rsp+0xb0]",
    "movsxd  r9, dword [rsp+0x78]",
    "movsxd  r15, dword [rsp+0xd0]",
    "xor     r10d, r10d",
    "mov     rcx, r9",
    "mov     rdx, rax",
    "cmp     r10w, word [r12+0x46]",
    "mov     qword [rsp+0xa8], rcx",
    "mov     edi, r10d",
    "mov     qword [rsp+0xa0], rax",
    "jge     0x14005b85b",
    "mov     rcx, qword [rbp+0x10]",
    "mov     r9d, edi",
    "mov     r8d, eax",
    "mov     edx, 0x97",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     eax, dword [rsp+0xbc]",
    "mov     edi, dword [rsp+0x88]",
    "mov     r8d, dword [rsp+0x94]",
    "mov     r9d, edi",
    "mov     edx, 0x79",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     byte [rsp+0x70], 0x1",
    "jmp     0x14005b763",
    "mov     rax, qword [rsp+0xd8]",
    "lea     rcx, [rsi+rsi*4]",
    "mov     rdx, qword [rax+rcx*8+0x8]",
    "cmp     byte [rdx], 0x75",
    "jne     0x14005b679",
    "mov     r8d, dword [rsp+0x78]",
    "mov     edi, dword [rsp+0x88]",
    "mov     dword [rsp+0x20], r14d",
    "add     r8d, esi",
    "mov     r9d, edi",
    "mov     edx, 0x4e",
    "jmp     0x14005b626",
    "mov     dword [rsp+0x20], r14d",
    "mov     r8d, edi",
    "mov     rcx, r13",
    "cmp     dword [r12+0x54], r14d",
    "jne     0x14005b6e4",
    "mov     esi, 0x2",
    "cmp     ebx, r14d",
    "jne     0x14005b916",
    "cmp     r8, r9",
    "je      0x14005b460",
    "cmp     r15, r9",
    "je      0x14005b446",
    "mov     rcx, qword [r8]",
    "add     rcx, 0x8",
    "xor     r14d, r14d",
    "cmp     dword [r12+0x54], r14d",
    "je      0x14005babb",
    "mov     rsi, r10",
    "mov     ebx, eax",
    "mov     eax, dword [rsp+0xbc]",
    "cmp     eax, r14d",
    "jle     0x14005b788",
    "mov     edi, dword [rsp+0x88]",
    "mov     rcx, rbp",
    "mov     r8d, edi",
    "call    sub_140047e2c",
    "cmp     dword [r12+0x54], r14d",
    "je      0x14005b716",
    "mov     rcx, r13",
    "call    sub_140032364",
    "jmp     0x14005b68b",
    "mov     r9d, dword [r13+0x90]",
    "mov     edx, 0x32",
    "add     r9d, 0x2",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x33]",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x94]",
    "mov     r9d, edi",
    "mov     ebx, eax",
    "mov     eax, dword [rsp+0xbc]",
    "mov     edx, 0x79",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, r13",
    "call    sub_140032d34",
    "mov     ecx, dword [r13+0x90]",
    "mov     dword [rax+0x8], ecx",
    "jmp     0x14005b6f9",
    "cmp     al, r9b",
    "je      0x14005b480",
    "cmp     r14d, dword [r8+0x8]",
    "jl      0x14005b460",
    "mov     rdx, qword [r12+0x8]",
    "mov     r8d, edi",
    "mov     rcx, rbp",
    "mov     rdx, qword [rdx+rbx+0x8]",
    "call    sub_140047e2c",
    "jmp     0x14005b4eb",
    "mov     qword [rsp+0xa0], rdx",
    "inc     r14d",
    "inc     rdx",
    "add     rcx, 0x10",
    "cmp     r14d, dword [r8+0x8]",
    "jl      0x14005b40b",
    "mov     rcx, qword [rsp+0x1b8]",
    "mov     edi, dword [rsp+0x98]",
    "mov     r15d, dword [rsp+0x1b0]",
    "mov     ebx, dword [rsp+0x94]",
    "mov     qword [rsp+0x60], rcx",
    "mov     qword [rsp+0x58], r14",
    "cmp     esi, r14d",
    "mov     esi, dword [rsp+0xd4]",
    "lea     rcx, [rsp+0xa8]",
    "mov     qword [rsp+0x50], rcx",
    "mov     dword [rsp+0x48], edi",
    "mov     byte [rsp+0x40], r15b",
    "setge   al",
    "mov     r9d, ebx",
    "mov     rdx, r12",
    "mov     byte [rsp+0x38], al",
    "mov     eax, dword [rsp+0xc4]",
    "mov     dword [rsp+0x30], r14d",
    "mov     r14, qword [rsp+0x80]",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x28], esi",
    "mov     r8, r14",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14005bd84",
    "xor     eax, eax",
    "mov     r9d, esi",
    "mov     dword [rsp+0x28], eax",
    "xor     r8d, r8d",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140059298",
    "xor     edx, edx",
    "cmp     dword [rsp+0xa8], edx",
    "je      0x14005bb9b",
    "mov     rbx, qword [r12+0x60]",
    "cmp     rbx, r14",
    "je      0x14005b889",
    "mov     r8, qword [rsp+0x1a8]",
    "cmp     r8, r10",
    "jne     0x14005ba0b",
    "xor     r9d, r9d",
    "mov     r8d, ebx",
    "lea     edx, [r9+0x4a]",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8d, edi",
    "lea     edx, [r9+0xf]",
    "jmp     0x14005b756",
    "mov     rbx, qword [rbp+0x10]",
    "lea     rax, [rdx+rdx*4]",
    "mov     r8d, edi",
    "mov     rsi, qword [r15+rax*8+0x8]",
    "mov     rcx, rbp",
    "mov     rdx, rsi",
    "call    sub_140047e2c",
    "inc     dword [rbp+0x38]",
    "mov     edi, dword [rbp+0x38]",
    "mov     r8d, dword [rsp+0x90]",
    "xor     eax, eax",
    "mov     r9d, edi",
    "lea     edx, [rax+0x4e]",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     rcx, rsi",
    "call    sub_1400430a8",
    "mov     rbx, qword [rsp+0xf8]",
    "mov     esi, dword [rsp+0xb8]",
    "mov     cl, byte [rax]",
    "btr     dword [rax+0x4], 0xc",
    "mov     dword [rax+0x28], edi",
    "mov     edi, dword [rsp+0x90]",
    "mov     byte [rax+0x32], cl",
    "mov     byte [rax], 0xab",
    "mov     r8d, dword [rsp+0x74]",
    "mov     r9d, r14d",
    "mov     edx, 0x5a",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "jmp     0x14005b4eb",
    "mov     r8, qword [rsp+0x1a8]",
    "mov     rdx, qword [rsp+0xa0]",
    "xor     r9d, r9d",
    "cmp     r8, r9",
    "jne     0x14005b511",
    "lea     eax, [rsi+rdi]",
    "cmp     dword [rcx], eax",
    "je      0x14005b422",
    "mov     ecx, 0x1",
    "cmp     qword [rsp+0xf0], rdx",
    "jne     0x14005bb97",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "call    sub_1400709f0",
    "movsx   r9d, word [r12+0x46]",
    "mov     eax, dword [rsp+0xd4]",
    "mov     esi, 0x2",
    "mov     rcx, r13",
    "mov     dword [rsp+0x20], eax",
    "lea     edx, [rsi+0x8]",
    "lea     r8d, [rsi-0x1]",
    "add     r9d, esi",
    "call    sub_140032364",
    "lea     r9d, [rsi-0xe]",
    "mov     r8, rbx",
    "mov     edx, eax",
    "mov     rcx, r13",
    "call    sub_140032c40",
    "movsxd  r11, dword [r13+0x90]",
    "cmp     r11d, r14d",
    "jle     0x14005b8fa",
    "mov     rax, qword [rsp+0xe8]",
    "cmp     dword [r8+0x8], r10d",
    "mov     eax, r10d",
    "jle     0x14005ba3c",
    "mov     rax, qword [r12+0x8]",
    "test    byte [rax+rsi+0x1b], 0x2",
    "je      0x14005ba04",
    "mov     rcx, qword [rsp+0xa8]",
    "mov     rdx, qword [rsp+0xa0]",
    "mov     r9d, dword [rsp+0x78]",
    "xor     r10d, r10d",
    "movsx   eax, word [r12+0x46]",
    "inc     edi",
    "add     rbx, 0x20",
    "lea     ecx, [rsi+rdi]",
    "mov     dword [rsp+0x90], edi",
    "mov     qword [rsp+0xf8], rbx",
    "cmp     ecx, eax",
    "jl      0x14005b3eb",
    "inc     r14d",
    "inc     rdx",
    "mov     qword [rsp+0xa0], rdx",
    "mov     ebx, dword [rsp+0xc8]",
    "cmp     ebx, r14d",
    "je      0x14005b944",
    "mov     ecx, edx",
    "jmp     0x14005bba0",
    "mov     rax, qword [rsp+0xe8]",
    "mov     eax, dword [rax+0x30]",
    "bt      rax, 0xe",
    "jae     0x14005bb9b",
    "mov     rax, qword [rbp+0x90]",
    "mov     edi, dword [rsp+0x98]",
    "mov     rcx, rbp",
    "cmp     rax, r14",
    "cmovne  rcx, rax",
    "mov     byte [rcx+0x21], 0x1",
    "mov     eax, dword [rsp+0x1b0]",
    "lea     rcx, [r11+r11*2]",
    "movzx   edx, ax",
    "cmp     eax, 0xb",
    "mov     rax, qword [r13+0x88]",
    "cmove   dx, si",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     rbx, qword [rbx+0x28]",
    "cmp     rbx, r14",
    "jne     0x14005b87b",
    "cmp     r15, r10",
    "je      0x14005b811",
    "mov     rcx, qword [r8]",
    "add     rcx, 0x8",
    "mov     eax, edi",
    "sub     eax, r14d",
    "jmp     0x14005ba33",
    "inc     r14d",
    "movsx   eax, word [r12+0x44]",
    "cmp     edi, eax",
    "jne     0x14005b7ed",
    "mov     esi, dword [rsp+0x8c]",
    "cmp     r8, r9",
    "je      0x14005b42a",
    "mov     r15d, dword [rsp+0xa8]",
    "mov     edi, dword [rsp+0x98]",
    "movzx   eax, byte [rsp+0x70]",
    "mov     r9d, dword [rsp+0xc4]",
    "mov     dword [rsp+0x40], ecx",
    "mov     dword [rsp+0x38], eax",
    "mov     dword [rsp+0x30], edx",
    "mov     r8d, ebx",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x28], r14",
    "mov     dword [rsp+0x20], esi",
    "call    sub_14005cd84",
    "xor     r14d, r14d",
    "lea     esi, [r14+0x2]",
    "jmp     0x14005b91e",
    "mov     rcx, qword [r12+0x70]",
    "mov     rdx, qword [r12]",
    "xor     r8d, r8d",
    "add     rcx, 0x50",
    "call    sub_14001a410",
    "xor     edx, edx",
    "cmp     qword [rax+0x10], rdx",
    "je      0x14005bb9b",
    "cmp     qword [rbx], rax",
    "je      0x14005b889",
    "mov     rdx, qword [r12+0x8]",
    "mov     r8d, ebx",
    "mov     rcx, rbp",
    "mov     rdx, qword [rdx+rsi+0x8]",
    "call    sub_140047efc",
    "cmp     r8, r10",
    "je      0x14005ba54",
    "mov     rcx, qword [rsp+0xa8]",
    "inc     eax",
    "add     rcx, 0x10",
    "cmp     eax, dword [r8+0x8]",
    "jl      0x14005ba1b",
    "cmp     eax, r10d",
    "jl      0x14005b811",
    "cmp     byte [rsp+0x190], r10b",
    "je      0x14005ba74",
    "cmp     eax, dword [r8+0x8]",
    "jge     0x14005b811",
    "cmp     dword [rcx], edi",
    "je      0x14005ba2b",
    "cmp     qword [rsp+0x1a0], r10",
    "je      0x14005ba98",
    "mov     r8d, dword [rsp+0x74]",
    "mov     dword [rsp+0x20], ebx",
    "mov     r9d, eax",
    "mov     edx, 0x5a",
    "jmp     0x14005b7e3",
    "cdqe    ",
    "mov     r8d, ebx",
    "mov     rcx, rbp",
    "lea     rdx, [rax+rax*4]",
    "mov     rax, qword [rsp+0xd8]",
    "mov     rdx, qword [rax+rdx*8+0x8]",
    "call    sub_140047e2c",
    "jmp     0x14005b826",
    "cmp     rcx, rdx",
    "je      0x14005b83e",
    "mov     rcx, r13",
    "call    sub_140032364",
    "jmp     0x14005b826",
    "movsx   eax, word [r12+0x46]",
    "inc     edi",
    "inc     ebx",
    "add     rsi, 0x20",
    "cmp     edi, eax",
    "jl      0x14005b7ca",
    "lea     r8d, [rax+r9]",
    "mov     edx, 0x4f",
    "mov     r9d, ebx",
    "jmp     0x14005b7de",
    "mov     dword [rsp+0x20], r10d"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}