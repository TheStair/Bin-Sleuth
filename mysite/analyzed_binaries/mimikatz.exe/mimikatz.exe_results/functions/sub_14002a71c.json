{
  "address": "0x14002a71c",
  "rules": [
    "decompress data using LZO/4cde8899b401464e87ec185666d6508a",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "hash data using jshash/f142a7a7597843a791ba4ccc676b6fb1",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     dword [rax+0x20], r9d",
    "mov     qword [rax+0x18], r8",
    "mov     qword [rax+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x58",
    "mov     r12, qword [rcx+0x18]",
    "xor     ebp, ebp",
    "mov     r10d, r9d",
    "mov     r9, qword [r12+0x50]",
    "mov     qword [rax-0x58], rbp",
    "mov     rsi, rcx",
    "movzx   eax, byte [r9+0x26]",
    "mov     ecx, dword [rcx+0x3c]",
    "movzx   ebx, byte [r9+0x25]",
    "shl     ebx, 0x8",
    "xor     r13d, r13d",
    "mov     r15, r8",
    "or      ebx, eax",
    "movzx   eax, byte [r9+0x24]",
    "mov     rdi, rdx",
    "shl     eax, 0x18",
    "shl     ebx, 0x8",
    "mov     qword [rsp+0x38], r12",
    "or      ebx, eax",
    "movzx   eax, byte [r9+0x27]",
    "mov     dword [rsp+0x20], ecx",
    "or      ebx, eax",
    "mov     dword [rsp+0x28], ebx",
    "cmp     ebx, ecx",
    "jb      0x14002a79f",
    "test    ebx, ebx",
    "je      0x14002ade8",
    "mov     ecx, 0x10ea3",
    "call    sub_140084e38",
    "jmp     0x14002adbb",
    "mov     rcx, qword [rsp+0x38]",
    "xor     r12d, r12d",
    "cmp     byte [rsi+0x23], bpl",
    "mov     rcx, qword [rcx+0x70]",
    "sete    r12b",
    "call    sub_140022a44",
    "test    eax, eax",
    "jne     0x14002adbb",
    "and     dword [rsp+0x24], ebp",
    "mov     r14d, 0x1",
    "xor     r15b, r15b",
    "cmp     byte [rsp+0xc0], r14b",
    "jne     0x14002a7f0",
    "add     rsp, 0x58",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "lea     r14d, [rax+0x1]",
    "xor     edx, edx",
    "mov     eax, 0x40000000",
    "div     dword [rsi+0x30]",
    "add     dword [rsi+0x3c], r14d",
    "mov     ecx, dword [rsi+0x3c]",
    "add     eax, r14d",
    "cmp     ecx, eax",
    "jne     0x14002ae27  {\"@8n!\"}",
    "cmp     byte [rsp+0xc0], 0x2",
    "movzx   r15d, r15b",
    "cmove   r15d, r14d",
    "cmp     r10d, ecx",
    "ja      0x14002a800",
    "cmp     byte [rsi+0x21], bpl",
    "je      0x14002aeb3",
    "lea     eax, [rcx+0x1]",
    "mov     dword [rsi+0x3c], eax",
    "mov     rcx, qword [r12+0x50]",
    "lea     edx, [rbx-0x1]",
    "mov     eax, edx",
    "mov     byte [rcx+0x27], dl",
    "shr     eax, 0x18",
    "mov     byte [rcx+0x24], al",
    "mov     eax, edx",
    "shr     eax, 0x10",
    "mov     byte [rcx+0x25], al",
    "mov     eax, edx",
    "shr     eax, 0x8",
    "mov     byte [rcx+0x26], al",
    "mov     rcx, qword [r12+0x70]",
    "call    sub_140022a44",
    "test    eax, eax",
    "jne     0x14002adbb",
    "lea     r8, [rsp+0xa0]",
    "xor     r9d, r9d",
    "mov     edx, r10d",
    "mov     rcx, rsi",
    "call    sub_140026644",
    "test    eax, eax",
    "jne     0x14002adbb",
    "mov     edx, dword [rsi+0x3c]",
    "mov     rax, qword [rsi+0x18]",
    "mov     r9d, r12d",
    "mov     rcx, qword [rax+0x50]",
    "mov     eax, edx",
    "mov     r8, rdi",
    "shr     eax, 0x18",
    "mov     byte [rcx+0x1f], dl",
    "mov     byte [rcx+0x1c], al",
    "mov     eax, edx",
    "shr     eax, 0x10",
    "mov     byte [rcx+0x1d], al",
    "mov     eax, edx",
    "shr     eax, 0x8",
    "mov     byte [rcx+0x1e], al",
    "mov     edx, dword [rsi+0x3c]",
    "mov     rcx, rsi",
    "mov     dword [r15], edx",
    "call    sub_1400279b8",
    "test    eax, eax",
    "jne     0x14002adbb",
    "mov     edx, dword [rsi+0x3c]",
    "mov     rcx, rsi",
    "call    sub_1400264c0",
    "cmp     eax, dword [rsi+0x3c]",
    "jne     0x14002aeb3",
    "mov     rcx, qword [r12+0x50]",
    "movzx   eax, byte [rcx+0x22]",
    "movzx   edi, byte [rcx+0x21]",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rcx+0x23]",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rcx+0x20]",
    "mov     rcx, qword [rbp+0x50]",
    "movzx   eax, byte [rcx+0x2]",
    "movzx   edi, byte [rcx+0x1]",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rcx+0x3]",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rcx]",
    "jmp     0x14002a880",
    "cmp     byte [rsp+0xa0], 0x2",
    "jne     0x14002a800",
    "mov     rcx, qword [rdi]",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "je      0x14002adb9",
    "mov     edx, dword [rsi+0x3c]",
    "and     qword [rsp+0xa0], rbp",
    "lea     r8, [rsp+0xa0]",
    "mov     r9d, r12d",
    "mov     rcx, rsi",
    "call    sub_1400279b8",
    "mov     edi, eax",
    "test    eax, eax",
    "jne     0x14002af24",
    "mov     ecx, 0x10edb",
    "call    sub_140084e38",
    "mov     ecx, dword [rsp+0x24]",
    "mov     eax, ecx",
    "add     ecx, r14d",
    "mov     dword [rsp+0x24], ecx",
    "cmp     eax, ebx",
    "ja      0x14002a8b5",
    "shl     eax, 0x18",
    "or      edi, eax",
    "cmp     edi, dword [rsp+0x20]",
    "ja      0x14002a8b5",
    "mov     r15b, r14b",
    "jmp     0x14002a800",
    "mov     eax, ebx",
    "mov     rcx, qword [rdi]",
    "test    rcx, rcx",
    "je      0x14002af1c",
    "mov     eax, edi",
    "jmp     0x14002adbb",
    "mov     rbx, qword [rsp+0xa0]",
    "mov     rcx, qword [rbx+0x70]",
    "call    sub_140022a44",
    "mov     rcx, qword [rbx+0x70]",
    "mov     edi, eax",
    "call    sub_14002242c",
    "test    edi, edi",
    "jne     0x14002af24",
    "test    r13, r13",
    "je      0x14002adb9",
    "mov     r13, qword [rbp+0x50]",
    "movzx   eax, byte [r13+0x6]",
    "movzx   r12d, byte [r13+0x5]",
    "shl     r12d, 0x8",
    "or      r12d, eax",
    "movzx   eax, byte [r13+0x4]",
    "shl     eax, 0x18",
    "shl     r12d, 0x8",
    "or      r12d, eax",
    "movzx   eax, byte [r13+0x7]",
    "or      r12d, eax",
    "jne     0x14002a93c",
    "lea     r8, [rsp+0x40]",
    "xor     r9d, r9d",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "call    sub_1400279b8",
    "mov     rbp, qword [rsp+0x40]",
    "jmp     0x14002a8bf",
    "and     qword [rdi], rbp",
    "jmp     0x14002ad9d",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_14002242c",
    "add     dword [rsi+0x3c], r14d",
    "mov     ecx, dword [rsi+0x3c]",
    "mov     rdi, qword [rsp+0xa8]",
    "xor     edx, edx",
    "mov     eax, 0x40000000",
    "div     dword [rsi+0x30]",
    "add     eax, r14d",
    "cmp     ecx, eax",
    "jne     0x14002aeb3",
    "mov     rcx, qword [r13+0x70]",
    "call    sub_14002242c",
    "mov     eax, dword [rsi+0x34]",
    "shr     eax, 0x2",
    "sub     eax, 0x2",
    "cmp     r12d, eax",
    "ja      0x14002ade1",
    "test    r15b, r15b",
    "jne     0x14002a93c",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002adab",
    "test    rbp, rbp",
    "je      0x14002adab",
    "lea     eax, [rcx+0x1]",
    "mov     dword [rsi+0x3c], eax",
    "mov     ecx, 0x10ef8",
    "jmp     0x14002add1",
    "mov     r10d, dword [rsp+0xb8]",
    "test    r15b, r15b",
    "je      0x14002ab19",
    "mov     rcx, qword [rbp+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ad98",
    "mov     rcx, qword [rbp+0x70]",
    "call    sub_14002242c",
    "call    sub_140084e38",
    "mov     ebx, eax",
    "jmp     0x14002ad98",
    "test    r12d, r12d",
    "je      0x14002ad66",
    "cmp     edi, r10d",
    "je      0x14002a978",
    "mov     r13, qword [rsp+0x30]",
    "mov     rax, qword [rsp+0xb0]",
    "mov     r12, qword [rsp+0x38]",
    "mov     rcx, qword [r12+0x50]",
    "mov     dword [rax], edi",
    "mov     rax, qword [rbp+0x50]",
    "mov     eax, dword [rax]",
    "mov     dword [rcx+0x20], eax",
    "mov     rax, qword [rsp+0xa8]",
    "mov     qword [rax], rbp",
    "jmp     0x14002ab0d",
    "mov     r12, qword [rsp+0x38]",
    "test    r10d, r10d",
    "je      0x14002ad06",
    "mov     rax, qword [rsp+0xb0]",
    "mov     rcx, qword [rbp+0x70]",
    "xor     r15b, r15b",
    "mov     dword [rax], edi",
    "mov     rax, qword [rsp+0xa8]",
    "mov     qword [rax], rbp",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ad98",
    "jae     0x14002ab19",
    "xor     ebp, ebp",
    "mov     qword [rsp+0x40], rbp",
    "jmp     0x14002ad6b",
    "xor     r13d, r13d",
    "test    r15b, r15b",
    "je      0x14002ad9d",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_14002242c",
    "xor     r8d, r8d",
    "and     dword [rsp+0xa0], 0x0",
    "cmp     byte [rsp+0xc0], 0x2",
    "jne     0x14002ac66",
    "test    r12d, r12d",
    "jne     0x14002a9ee",
    "cmp     byte [rsp+0xc0], 0x2",
    "jne     0x14002ab19",
    "mov     rcx, qword [rsp+0x30]",
    "test    rcx, rcx",
    "je      0x14002ad7e",
    "mov     ebx, dword [rsp+0x28]",
    "jmp     0x14002a835",
    "lea     eax, [r8*4+0x8]",
    "mov     edi, eax",
    "movzx   ecx, byte [rax+r13+0x1]",
    "movzx   eax, byte [rax+r13+0x2]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdi+r13+0x3]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdi+r13]",
    "shl     eax, 0x18",
    "or      ecx, eax",
    "cmp     ecx, dword [rsp+0x20]",
    "ja      0x14002adda",
    "movzx   eax, byte [r13+0xa]",
    "movzx   ecx, byte [r13+0x9]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [r13+0x8]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [r13+0xb]",
    "or      ecx, eax",
    "sub     ecx, r10d",
    "jns     0x14002ac9f",
    "xor     r8d, r8d",
    "test    r12d, r12d",
    "je      0x14002ab80",
    "mov     rcx, qword [rbp+0x50]",
    "movzx   eax, byte [rcx+0xa]",
    "movzx   edi, byte [rcx+0x9]",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rcx+0x8]",
    "shl     eax, 0x18",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rcx+0xb]",
    "or      edi, eax",
    "cmp     edi, dword [rsp+0x20]",
    "ja      0x14002adcc",
    "mov     r13, qword [rsp+0x30]",
    "test    r13, r13",
    "jne     0x14002a9ca",
    "mov     r13, rbp",
    "mov     qword [rsp+0x30], rbp",
    "test    rbp, rbp",
    "je      0x14002a861",
    "mov     ecx, 0x10f5b",
    "jmp     0x14002add1",
    "test    r15b, r15b",
    "je      0x14002abe0",
    "mov     r9d, r14d",
    "cmp     r12d, r14d",
    "jbe     0x14002ab80",
    "cmp     ecx, 0x80000000",
    "jne     0x14002ac9d",
    "mov     r8d, dword [rsp+0xa0]",
    "lea     rdx, [r13+0xa]",
    "mov     ecx, 0x10f1a",
    "lea     r8, [rsp+0x48]",
    "xor     r9d, r9d",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "call    sub_1400279b8",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ad98",
    "mov     rcx, qword [r13+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ad9d",
    "mov     rax, qword [rbp+0x50]",
    "mov     r12, qword [rsp+0x38]",
    "mov     rcx, qword [r12+0x50]",
    "mov     eax, dword [rax]",
    "mov     dword [rcx+0x20], eax",
    "jmp     0x14002ab0d",
    "mov     r15, qword [rsp+0xb0]",
    "mov     dword [r15], ecx",
    "mov     rcx, qword [rbp+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ad98",
    "cmp     ecx, r10d",
    "je      0x14002abe0",
    "lea     r8, [r13+0xe]",
    "neg     ecx",
    "mov     ecx, 0x7fffffff",
    "jmp     0x14002ac9f",
    "mov     dword [rsp+0xa0], r8d",
    "jmp     0x14002ab88",
    "add     r8d, r14d",
    "add     rdx, 0x4",
    "cmp     r8d, r12d",
    "jb      0x14002ab4d",
    "mov     r13, qword [rsp+0x48]",
    "mov     rcx, qword [r13+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ad8f",
    "mov     rax, qword [rbp+0x50]",
    "mov     rcx, qword [r13+0x50]",
    "mov     eax, dword [rax]",
    "mov     dword [rcx], eax",
    "jmp     0x14002ab08",
    "lea     edx, [r12-0x1]",
    "cmp     dword [rsp+0xa0], edx",
    "jae     0x14002ac1c",
    "jae     0x14002ad66",
    "cmp     edx, ecx",
    "jge     0x14002acf5",
    "cmp     edx, 0x80000000",
    "jne     0x14002ace5",
    "movzx   eax, byte [rdx]",
    "movzx   ecx, byte [rdx-0x1]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdx-0x2]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rdx+0x1]",
    "or      ecx, eax",
    "cmp     ecx, r10d",
    "jbe     0x14002ad09",
    "mov     rcx, qword [r13+0x70]",
    "call    sub_14002242c",
    "mov     rax, qword [rbp+0x50]",
    "mov     rcx, qword [r13+0x50]",
    "lea     edx, [r12-0x1]",
    "mov     eax, dword [rax]",
    "mov     r8d, edx",
    "mov     dword [rcx], eax",
    "mov     rcx, qword [r13+0x50]",
    "mov     eax, edx",
    "shr     eax, 0x18",
    "mov     byte [rcx+0x7], dl",
    "shl     r8d, 0x2",
    "mov     byte [rcx+0x4], al",
    "mov     eax, edx",
    "shr     eax, 0x10",
    "mov     byte [rcx+0x5], al",
    "mov     eax, edx",
    "shr     eax, 0x8",
    "mov     byte [rcx+0x6], al",
    "mov     rdx, qword [rbp+0x50]",
    "mov     rcx, qword [r13+0x50]",
    "add     rdx, 0xc",
    "add     rcx, 0x8",
    "call    memcpy",
    "mov     rcx, qword [r13+0x70]",
    "call    sub_14002242c",
    "mov     r13, qword [rsp+0x30]",
    "test    r13, r13",
    "jne     0x14002aad6",
    "mov     r12, qword [rsp+0x38]",
    "mov     ebx, dword [r15]",
    "mov     eax, edx",
    "mov     byte [r13+0x7], dl",
    "shr     eax, 0x18",
    "mov     byte [r13+0x4], al",
    "mov     eax, edx",
    "shr     eax, 0x10",
    "mov     byte [r13+0x5], al",
    "mov     eax, edx",
    "shr     eax, 0x8",
    "mov     byte [r13+0x6], al",
    "mov     rcx, qword [rsi+0x58]",
    "test    rcx, rcx",
    "je      0x14002ad16",
    "lea     eax, [r12*4+0x4]",
    "mov     eax, dword [rax+r13]",
    "mov     dword [rdi+r13], eax",
    "cmp     byte [rsp+0xc0], 0x2",
    "jne     0x14002ad66",
    "add     r9d, r14d",
    "add     r8, 0x4",
    "cmp     r9d, r12d",
    "jb      0x14002acaf",
    "mov     dword [rsp+0xa0], r9d",
    "mov     ecx, edx",
    "neg     edx",
    "mov     edx, 0x7fffffff",
    "jmp     0x14002ace7",
    "mov     rcx, qword [r13+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ad9d",
    "mov     r12, qword [rsp+0x38]",
    "mov     eax, edi",
    "mov     rcx, qword [r12+0x50]",
    "shr     eax, 0x18",
    "mov     byte [rcx+0x20], al",
    "mov     eax, edi",
    "mov     byte [rcx+0x23], dil",
    "shr     eax, 0x10",
    "mov     byte [rcx+0x21], al",
    "mov     eax, edi",
    "shr     eax, 0x8",
    "mov     byte [rcx+0x22], al",
    "jmp     0x14002ab0d",
    "xor     eax, eax",
    "cmp     ebx, dword [rcx]",
    "ja      0x14002ac5e",
    "movzx   eax, byte [r8]",
    "movzx   edx, byte [r8-0x1]",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r8-0x2]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r8+0x1]",
    "or      edx, eax",
    "sub     edx, r10d",
    "jns     0x14002ace7",
    "jmp     0x14002ab80",
    "mov     rcx, qword [r13+0x50]",
    "mov     eax, edi",
    "shr     eax, 0x18",
    "mov     byte [rcx+0x3], dil",
    "mov     byte [rcx], al",
    "mov     eax, edi",
    "shr     eax, 0x10",
    "mov     byte [rcx+0x1], al",
    "mov     eax, edi",
    "shr     eax, 0x8",
    "mov     byte [rcx+0x2], al",
    "xor     r15b, r15b",
    "mov     rcx, qword [rdi]",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "je      0x14002ad63",
    "mov     eax, r14d",
    "jmp     0x14002ad18",
    "mov     edx, ebx",
    "call    sub_14001d71c",
    "test    eax, eax",
    "je      0x14002ad16",
    "mov     rcx, qword [rdi]",
    "test    rcx, rcx",
    "je      0x14002ad5f",
    "mov     rdi, qword [rsp+0xa8]",
    "xor     r9d, r9d",
    "test    eax, eax",
    "mov     edx, ebx",
    "mov     rcx, rsi",
    "mov     r8, rdi",
    "sete    r9b",
    "call    sub_1400279b8",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002ad63",
    "and     qword [rdi], 0x0",
    "mov     rcx, qword [rcx+0x70]",
    "call    sub_14002242c"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}