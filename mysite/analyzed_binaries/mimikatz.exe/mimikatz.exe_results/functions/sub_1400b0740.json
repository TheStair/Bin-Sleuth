{
  "address": "0x1400b0740",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x20",
    "lea     rcx, [rel data_140140780]",
    "mov     rbp, r9",
    "mov     rsi, r8",
    "mov     rdi, rdx",
    "mov     ebx, 0x57",
    "call    qword [rel EnterCriticalSection]",
    "lea     rcx, [rel data_14011dc10]  {u\"\\n\\nmimikatz(rpc): %s\\n\"}",
    "mov     rdx, rdi",
    "call    sub_14000c030",
    "and     qword [rel data_140140268], 0x0",
    "lea     ecx, [rbx-0x17]",
    "mov     edx, 0x1fffe",
    "mov     qword [rel data_140140260], 0xffff",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rel data_140140258], rax",
    "test    rax, rax",
    "je      0x1400b081c",
    "lea     rcx, [rel data_140140780]",
    "call    qword [rel LeaveCriticalSection]",
    "cmp     ebx, 0xc000010a",
    "je      0x1400b0839",
    "mov     rcx, rdi",
    "call    sub_1400857f4",
    "mov     rcx, qword [rel data_140140268]",
    "lea     rdx, [rcx+rcx+0x2]",
    "mov     ecx, 0x40",
    "mov     ebx, eax",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, qword [rel data_140140258]",
    "mov     qword [rbp], rax",
    "test    rax, rax",
    "je      0x1400b07fc",
    "xor     ecx, ecx",
    "mov     dword [rel data_1401407a8], ebx",
    "call    qword [rel RpcMgmtStopServerListening]",
    "cmp     ebx, 0xc000004b",
    "jne     0x1400b0847",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "and     qword [rel data_140140268], 0x0",
    "and     qword [rel data_140140260], 0x0",
    "mov     qword [rel data_140140258], rax",
    "mov     rbx, qword [rel data_140140268]",
    "mov     rdx, rdi",
    "mov     rcx, rax",
    "lea     r8, [rbx+rbx+0x2]",
    "call    memcpy",
    "lea     r11d, [rbx+0x1]",
    "xor     ebx, ebx",
    "mov     dword [rsi], r11d",
    "mov     rbp, qword [rsp+0x38]",
    "mov     rsi, qword [rsp+0x40]",
    "mov     eax, ebx",
    "mov     rbx, qword [rsp+0x30]",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    "
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}