{
  "address": "0x1400b37e0",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8 {__saved_rbx}], rbx",
    "mov     qword [rsp+0x10 {__saved_rbp}], rbp",
    "push    rsi {__saved_rsi}",
    "push    rdi {__saved_rdi}",
    "push    r13 {__saved_r13}",
    "sub     rsp, 0x590",
    "and     qword [rsp+0x40 {var_568}], 0x0",
    "mov     rbx, rdx",
    "mov     edi, ecx",
    "call    qword [rel GetCurrentProcessId]",
    "lea     rdx, [rsp+0x3c {pSessionId}]",
    "mov     ecx, eax",
    "call    qword [rel ProcessIdToSessionId]",
    "lea     r9, [rsp+0x40 {var_568}]",
    "lea     r8, [rel data_1400ee2e0]  {u\"server\"}",
    "xor     esi, esi  {0x0}",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "and     qword [rsp+0x20 {var_588}], rsi  {0x0}",
    "mov     ebp, eax",
    "call    sub_140013220",
    "mov     rbx, qword [rsp+0x40 {var_568}]",
    "test    eax, eax",
    "je      0x1400b3870",
    "test    rbx, rbx",
    "je      0x1400b3886",
    "lea     rcx, [rel data_1401213e8]  {u\"Remote server: %s\\n\"}",
    "mov     rdx, rbx",
    "xor     ebp, ebp  {0x0}",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    WinStationOpenServerW",
    "mov     rsi, rax",
    "test    rax, rax",
    "jne     0x1400b3886",
    "lea     r8, [rsp+0x5c8 {arg_20}]",
    "lea     rdx, [rsp+0x30 {var_578}]",
    "mov     rcx, rsi",
    "call    WinStationEnumerateW",
    "test    al, al",
    "je      0x1400b3b67",
    "lea     rcx, [rel data_140121710]  {u\"ERROR kuhl_m_ts_sessions ; No se\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x1400b3b88",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140121410]  {u\"ERROR kuhl_m_ts_sessions ; WinSt\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140121690]  {u\"ERROR kuhl_m_ts_sessions ; WinSt\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     eax, dword [rsp+0x5c8 {arg_20}]",
    "xor     edi, edi  {0x0}",
    "movsxd  rbp, ebp",
    "test    eax, eax",
    "je      0x1400b3b4f",
    "lea     r11, [rsp+0x590 {__saved_r13}]",
    "xor     eax, eax  {0x0}",
    "mov     rbx, qword [r11+0x20 {__saved_rbx}]",
    "mov     rbp, qword [r11+0x28 {__saved_rbp}]",
    "mov     rsp, r11",
    "pop     r13 {__saved_r13}",
    "pop     rdi {__saved_rdi}",
    "pop     rsi {__saved_rsi}",
    "retn     {__return_addr}",
    "mov     rcx, rsi",
    "call    WinStationCloseServer",
    "lea     rcx, [rel data_1401215e0]  {u\"ERROR kuhl_m_ts_sessions ; WinSt\u2026\"}",
    "call    sub_14000c030",
    "xor     ebx, ebx  {0x0}",
    "lea     r13, [rel data_1400d27a8]",
    "test    rsi, rsi",
    "je      0x1400b3b88",
    "lea     r8, [rel data_1400e17c8]",
    "lea     r8, [rel data_1400d4410]",
    "mov     r8, qword [r8+rdx*8]",
    "jmp     0x1400b38e3",
    "lea     r10, [rel data_1400e17cc]",
    "mov     eax, dword [rbx+rcx]",
    "lea     r10, [rel data_1400eaa48]",
    "cmp     dword [rsp+0x3c {pSessionId}], eax",
    "je      0x1400b38ff",
    "test    rbp, rbp",
    "je      0x1400b38f8",
    "lea     rax, [rsp+0x5c0 {arg_18}]",
    "lea     r9, [rsp+0x38 {var_570}]",
    "mov     r8d, 0x1c",
    "mov     qword [rsp+0x28 {var_580_1}], rax {arg_18}",
    "mov     rax, qword [rsp+0x30 {var_578}]",
    "mov     rcx, rsi",
    "mov     edx, dword [rbx+rax]",
    "mov     dword [rsp+0x20 {var_588}], 0x4",
    "call    WinStationQueryInformationW",
    "test    al, al",
    "je      0x1400b3ab0",
    "lea     r8, [rsp+0x534 {var_74}]",
    "lea     rdx, [rsp+0x558 {var_50}]",
    "lea     rcx, [rel data_1401214e0]  {u\"  user : %s @ %s\\n\"}",
    "call    sub_14000c030",
    "cmp     qword [rsp+0x120 {var_488}], 0x0",
    "je      0x1400b39a9",
    "mov     dword [rsp+0x28 {var_580_1}], edx",
    "mov     qword [rsp+0x20 {var_588}], r8",
    "mov     r8d, dword [rbx+rcx]",
    "mov     eax, edi",
    "mov     rdx, r10",
    "imul    rax, rax, 0x4c",
    "lea     r9, [rax+rcx+0x4]",
    "lea     rcx, [rel data_140121490]  {u\"\\nSession: %s%u - %s\\n  state: %\u2026\"}",
    "call    sub_14000c030",
    "mov     rax, qword [rsp+0x30 {var_578}]",
    "lea     r11, [rsp+0x5c0 {arg_18}]",
    "mov     edx, dword [rbx+rax]",
    "mov     qword [rsp+0x28 {var_580_1}], r11 {arg_18}",
    "lea     r9, [rsp+0xd0 {var_4d8}]",
    "mov     r8d, 0x8",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20 {var_588}], 0x4c0",
    "call    WinStationQueryInformationW",
    "test    al, al",
    "je      0x1400b3a59",
    "lea     rax, [rsp+0x5c0 {arg_18}]",
    "lea     r9, [rsp+0x48 {var_560}]",
    "mov     r8d, 0x1d",
    "mov     qword [rsp+0x28 {var_580_1}], rax {arg_18}",
    "mov     rax, qword [rsp+0x30 {var_578}]",
    "mov     rcx, rsi",
    "mov     edx, dword [rbx+rax]",
    "mov     dword [rsp+0x20 {var_588}], 0x20",
    "call    WinStationQueryInformationW",
    "test    al, al",
    "je      0x1400b3b36",
    "cmp     dword [rsp+0x38 {var_570}], 0x0",
    "lea     rax, [rel data_1400ec360]",
    "lea     rdx, [rel data_1400ec368]",
    "lea     rcx, [rel data_140121580]  {u\"  lock : %s\\n\"}",
    "cmovne  rdx, rax  {data_1400ec360}",
    "call    sub_14000c030",
    "cmp     qword [rsp+0x128 {var_480}], 0x0",
    "je      0x1400b39d5",
    "lea     rcx, [rel data_140121508]  {u\"  Conn : \"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0x120 {var_488}]",
    "call    sub_1400130c0",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030",
    "mov     eax, dword [rsp+0x5c8 {arg_20}]",
    "inc     edi",
    "add     rbx, 0x4c",
    "cmp     edi, eax",
    "jb      0x1400b38c0",
    "cmp     word [rsp+0x48 {var_560}], 0x2",
    "jne     0x1400b3b09",
    "cmp     qword [rsp+0x138 {var_470}], 0x0",
    "je      0x1400b3a01",
    "lea     rcx, [rel data_140121520]  {u\"  disc : \"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0x128 {var_480}]",
    "call    sub_1400130c0",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x30 {var_578}]",
    "movsxd  rdx, dword [rbx+rcx+0x48]",
    "cmp     edx, 0xa",
    "jae     0x1400b38dc",
    "test    eax, eax",
    "jne     0x1400b3b5b",
    "cmp     word [rsp+0x48 {var_560}], 0x17",
    "jne     0x1400b3b36",
    "lea     rdx, [rsp+0x70 {S}]",
    "lea     rcx, [rsp+0x50 {Addr}]",
    "call    RtlIpv4AddressToStringW",
    "test    rax, rax",
    "je      0x1400b3b36",
    "cmp     qword [rsp+0x130 {var_478}], 0x0",
    "je      0x1400b3a2d",
    "lea     rcx, [rel data_140121538]  {u\"  logon: \"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0x138 {var_470}]",
    "call    sub_1400130c0",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x30 {var_578}]",
    "call    WinStationFreeMemory",
    "jmp     0x1400b3b7b",
    "lea     rdx, [rsp+0x70 {S}]",
    "lea     rcx, [rsp+0x54 {Addr_1}]",
    "call    RtlIpv6AddressToStringW",
    "test    rax, rax",
    "je      0x1400b3b36",
    "lea     rcx, [rel data_1401215a0]  {u\"  addr4: %s\\n\"}",
    "jmp     0x1400b3b2c",
    "cmp     qword [rsp+0x588 {var_20}], 0x0",
    "je      0x1400b3a59",
    "lea     rcx, [rel data_140121550]  {u\"  last : \"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0x130 {var_478}]",
    "call    sub_1400130c0",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1401215c0]  {u\"  addr6: %s\\n\"}",
    "lea     rdx, [rsp+0x70 {S}]",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140121568]  {u\"  curr : \"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0x588 {var_20}]",
    "call    sub_1400130c0",
    "mov     rcx, r13  {data_1400d27a8}",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "int64_t var_568 = 0",
    "int64_t rsi = 0",
    "int32_t pSessionId",
    "BOOL rbp = ProcessIdToSessionId(GetCurrentProcessId(), &pSessionId)",
    "int32_t rax_2",
    "int64_t rdx_2",
    "rax_2, rdx_2 = sub_140013220(arg1, arg2, u\"server\", &var_568, nullptr)",
    "int64_t rbx_1 = var_568",
    "if (rax_2 == 0)",
    "goto label_1400b3870",
    "rbp = 0",
    "sub_14000c030(u\"Remote server: %s\\n\", rbx_1)",
    "int64_t rax_3 = WinStationOpenServerW(rbx_1)",
    "rsi = rax_3",
    "if (rax_3 != 0)",
    "label_1400b3896:",
    "int64_t var_578",
    "char rax_5",
    "int64_t rdx_6",
    "rax_5, rdx_6 = WinStationEnumerateW(rsi, &var_578, &arg_20)",
    "if (rax_5 == 0)",
    "sub_14000c030(u\"ERROR kuhl_m_ts_sessions ; WinSt\u2026\", zx.q(GetLastError()))",
    "int32_t rdi_1 = 0",
    "if (arg_20 == 0)",
    "sub_14000c030(u\"ERROR kuhl_m_ts_sessions ; WinSt\u2026\", rdx_6)",
    "int32_t* rbx_2 = nullptr",
    "int32_t rax_18",
    "int64_t rcx_4 = var_578",
    "void* const r10_1",
    "if (sx.q(rbp) != 0)",
    "r10_1 = &data_1400eaa48",
    "if (sx.q(rbp) == 0 || pSessionId != *(rbx_2 + rcx_4))",
    "r10_1 = &data_1400e17cc",
    "int32_t var_580_1 = *(rbx_2 + rcx_4 + 0x48)",
    "*(rbx_2 + rcx_4)",
    "sub_14000c030(u\"\\nSession: %s%u - %s\\n  state: %\u2026\", r10_1)",
    "var_580_1.q = &arg_18",
    "void var_4d8",
    "if (WinStationQueryInformationW(rsi, zx.q(*(rbx_2 + var_578)), 8, &var_4d8, 0x4c0, var_580_1) != 0)",
    "void var_50",
    "int64_t rdx_11 = sub_14000c030(u\"  user : %s @ %s\\n\", &var_50)",
    "int64_t var_488",
    "if (var_488 != 0)",
    "sub_14000c030(u\"  Conn : \", rdx_11)",
    "rdx_11 = sub_14000c030(U\"\\n\", sub_1400130c0(&var_488))",
    "int64_t var_480",
    "if (var_480 != 0)",
    "sub_14000c030(u\"  disc : \", rdx_11)",
    "rdx_11 = sub_14000c030(U\"\\n\", sub_1400130c0(&var_480))",
    "int64_t var_470",
    "if (var_470 != 0)",
    "sub_14000c030(u\"  logon: \", rdx_11)",
    "rdx_11 = sub_14000c030(U\"\\n\", sub_1400130c0(&var_470))",
    "int64_t var_478",
    "if (var_478 != 0)",
    "sub_14000c030(u\"  last : \", rdx_11)",
    "rdx_11 = sub_14000c030(U\"\\n\", sub_1400130c0(&var_478))",
    "int64_t var_20",
    "if (var_20 != 0)",
    "sub_14000c030(u\"  curr : \", rdx_11)",
    "sub_14000c030(U\"\\n\", sub_1400130c0(&var_20))",
    "var_580_1.q = &arg_18",
    "int32_t var_570",
    "if (WinStationQueryInformationW(rsi, zx.q(*(rbx_2 + var_578)), 0x1c, &var_570, 4, var_580_1) != 0)",
    "void* const rdx_18 = &data_1400ec368",
    "if (var_570 != 0)",
    "rdx_18 = &data_1400ec360",
    "sub_14000c030(u\"  lock : %s\\n\", rdx_18)",
    "var_580_1.q = &arg_18",
    "int16_t var_560",
    "char rax_15",
    "rax_15, rdx_6 = WinStationQueryInformationW(rsi, zx.q(*(rbx_2 + var_578)), 0x1d, &var_560, 0x20, var_580_1)",
    "if (rax_15 != 0)",
    "void S",
    "if (var_560 == 2)",
    "void Addr",
    "PWSTR rax_16",
    "rax_16, rdx_6 = RtlIpv4AddressToStringW(&Addr, &S)",
    "if (rax_16 != 0)",
    "rdx_6 = sub_14000c030(u\"  addr4: %s\\n\", &S)",
    "if (var_560 == 0x17)",
    "void Addr_1",
    "PWSTR rax_17",
    "rax_17, rdx_6 = RtlIpv6AddressToStringW(&Addr_1, &S)",
    "if (rax_17 != 0)",
    "rdx_6 = sub_14000c030(u\"  addr6: %s\\n\", &S)",
    "rax_18 = arg_20",
    "rdi_1 += 1",
    "rbx_2 = &rbx_2[0x13]",
    "do while (rdi_1 u< rax_18)",
    "if (rax_18 == 0)",
    "sub_14000c030(u\"ERROR kuhl_m_ts_sessions ; WinSt\u2026\", rdx_6)",
    "WinStationFreeMemory(var_578)",
    "if (rsi != 0)",
    "WinStationCloseServer(rsi)",
    "rdx_2 = sub_14000c030(u\"ERROR kuhl_m_ts_sessions ; WinSt\u2026\", zx.q(GetLastError()))",
    "label_1400b3870:",
    "if (rbx_1 == 0)",
    "goto label_1400b3896",
    "sub_14000c030(u\"ERROR kuhl_m_ts_sessions ; No se\u2026\", rdx_2)",
    "return 0"
  ]
}