{
  "address": "0x14006fe70",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/dec108a2f8464ac388ec29affb61c4d8",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "encrypt data using Curve25519/4be2ead1b08a4c049dae9c8694881d76",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/88b7572ed916436d804701d7ca2c8848",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/1d2aacee85cc43a0a1c1ba47e394ae52",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "mov     r14, qword [rdx+0x58]",
    "mov     r15d, dword [rdx+0x54]",
    "mov     rax, qword [rcx+0x1d0]",
    "xor     r13d, r13d",
    "mov     rbp, r9",
    "mov     r12, r8",
    "mov     rbx, rdx",
    "mov     rsi, rcx",
    "mov     qword [rsp+0x40], r13",
    "jmp     0x14006feb8",
    "cmp     rax, r13",
    "jne     0x14006feae",
    "cmp     qword [rax+0x8], rdx",
    "je      0x14006fed9",
    "mov     rdx, qword [rdx]",
    "call    sub_140016dac",
    "mov     qword [rsp+0x38], rax",
    "cmp     rax, r13",
    "jne     0x14006fefd",
    "mov     r8, qword [rdx]",
    "lea     rdx, [rel data_1400f7328]  {\"vtable constructor called recurs\u2026\"}",
    "call    _printf_p_l",
    "mov     rcx, qword [rsp+0xd0]",
    "mov     qword [rcx], rax",
    "mov     eax, 0x6",
    "jmp     0x140070203",
    "mov     rax, qword [rax+0x10]",
    "mov     ecx, 0x30",
    "call    sub_140016b70",
    "mov     rdi, rax",
    "cmp     rax, r13",
    "jne     0x14006ff26",
    "mov     eax, 0x7",
    "jmp     0x140070203",
    "mov     rbx, qword [rsp+0xc0]",
    "add     rsp, 0x70",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     qword [rax], rsi",
    "mov     qword [rax+0x8], r12",
    "mov     rcx, qword [rbx+0x70]",
    "mov     edx, 0xfff0bdc0",
    "cmp     rcx, r13",
    "je      0x14006ff57",
    "mov     rcx, rsi",
    "call    sub_140016efc",
    "mov     rbx, qword [rsp+0x38]",
    "mov     ebp, 0x7",
    "jmp     0x1400701f6",
    "mov     rcx, qword [rbx+0x58]",
    "mov     rax, qword [rsi+0x20]",
    "movsxd  rdx, edx",
    "shl     rdx, 0x5",
    "mov     r9, r14",
    "mov     r8d, r15d",
    "mov     rax, qword [rdx+rax]",
    "mov     qword [rcx+0x8], rax",
    "mov     rax, qword [rsi+0x1d0]",
    "mov     dword [rsp+0x60], r13d",
    "mov     qword [rsp+0x58], rax",
    "lea     rax, [rsp+0x48]",
    "lea     r13, [rdi+0x10]",
    "mov     qword [rsi+0x1d0], rax",
    "mov     rdx, qword [r12+0x18]",
    "lea     rax, [rsp+0x40]",
    "mov     qword [rsp+0x28], rax",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x50], rbx",
    "mov     qword [rsp+0x20], r13",
    "mov     qword [rsp+0x48], rdi",
    "call    rbp",
    "mov     rcx, qword [rsp+0x58]",
    "mov     ebp, 0x7",
    "mov     r14d, eax",
    "mov     qword [rsi+0x1d0], rcx",
    "mov     dword [rsp+0x34], eax",
    "cmp     eax, ebp",
    "jne     0x14006ffdc",
    "mov     rax, qword [rsi+0x20]",
    "mov     edx, r13d",
    "cmp     qword [rax+0x18], rcx",
    "je      0x14006ff57",
    "mov     rdx, rbx",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "mov     eax, ebp",
    "xor     edx, edx",
    "cmp     r14d, edx",
    "je      0x140070047",
    "mov     rcx, rsi",
    "call    sub_140016efc",
    "add     rax, 0x18",
    "mov     rax, qword [r13]",
    "cmp     rax, rdx",
    "je      0x1400701ee",
    "mov     r8, qword [rsp+0x40]",
    "mov     rcx, rsi",
    "cmp     r8, rdx",
    "jne     0x140070011",
    "add     rax, 0x20",
    "inc     edx",
    "cmp     qword [rax], rcx",
    "jne     0x14006ff4c",
    "mov     rbx, qword [rsp+0x38]",
    "xor     ecx, ecx",
    "mov     qword [rax], rcx",
    "mov     qword [rax+0x8], rcx",
    "mov     qword [rax+0x10], rcx",
    "mov     rcx, qword [r13]",
    "mov     rax, qword [r12]",
    "mov     qword [rcx], rax",
    "inc     dword [r12+0x10]",
    "mov     dword [rdi+0x18], 0x1",
    "cmp     dword [rsp+0x60], edx",
    "jne     0x1400700ae",
    "lea     rdx, [rel data_1400f38e8]",
    "call    _printf_p_l",
    "mov     rcx, qword [rsp+0xd0]",
    "mov     qword [rcx], rax",
    "mov     rcx, qword [rsp+0x40]",
    "call    sub_140016950",
    "mov     rbx, qword [rsp+0x38]",
    "mov     rbx, qword [rsp+0x38]",
    "lea     rdx, [rel data_1400f7358]  {\"vtable constructor failed: %s\"}",
    "mov     r8, rbx",
    "call    _printf_p_l",
    "mov     rcx, qword [rsp+0xd0]",
    "mov     qword [rcx], rax",
    "jmp     0x140070037",
    "mov     rax, qword [rbx+0x60]",
    "mov     r8b, dl",
    "mov     byte [rsp+0xb8], dl",
    "mov     qword [rdi+0x28], rax",
    "cmp     dx, word [rbx+0x46]",
    "mov     r10d, edx",
    "mov     qword [rbx+0x60], rdi",
    "mov     dword [rsp+0x30], edx",
    "jge     0x1400701ee",
    "mov     r8, qword [rbx]",
    "lea     rdx, [rel data_1400f7378]  {\"vtable constructor did not decla\u2026\"}",
    "mov     rcx, rsi",
    "call    _printf_p_l",
    "mov     rcx, qword [rsp+0xd0]",
    "mov     qword [rcx], rax",
    "mov     rcx, rdi",
    "call    sub_14006f9c8",
    "mov     r14d, 0x1",
    "jmp     0x1400701ee",
    "mov     ebp, r14d",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "jmp     0x1400701f3",
    "xor     esi, esi",
    "mov     r13, rsi",
    "mov     rdx, qword [r13+rdx]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, rdx",
    "repne scasb byte [rdi]",
    "not     rcx",
    "lea     r12, [rcx+rdx]",
    "lea     r12, [rel data_1400f386c]",
    "jmp     0x140070106",
    "cmp     edi, r14d",
    "jge     0x1400701c1",
    "movsxd  rdx, edi",
    "lea     rcx, [rel data_1400f236c]  {\"hidden\"}",
    "mov     r8d, 0x6",
    "add     rdx, r12",
    "call    sub_1400192e8",
    "cmp     eax, esi",
    "jne     0x140070151",
    "mov     rcx, r12",
    "call    sub_140019074",
    "mov     edi, esi",
    "mov     rbp, rsi",
    "movsxd  r14, eax",
    "cmp     r14, rsi",
    "jle     0x140070168",
    "movzx   eax, r8b",
    "or      dword [rbx+0x40], eax",
    "mov     eax, esi",
    "lea     rdx, [r12+rbp]",
    "cmp     byte [rdx+0x6], sil",
    "setne   al",
    "add     eax, 0x6",
    "movsxd  r9, eax",
    "lea     r8d, [rax+rdi]",
    "cmp     r8d, r14d",
    "jg      0x14007019d",
    "inc     rbp",
    "inc     edi",
    "cmp     rbp, r14",
    "jl      0x14007011b",
    "cmp     edi, esi",
    "je      0x140070143",
    "mov     rdx, qword [rbx+0x8]",
    "test    byte [r13+rdx+0x1b], 0x4",
    "jne     0x1400700ef",
    "mov     rsi, qword [rsp+0xb0]",
    "mov     r14d, dword [rsp+0x34]",
    "cmp     byte [rdx], sil",
    "jne     0x1400701aa",
    "mov     rcx, rdx",
    "mov     r10d, dword [rsp+0x30]",
    "mov     r8b, byte [rsp+0xb8]",
    "mov     al, byte [r12+rbp+0x6]",
    "cmp     al, sil",
    "je      0x14007015b",
    "cmp     byte [r12+rbp-0x1], 0x20",
    "jne     0x140070151",
    "mov     rax, qword [rbx+0x8]",
    "mov     r8b, 0x80",
    "or      byte [r13+rax+0x1b], 0x2",
    "mov     byte [rsp+0xb8], r8b",
    "jmp     0x1400701c8",
    "cmp     edi, esi",
    "jle     0x1400701aa",
    "mov     al, byte [rcx+r9]",
    "inc     r8d",
    "mov     byte [rcx], al",
    "inc     rcx",
    "cmp     r8d, r14d",
    "jle     0x14007018c",
    "cmp     al, 0x20",
    "je      0x14007015b",
    "movsx   eax, word [rbx+0x46]",
    "inc     r10d",
    "add     r13, 0x20",
    "cmp     r10d, eax",
    "mov     dword [rsp+0x30], r10d",
    "jl      0x1400700da",
    "mov     byte [rdx-0x1], sil"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}