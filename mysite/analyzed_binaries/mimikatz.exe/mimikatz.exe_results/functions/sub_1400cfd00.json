{
  "address": "0x1400cfd00",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using LZO/87c7a2ec75aa43fe877541de4275123a",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "mov     dword [rax+0x8], ecx",
    "push    rdi",
    "sub     rsp, 0x30",
    "mov     rcx, rdx",
    "mov     rbx, rdx",
    "call    qword [rel _fileno]",
    "mov     ecx, dword [rbx+0x18]",
    "movsxd  rsi, eax",
    "test    cl, 0x82",
    "jne     0x1400cfd46",
    "test    cl, 0x40",
    "je      0x1400cfd59",
    "call    qword [rel _errno]",
    "mov     dword [rax], 0x9",
    "xor     edi, edi",
    "test    cl, 0x1",
    "je      0x1400cfd75",
    "call    qword [rel _errno]",
    "mov     dword [rax], 0x22",
    "jmp     0x1400cfd3a",
    "mov     rbx, qword [rsp+0x48]",
    "mov     rbp, qword [rsp+0x50]",
    "mov     rsi, qword [rsp+0x58]",
    "add     rsp, 0x30",
    "pop     rdi",
    "retn    ",
    "mov     eax, dword [rbx+0x18]",
    "mov     dword [rbx+0x8], edi",
    "and     eax, 0xffffffef",
    "or      eax, 0x2",
    "mov     dword [rbx+0x18], eax",
    "test    eax, 0x10c",
    "jne     0x1400cfde0",
    "mov     dword [rbx+0x8], edi",
    "test    cl, 0x10",
    "je      0x1400cfdd5",
    "or      dword [rbx+0x18], 0x20",
    "test    dword [rbx+0x18], 0x108",
    "je      0x1400cfe71",
    "mov     rcx, qword [rel _iob]",
    "lea     rax, [rcx+0x30]",
    "cmp     rbx, rax",
    "je      0x1400cfda4",
    "or      ecx, 0x20",
    "mov     dword [rbx+0x18], ecx",
    "jmp     0x1400cfd3e",
    "mov     rax, qword [rbx+0x10]",
    "and     ecx, 0xfffffffe",
    "mov     qword [rbx], rax",
    "mov     dword [rbx+0x18], ecx",
    "mov     ebp, 0x1",
    "lea     rdx, [rsp+0x40]",
    "mov     ecx, esi",
    "mov     r8d, ebp",
    "call    qword [rel _write]",
    "mov     edi, eax",
    "mov     ebp, dword [rbx]",
    "mov     rdx, qword [rbx+0x10]",
    "sub     ebp, dword [rbx+0x10]",
    "lea     rax, [rdx+0x1]",
    "mov     qword [rbx], rax",
    "mov     eax, dword [rbx+0x24]",
    "dec     eax",
    "cmp     ebp, edi",
    "mov     dword [rbx+0x8], eax",
    "jle     0x1400cfe18",
    "mov     ecx, esi",
    "call    qword [rel _isatty]",
    "cmp     eax, edi",
    "jne     0x1400cfde0",
    "lea     rax, [rcx+0x60]",
    "cmp     rbx, rax",
    "jne     0x1400cfdb0",
    "or      eax, 0xffffffff",
    "jmp     0x1400cfe95",
    "movzx   eax, byte [rsp+0x40]",
    "cmp     esi, 0xffffffff",
    "je      0x1400cfe40",
    "mov     r8d, ebp",
    "mov     ecx, esi",
    "call    qword [rel _write]",
    "mov     edi, eax",
    "jmp     0x1400cfe65",
    "call    qword [rel _errno]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "xor     ecx, ecx",
    "mov     qword [rsp+0x20], rdi",
    "mov     dword [rax], 0x16",
    "call    sub_1400c9168",
    "jmp     0x1400cfd3e",
    "mov     rdx, qword [rel __badioinfo]",
    "cmp     esi, 0xfffffffe",
    "je      0x1400cfe40",
    "mov     rcx, qword [rbx+0x10]",
    "mov     al, byte [rsp+0x40]",
    "mov     byte [rcx], al",
    "jmp     0x1400cfe88",
    "xor     edx, edx",
    "mov     ecx, esi",
    "lea     r8d, [rdx+0x2]",
    "call    qword [rel _lseeki64]",
    "cmp     rax, 0xffffffffffffffff",
    "je      0x1400cfd3a",
    "mov     rax, qword [rel __pioinfo]",
    "mov     rdx, rsi",
    "mov     rcx, rsi",
    "and     edx, 0x1f",
    "sar     rcx, 0x5",
    "imul    rdx, rdx, 0x38",
    "add     rdx, qword [rax+rcx*8]",
    "jmp     0x1400cfe47",
    "cmp     edi, ebp",
    "jne     0x1400cfd3a",
    "test    byte [rdx+0x8], 0x20",
    "je      0x1400cfe65"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}