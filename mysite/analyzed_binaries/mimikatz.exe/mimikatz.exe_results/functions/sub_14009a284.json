{
  "address": "0x14009a284",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "contain loop"
  ],
  "disassembly": [
    "mov     dword [rsp+0x20], r9d",
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x58",
    "mov     rsi, rcx",
    "mov     ebx, 0x1",
    "test    rcx, rcx",
    "je      0x14009a2c5",
    "xor     r12d, r12d",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, rsi",
    "repne scasw word [rdi]",
    "not     rcx",
    "lea     r12, [rcx-0x1]",
    "jmp     0x14009a2c8",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140107ea0]  {u\"ERROR kuhl_m_crypto_l_keys_capi \u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x40]",
    "xor     r8d, r8d",
    "lea     r9, [rsp+0xa0]",
    "lea     edx, [r8+0x2]",
    "mov     dword [rsp+0x20], ebx",
    "call    qword [rel CryptGetProvParam]",
    "mov     edx, dword [rsp+0xa0]",
    "mov     ecx, 0x40",
    "mov     edi, eax",
    "call    qword [rel LocalAlloc]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x14009a5a3",
    "mov     eax, r9d",
    "mov     r9d, r8d",
    "mov     r8, rdx",
    "or      eax, 0xf0000000",
    "lea     rcx, [rsp+0x40]",
    "mov     rdx, rsi",
    "mov     dword [rsp+0x20], eax",
    "call    qword [rel CryptAcquireContextW]",
    "test    eax, eax",
    "je      0x14009a58f",
    "add     rsp, 0x58",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "xor     r13d, r13d",
    "test    edi, edi",
    "je      0x14009a556",
    "call    qword [rel GetLastError]",
    "cmp     eax, 0x103",
    "je      0x14009a577",
    "mov     rcx, qword [rsp+0x40]",
    "lea     r9, [rsp+0xa0]",
    "mov     r8, rbp",
    "mov     edx, 0x2",
    "mov     dword [rsp+0x20], ebx",
    "call    qword [rel CryptGetProvParam]",
    "mov     r15d, eax",
    "test    eax, eax",
    "je      0x14009a545",
    "mov     rcx, qword [rsp+0x40]",
    "xor     edx, edx",
    "call    qword [rel CryptReleaseContext]",
    "mov     rcx, rbp",
    "call    qword [rel LocalFree]",
    "jmp     0x14009a5a3",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140107e20]  {u\"ERROR kuhl_m_crypto_l_keys_capi \u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "inc     r13d",
    "mov     ebx, 0x2",
    "test    r15d, r15d",
    "jne     0x14009a339",
    "mov     rcx, rbp",
    "call    sub_140012d3c",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14009a545",
    "lea     rcx, [rel data_140107d70]  {u\"    %u. %s\\n\"}",
    "mov     r8, rax",
    "mov     edx, r13d",
    "call    sub_14000c030",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, rbx",
    "repne scasw word [rdi]",
    "not     rcx",
    "lea     edx, [rcx+r12]",
    "lea     rdi, [rcx-0x1]",
    "lea     ecx, [rax+0x40]",
    "add     rdx, rdx",
    "call    qword [rel LocalAlloc]",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x14009a530",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "test    r12d, r12d",
    "je      0x14009a3ce",
    "mov     eax, r12d",
    "mov     r8d, edi",
    "mov     rdx, rbx",
    "lea     rcx, [r14+rax*2]",
    "add     r8, r8",
    "call    memcpy",
    "mov     eax, dword [rsp+0xb8]",
    "mov     r9d, dword [rsp+0xb0]",
    "mov     r8, qword [rsp+0xa8]",
    "lea     rcx, [rsp+0x38]",
    "mov     rdx, r14",
    "mov     dword [rsp+0x20], eax",
    "call    qword [rel CryptAcquireContextW]",
    "test    eax, eax",
    "je      0x14009a527",
    "mov     r8d, r12d",
    "mov     rdx, rsi",
    "mov     rcx, rax",
    "add     r8, r8",
    "call    memcpy",
    "mov     rcx, r14",
    "call    qword [rel LocalFree]",
    "mov     rcx, qword [rsp+0x38]",
    "and     qword [rsp+0x28], 0x0",
    "and     qword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "lea     r9, [rsp+0x48]",
    "lea     edx, [r8+0x24]",
    "call    sub_1400051f8",
    "test    eax, eax",
    "je      0x14009a456",
    "and     qword [rsp+0x30], 0x0",
    "mov     edi, 0x1",
    "mov     rdx, qword [rsp+0x48]",
    "lea     rcx, [rel data_140107d88]  {u\"    %S\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x48]",
    "call    qword [rel LocalFree]",
    "cmp     qword [rsp+0x30], 0x0",
    "je      0x14009a513",
    "inc     edi",
    "cmp     edi, 0x2",
    "jbe     0x14009a461",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140107da0]  {u\"ERROR kuhl_m_crypto_l_keys_capi \u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "cmp     edi, 0x1",
    "je      0x14009a4b4",
    "mov     rcx, qword [rsp+0x38]",
    "lea     r8, [rsp+0x30]",
    "mov     edx, edi",
    "call    qword [rel CryptGetUserKey]",
    "test    eax, eax",
    "jne     0x14009a47e",
    "lea     rdx, [rel data_1400e68b8]  {u\"AT_KEYEXCHANGE\"}",
    "cmp     edi, 0x2",
    "je      0x14009a4ab",
    "mov     rcx, qword [rsp+0x30]",
    "call    qword [rel CryptDestroyKey]",
    "jmp     0x14009a527",
    "mov     r9, qword [rsp+0xc8]",
    "mov     rdx, qword [rsp+0x30]",
    "mov     r8d, edi",
    "xor     ecx, ecx",
    "mov     qword [rsp+0x28], rbx",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_14009b188",
    "lea     rdx, [rel data_1400e68d8]  {u\"AT_SIGNATURE\"}",
    "jmp     0x14009a4bb",
    "lea     rdx, [rel data_1400e17c8]",
    "lea     rax, [rel data_1400e68f8]  {u\"CNG Key\"}",
    "cmp     edi, 0xffffffff",
    "cmove   rdx, rax",
    "jmp     0x14009a4bb",
    "lea     rcx, [rel data_1401078e0]  {u\"\\tType           : %s (0x%08x)\\n\"}",
    "mov     r8d, edi",
    "call    sub_14000c030",
    "mov     r8, qword [rsp+0x38]",
    "mov     rdx, qword [rsp+0x30]",
    "xor     ecx, ecx",
    "call    sub_14009a99c",
    "cmp     dword [rsp+0xc0], 0x0",
    "je      0x14009a506"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}