{
  "address": "0x14002ba7c",
  "rules": [
    "validate payment card number using luhn algorithm with lookup table/e9dbd1a1dd1a4f49b92ac6ff607eb75d",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     dword [rsp+0x18], r8d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x50",
    "mov     rbx, qword [r9+0x50]",
    "movzx   r10d, byte [r9+0x9]",
    "mov     rax, qword [r9+0x48]",
    "movsxd  r11, dword [rax+0x34]",
    "mov     rax, qword [rax]",
    "mov     r13, rcx",
    "mov     rcx, qword [r9+0x60]",
    "xor     r14d, r14d",
    "lea     rdi, [rbx+r11]",
    "mov     qword [rsp+0x90], rcx",
    "movzx   ecx, byte [r10+rbx+0x5]",
    "mov     rbp, r9",
    "mov     r9, qword [rax+0x110]",
    "movzx   eax, byte [r10+rbx+0x6]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movsxd  r12, edx",
    "mov     qword [rsp+0x30], rdi",
    "cmp     ecx, r11d",
    "mov     qword [rsp+0x38], r9",
    "mov     rsi, r10",
    "cmova   ecx, r14d",
    "sub     r11d, ecx",
    "lea     rdx, [rcx+rbx]",
    "mov     r8d, r11d",
    "add     rcx, r9",
    "call    memcpy",
    "mov     r11d, r14d",
    "lea     rcx, [r13+0x50]",
    "mov     rax, r14",
    "jmp     0x14002bb1f",
    "cmp     dword [rcx], r12d",
    "jle     0x14002bb0f",
    "cmp     rax, 0x6",
    "jge     0x14002bb24",
    "mov     edx, dword [rsp+0xa0]",
    "movsxd  rcx, r11d",
    "mov     r14, r12",
    "mov     r15, qword [r13+rcx*8+0x20]",
    "lea     eax, [r12+rdx]",
    "cdqe    ",
    "mov     qword [rsp+0x40], rax",
    "mov     rax, qword [r13+0x18]",
    "lea     r8, [rax+r12*2]",
    "mov     rax, qword [r13+0x10]",
    "lea     rdx, [rax+r12*8]",
    "lea     rax, [r13+rcx*8+0x20]",
    "mov     qword [rsp+0x20], r8",
    "mov     qword [rsp+0xa8], rdx",
    "lea     r13, [r13+rcx*4+0x50]",
    "inc     r11d",
    "inc     rax",
    "add     rcx, 0x4",
    "movzx   r8d, word [r8]",
    "lea     rax, [r8+rdx]",
    "cmp     rax, r15",
    "jbe     0x14002bbb3",
    "mov     rcx, qword [rsp+0x30]",
    "cmp     rdx, rcx",
    "jae     0x14002bb9d",
    "mov     rcx, qword [rsp+0x90]",
    "sub     rdi, r8",
    "mov     rax, rdi",
    "sub     rax, rbx",
    "sar     rax, 0x8",
    "mov     byte [rcx], al",
    "add     rcx, 0x2",
    "mov     al, dil",
    "sub     al, bl",
    "mov     qword [rsp+0x90], rcx",
    "mov     byte [rcx-0x1], al",
    "cmp     rdi, rcx",
    "jb      0x14002bc8f",
    "cmp     rdx, r15",
    "jb      0x14002bc44",
    "movzx   r8d, word [r8]",
    "lea     rax, [r8+rdx]",
    "cmp     rax, rcx",
    "ja      0x14002bc3d",
    "mov     ecx, 0x112b6",
    "mov     rcx, rdi",
    "call    memcpy",
    "mov     rdx, qword [rsp+0xa8]",
    "mov     r8, qword [rsp+0x20]",
    "add     rdx, 0x8",
    "add     r8, 0x2",
    "inc     r14",
    "inc     r12d",
    "cmp     r14, qword [rsp+0x40]",
    "mov     qword [rsp+0xa8], rdx",
    "mov     qword [rsp+0x20], r8",
    "jge     0x14002bc4b",
    "mov     ecx, 0x112b0",
    "jmp     0x14002bc94",
    "mov     ecx, 0x112ab",
    "jmp     0x14002bc94",
    "mov     rax, qword [rsp+0x38]",
    "sub     rax, rbx",
    "add     rdx, rax",
    "jmp     0x14002bbb3",
    "mov     eax, dword [rsp+0xa0]",
    "xor     ecx, ecx",
    "mov     word [rbp+0x18], ax",
    "mov     byte [rbp+0xc], cl",
    "mov     byte [rsi+rbx+0x1], cl",
    "mov     byte [rsi+rbx+0x2], cl",
    "mov     al, byte [rbp+0x19]",
    "mov     byte [rsi+rbx+0x3], al",
    "mov     al, byte [rbp+0x18]",
    "mov     byte [rsi+rbx+0x7], cl",
    "mov     byte [rsi+rbx+0x4], al",
    "mov     rax, rdi",
    "sub     dil, bl",
    "sub     rax, rbx",
    "mov     byte [rsi+rbx+0x6], dil",
    "sar     rax, 0x8",
    "mov     byte [rsi+rbx+0x5], al",
    "xor     eax, eax",
    "jmp     0x14002bc99",
    "cmp     dword [r13], r12d",
    "jg      0x14002bb6d",
    "call    sub_140084e38",
    "mov     rbx, qword [rsp+0x98]",
    "add     rsp, 0x50",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rdx, qword [rdx]",
    "cmp     rdx, rbx",
    "jb      0x14002bb9d",
    "mov     rax, qword [rsp+0x28]",
    "add     r13, 0x4",
    "add     rax, 0x8",
    "mov     r15, qword [rax]",
    "jmp     0x14002bb68",
    "mov     qword [rsp+0x28], rax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}