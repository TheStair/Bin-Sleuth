{
  "address": "0x140088810",
  "rules": [
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "compute adler32 checksum/aded99c950db4d9b8d119cbfc64de8e4",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "create new key via CryptAcquireContext"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x3a0",
    "xor     ebp, ebp",
    "lea     rax, [rax-0x258]",
    "mov     rbx, rcx",
    "lea     edi, [rbp+0x1]",
    "mov     qword [rax+0x8], rbp",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x28], rbp",
    "mov     qword [rax+0x38], rbp",
    "mov     dword [rax], edi",
    "mov     dword [rax+0x10], edi",
    "mov     dword [rax+0x20], edi",
    "mov     dword [rax+0x30], edi",
    "mov     qword [rsp+0x50], rax",
    "mov     eax, dword [rdx+0x48]",
    "mov     r15, r8",
    "mov     rsi, rdx",
    "lea     rcx, [rsp+0x2c8]",
    "mov     r8d, 0xd8",
    "xor     edx, edx",
    "mov     dword [rsp+0x60], eax",
    "mov     r14d, ebp",
    "mov     r13d, ebp",
    "mov     dword [rsp+0x48], ebp",
    "mov     dword [rsp+0x64], ebp",
    "mov     dword [rsp+0x68], ebp",
    "mov     qword [rsp+0x2c0], rbp",
    "call    memset",
    "lea     rcx, [rsp+0x88]",
    "xor     edx, edx",
    "mov     r8d, 0xc8",
    "mov     r12, rbp",
    "call    memset",
    "cmp     qword [rsi+0x40], rbp",
    "mov     r8, qword [rsi+0x10]",
    "lea     rax, [rsp+0x2c0]",
    "lea     rdx, [rel data_1400f9540]  {\"2.5.4.3\"}",
    "mov     qword [rsp+0x148], rax",
    "lea     rax, [rel data_1400f94d8]  {\"1.2.840.113549.1.1.5\"}",
    "lea     rcx, [rsp+0x1c0]",
    "cmovne  rax, qword [rsi+0x40]",
    "mov     dword [rsp+0x80], 0x2",
    "mov     dword [rsp+0x140], 0x3",
    "mov     qword [rsp+0x98], rax",
    "call    sub_1400882b4",
    "cmp     eax, ebp",
    "je      0x14008892c",
    "mov     r8, qword [rsi+0x18]",
    "lea     rdx, [rel data_1400f9548]  {\"2.5.4.11\"}",
    "lea     rcx, [rsp+0x1e0]",
    "call    sub_1400882b4",
    "cmp     eax, ebp",
    "je      0x140088968",
    "mov     ecx, dword [rsp+0x48]",
    "lea     rdx, [rsp+0x1c0]",
    "mov     rax, rcx",
    "add     rax, rax",
    "add     ecx, edi",
    "mov     qword [rsp+rax*8+0x178], rdx",
    "mov     dword [rsp+0x48], ecx",
    "mov     r8, qword [rsi+0x20]",
    "lea     rdx, [rel data_1400f9558]  {\"2.5.4.10\"}",
    "lea     rcx, [rsp+0x200]",
    "call    sub_1400882b4",
    "cmp     eax, ebp",
    "je      0x1400889a4",
    "mov     ecx, dword [rsp+0x48]",
    "lea     rdx, [rsp+0x1e0]",
    "mov     rax, rcx",
    "add     rax, rax",
    "add     ecx, edi",
    "mov     qword [rsp+rax*8+0x178], rdx",
    "mov     dword [rsp+0x48], ecx",
    "mov     r8, qword [rsi+0x28]",
    "lea     rdx, [rel data_1400f9568]  {\"2.5.4.6\"}",
    "lea     rcx, [rsp+0x220]",
    "call    sub_1400882b4",
    "cmp     eax, ebp",
    "je      0x1400889e0",
    "mov     ecx, dword [rsp+0x48]",
    "lea     rdx, [rsp+0x200]",
    "mov     rax, rcx",
    "add     rax, rax",
    "add     ecx, edi",
    "mov     qword [rsp+rax*8+0x178], rdx",
    "mov     dword [rsp+0x48], ecx",
    "lea     rdx, [rsp+0xc8]",
    "lea     rcx, [rsp+0xc0]",
    "mov     r9, r15",
    "mov     r8, rsi",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_1400885d4",
    "lea     r8, [rsp+0xd0]",
    "lea     rdx, [rsp+0x48]",
    "mov     ecx, 0x7",
    "call    sub_140087f14",
    "cmp     eax, ebp",
    "je      0x14008911a",
    "mov     ecx, dword [rsp+0x48]",
    "lea     rdx, [rsp+0x220]",
    "mov     rax, rcx",
    "add     rax, rax",
    "add     ecx, edi",
    "mov     qword [rsp+rax*8+0x178], rdx",
    "mov     dword [rsp+0x48], ecx",
    "lea     rcx, [rel data_1400f9b30]  {u\"ERROR generateCertificate ; Unab\u2026\"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0xd0]",
    "call    sub_14008854c",
    "mov     rdi, rax",
    "cmp     rax, rbp",
    "je      0x140088a4c",
    "mov     rbp, qword [rsi+0x30]",
    "mov     eax, 0x14",
    "test    rbp, rbp",
    "je      0x140088ac2",
    "lea     rcx, [rel data_1400f9570]  {u\"[s.cert] subject   : %s\\n\"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "mov     rdx, rax",
    "mov     ecx, 0x40",
    "mov     dword [rsp+0x88], eax",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x90], rax",
    "test    rax, rax",
    "je      0x140088aa3",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, rbp",
    "repne scasw word [rdi]",
    "not     rcx",
    "dec     rcx",
    "mov     dword [rsp+0x88], ecx",
    "test    cl, 0x1",
    "jne     0x140088a90",
    "lea     rcx, [rel data_1400f9ac0]  {u\"ERROR generateCertificate ; Unab\u2026\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x88]",
    "mov     rcx, rax",
    "call    CDGenerateRandomBits",
    "xor     ecx, ecx",
    "test    eax, eax",
    "setns   cl",
    "test    ecx, ecx",
    "jne     0x140088b0e",
    "test    eax, eax",
    "jne     0x140088b0e",
    "lea     r8, [rsp+0x88]",
    "lea     rdx, [rsp+0x90]",
    "mov     rcx, rbp",
    "call    sub_140012ed0",
    "lea     r11, [rsp+0x3a0]",
    "mov     eax, r14d",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x40]",
    "mov     rsi, qword [r11+0x48]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "lea     rcx, [rel data_1400f95a8]  {u\"[s.cert] serial    : \"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x88]",
    "mov     rcx, qword [rsp+0x90]",
    "xor     r8d, r8d",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "movzx   edx, word [rsi+0x38]",
    "mov     rcx, qword [rsp+0x148]",
    "mov     word [rsp+0x3d8], dx",
    "lea     rax, [rsp+0x3d8]",
    "lea     r8, [rcx+0x10]",
    "mov     qword [rsp+0x158], rax",
    "lea     rax, [rel data_1400f8f58]  {\"2.5.29.15\"}",
    "mov     dword [rcx+0x8], 0x1",
    "mov     qword [rcx], rax",
    "lea     rdx, [rsp+0x150]",
    "mov     rcx, rax",
    "mov     dword [rsp+0x150], 0x2",
    "mov     dword [rsp+0x160], 0x5",
    "call    sub_140087f14",
    "test    eax, eax",
    "je      0x1400890fb",
    "mov     rcx, qword [rsp+0x90]",
    "call    qword [rel LocalFree]",
    "jmp     0x140088aa3",
    "lea     rcx, [rel data_1400f91e0]  {u\"ERROR makeSN ; Unable to use '%s\u2026\"}",
    "mov     rdx, rbp",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f9a50]  {u\"ERROR generateCertificate ; Unab\u2026\"}",
    "call    sub_14000c030",
    "mov     r8, qword [rsp+0x148]",
    "lea     rcx, [rel data_1400f8fa8]  {\"2.5.29.19\"}",
    "lea     rdx, [rsp+0x60]",
    "mov     qword [r8+0x20], rcx",
    "mov     eax, dword [rsp+0x60]",
    "add     r8, 0x30",
    "mov     dword [r8-0x8], eax",
    "call    sub_140087f14",
    "test    eax, eax",
    "je      0x1400890db",
    "mov     rcx, qword [rsp+0xd8]",
    "call    qword [rel LocalFree]",
    "jmp     0x140089126",
    "lea     rcx, [rel data_1400f99e0]  {u\"ERROR generateCertificate ; Unab\u2026\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rsi+0x50]",
    "mov     edi, 0x20",
    "test    rdx, rdx",
    "je      0x140088c13",
    "mov     rcx, qword [rsp+0x90]",
    "call    qword [rel LocalFree]",
    "jmp     0x140088aaf",
    "mov     edx, dword [rsp+0x140]",
    "mov     ecx, dword [rsp+0x140]",
    "mov     rax, qword [rsp+0x148]",
    "mov     r8, rdi",
    "shl     rcx, 0x5",
    "add     rcx, rax",
    "call    memcpy",
    "mov     edx, dword [rsp+0x140]",
    "inc     edx",
    "mov     dword [rsp+0x140], edx",
    "jmp     0x140088c1a",
    "cmp     qword [rsi+0x60], r12",
    "je      0x140088c77",
    "mov     rax, qword [rsp+0x148]",
    "mov     ecx, edx",
    "mov     rdx, qword [rsi+0x58]",
    "shl     rcx, 0x5",
    "mov     r8, rdi",
    "add     rcx, rax",
    "call    memcpy",
    "mov     edx, dword [rsp+0x140]",
    "inc     edx",
    "mov     dword [rsp+0x140], edx",
    "cmp     qword [rsi+0x58], r12",
    "je      0x140088c4d",
    "mov     rdx, qword [rsp+0x98]",
    "lea     rcx, [rel data_1400f95d8]  {u\"[s.cert] algorithm : %S\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x98]",
    "mov     r8d, 0x80000000",
    "mov     ecx, 0x1",
    "call    qword [rel CryptFindOIDInfo]",
    "test    rax, rax",
    "je      0x140088cb9",
    "mov     rax, qword [rsp+0x148]",
    "mov     ecx, edx",
    "mov     rdx, qword [rsi+0x60]",
    "shl     rcx, 0x5",
    "mov     r8, rdi",
    "add     rcx, rax",
    "call    memcpy",
    "inc     dword [rsp+0x140]",
    "lea     rcx, [rel data_1400f9608]  {u\"\\n[s.cert] validity  : \"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0xc0]",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400f94f0]  {u\" -> \"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0xc8]",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx+0x8]",
    "lea     rcx, [rel data_1400f9638]  {u\"[s.key ] provider  : %s\\n\"}",
    "call    sub_14000c030",
    "call    sub_140013168",
    "mov     qword [rbx], rax",
    "test    rax, rax",
    "je      0x1400890bb",
    "mov     rdx, qword [rax+0x10]",
    "lea     rcx, [rel data_1400eaa38]  {u\" (%s)\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f9950]  {u\"ERROR generateCertificate ; Unab\u2026\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f9670]  {u\"[s.key ] container : %s\\n\"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "mov     r9d, dword [rbx+0x10]",
    "mov     r8, qword [rbx+0x8]",
    "lea     rcx, [rbx+0x40]",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], 0xf0000040",
    "call    qword [rel CryptAcquireContextW]",
    "test    eax, eax",
    "je      0x140088d9c",
    "mov     rcx, qword [rsp+0x148]",
    "add     rcx, 0x18",
    "call    qword [rel LocalFree]",
    "jmp     0x140089107",
    "mov     eax, dword [rbx+0x14]",
    "mov     r9d, dword [rbx+0x10]",
    "mov     r8, qword [rbx+0x8]",
    "mov     rdx, qword [rbx]",
    "or      eax, 0x8",
    "lea     rcx, [rbx+0x40]",
    "mov     dword [rsp+0x20], eax",
    "call    qword [rel CryptAcquireContextW]",
    "test    eax, eax",
    "je      0x14008909c",
    "mov     rcx, qword [rbx+0x40]",
    "xor     r9d, r9d",
    "lea     rax, [rsp+0x5c]",
    "mov     qword [rsp+0x28], rax",
    "and     qword [rsp+0x20], r12",
    "lea     edx, [r9+0x3]",
    "xor     r8d, r8d",
    "call    sub_1400051f8",
    "test    eax, eax",
    "je      0x140088d90",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400f98b0]  {u\"ERROR generateCertificate ; Cryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     r8, qword [rbx+0x30]",
    "mov     rcx, qword [rbx+0x40]",
    "mov     edx, r13d",
    "call    sub_1400883b8",
    "movzx   edx, word [rbx+0x3c]",
    "lea     rcx, [rel data_1400f96a8]  {u\"[s.key ] gen (%4hu): \"}",
    "call    sub_14000c030",
    "movzx   r8d, word [rbx+0x3c]",
    "mov     edx, dword [rbx+0x28]",
    "mov     rcx, qword [rbx+0x40]",
    "shl     r8d, 0x10",
    "lea     r9, [rsp+0x70]",
    "or      r8d, dword [rbx+0x38]",
    "call    qword [rel CryptGenKey]",
    "test    eax, eax",
    "je      0x140089075",
    "mov     rcx, qword [rbx+0x40]",
    "xor     edx, edx",
    "call    qword [rel CryptReleaseContext]",
    "mov     r13d, dword [rsp+0x5c]",
    "and     r13d, 0x1",
    "je      0x140088d90",
    "mov     rcx, qword [rsp+0x148]",
    "add     rcx, 0x38",
    "call    qword [rel LocalFree]",
    "jmp     0x1400890e7",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400f9840]  {u\"ERROR generateCertificate ; Cryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f9538]",
    "call    sub_14000c030",
    "mov     edx, dword [rbx+0x28]",
    "mov     rcx, qword [rbx+0x40]",
    "call    sub_140088304",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140089068",
    "mov     r8, qword [rbx+0x30]",
    "mov     rcx, qword [rbx+0x40]",
    "and     dword [rbx+0x14], 0xffffffbf",
    "and     dword [rbx+0x38], 0xfffffffe",
    "mov     edx, r13d",
    "call    sub_1400883b8",
    "mov     rcx, qword [rbx+0x40]",
    "xor     edx, edx",
    "call    qword [rel CryptReleaseContext]",
    "jmp     0x1400890b0",
    "mov     rcx, qword [rsp+0x70]",
    "call    qword [rel CryptDestroyKey]",
    "jmp     0x140089089",
    "lea     rcx, [rsp+0xe0]",
    "mov     rdx, rax",
    "mov     r8d, 0x30",
    "call    memcpy",
    "mov     rdi, qword [rsp+0x148]",
    "lea     rax, [rsp+0x150]",
    "lea     rcx, [rsp+0x240]",
    "mov     qword [rsp+0x1b8], rax",
    "mov     dword [rsp+0x1b0], 0x14",
    "call    A_SHAInit",
    "mov     r8d, dword [rbp+0x18]",
    "mov     rdx, qword [rbp+0x20]",
    "lea     rcx, [rsp+0x240]",
    "call    A_SHAUpdate",
    "lea     rdx, [rsp+0x150]",
    "lea     rcx, [rsp+0x240]",
    "call    A_SHAFinal",
    "and     dword [rdi+0x48], r12d",
    "lea     rcx, [rel data_1400f8f78]  {\"2.5.29.14\"}",
    "lea     r8, [rdi+0x50]",
    "lea     rdx, [rsp+0x1b0]",
    "mov     qword [rdi+0x40], rcx",
    "call    sub_140087f14",
    "test    eax, eax",
    "je      0x14008905c",
    "mov     rcx, qword [rbx]",
    "call    qword [rel LocalFree]",
    "jmp     0x1400890c7",
    "test    r14d, r14d",
    "jne     0x1400890c7",
    "lea     rcx, [rel data_1400f97d0]  {u\"ERROR generateCertificate ; Unab\u2026\"}",
    "call    sub_14000c030",
    "mov     eax, dword [rsp+0x140]",
    "lea     rcx, [rsp+0xb0]",
    "lea     r9, [rsp+0x40]",
    "mov     qword [rsp+0x30], rcx",
    "shl     rax, 0x5",
    "lea     r8, [rsp+0x78]",
    "add     rax, qword [rsp+0x148]",
    "xor     edx, edx",
    "mov     rcx, r15",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0x58]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400886d0",
    "test    eax, eax",
    "je      0x140088f5b",
    "movaps  xmm0, xmmword [rsp+0xd0]",
    "movdqu  xmmword [rsp+0xb0], xmm0",
    "mov     eax, dword [rsp+0x140]",
    "lea     rcx, [rsp+0xb0]",
    "mov     r12, rax",
    "inc     eax",
    "shl     r12, 0x5",
    "mov     dword [rsp+0x140], eax",
    "add     r12, qword [rsp+0x148]",
    "call    sub_14008854c",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140088f6c",
    "mov     rax, qword [rsp+0x3f8]",
    "mov     rdi, qword [rsp+0x3f0]",
    "lea     r9, [rsp+0x80]",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0x98]",
    "mov     r8d, 0x2",
    "mov     qword [rsp+0x28], rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140088444",
    "mov     r14d, eax",
    "test    eax, eax",
    "je      0x140089026",
    "mov     edx, dword [rbx+0x28]",
    "mov     rcx, qword [rbx+0x40]",
    "lea     rcx, [rel data_1400f96d8]  {u\"[s.cert] signature : \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x78]",
    "mov     edx, dword [rsp+0x40]",
    "test    rcx, rcx",
    "jne     0x140088f8d",
    "lea     rcx, [rel data_1400f9500]  {u\" [i.cert] subject  : %s\\n\"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "jmp     0x140088f6c",
    "test    r12, r12",
    "je      0x140089036",
    "lea     rcx, [rel data_1400f9538]",
    "call    sub_14000c030",
    "test    r13d, r13d",
    "je      0x140089026",
    "mov     r8, qword [rsp+0x78]",
    "mov     edx, dword [rsp+0x40]",
    "mov     ecx, dword [rsp+0x58]",
    "call    sub_14008866c",
    "mov     rcx, qword [rsp+0x148]",
    "add     rcx, 0x58",
    "call    qword [rel LocalFree]",
    "jmp     0x140089068",
    "mov     rcx, qword [r12+0x18]",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_1400f9708]  {u\"[s.key ] cert.assoc: \"}",
    "call    sub_14000c030",
    "mov     r8, qword [rdi]",
    "mov     rcx, qword [rsp+0x70]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x1a]",
    "call    qword [rel CryptSetKeyParam]",
    "test    eax, eax",
    "je      0x140089012",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400f9740]  {u\"ERROR generateCertificate ; Cryp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400f9538]",
    "call    sub_14000c030",
    "jmp     0x140089026"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}