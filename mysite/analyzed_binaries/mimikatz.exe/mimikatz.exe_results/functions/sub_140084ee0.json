{
  "address": "0x140084ee0",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "contain loop"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x10], rbx",
    "mov     qword [r11+0x20], r9",
    "mov     qword [r11+0x18], r8",
    "mov     qword [r11+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "xor     eax, eax",
    "mov     rdi, rdx",
    "lea     rdx, [r11-0x50]",
    "mov     r12, rcx",
    "mov     qword [r11-0x50], rax",
    "mov     rbp, rax",
    "mov     rbx, rax",
    "mov     r14, rax",
    "mov     r13, rax",
    "mov     dword [rsp+0x24], eax",
    "mov     r15d, eax",
    "mov     dword [rsp+0x20], eax",
    "call    sub_1400622a4",
    "mov     esi, eax",
    "test    eax, eax",
    "jne     0x140085064",
    "mov     rax, qword [rsp+0xa0]",
    "test    rax, rax",
    "je      0x140085074",
    "mov     rdx, qword [rsp+0x90]",
    "mov     r8, rdi",
    "mov     rcx, r12",
    "call    sub_14004de30",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140085062",
    "mov     rax, qword [rsp+0xa8]",
    "test    rax, rax",
    "je      0x140085084",
    "mov     qword [rax], r14",
    "xor     ebp, ebp",
    "cmp     qword [rax+0x18], rbx",
    "jne     0x140085062",
    "mov     rax, qword [rsp+0xb0]",
    "test    rax, rax",
    "je      0x140085097",
    "mov     qword [rax], r13",
    "mov     rax, qword [rsp+0x98]",
    "test    rax, rax",
    "je      0x140085047",
    "mov     rax, qword [rsp+0xb8]",
    "test    rax, rax",
    "je      0x1400850a7",
    "mov     ecx, dword [rsp+0x24]",
    "mov     dword [rax], ecx",
    "lea     r14, [rel data_1400f5938]  {\"INTEGER\"}",
    "mov     r15d, 0x1",
    "movsx   r13d, word [rbp+0x46]",
    "xor     r11d, r11d",
    "test    r13d, r13d",
    "jle     0x140084fb4",
    "mov     rax, qword [rsp+0xc0]",
    "test    rax, rax",
    "je      0x1400850ba",
    "mov     dword [rax], r15d",
    "lea     r13, [rel data_1400d66b0]  {\"BINARY\"}",
    "jmp     0x140085064",
    "cmp     r11d, r13d",
    "jne     0x140084fe0",
    "mov     rdi, qword [rbp+0x8]",
    "mov     r12, rax",
    "test    esi, esi",
    "jne     0x140085103",
    "mov     ecx, dword [rsp+0x20]",
    "mov     dword [rax], ecx",
    "test    rbx, rbx",
    "je      0x140085044",
    "test    byte [rbp+0x40], 0x20",
    "jne     0x140085036",
    "mov     r12, qword [rsp+0x80]",
    "mov     rax, qword [rsp+0x98]",
    "inc     r11d",
    "add     rdi, 0x20",
    "cmp     r11d, r13d",
    "jl      0x140084f86",
    "mov     r9, qword [rsp+0x28]",
    "test    rbp, rbp",
    "jne     0x140085103",
    "mov     r13, r14",
    "test    byte [rbx+0x1b], 0x4",
    "je      0x140085000",
    "xor     ebp, ebp",
    "mov     r13, rbp",
    "jmp     0x140085064",
    "mov     rcx, rax",
    "call    sub_14004509c",
    "test    eax, eax",
    "je      0x140085036",
    "mov     rcx, qword [rdi]",
    "mov     rdx, r12",
    "mov     rbx, rdi",
    "call    sub_1400192b0",
    "test    eax, eax",
    "je      0x140084fa4",
    "cmp     byte [r12+0x61], 0x0",
    "jne     0x14008514e",
    "mov     rcx, r12",
    "call    sub_1400169a8",
    "mov     rdx, qword [rsp+0x28]",
    "test    rdx, rdx",
    "je      0x1400850d5",
    "movzx   r15d, byte [rbx+0x1b]",
    "mov     r13, qword [rbx+0x10]",
    "xor     eax, eax",
    "cmp     byte [rbx+0x18], al",
    "setne   al",
    "and     r15d, 0x1",
    "mov     dword [rsp+0x24], eax",
    "movsx   eax, word [rbp+0x44]",
    "cmp     eax, r11d",
    "jne     0x14008503d",
    "mov     rdx, qword [rbx]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, rdx",
    "repne scasb byte [rdi]",
    "not     rcx",
    "lea     r14, [rcx+rdx]",
    "movsx   r11, word [rbp+0x44]",
    "test    r11d, r11d",
    "js      0x140085032",
    "mov     rcx, r12",
    "call    sub_140016f38",
    "mov     esi, eax",
    "cmp     esi, 0xc0a",
    "je      0x14008514e",
    "mov     r9, qword [rsp+0x98]",
    "mov     r8, qword [rsp+0x90]",
    "lea     rdx, [rel data_1400f7ca8]  {\"no such table column: %s.%s\"}",
    "mov     rcx, r12",
    "call    _printf_p_l",
    "mov     esi, 0x1",
    "mov     r9, rax",
    "mov     qword [rsp+0x28], rax",
    "jmp     0x140085108",
    "mov     rcx, r12",
    "call    sub_1400169a8",
    "and     dword [rsp+0x20], 0x0",
    "jmp     0x140085054",
    "test    byte [rbp+0x40], 0x8",
    "je      0x14008503d",
    "xor     ebx, ebx",
    "jmp     0x140084fe0",
    "mov     rbx, r11",
    "shl     rbx, 0x5",
    "add     rbx, qword [rbp+0x8]",
    "and     esi, dword [r12+0x54]",
    "jmp     0x140085158",
    "mov     rax, r9",
    "lea     rcx, [rel data_1400f38e8]",
    "mov     edx, esi",
    "neg     rax",
    "sbb     r8, r8",
    "and     r8, rcx",
    "mov     rcx, r12",
    "call    sub_140019114",
    "mov     rdx, qword [rsp+0x28]",
    "test    rdx, rdx",
    "je      0x140085137",
    "test    r13, r13",
    "jne     0x140085064",
    "mov     dword [rsp+0x20], 0x1",
    "jmp     0x140085054",
    "mov     eax, esi",
    "mov     rbx, qword [rsp+0x88]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    "
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}