{
  "address": "0x1400775ec",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "contain loop",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], r8",
    "mov     qword [rsp+0x10], rdx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x388",
    "mov     rax, rcx",
    "xor     ecx, ecx",
    "xor     edx, edx",
    "mov     rbx, qword [rax+0x18]",
    "mov     edi, ecx",
    "mov     rcx, qword [rax+0x8]",
    "mov     rbp, qword [rcx+0x20]",
    "movsxd  rsi, dword [rcx+0x14]",
    "mov     qword [rsp+0x68], rcx",
    "shl     rsi, 0x6",
    "lea     r8d, [rdx+0x38]",
    "lea     rcx, [rsp+0x70]",
    "add     rsi, rbp",
    "mov     qword [rsp+0x40], rbp",
    "mov     qword [rsp+0x60], rbx",
    "mov     qword [rsp+0x30], rsi",
    "call    memset",
    "mov     rdx, qword [rsp+0x3b0]",
    "mov     rax, qword [rdx]",
    "movzx   ecx, byte [rbx+0x10]",
    "mov     rax, qword [rax+0x8]",
    "imul    rcx, rcx, 0x70",
    "mov     qword [rsp+0x58], rax",
    "mov     qword [rsp+0x50], rcx",
    "mov     eax, dword [rcx+rax+0x4c]",
    "mov     dword [rsp+0x48], eax",
    "cmp     rbp, rsi",
    "jae     0x1400779ef",
    "mov     eax, edi",
    "add     rsp, 0x388",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     si, word [rsp+0x70]",
    "mov     rax, qword [rsp+0x30]",
    "mov     r9d, 0x1",
    "mov     dword [rsp+0x3c8], esi",
    "xor     r8d, r8d",
    "mov     ecx, 0x200",
    "test    word [rbp+0x14], cx",
    "je      0x1400779dd",
    "add     rbp, 0x40",
    "mov     qword [rsp+0x40], rbp",
    "cmp     rbp, rax",
    "jb      0x140077694",
    "mov     rcx, qword [rbp+0x28]",
    "mov     qword [rsp+0x38], rcx",
    "mov     rax, qword [rcx+0x228]",
    "test    qword [rbx+0x8], rax",
    "je      0x1400779d8",
    "cmp     edi, r8d",
    "jne     0x1400779ef",
    "mov     rax, qword [rsp+0x30]",
    "movsxd  rax, dword [rcx+0x14]",
    "mov     r8d, 0x30",
    "mov     dword [rsp+0x20], r9d",
    "shl     rax, 0x6",
    "add     rax, qword [rcx+0x20]",
    "lea     rcx, [rsp+0xa8]",
    "mov     qword [rsp+0x28], rax",
    "call    memcpy",
    "mov     rbp, qword [rsp+0x38]",
    "lea     rax, [rsp+0xd8]",
    "xor     edx, edx",
    "mov     qword [rsp+0xc8], rax",
    "mov     rax, qword [rsp+0x28]",
    "mov     qword [rsp+0xb8], rdx",
    "mov     rbp, qword [rbp+0x20]",
    "mov     rax, qword [rbx+0x38]",
    "mov     rbp, qword [rsp+0x40]",
    "mov     r9d, 0x1",
    "mov     word [rbx+0x2c], r9w",
    "mov     qword [rax], rbp",
    "xor     eax, eax",
    "mov     dword [rbx+0x28], 0x2000",
    "mov     word [rbx+0x12], dx",
    "mov     byte [rbx+0x11], dl",
    "mov     qword [rbx+0x18], rax",
    "mov     qword [rbx+0x20], rax",
    "mov     dword [rsp+0x20], edx",
    "mov     eax, edx",
    "cmp     edi, edx",
    "jne     0x1400779cd",
    "mov     ecx, 0x400",
    "test    word [rbp+0x14], cx",
    "je      0x140077736",
    "mov     rdx, qword [rsp+0x3b0]",
    "xor     r8d, r8d",
    "movzx   ecx, si",
    "lea     rbp, [rsp+0x82]",
    "mov     esi, ecx",
    "mov     ecx, dword [rsp+0x48]",
    "cmp     dword [rbp+0x1c], ecx",
    "jne     0x140077917",
    "mov     rax, qword [rbp+0x28]",
    "jmp     0x14007777e",
    "mov     esi, dword [rsp+0x3c8]",
    "mov     rbp, qword [rsp+0x40]",
    "movzx   eax, word [rbp-0x2]",
    "mov     rcx, qword [rsp+0x3b0]",
    "mov     rdx, rbx",
    "add     ax, r9w",
    "mov     word [rbx+0x14], ax",
    "movzx   eax, word [rbp]",
    "mov     word [rbx+0x16], ax",
    "mov     rax, qword [rbp-0xa]",
    "mov     qword [rbx], rax",
    "call    sub_140075954",
    "mov     r9d, 0x1",
    "mov     edi, eax",
    "mov     eax, dword [rsp+0x20]",
    "xor     ecx, ecx",
    "add     eax, r9d",
    "add     rbp, 0x10",
    "mov     dword [rsp+0x20], eax",
    "cmp     edi, ecx",
    "je      0x140077975",
    "add     rbp, 0x40",
    "jmp     0x140077717",
    "mov     rcx, qword [rsp+0x68]",
    "mov     rax, qword [rcx]",
    "mov     qword [rsp+0x158], rcx",
    "mov     byte [rsp+0x160], 0x2c",
    "mov     qword [rsp+0x150], rax",
    "mov     dword [rsp+0x164], 0x1",
    "mov     qword [rsp+0x170], rbp",
    "lea     rax, [rsp+0x150]",
    "mov     rcx, qword [rsp+0x58]",
    "mov     qword [rsp+0xb0], rax",
    "mov     rax, qword [rsp+0x50]",
    "mov     word [rsp+0xd8], dx",
    "mov     rax, qword [rax+rcx+0x28]",
    "lea     rcx, [rsp+0xa8]",
    "cmp     dword [rax+0x54], edx",
    "mov     rdx, qword [rsp+0x3b8]",
    "je      0x1400777c1",
    "cmp     eax, esi",
    "jge     0x1400779c1",
    "mov     qword [rsp+0x38], rbp",
    "cmp     rbp, rax",
    "jae     0x14007792f",
    "call    sub_140076914",
    "mov     r8, qword [rsp+0x3c0]",
    "call    sub_1400772d0",
    "jmp     0x1400777c6",
    "movzx   eax, word [rsp+0xd8]",
    "cmp     ax, dx",
    "je      0x140077920",
    "mov     r8, qword [rsp+0x3c0]",
    "mov     rdx, qword [rsp+0x3b8]",
    "lea     rcx, [rsp+0xa8]",
    "call    sub_1400775ec",
    "xor     edx, edx",
    "mov     edi, eax",
    "xor     edx, edx",
    "mov     edi, eax",
    "cmp     eax, edx",
    "jne     0x1400777ef",
    "mov     si, dx",
    "mov     word [rsp+0x70], dx",
    "mov     dword [rsp+0x3c8], esi",
    "cmp     dword [rsp+0x20], edx",
    "je      0x140077830",
    "movzx   r8d, si",
    "lea     rdx, [rsp+0x78]",
    "lea     rcx, [rsp+0x118]",
    "shl     r8, 0x4",
    "mov     word [rsp+0x110], si",
    "call    memcpy",
    "movzx   eax, word [rsp+0x110]",
    "xor     edx, edx",
    "cmp     eax, edx",
    "mov     esi, edx",
    "mov     dword [rsp+0x3c8], edx",
    "mov     word [rsp+0x70], dx",
    "jle     0x140077912",
    "movzx   r8d, ax",
    "lea     rdx, [rsp+0xe0]",
    "lea     rcx, [rsp+0x78]",
    "shl     r8, 0x4",
    "mov     word [rsp+0x70], ax",
    "call    memcpy",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], edx",
    "jmp     0x140077906",
    "mov     rax, qword [rsp+0x28]",
    "movzx   ecx, word [rsp+0xd8]",
    "lea     rsi, [rsp+0x120]",
    "mov     qword [rsp+0x3c8], rax",
    "mov     si, word [rsp+0x70]",
    "mov     dword [rsp+0x3c8], esi",
    "add     rsi, 0x10",
    "sub     rax, 0x1",
    "mov     qword [rsp+0x3c8], rax",
    "jne     0x14007788a",
    "lea     rbx, [rsp+0xe8]",
    "cmp     ecx, edx",
    "mov     ebp, edx",
    "jle     0x1400778ea",
    "mov     rbx, qword [rsp+0x60]",
    "mov     rbp, qword [rsp+0x38]",
    "movzx   edx, word [rbx+0x2]",
    "movzx   ecx, word [rsi+0x2]",
    "call    sub_14001a04c",
    "movzx   edx, word [rbx]",
    "movzx   ecx, word [rsi]",
    "movzx   r10d, ax",
    "call    sub_14001a04c",
    "mov     rdx, qword [rbx-0x8]",
    "or      rdx, qword [rsi-0x8]",
    "lea     rcx, [rsp+0x70]",
    "movzx   r9d, r10w",
    "movzx   r8d, ax",
    "call    sub_1400744b4",
    "movzx   ecx, word [rsp+0xd8]",
    "inc     ebp",
    "add     rbx, 0x10",
    "cmp     ebp, ecx",
    "jl      0x140077898",
    "mov     rax, qword [rsp+0x3c8]",
    "xor     edx, edx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}