{
  "address": "0x1400572e8",
  "rules": [
    "decompress data using LZO/87c7a2ec75aa43fe877541de4275123a",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using HC-128/dc9a54888ead410ba377a88c79e5e622",
    "encrypt data using Curve25519/ba11e775237f4334901cb73b0f61e10d",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x30",
    "movsxd  rbp, edx",
    "mov     r12, rcx",
    "mov     r13, r8",
    "lea     eax, [rbp*4+0x1]",
    "movsxd  rcx, eax",
    "call    sub_1400168d8",
    "mov     rsi, rax",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x140057330",
    "xor     edi, edi",
    "test    rbp, rbp",
    "jle     0x14005740e",
    "mov     rcx, r12",
    "call    sub_1400363d4",
    "jmp     0x14005742b",
    "sub     rbx, rsi",
    "lea     r9, [rel sub_140016950]",
    "mov     rdx, rsi",
    "mov     rcx, r12",
    "mov     r8, rbx",
    "mov     byte [rsp+0x20], 0x1",
    "call    sub_140036274",
    "mov     rcx, qword [r13+rdi*8]",
    "call    sub_140031230",
    "mov     r11, rax",
    "test    rax, rax",
    "js      0x140057355",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rbp, qword [rsp+0x58]",
    "mov     rsi, qword [rsp+0x60]",
    "add     rsp, 0x30",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     r11d, 0xfffd",
    "cmp     rax, 0x10ffff",
    "jle     0x14005735b",
    "mov     eax, r11d",
    "cmp     r11d, 0x800",
    "jae     0x14005739d",
    "mov     byte [rbx], r11b",
    "inc     rbx",
    "jmp     0x140057402",
    "and     r11d, 0x1fffff",
    "cmp     r11d, 0x80",
    "jae     0x140057376",
    "cmp     r11d, 0x10000",
    "jae     0x1400573ce",
    "shr     eax, 0x6",
    "and     r11b, 0x3f",
    "and     al, 0x1f",
    "sub     r11b, 0x80",
    "sub     al, 0x40",
    "mov     byte [rbx], al",
    "mov     byte [rbx+0x1], r11b",
    "add     rbx, 0x2",
    "jmp     0x140057402",
    "inc     rdi",
    "cmp     rdi, rbp",
    "jl      0x14005733b",
    "shr     eax, 0x12",
    "mov     cl, 0x3f",
    "and     al, 0x7",
    "sub     al, 0x10",
    "mov     byte [rbx], al",
    "mov     eax, r11d",
    "shr     eax, 0xc",
    "and     al, cl",
    "sub     al, 0x80",
    "mov     byte [rbx+0x1], al",
    "mov     eax, r11d",
    "and     r11b, cl",
    "shr     eax, 0x6",
    "sub     r11b, 0x80",
    "and     al, cl",
    "sub     al, 0x80",
    "add     rbx, 0x4",
    "mov     byte [rbx-0x2], al",
    "mov     byte [rbx-0x1], r11b",
    "shr     eax, 0xc",
    "and     al, 0xf",
    "sub     al, 0x20",
    "mov     byte [rbx], al",
    "mov     eax, r11d",
    "and     r11b, 0x3f",
    "shr     eax, 0x6",
    "sub     r11b, 0x80",
    "and     al, 0x3f",
    "sub     al, 0x80",
    "add     rbx, 0x3",
    "mov     byte [rbx-0x2], al",
    "mov     byte [rbx-0x1], r11b",
    "jmp     0x140057402"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}