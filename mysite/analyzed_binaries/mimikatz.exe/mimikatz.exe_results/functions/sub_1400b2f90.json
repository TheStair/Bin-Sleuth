{
  "address": "0x1400b2f90",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "contain loop"
  ],
  "disassembly": [
    "test    edx, edx",
    "je      0x1400b3100",
    "retn    ",
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x60",
    "movzx   ebp, cl",
    "lea     rdi, [r8+0x8]",
    "mov     esi, edx",
    "mov     rcx, qword [rdi-0x8]",
    "call    sub_14001311c",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rcx, rbx",
    "call    qword [rel lstrlenW]",
    "test    eax, eax",
    "je      0x1400b309b",
    "mov     r8d, dword [rdi]",
    "mov     eax, r8d",
    "and     eax, 0x20000000",
    "neg     eax",
    "mov     eax, r8d",
    "sbb     ebx, ebx",
    "and     eax, 0xc0000000",
    "and     ebx, 0x32",
    "add     ebx, 0x20",
    "neg     eax",
    "mov     eax, r8d",
    "sbb     r11d, r11d",
    "and     al, 0x10",
    "mov     dword [rsp+0x40], ebx",
    "and     r11d, 0x2c",
    "add     r11d, 0x20",
    "neg     al",
    "mov     eax, r8d",
    "sbb     r10d, r10d",
    "and     al, 0x8",
    "mov     dword [rsp+0x38], r11d",
    "and     r10d, 0x35",
    "add     r10d, 0x20",
    "neg     al",
    "mov     eax, r8d",
    "sbb     edx, edx",
    "and     al, 0x4",
    "mov     dword [rsp+0x30], r10d",
    "and     edx, 0x2f",
    "add     edx, 0x20",
    "neg     al",
    "mov     eax, r8d",
    "sbb     ecx, ecx",
    "and     al, 0x2",
    "mov     dword [rsp+0x28], edx",
    "and     ecx, 0x25",
    "mov     edx, ebp",
    "add     ecx, 0x20",
    "neg     al",
    "sbb     r9d, r9d",
    "and     r8b, 0x1",
    "mov     dword [rsp+0x20], ecx",
    "and     r9d, 0x24",
    "lea     rcx, [rel data_140120eb0]  {u\"   %c:[%c%c%c%c%c%c%c] \"}",
    "add     r9d, 0x20",
    "neg     r8b",
    "sbb     r8d, r8d",
    "and     r8d, 0x2d",
    "add     r8d, 0x20",
    "call    sub_14000c030",
    "mov     rcx, qword [rdi-0x8]",
    "and     qword [rsp+0x20], 0x0",
    "lea     r8, [rsp+0x50]",
    "lea     rdx, [rsp+0x88]",
    "xor     r9d, r9d",
    "call    sub_1400140e0",
    "test    eax, eax",
    "je      0x1400b30c8",
    "lea     r11, [rsp+0x60]",
    "mov     rbx, qword [r11+0x10]",
    "mov     rbp, qword [r11+0x18]",
    "mov     rsi, qword [r11+0x20]",
    "mov     rsp, r11",
    "pop     rdi",
    "mov     rdx, qword [rsp+0x88]",
    "lea     rcx, [rel data_1400f7d88]",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x88]",
    "call    qword [rel LocalFree]",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "jmp     0x1400b30dd",
    "lea     rcx, [rel data_140120ee0]",
    "mov     rdx, rbx",
    "call    sub_14000c030",
    "add     rdi, 0x10",
    "sub     rsi, 0x1",
    "jne     0x1400b2fb5"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}