{
  "address": "0x14004ce0c",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "decompress data using LZO/4cde8899b401464e87ec185666d6508a",
    "hash data using jshash/f142a7a7597843a791ba4ccc676b6fb1",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for trap flag exception/f2973fbf4b89419fb73ecd274d9581c2",
    "contain loop"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x40",
    "mov     rax, qword [rcx]",
    "xor     ebp, ebp",
    "mov     r13, rcx",
    "mov     rsi, qword [rax+0x28]",
    "mov     rcx, qword [r8]",
    "and     qword [r11+0x18], rbp",
    "and     qword [r11-0x48], rbp",
    "and     qword [r11+0x20], rbp",
    "mov     dl, 0x1",
    "mov     rdi, r8",
    "call    sub_140031c84",
    "mov     rcx, qword [rdi+0x8]",
    "mov     dl, 0x1",
    "mov     rbx, rax",
    "call    sub_140031c84",
    "mov     r8d, dword [rsi+0x98]",
    "mov     edi, dword [rsi+0x28]",
    "test    rbx, rbx",
    "lea     r12, [rel data_1400f386c]",
    "mov     r14, r12",
    "cmovne  r14, rbx",
    "test    rax, rax",
    "cmovne  r12, rax",
    "lea     eax, [r8+0x2]",
    "cmp     edi, eax",
    "jl      0x14004ce8e",
    "xor     r11d, r11d",
    "test    edi, edi",
    "jle     0x14004ceb4",
    "lea     rdx, [rel data_1400f55c8]  {\"too many attached databases - ma\u2026\"}",
    "mov     rcx, rsi",
    "call    _printf_p_l",
    "jmp     0x14004d1ce",
    "mov     rdx, qword [rsi+0x20]",
    "lea     rax, [rsi+0x230]",
    "mov     rcx, rsi",
    "cmp     rdx, rax",
    "jne     0x14004cf08",
    "mov     rbx, qword [rsi+0x20]",
    "mov     qword [rsp+0x90], rax",
    "test    rax, rax",
    "je      0x14004d213",
    "lea     eax, [rdi+0x1]",
    "movsxd  r8, eax",
    "shl     r8, 0x5",
    "call    sub_140016c90",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14004d221",
    "mov     edx, 0x60",
    "call    sub_140016c18",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14004d221",
    "mov     r8, r12",
    "lea     rdx, [rel data_1400f55f0]  {\"database %s is already in use\"}",
    "inc     r11d",
    "add     rbx, 0x20",
    "cmp     r11d, edi",
    "jl      0x14004ce99",
    "test    ebp, ebp",
    "je      0x14004d221",
    "or      rcx, 0xffffffffffffffff",
    "mov     r9b, 0x1",
    "mov     rdx, rax",
    "mov     qword [rsp+0x20], rcx",
    "mov     r8d, ecx",
    "mov     rcx, qword [r13]",
    "mov     dword [r13+0x24], 0x1",
    "call    sub_140031820",
    "mov     rdx, qword [rsp+0x90]",
    "test    rdx, rdx",
    "je      0x14004d213",
    "add     rsp, 0x40",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "movsxd  rdi, dword [rsi+0x28]",
    "xor     edx, edx",
    "mov     qword [rsi+0x20], rbx",
    "shl     rdi, 0x5",
    "lea     r8d, [rdx+0x20]",
    "add     rdi, rbx",
    "mov     rcx, rdi",
    "call    memset",
    "mov     rcx, qword [rsi]",
    "mov     r11d, dword [rsi+0x4c]",
    "mov     rcx, qword [rcx+0x18]",
    "lea     rax, [rsp+0x98]",
    "lea     r9, [rsp+0x38]",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0x30]",
    "lea     r8, [rsp+0x80]",
    "mov     rdx, r14",
    "mov     dword [rsp+0x80], r11d",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140084214",
    "test    eax, eax",
    "je      0x14004cfd0",
    "mov     rdx, qword [rsi+0x20]",
    "mov     rcx, rax",
    "mov     r8d, 0x40",
    "call    memcpy",
    "jmp     0x14004cf23",
    "mov     rcx, qword [rbx]",
    "mov     rdx, r12",
    "call    sub_1400192b0",
    "test    eax, eax",
    "je      0x14004cef1",
    "mov     edx, ebp",
    "mov     rcx, r13",
    "call    sub_140036368",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "mov     eax, dword [rsp+0x80]",
    "mov     rdx, qword [rsp+0x30]",
    "mov     rcx, qword [rsp+0x38]",
    "bts     eax, 0x8",
    "lea     r9, [rdi+0x8]",
    "mov     r8, rsi",
    "mov     dword [rsp+0x28], eax",
    "and     dword [rsp+0x20], ebp",
    "call    sub_140027a84",
    "inc     dword [rsi+0x28]",
    "mov     rdx, r12",
    "mov     rcx, rsi",
    "mov     ebp, eax",
    "call    sub_140016dac",
    "mov     r12d, 0x7",
    "mov     qword [rdi], rax",
    "mov     byte [rsi+0x69], 0x0",
    "cmp     ebp, 0x13",
    "jne     0x14004d03c",
    "mov     r12d, 0x7",
    "cmp     eax, r12d",
    "jne     0x14004cf96",
    "test    ebp, ebp",
    "jne     0x14004d0fb",
    "lea     rdx, [rel data_1400f5610]  {\"database is already attached\"}",
    "mov     rcx, rsi",
    "lea     ebp, [r12-0x6]",
    "call    _printf_p_l",
    "mov     qword [rsp+0x90], rax",
    "jmp     0x14004d0fb",
    "mov     rdx, qword [rsp+0x98]",
    "or      rcx, 0xffffffffffffffff",
    "mov     r9b, 0x1",
    "mov     qword [rsp+0x20], rcx",
    "mov     r8d, ecx",
    "mov     rcx, qword [r13]",
    "mov     dword [r13+0x24], 0x1",
    "call    sub_140031820",
    "mov     rcx, qword [rsp+0x98]",
    "call    sub_140016950",
    "jmp     0x14004d221",
    "mov     rcx, rsi",
    "call    sub_140016efc",
    "mov     byte [rdi+0x10], 0x3",
    "test    ebp, ebp",
    "jne     0x14004d10b",
    "mov     rdx, qword [rdi+0x8]",
    "mov     rcx, rsi",
    "call    sub_1400548f0",
    "mov     r11, rax",
    "mov     qword [rdi+0x18], rax",
    "test    rax, rax",
    "jne     0x14004d061",
    "mov     rcx, qword [rsp+0x30]",
    "call    sub_140016950",
    "test    ebp, ebp",
    "jne     0x14004d13e",
    "cmp     qword [rdi], 0x0",
    "cmove   ebp, r12d",
    "cmp     byte [rax+0x70], 0x0",
    "je      0x14004d08c",
    "mov     ebp, r12d",
    "jmp     0x14004d08c",
    "mov     edi, dword [rsi+0x28]",
    "mov     rax, qword [rsi+0x20]",
    "dec     edi",
    "movsxd  rbx, edi",
    "shl     rbx, 0x5",
    "mov     rcx, qword [rax+rbx+0x8]",
    "test    rcx, rcx",
    "je      0x14004d171",
    "and     dword [rsi+0x2c], 0xffffffef",
    "lea     rdx, [rsp+0x90]",
    "mov     rcx, rsi",
    "mov     byte [rsi+0xb4], bpl",
    "call    sub_1400622a4",
    "mov     ebp, eax",
    "test    eax, eax",
    "je      0x14004d221",
    "mov     rax, qword [rdi+0x8]",
    "movzx   edx, byte [rsi+0x63]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, qword [rcx]",
    "test    edx, edx",
    "js      0x14004d0ba",
    "mov     al, byte [rsi+0x5e]",
    "cmp     byte [r11+0x71], al",
    "je      0x14004d08c",
    "mov     rcx, rsi",
    "call    sub_14004e348",
    "mov     dword [rsi+0x28], edi",
    "cmp     ebp, r12d",
    "je      0x14004d1a5",
    "call    sub_140027dd4",
    "mov     r11, qword [rsi+0x20]",
    "and     qword [r11+rbx+0x8], 0x0",
    "mov     rax, qword [rsi+0x20]",
    "and     qword [rax+rbx+0x18], 0x0",
    "mov     rax, qword [rsi+0x20]",
    "mov     rax, qword [rax+0x8]",
    "test    rax, rax",
    "jne     0x14004d0cb",
    "cmp     byte [rax+0x10], 0x0",
    "jne     0x14004d0ba",
    "lea     rdx, [rel data_1400f5630]  {\"attached databases must use the \u2026\"}",
    "mov     rcx, rsi",
    "call    _printf_p_l",
    "mov     ebp, 0x1",
    "mov     qword [rsp+0x90], rax",
    "mov     rcx, rsi",
    "call    sub_140016efc",
    "mov     rdx, qword [rsp+0x90]",
    "test    rdx, rdx",
    "je      0x14004d1bf",
    "cmp     ebp, 0xc0a",
    "je      0x14004d1a5",
    "mov     rax, qword [rax+0x8]",
    "movzx   edx, word [rax+0x26]",
    "shr     edx, 0x2",
    "and     edx, 0x3",
    "xor     edx, edx",
    "jmp     0x14004d0d9",
    "mov     rcx, qword [rax+0x120]",
    "test    rcx, rcx",
    "je      0x14004d0b7",
    "lea     rdx, [rel data_1400f4490]  {\"out of memory\"}",
    "mov     rcx, rsi",
    "call    _printf_p_l",
    "call    sub_1400169a8",
    "mov     rax, qword [rsp+0x90]",
    "test    rax, rax",
    "jne     0x14004d1db",
    "mov     rcx, qword [rdi+0x8]",
    "call    sub_140027fd8",
    "mov     rax, qword [rdi+0x8]",
    "mov     edx, dword [rsi+0x30]",
    "mov     rcx, qword [rax+0x8]",
    "and     edx, 0x38",
    "mov     rcx, qword [rcx]",
    "or      edx, 0x3",
    "call    sub_140020c08",
    "mov     byte [rax+0x8], dl",
    "cmp     byte [rcx+0x3f], 0x2",
    "je      0x14004d0ba",
    "mov     r8, r14",
    "lea     rdx, [rel data_1400f5678]  {\"unable to open database: %s\"}",
    "jmp     0x14004cefb",
    "mov     rcx, rsi",
    "call    _printf_p_l",
    "jmp     0x14004d1ce"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}