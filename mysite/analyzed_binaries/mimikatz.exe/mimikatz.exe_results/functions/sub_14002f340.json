{
  "address": "0x14002f340",
  "rules": [
    "decompress data using LZO/4cde8899b401464e87ec185666d6508a",
    "hash data using jshash/f142a7a7597843a791ba4ccc676b6fb1",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     rbx, rcx",
    "mov     ecx, dword [rcx+0x20]",
    "mov     eax, r9d",
    "mov     esi, r9d",
    "mov     edi, r8d",
    "mov     r15d, edx",
    "mov     dword [rsp+0x88], ecx",
    "mov     dword [rsp+0x80], eax",
    "test    r8d, r8d",
    "je      0x14002f538",
    "test    esi, esi",
    "je      0x14002f56f",
    "cmp     dword [rbx+0x1c], 0x0",
    "je      0x14002f52a",
    "mov     rbx, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     ecx, dword [rbx+0x20]",
    "jne     0x14002f56f",
    "mov     ecx, dword [rsp+0x88]",
    "mov     eax, dword [rsp+0x80]",
    "mov     edx, edi",
    "mov     rcx, rbx",
    "call    sub_14002f22c",
    "test    eax, eax",
    "jne     0x14002f52a",
    "mov     r9d, eax",
    "lea     rcx, [rel data_1400f3d40]  {\"size\"}",
    "lea     r8, [rel data_1400f3d48]  {\"overflow list length\"}",
    "sub     r9d, esi",
    "test    r15d, r15d",
    "lea     rdx, [rel data_1400f3d60]  {\"%s is %d but should be %d\"}",
    "cmovne  r8, rcx",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14002f1a4",
    "mov     rax, qword [rbx+0x8]",
    "lea     r8, [rsp+0x70]",
    "xor     r9d, r9d",
    "mov     edx, edi",
    "mov     rcx, rax",
    "dec     esi",
    "call    qword [rax+0x108]",
    "test    eax, eax",
    "jne     0x14002f518",
    "lea     rdx, [rel data_1400f3d00]  {\"failed to get page %d\"}",
    "mov     r8d, edi",
    "mov     rcx, rbx",
    "call    sub_14002f1a4",
    "mov     rax, qword [rsp+0x70]",
    "mov     r12, qword [rax+0x8]",
    "test    r15d, r15d",
    "je      0x14002f498",
    "mov     rax, qword [rbx]",
    "cmp     byte [rax+0x21], 0x0",
    "je      0x14002f4d9",
    "movzx   eax, byte [r12+0x6]",
    "movzx   ebp, byte [r12+0x5]",
    "shl     ebp, 0x8",
    "or      ebp, eax",
    "movzx   eax, byte [r12+0x4]",
    "shl     eax, 0x18",
    "shl     ebp, 0x8",
    "or      ebp, eax",
    "movzx   eax, byte [r12+0x7]",
    "or      ebp, eax",
    "mov     rax, qword [rbx]",
    "cmp     byte [rax+0x21], 0x0",
    "je      0x14002f40c",
    "movzx   eax, byte [r12+0x2]",
    "movzx   edi, byte [r12+0x1]",
    "mov     rcx, qword [rsp+0x70]",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [r12+0x3]",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [r12]",
    "shl     eax, 0x18",
    "or      edi, eax",
    "test    rcx, rcx",
    "je      0x14002f50e",
    "test    esi, esi",
    "je      0x14002f4d9",
    "mov     rax, qword [rbx]",
    "mov     ecx, dword [rax+0x34]",
    "shr     ecx, 0x2",
    "sub     ecx, 0x2",
    "cmp     ebp, ecx",
    "jbe     0x14002f435",
    "xor     r9d, r9d",
    "mov     r8b, 0x2",
    "mov     edx, edi",
    "mov     rcx, rbx",
    "call    sub_14002f298",
    "test    edi, edi",
    "jne     0x14002f37d",
    "call    sub_14002242c",
    "movzx   eax, byte [r12+0x2]",
    "movzx   edx, byte [r12+0x1]",
    "mov     r9d, edi",
    "shl     edx, 0x8",
    "mov     r8b, 0x4",
    "mov     rcx, rbx",
    "or      edx, eax",
    "movzx   eax, byte [r12+0x3]",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r12]",
    "shl     eax, 0x18",
    "or      edx, eax",
    "call    sub_14002f298",
    "test    ebp, ebp",
    "jle     0x14002f494",
    "lea     rdx, [rel data_1400f3d18]  {\"freelist leaf count too big on p\u2026\"}",
    "mov     r8d, edi",
    "mov     rcx, rbx",
    "call    sub_14002f1a4",
    "dec     esi",
    "jmp     0x14002f4d9",
    "jmp     0x14002f52a",
    "sub     esi, ebp",
    "jmp     0x14002f4d9",
    "lea     rdi, [r12+0xa]",
    "mov     r14d, ebp",
    "mov     edx, r13d",
    "mov     rcx, rbx",
    "call    sub_14002f22c",
    "add     rdi, 0x4",
    "sub     r14, 0x1",
    "jne     0x14002f441",
    "xor     r9d, r9d",
    "mov     r8b, 0x2",
    "mov     edx, r13d",
    "mov     rcx, rbx",
    "call    sub_14002f298",
    "movzx   eax, byte [rdi]",
    "movzx   r13d, byte [rdi-0x1]",
    "shl     r13d, 0x8",
    "or      r13d, eax",
    "movzx   eax, byte [rdi-0x2]",
    "shl     eax, 0x18",
    "shl     r13d, 0x8",
    "or      r13d, eax",
    "movzx   eax, byte [rdi+0x1]",
    "or      r13d, eax",
    "mov     rax, qword [rbx]",
    "cmp     byte [rax+0x21], 0x0",
    "je      0x14002f47f"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}