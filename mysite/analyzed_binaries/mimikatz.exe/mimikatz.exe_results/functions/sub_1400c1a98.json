{
  "address": "0x1400c1a98",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "encrypt data using RC4 PRGA",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rsi",
    "push    rdi",
    "sub     rsp, 0x140",
    "xor     r9d, r9d",
    "mov     r10d, edx",
    "mov     r11, rcx",
    "test    dl, 0x7",
    "je      0x1400c1b8b",
    "mov     rax, qword [rel data_140140630]",
    "cmp     r8d, r9d",
    "lea     rcx, [rel sub_1400c2010]",
    "mov     qword [rsp+0x168], rax",
    "mov     rax, r10",
    "lea     r10, [rel sub_1400c1f74]",
    "cmovne  r10, rcx",
    "lea     rdx, [rsp+0x168]",
    "lea     rcx, [rel data_1401405a0]",
    "mov     r9, r11",
    "mov     r8, r11",
    "mov     qword [rsp+0x20], rax",
    "call    r10",
    "mov     rax, r9",
    "mov     esi, 0x100",
    "mov     byte [rsp+rax+0x30], al",
    "inc     rax",
    "cmp     rax, rsi",
    "jb      0x1400c1ac4",
    "mov     rdi, r9",
    "mov     r8, r9",
    "mov     rbx, r9",
    "movzx   edx, byte [rsp+rbx+0x30]",
    "lea     rax, [rel data_140140640]",
    "movzx   eax, byte [r8+rax]",
    "inc     r8",
    "add     rax, rdi",
    "cmp     r8, rsi",
    "lea     rcx, [rax+rdx]",
    "cmove   r8, r9",
    "inc     rbx",
    "movzx   edi, cl",
    "mov     al, byte [rsp+rdi+0x30]",
    "mov     byte [rsp+rbx+0x2f], al",
    "mov     byte [rsp+rdi+0x30], dl",
    "cmp     rbx, rsi",
    "jb      0x1400c1ad9",
    "add     r10, r11",
    "mov     al, 0x1",
    "mov     byte [rsp+0x131], r9b",
    "mov     byte [rsp+0x130], al",
    "cmp     r11, r10",
    "jae     0x1400c1bcf",
    "lea     r11, [rsp+0x140]",
    "xor     eax, eax",
    "mov     rbx, qword [r11+0x10]",
    "mov     rsi, qword [r11+0x18]",
    "mov     rsp, r11",
    "pop     rdi",
    "retn    ",
    "movzx   edx, al",
    "movzx   r8d, byte [rsp+rdx+0x30]",
    "add     r9b, r8b",
    "mov     byte [rsp+0x131], r9b",
    "movzx   eax, r9b",
    "mov     cl, byte [rsp+rax+0x30]",
    "mov     byte [rsp+rdx+0x30], cl",
    "movzx   eax, byte [rsp+0x131]",
    "add     ecx, r8d",
    "mov     byte [rsp+rax+0x30], r8b",
    "movzx   eax, cl",
    "mov     cl, byte [rsp+rax+0x30]",
    "mov     al, byte [rsp+0x130]",
    "xor     byte [r11], cl",
    "inc     al",
    "inc     r11",
    "mov     byte [rsp+0x130], al",
    "cmp     r11, r10",
    "jae     0x1400c1bcf",
    "mov     r9b, byte [rsp+0x131]",
    "jmp     0x1400c1b2f"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}