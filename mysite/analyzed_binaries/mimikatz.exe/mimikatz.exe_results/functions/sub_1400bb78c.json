{
  "address": "0x1400bb78c",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x98",
    "mov     rdi, rcx",
    "lea     rcx, [rel data_1401280e0]  {u\"** Attributes checking **\\n\\n\"}",
    "call    sub_14000c030",
    "mov     rax, qword [rdi+0xe0]",
    "xor     ebx, ebx",
    "cmp     dword [rax+0x10], ebx",
    "jbe     0x1400bb80a",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140128130]  {u\"** Objects **\\n\\n\"}",
    "call    sub_14000c030",
    "mov     rax, qword [rdi+0xe0]",
    "xor     r15d, r15d",
    "cmp     dword [rax], r15d",
    "jbe     0x1400bbd94",
    "xor     esi, esi",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     eax, 0x1",
    "xor     r12d, r12d",
    "xor     eax, eax",
    "jmp     0x1400bbda5",
    "mov     rax, qword [rdi+0xe0]",
    "inc     ebx",
    "add     rsi, 0x18",
    "cmp     ebx, dword [rax+0x10]",
    "jb      0x1400bb7bf",
    "mov     rax, qword [rdi+0xe0]",
    "mov     rcx, qword [rax+0x8]",
    "test    byte [rcx+r12+0x50], 0x1",
    "je      0x1400bb8a0",
    "add     rsp, 0x98",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     r8, qword [rax+0x18]",
    "lea     rcx, [rel data_140128118]  {u\"#%u: %s\\n\"}",
    "mov     edx, ebx",
    "mov     r8, qword [r8+rsi]",
    "call    sub_14000c030",
    "mov     rax, qword [rdi+0xe0]",
    "lea     rdx, [rbx+rbx*2]",
    "mov     rcx, qword [rax+0x18]",
    "lea     rdx, [rcx+rdx*8]",
    "mov     rcx, rdi",
    "call    sub_1400ba444",
    "test    eax, eax",
    "je      0x1400bb967",
    "mov     rax, qword [rdi+0xe0]",
    "mov     rcx, qword [rax+0x8]",
    "test    byte [rcx+r12+0x50], 0x2",
    "je      0x1400bb8bf",
    "lea     rcx, [rel data_140128150]  {u\"Object will be added\\n\"}",
    "call    sub_14000c030",
    "mov     rax, qword [rdi+0xe0]",
    "xor     r14d, r14d",
    "mov     rcx, qword [rax+0x8]",
    "mov     dword [rsp+0xe0], r14d",
    "cmp     dword [r12+rcx+0x44], r14d",
    "jbe     0x1400bbd7d",
    "lea     rcx, [rel data_140128180]  {u\"Dynamic object\\n\"}",
    "call    sub_14000c030",
    "mov     rax, qword [rdi+0xe0]",
    "inc     r15d",
    "add     r12, 0x58",
    "cmp     r15d, dword [rax]",
    "jb      0x1400bb838",
    "xor     esi, esi",
    "mov     qword [rsp+0x40], rsi",
    "mov     r8, qword [rax+0x8]",
    "lea     rcx, [rel data_140128118]  {u\"#%u: %s\\n\"}",
    "mov     edx, r15d",
    "mov     r8, qword [r8+r12]",
    "call    sub_14000c030",
    "mov     rax, qword [rdi+0xe0]",
    "mov     rdx, qword [rdi+0x28]",
    "mov     r8, qword [rax+0x8]",
    "mov     rcx, qword [rdi+0xd0]",
    "mov     ebp, r15d",
    "imul    rbp, rbp, 0x58",
    "add     r8, rbp",
    "mov     qword [rsp+0x50], rbp",
    "call    sub_1400b97ac",
    "test    eax, eax",
    "je      0x1400bb967",
    "mov     rcx, qword [rbx]",
    "lea     rdx, [rel data_140126318]  {u\"parentGUID\"}",
    "mov     rcx, qword [rcx]",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "jne     0x1400bb9d6",
    "mov     rcx, qword [rbx+0x48]",
    "mov     rcx, qword [rcx]",
    "call    qword [rel lstrlenW]",
    "add     ax, ax",
    "mov     word [rsp+0x58], ax",
    "mov     word [rsp+0x5a], ax",
    "mov     rax, qword [rbx+0x48]",
    "mov     rcx, qword [rax]",
    "mov     rax, qword [rdi+0xe0]",
    "mov     qword [rsp+0x60], rcx",
    "mov     rcx, qword [rax+0x8]",
    "lea     rdx, [rcx+rbp+0x24]",
    "lea     rcx, [rsp+0x58]",
    "call    RtlGUIDFromString",
    "test    eax, eax",
    "js      0x1400bba5f",
    "mov     rcx, qword [rbx]",
    "lea     rdx, [rel data_140128208]  {u\"ObjectSid\"}",
    "mov     rcx, qword [rcx]",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "jne     0x1400bbaaa",
    "mov     rcx, qword [rbx+0x48]",
    "mov     rcx, qword [rcx]",
    "call    qword [rel lstrlenW]",
    "add     ax, ax",
    "mov     word [rsp+0x68], ax",
    "mov     word [rsp+0x6a], ax",
    "mov     rax, qword [rbx+0x48]",
    "mov     rcx, qword [rax]",
    "mov     rax, qword [rdi+0xe0]",
    "mov     qword [rsp+0x70], rcx",
    "mov     rcx, qword [rax+0x8]",
    "lea     rdx, [rcx+rbp+0x34]",
    "lea     rcx, [rsp+0x68]",
    "call    RtlGUIDFromString",
    "test    eax, eax",
    "js      0x1400bba5f",
    "mov     rax, qword [rdi+0xe0]",
    "mov     rcx, rbx",
    "mov     r8, qword [rax+0x8]",
    "mov     eax, dword [r8+r12+0x44]",
    "lea     rdx, [rax+rax*4]",
    "mov     rax, qword [r8+r12+0x48]",
    "mov     r8d, 0x50",
    "add     rdx, rdx",
    "lea     rdx, [rax+rdx*8-0x50]",
    "call    memcpy",
    "mov     rax, qword [rdi+0xe0]",
    "dec     r14d",
    "mov     rcx, qword [rax+0x8]",
    "sub     rsi, 0x50",
    "dec     dword [rcx+r12+0x44]",
    "jmp     0x1400bbd53",
    "lea     rcx, [rel data_1401281b8]  {u\"  with GUID %s\\n\"}",
    "mov     rax, qword [rbx]",
    "cmp     dword [rax+0x10], 0x550502",
    "jne     0x1400bbc30",
    "mov     rcx, qword [rbx+0x48]",
    "lea     rdx, [rsp+0xf8]",
    "mov     rcx, qword [rcx]",
    "call    ConvertStringSidToSidW",
    "test    eax, eax",
    "je      0x1400bba5f",
    "lea     rcx, [rel data_1401281d8]  {u\"  with Parent GUID %s\\n\"}",
    "jmp     0x1400bb956",
    "mov     rax, qword [rdi+0xe0]",
    "inc     r14d",
    "add     rsi, 0x50",
    "mov     rcx, qword [rax+0x8]",
    "mov     dword [rsp+0xe0], r14d",
    "mov     qword [rsp+0x40], rsi",
    "cmp     r14d, dword [r12+rcx+0x44]",
    "jb      0x1400bb8e7",
    "mov     rcx, rbx",
    "call    sub_1400bb620",
    "test    eax, eax",
    "je      0x1400bb967",
    "cmp     dword [rbx+0x38], 0x0",
    "jbe     0x1400bbc30",
    "mov     rdx, qword [rbx+0x48]",
    "lea     rcx, [rel data_140128220]  {u\"  with SID %s\\n\"}",
    "mov     rdx, qword [rdx]",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0xf8]",
    "mov     r11, qword [rdi+0xe0]",
    "mov     rax, qword [rdx]",
    "mov     r8, qword [r11+0x8]",
    "mov     qword [r8+r12+0x8], rax",
    "mov     rax, qword [rdx+0x8]",
    "mov     qword [r8+r12+0x10], rax",
    "mov     rax, qword [rdx+0x10]",
    "mov     qword [r8+r12+0x18], rax",
    "mov     eax, dword [rdx+0x18]",
    "mov     dword [r8+r12+0x20], eax",
    "mov     rcx, qword [rsp+0xf8]",
    "call    qword [rel LocalFree]",
    "mov     rdx, qword [rbx+0x48]",
    "mov     rdx, qword [rdx]",
    "call    sub_14000c030",
    "jmp     0x1400bba5f",
    "mov     rax, qword [r12+rcx+0x48]",
    "lea     rdx, [rel data_1401281a0]  {u\"ObjectGUID\"}",
    "lea     rbx, [rsi+rax]",
    "mov     rcx, qword [rbx]",
    "mov     rcx, qword [rcx]",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "jne     0x1400bb96e",
    "mov     rdx, qword [rbx]",
    "lea     r8, [rsp+0xe8]",
    "lea     rcx, [rel data_1400df670]",
    "mov     rdx, qword [rdx+0x8]",
    "xor     r9d, r9d",
    "call    sub_140011a94",
    "mov     rdx, qword [rbx]",
    "mov     eax, dword [rbx+0x28]",
    "mov     r8, qword [rdx+0x8]",
    "mov     r9d, dword [rsp+0xe8]",
    "mov     rdx, qword [rdx]",
    "lea     rcx, [rel data_140128240]  {u\"  %s (%S-%x rev %u): \\n\"}",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14000c030",
    "xor     r13d, r13d",
    "cmp     dword [rbx+0x38], r13d",
    "jbe     0x1400bbcd5",
    "mov     rcx, qword [rbx+0x48]",
    "mov     edx, 0x2e",
    "mov     rcx, qword [rcx]",
    "call    qword [rel wcschr]",
    "test    rax, rax",
    "jne     0x1400bbc30",
    "test    byte [rbx+0x8], 0x4",
    "je      0x1400bbd01",
    "xor     esi, esi",
    "xor     ebp, ebp",
    "and     qword [rsp+0x80], 0x0",
    "and     qword [rsp+0xf0], 0x0",
    "lea     rax, [rel data_140127ea8]  {u\"governsID\"}",
    "xor     r13d, r13d",
    "mov     qword [rsp+0x78], rax",
    "cmp     dword [rbx+0x38], r13d",
    "jbe     0x1400bb967",
    "test    byte [rbx+0x8], 0x2",
    "je      0x1400bbd16",
    "lea     rcx, [rel data_140128290]  {u\"    usnTimeChanged:\"}",
    "call    sub_14000c030",
    "lea     rcx, [rbx+0x20]",
    "test    rcx, rcx",
    "je      0x1400bbcf5",
    "mov     rdx, qword [rbx+0x48]",
    "lea     rcx, [rel data_140128270]  {u\"    %s\\n    (\"}",
    "mov     rdx, qword [rdx+rbp]",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x40]",
    "xor     r8d, r8d",
    "mov     edx, dword [rsi+rcx]",
    "mov     rcx, qword [rsi+rcx+0x8]",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400e8e8c]",
    "call    sub_14000c030",
    "inc     r13d",
    "add     rbp, 0x8",
    "add     rsi, 0x10",
    "cmp     r13d, dword [rbx+0x38]",
    "jb      0x1400bbc90",
    "xor     ebp, ebp",
    "test    byte [rbx+0x8], 0x1",
    "je      0x1400bbd3d",
    "mov     edx, dword [rbx+0x1c]",
    "lea     rcx, [rel data_1401282b8]  {u\"    usnOriginating:%u\\n\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "call    sub_140013028",
    "mov     r9, qword [rsp+0x48]",
    "mov     rdx, qword [rdi+0x38]",
    "mov     rcx, qword [rdi+0xd0]",
    "lea     rax, [rsp+0xf0]",
    "lea     r8d, [r14+0x1]",
    "mov     qword [rsp+0x30], rax",
    "and     dword [rsp+0x28], r14d",
    "lea     rax, [rsp+0x78]",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel Ordinal_WLDAP32_208]",
    "test    eax, eax",
    "jne     0x1400bbbfd",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rsi, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x50]",
    "lea     rcx, [rel data_1401282e8]  {u\"    uidOriginatingDsa:\"}",
    "call    sub_14000c030",
    "lea     rcx, [rbx+0xc]",
    "call    sub_1400130e8",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140128000]  {u\"ERROR kuhl_m_lsadump_dcshadow_bu\u2026\"}",
    "mov     r8d, eax",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0xf0]",
    "mov     rcx, qword [rdi+0xd0]",
    "call    qword [rel Ordinal_WLDAP32_36]",
    "cmp     eax, 0x1",
    "jne     0x1400bbbd9",
    "inc     r13d",
    "add     rbp, 0x8",
    "cmp     r13d, dword [rbx+0x38]",
    "jb      0x1400bbb0c",
    "mov     rdx, qword [rbx+0x48]",
    "lea     rcx, [rel data_140127f30]  {u\"ERROR kuhl_m_lsadump_dcshadow_bu\u2026\"}",
    "mov     rdx, qword [rdx+rbp]",
    "call    sub_14000c030",
    "mov     r8, qword [rsp+0x78]",
    "mov     rdx, qword [rsp+0xf0]",
    "mov     rcx, qword [rdi+0xd0]",
    "call    qword [rel Ordinal_WLDAP32_140]",
    "test    rax, rax",
    "je      0x1400bbbb4",
    "mov     r8, qword [rbx+0x48]",
    "lea     rdx, [rel data_140127ec0]  {u\"(&(objectClass=classSchema)(lDAP\u2026\"}",
    "lea     rcx, [rsp+0x48]",
    "mov     r8, qword [r8+rbp]",
    "xor     r14d, r14d",
    "call    sub_140013b1c",
    "test    eax, eax",
    "je      0x1400bb967",
    "mov     r14d, dword [rsp+0xe0]",
    "test    r14d, r14d",
    "je      0x1400bb967",
    "xor     esi, esi",
    "mov     rcx, rax",
    "call    sub_1400b9184",
    "mov     rsi, rax",
    "jmp     0x1400bbbb6",
    "mov     rcx, qword [rsp+0xf0]",
    "call    qword [rel Ordinal_WLDAP32_41]",
    "jmp     0x1400bbc0e",
    "mov     rcx, qword [rbx+0x48]",
    "mov     rcx, qword [rcx+rbp]",
    "call    qword [rel LocalFree]",
    "mov     r11, qword [rbx+0x48]",
    "mov     r14d, 0x1",
    "mov     qword [r11+rbp], rsi",
    "jmp     0x1400bbbed",
    "test    rsi, rsi",
    "je      0x1400bbbed"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}