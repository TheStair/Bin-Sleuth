{
  "address": "0x14006e5c8",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     qword [rsp+0x20], r9",
    "mov     qword [rsp+0x18], r8",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x78",
    "mov     rbp, qword [r8+0x60]",
    "mov     rdi, qword [rcx+0x10]",
    "mov     rax, qword [rcx]",
    "mov     rsi, rcx",
    "xor     ecx, ecx",
    "mov     r13, r8",
    "mov     rbx, rdx",
    "mov     qword [rsp+0x58], rbp",
    "cmp     rbp, rcx",
    "je      0x14006e616",
    "movsx   r14d, word [r8+0x46]",
    "mov     r8d, dword [rsi+0x34]",
    "mov     r15d, dword [rdx+0x4c]",
    "lea     eax, [r8+0x1]",
    "add     r14d, 0x2",
    "mov     dword [rsp+0x20], ecx",
    "mov     edx, 0x70",
    "mov     rcx, rdi",
    "mov     r9d, r14d",
    "mov     dword [rsi+0x34], eax",
    "mov     dword [rsp+0xc0], r14d",
    "mov     dword [rsp+0x40], r15d",
    "mov     dword [rsp+0x44], r8d",
    "call    sub_140032364",
    "mov     ecx, dword [rsi+0x38]",
    "mov     r8, qword [rsp+0xf0]",
    "mov     dword [rsp+0xc8], eax",
    "lea     eax, [rcx+r14+0x1]",
    "lea     r12d, [rcx+0x1]",
    "mov     dword [rsp+0x4c], eax",
    "inc     eax",
    "mov     dword [rsp+0x48], eax",
    "mov     dword [rsi+0x38], eax",
    "xor     eax, eax",
    "mov     dword [rsp+0x30], eax",
    "mov     ecx, 0x4",
    "xor     r9d, r9d",
    "mov     word [rsp+0x28], cx",
    "mov     rdx, rbx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x50], r12d",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140078d90",
    "xor     ebx, ebx",
    "mov     qword [rsp+0x60], rax",
    "cmp     rax, rbx",
    "je      0x14006e9f6",
    "cmp     qword [rbp], rax",
    "je      0x14006e611",
    "add     rsp, 0x78",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "cmp     bx, word [r13+0x46]",
    "mov     r14d, ebx",
    "jge     0x14006e75c",
    "mov     qword [rsp+0x58], rbp",
    "mov     rbp, qword [rbp+0x28]",
    "cmp     rbp, rcx",
    "jne     0x14006e602",
    "test    byte [r13+0x40], 0x20",
    "jne     0x14006e7a6",
    "mov     r15, qword [rsp+0xe8]",
    "mov     rbp, qword [rsp+0xd8]",
    "lea     ebx, [r12+0x2]",
    "mov     r12d, dword [rsp+0x40]",
    "mov     rcx, qword [r13+0x10]",
    "jmp     0x14006e7b9",
    "mov     r14d, 0x80",
    "mov     r9d, r12d",
    "mov     r8d, r15d",
    "mov     rcx, rdi",
    "mov     edx, r14d",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "mov     rdx, qword [rsp+0xe0]",
    "cmp     rdx, rbx",
    "je      0x14006e79a",
    "mov     r9d, r14d",
    "mov     r8d, r12d",
    "mov     edx, 0xa4",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "movsxd  r11, dword [rdi+0x90]",
    "test    r11d, r11d",
    "jle     0x14006e733",
    "movsxd  rax, dword [r15]",
    "mov     r8d, ebx",
    "mov     rcx, rsi",
    "lea     rdx, [rax+rax*4]",
    "mov     rdx, qword [rbp+rdx*8+0x8]",
    "call    sub_140047e2c",
    "jmp     0x14006e733",
    "cmp     rcx, rbx",
    "jne     0x14006e7ac",
    "mov     dword [rsp+0x20], ebx",
    "mov     r8d, r15d",
    "mov     edx, r14d",
    "jmp     0x14006e7ec",
    "lea     r8d, [r12+0x1]",
    "mov     rcx, rsi",
    "call    sub_140047e2c",
    "jmp     0x14006e7f9",
    "movsx   eax, word [r13+0x46]",
    "mov     ecx, 0x1",
    "add     r15, 0x4",
    "add     r14d, ecx",
    "add     ebx, ecx",
    "cmp     r14d, eax",
    "jl      0x14006e6dc",
    "mov     rax, qword [rdi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "mov     edx, 0x1",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     eax, dword [rcx+0x64]",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "je      0x14006e7be",
    "mov     rax, qword [rcx+0x8]",
    "mov     r8d, r15d",
    "mov     edx, 0xa4",
    "movsx   ebx, word [rax]",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], r12d",
    "mov     r9d, ebx",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "lea     r8d, [rbx+r12+0x2]",
    "mov     edx, 0x4f",
    "lea     r9d, [r12+0x1]",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     rbx, qword [rsp+0x60]",
    "movzx   r14d, byte [rbx+0x45]",
    "test    r14d, r14d",
    "je      0x14006e835",
    "cmp     dword [r15], 0x0",
    "jl      0x14006e6fb",
    "mov     rbp, qword [rsp+0x58]",
    "mov     r12d, dword [rsp+0x50]",
    "mov     r15d, dword [rsp+0x40]",
    "xor     ebx, ebx",
    "mov     rcx, qword [rcx+0x28]",
    "mov     rax, qword [rsi+0x90]",
    "mov     r9d, dword [rsp+0xc0]",
    "mov     edx, 0x1",
    "test    rax, rax",
    "mov     rcx, rsi",
    "mov     r8d, r12d",
    "cmovne  rcx, rax",
    "mov     eax, dword [rsp+0x4c]",
    "mov     byte [rcx+0x20], dl",
    "mov     edx, 0x5c",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     r15d, dword [rsp+0x44]",
    "mov     r9d, dword [rsp+0x48]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r8d, r15d",
    "mov     edx, 0x79",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     eax, dword [rsp+0x48]",
    "mov     r9d, dword [rsp+0x4c]",
    "mov     r8d, r15d",
    "mov     edx, 0x7a",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0xc8]",
    "mov     rcx, rdi",
    "call    sub_140032b38",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x75]",
    "mov     r8d, r15d",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     r15d, dword [rsp+0x44]",
    "jmp     0x14006e8aa",
    "mov     rdx, r13",
    "mov     rcx, rsi",
    "call    sub_1400709f0",
    "mov     r9d, dword [rsp+0xc0]",
    "xor     r8d, r8d",
    "lea     edx, [r8+0xa]",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r9d, 0xfffffff4",
    "mov     r8, rbp",
    "mov     edx, eax",
    "mov     rcx, rdi",
    "call    sub_140032c40",
    "movsxd  rax, dword [rdi+0x90]",
    "xor     ebp, ebp",
    "cmp     eax, ebp",
    "jle     0x14006e989",
    "mov     rcx, rbx",
    "call    sub_1400799ec",
    "and     dword [rsp+0x20], r14d",
    "lea     edx, [r14+0x24]",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     dword [rsp+0xc8], eax",
    "xor     eax, eax",
    "cmp     dword [rsp+0xc0], eax",
    "mov     ebx, eax",
    "jle     0x14006e91c",
    "test    r14d, r14d",
    "jne     0x14006e921",
    "mov     rax, qword [rsi+0x90]",
    "cmp     rax, rbp",
    "cmovne  rsi, rax",
    "mov     eax, 0x1",
    "mov     byte [rsi+0x21], al",
    "cmp     r14d, ebp",
    "jne     0x14006e9ee",
    "mov     edx, dword [rsp+0xf8]",
    "lea     ecx, [rbp+0x2]",
    "cmp     edx, 0xb",
    "cmove   dx, cx",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rdi+0x88]",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     rbx, qword [rsp+0x60]",
    "mov     ebp, dword [rsp+0xc0]",
    "lea     r13d, [r14+0x1]",
    "mov     rcx, rbx",
    "call    sub_1400799ec",
    "mov     ebx, dword [rsp+0xc8]",
    "lea     edx, [rax+0x4]",
    "mov     r8d, r15d",
    "lea     r9d, [rbx+0x1]",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, rdi",
    "call    sub_140032d34",
    "mov     r9d, dword [rdi+0x90]",
    "mov     r8d, r15d",
    "mov     dword [rax+0x8], r9d",
    "xor     r9d, r9d",
    "mov     rcx, rdi",
    "lea     edx, [r9+0x75]",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "jmp     0x14006e9f6",
    "lea     eax, [rbx+r12]",
    "mov     r9d, ebx",
    "mov     r8d, r15d",
    "mov     edx, 0x5a",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "add     ebx, r13d",
    "cmp     ebx, ebp",
    "jl      0x14006e8ed",
    "mov     rbp, qword [rsp+0x58]",
    "mov     r13, qword [rsp+0xd0]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}