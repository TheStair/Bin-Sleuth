{
  "address": "0x140029f9c",
  "rules": [
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using Curve25519/bf3cf3909d844745bc0e01f23d66c6a9",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "encrypt data using chaskey/9e1fd69e115146dfb5013a18fb36c920",
    "hash data using aphash/0032995a5e514e2ebf12018a2932c851",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x18], r8",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "xor     r15d, r15d",
    "mov     ebx, r9d",
    "mov     r12, r8",
    "mov     rbp, rdx",
    "mov     rdi, rcx",
    "cmp     rdx, r15",
    "jne     0x14002a04e",
    "mov     rcx, qword [rdx]",
    "cmp     word [rcx+0x8], 0xd",
    "ja      0x14002a0a0",
    "cmp     byte [rcx], r15b",
    "jne     0x14002a041",
    "lea     r14, [rel sub_14003569c]",
    "mov     rax, qword [rdx+0x8]",
    "movzx   edx, word [rax+0x8]",
    "mov     rax, qword [rcx+0x18]",
    "cmp     byte [rax], r15b",
    "je      0x14002a078",
    "mov     rsi, qword [rsp+0xa0]",
    "test    byte [rcx+0x1], 0x2",
    "je      0x14002a041",
    "mov     eax, 0x1",
    "sub     eax, ebx",
    "mov     dword [rsp+0x34], eax",
    "cmp     eax, 0x10",
    "jne     0x14002a457",
    "mov     byte [rbp+0x14], 0xff",
    "mov     byte [rbp+0x15], 0x1",
    "test    byte [rax], 0x2",
    "jne     0x14002a0a0",
    "mov     rcx, rdi",
    "call    sub_140029cbc",
    "cmp     eax, r15d",
    "je      0x14002a0d1",
    "mov     rax, qword [rcx+0x30]",
    "cmp     rax, r8",
    "jne     0x140029ff3",
    "mov     rcx, qword [r12+0x60]",
    "movsxd  rdx, esi",
    "movzx   eax, byte [rcx+rdx*2]",
    "shl     eax, 0x8",
    "movsxd  r9, eax",
    "movzx   eax, byte [rcx+rdx*2+0x1]",
    "or      r9, rax",
    "movzx   eax, word [r12+0x1a]",
    "and     r9, rax",
    "movzx   eax, byte [r12+0xb]",
    "add     r9, qword [r12+0x68]",
    "movzx   ecx, byte [r9]",
    "cmp     ecx, eax",
    "jg      0x14002a255",
    "mov     rbx, qword [r12+0x60]",
    "movzx   edx, word [r12+0x1a]",
    "mov     rbx, qword [rsp+0x80]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "or      dword [rsi], 0xffffffff",
    "jmp     0x140029fec",
    "test    dl, 0x39",
    "jne     0x14002a0a0",
    "lea     r14, [rel sub_1400356a4]",
    "jmp     0x14002a0a7",
    "mov     byte [rbp+0x14], 0x1",
    "mov     byte [rbp+0x15], 0xff",
    "jmp     0x14002a080",
    "jge     0x14002a041",
    "mov     rax, qword [rsp+0xa0]",
    "mov     dword [rax], r15d",
    "test    byte [r9+0x1], 0x80",
    "jne     0x14002a284",
    "lea     rdx, [r9+0x1]",
    "jmp     0x14002a277",
    "mov     al, byte [r8]",
    "test    al, al",
    "js      0x14002a165",
    "jmp     0x14002a14b",
    "xor     eax, eax",
    "jmp     0x14002a457",
    "lea     r14, [rel sub_140035860]",
    "cmp     qword [rcx+0x20], r15",
    "je      0x14002a0a7",
    "mov     rsi, qword [rsp+0xa0]",
    "mov     byte [rbp+0x13], r15b",
    "test    dl, 0x4",
    "je      0x14002a08e",
    "test    byte [rcx+0x1], 0x8",
    "je      0x14002a008",
    "movzx   eax, byte [r12+0xa]",
    "lea     r8, [rdi+0x30]",
    "mov     rcx, r12",
    "sub     r9, rax",
    "mov     rdx, r9",
    "call    qword [r12+0x80]",
    "mov     ebx, dword [rdi+0x30]",
    "cmp     ebx, 0x2",
    "mov     dword [rsp+0x30], ebx",
    "jl      0x14002a441",
    "movzx   eax, byte [r9+0x1]",
    "and     ecx, 0x7f",
    "shl     ecx, 0x7",
    "add     ecx, eax",
    "movzx   eax, word [r12+0xe]",
    "cmp     ecx, eax",
    "jg      0x14002a284",
    "mov     r8, rbp",
    "call    r14",
    "mov     ebx, eax",
    "jmp     0x14002a337",
    "lea     rdx, [rsp+0x38]",
    "mov     rcx, r8",
    "call    sub_140019c94",
    "mov     rax, qword [rsp+0x38]",
    "movzx   edx, word [r12+0x1a]",
    "movzx   eax, al",
    "mov     qword [rsp+0x38], rax",
    "jmp     0x14002a17d",
    "cmp     byte [r8], 0x80",
    "jae     0x14002a13d",
    "mov     rsi, qword [rsp+0xa0]",
    "inc     rax",
    "cmp     rax, r8",
    "jne     0x14002a049",
    "mov     rax, qword [rsp+0xa0]",
    "or      dword [rax], 0xffffffff",
    "jmp     0x140029fec",
    "mov     ecx, 0x10d4b",
    "call    sub_140084e38",
    "xor     r15d, r15d",
    "mov     rcx, qword [rdi+0x20]",
    "xor     edx, edx",
    "mov     eax, ebx",
    "div     dword [rcx+0x34]",
    "cmp     eax, dword [rcx+0x3c]",
    "ja      0x14002a441",
    "lea     rdx, [r9+0x2]",
    "test    ebx, ebx",
    "jns     0x14002a349",
    "jle     0x14002a202",
    "lea     r13d, [rsi+0x1]",
    "cmp     r13d, r15d",
    "jle     0x14002a1f0",
    "mov     rcx, qword [rsp+0x90]",
    "cmp     rax, rcx",
    "jge     0x14002a1e5",
    "inc     r8",
    "cmp     r8, qword [r12+0x58]",
    "jae     0x14002a3d8",
    "inc     r8",
    "mov     r14, r15",
    "jmp     0x14002a0b3",
    "xor     edx, edx",
    "mov     dword [rsi], r15d",
    "call    sub_14002a57c",
    "cmp     eax, r15d",
    "jne     0x14002a037",
    "lea     eax, [rbx+0x12]",
    "movsxd  rcx, eax",
    "call    sub_140016870",
    "mov     r13, rax",
    "test    rax, rax",
    "je      0x14002a437",
    "xor     r15d, r15d",
    "cmp     ebx, r15d",
    "jle     0x14002a409",
    "lea     r13d, [rsi+0x1]",
    "mov     dword [rsp+0x88], r13d",
    "jmp     0x14002a359",
    "xor     r15d, r15d",
    "mov     word [rdi+0x56], si",
    "cmp     byte [r12+0x8], r15b",
    "jne     0x14002a3e4",
    "lea     r15d, [rsi-0x1]",
    "cmp     r13d, r15d",
    "jg      0x14002a1fb",
    "lea     esi, [r15+r13]",
    "sar     esi, 0x1",
    "jmp     0x14002a116",
    "or      ebx, 0xffffffff",
    "mov     ecx, 0x10d00",
    "call    sub_140084e38",
    "jmp     0x14002a457",
    "cmp     eax, 0x65",
    "je      0x14002a049",
    "mov     rcx, rdi",
    "call    sub_1400296c8",
    "cmp     qword [rdi+0x30], r12",
    "jne     0x14002a049",
    "mov     ebx, 0x7",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9, rax",
    "mov     r8d, ebx",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "mov     word [rdi+0x56], si",
    "call    sub_14002983c",
    "movsxd  rcx, dword [rsp+0x30]",
    "mov     ebx, eax",
    "xor     eax, eax",
    "mov     qword [rcx+r13], rax",
    "mov     qword [rcx+r13+0x8], rax",
    "mov     word [rcx+r13+0x10], ax",
    "and     byte [rdi+0x1], 0xfb",
    "test    ebx, ebx",
    "jne     0x14002a42d",
    "mov     rax, qword [rsp+0xa0]",
    "mov     ebx, r15d",
    "mov     dword [rax], r15d",
    "mov     word [rdi+0x56], si",
    "cmp     byte [rbp+0x13], r15b",
    "je      0x14002a450",
    "lea     r15d, [rsi-0x1]",
    "cmp     r13d, r15d",
    "jg      0x14002a196",
    "or      byte [rdi+0x1], 0x2",
    "mov     qword [rdi+0x30], rax",
    "mov     word [rdi+0x46], r15w",
    "jmp     0x140029fe1",
    "mov     r13d, esi",
    "jmp     0x14002a1a4",
    "mov     ebx, 0x1",
    "jmp     0x14002a196",
    "movsxd  rcx, esi",
    "movzx   eax, byte [rbx+rcx*2]",
    "shl     eax, 0x8",
    "movsxd  r8, eax",
    "movzx   eax, byte [rbx+rcx*2+0x1]",
    "or      r8, rax",
    "and     r8, rdx",
    "add     r8, qword [r12+0x68]",
    "cmp     byte [r12+0x3], 0x0",
    "je      0x14002a154",
    "mov     rax, qword [rsp+0xa0]",
    "mov     word [rdi+0x56], si",
    "mov     dword [rax], ebx",
    "mov     ebx, r15d",
    "jmp     0x14002a450",
    "movzx   eax, word [r12+0x18]",
    "cmp     r13d, eax",
    "jl      0x14002a36d",
    "jmp     0x14002a457",
    "jmp     0x140029fec",
    "mov     word [rdi+0x46], r15w",
    "mov     eax, ebx",
    "mov     rcx, r13",
    "call    sub_140016950",
    "jmp     0x14002a43c",
    "xor     r9d, r9d",
    "mov     r8, rbp",
    "mov     rdx, r13",
    "call    sub_140035178",
    "mov     rcx, r13",
    "mov     ebx, eax",
    "call    sub_140016950",
    "mov     r13d, dword [rsp+0x88]",
    "mov     ecx, 0x10d6b",
    "call    sub_140084e38",
    "jmp     0x14002a44e",
    "xor     r15d, r15d",
    "cmp     byte [r12+0x8], r15b",
    "jne     0x14002a3f6",
    "lea     esi, [r15+r13]",
    "sar     esi, 0x1",
    "jmp     0x14002a219",
    "mov     rcx, qword [r12+0x60]",
    "movsxd  rdx, r13d",
    "movzx   eax, byte [rcx+rdx*2]",
    "shl     eax, 0x8",
    "movsxd  r8, eax",
    "movzx   eax, byte [rcx+rdx*2+0x1]",
    "or      r8, rax",
    "movzx   eax, word [r12+0x1a]",
    "and     r8, rax",
    "add     r8, qword [r12+0x50]",
    "movzx   eax, byte [r8+0x2]",
    "movzx   edx, byte [r8+0x1]",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r8]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r8+0x3]",
    "movzx   eax, byte [r12+0x9]",
    "add     eax, 0x8",
    "movsxd  rcx, eax",
    "add     rcx, qword [r12+0x50]",
    "movzx   eax, byte [rcx+0x2]",
    "movzx   edx, byte [rcx+0x1]",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rcx+0x3]",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rcx]",
    "shl     eax, 0x18",
    "jmp     0x14002a3b5",
    "xor     r15d, r15d",
    "jmp     0x14002a450",
    "mov     ebx, eax",
    "mov     eax, dword [rsp+0x34]",
    "jmp     0x14002a0dc",
    "or      edx, eax",
    "mov     rcx, rdi",
    "mov     word [rdi+0x56], r13w",
    "call    sub_140029c00",
    "mov     ebx, eax",
    "cmp     eax, r15d",
    "jne     0x14002a450",
    "mov     r12, qword [rdi+0x88]",
    "mov     r13d, r15d",
    "mov     dword [rsp+0x88], r15d",
    "movzx   r15d, word [r12+0x18]",
    "mov     ecx, eax",
    "dec     r15d",
    "mov     esi, r15d",
    "sar     esi, cl",
    "mov     word [rdi+0x56], si",
    "test    r14, r14",
    "jne     0x14002a219"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}