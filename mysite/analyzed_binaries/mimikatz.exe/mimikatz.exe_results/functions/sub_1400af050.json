{
  "address": "0x1400af050",
  "rules": [
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "encode data using XOR",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "64-bit execution via heavens gate/6f3d819d94084ecbbf457d6e8a175a62",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "push    rdi",
    "mov     byte [rax+0x8], 0x0",
    "xor     eax, eax",
    "mov     rsi, rdx",
    "mov     r9, rcx",
    "mov     r8, 0xff80000000000000",
    "xor     r11b, r11b",
    "mov     word [rsp+0x11], ax",
    "mov     byte [rsp+0x13], al",
    "mov     al, dl",
    "shr     al, cl",
    "inc     cl",
    "and     al, 0x1",
    "xor     byte [r10], al",
    "inc     r10",
    "xor     dil, al",
    "cmp     cl, 0x4",
    "jb      0x1400af0a4",
    "lea     eax, [rbp+rbp*4]",
    "movzx   edx, dl",
    "mov     ecx, 0x33",
    "sub     ecx, eax",
    "movzx   eax, dil",
    "inc     r11b",
    "shl     rdx, cl",
    "lea     ecx, [rbx+rbx*4+0x32]",
    "shl     rax, cl",
    "or      rdx, rax",
    "or      r8, rdx",
    "cmp     r11b, 0xa",
    "jb      0x1400af082",
    "movzx   ebp, r11b",
    "mov     rdx, rsi",
    "lea     r10, [rsp+0x10]",
    "mov     ebx, ebp",
    "neg     ebx",
    "lea     ecx, [rbx*4+0x24]",
    "shr     rdx, cl",
    "xor     cl, cl",
    "and     dl, 0xf",
    "xor     dil, dil",
    "movzx   eax, byte [rsp+0x12]",
    "movzx   ecx, byte [rsp+0x13]",
    "mov     rbx, qword [rsp+0x18]",
    "mov     rbp, qword [rsp+0x20]",
    "mov     rsi, qword [rsp+0x28]",
    "add     ecx, ecx",
    "or      ecx, eax",
    "movzx   eax, byte [rsp+0x11]",
    "mov     dword [r9], 0x148040",
    "add     ecx, ecx",
    "or      ecx, eax",
    "movzx   eax, byte [rsp+0x10]",
    "add     ecx, ecx",
    "or      ecx, eax",
    "lea     eax, [rcx+rcx]",
    "cdqe    ",
    "or      r8, rax",
    "mov     rax, r8",
    "mov     dword [r9+0x8], r8d",
    "shr     rax, 0x20",
    "mov     dword [r9+0x4], eax",
    "pop     rdi",
    "retn    "
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}