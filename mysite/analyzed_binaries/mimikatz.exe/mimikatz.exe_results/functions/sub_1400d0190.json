{
  "address": "0x1400d0190",
  "rules": [
    "decompress data using LZO/87c7a2ec75aa43fe877541de4275123a",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "read file on Windows",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rsi",
    "push    rdi",
    "sub     rsp, 0x30",
    "xor     edi, edi",
    "mov     rsi, rcx",
    "cmp     rcx, rdi",
    "jne     0x1400d01ce",
    "mov     eax, dword [rcx+0x18]",
    "test    al, 0x83",
    "je      0x1400d02df",
    "call    qword [rel _errno]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "xor     ecx, ecx",
    "mov     qword [rsp+0x20], rdi",
    "mov     dword [rax], 0x16",
    "call    sub_1400c9168",
    "jmp     0x1400d02df",
    "mov     eax, 0xffff",
    "test    al, 0x40",
    "jne     0x1400d02df",
    "test    al, 0x2",
    "je      0x1400d01f0",
    "or      eax, 0x1",
    "mov     dword [rcx+0x18], eax",
    "test    eax, 0x10c",
    "je      0x1400d01a9",
    "or      eax, 0x20",
    "mov     dword [rcx+0x18], eax",
    "jmp     0x1400d02df",
    "mov     rbx, qword [rcx+0x10]",
    "mov     qword [rcx], rbx",
    "call    qword [rel _fileno]",
    "mov     r8d, dword [rsi+0x24]",
    "mov     ecx, eax",
    "mov     rdx, rbx",
    "call    qword [rel _read]",
    "mov     dword [rsi+0x8], eax",
    "cmp     eax, edi",
    "je      0x1400d02cf",
    "neg     eax",
    "mov     dword [rsi+0x8], edi",
    "sbb     eax, eax",
    "and     eax, 0x10",
    "add     eax, 0x10",
    "or      dword [rsi+0x18], eax",
    "cmp     eax, 0x1",
    "je      0x1400d02cf",
    "cmp     eax, 0xffffffff",
    "je      0x1400d02cf",
    "test    byte [rsi+0x18], 0x82",
    "jne     0x1400d029f",
    "cmp     dword [rsi+0x24], 0x200",
    "jne     0x1400d02bc",
    "mov     rcx, rsi",
    "call    qword [rel _fileno]",
    "cmp     eax, 0xffffffff",
    "je      0x1400d0289",
    "mov     rcx, qword [rsi]",
    "add     dword [rsi+0x8], 0xfffffffe",
    "movzx   eax, word [rcx]",
    "add     rcx, 0x2",
    "mov     qword [rsi], rcx",
    "jmp     0x1400d02e4",
    "test    byte [rsi+0x18], 0x8",
    "je      0x1400d02bc",
    "mov     r11, qword [rel __badioinfo]",
    "mov     rcx, rsi",
    "call    qword [rel _fileno]",
    "cmp     eax, 0xfffffffe",
    "je      0x1400d0289",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rsi, qword [rsp+0x48]",
    "add     rsp, 0x30",
    "pop     rdi",
    "retn    ",
    "bt      dword [rsi+0x18], 0xa",
    "jb      0x1400d02bc",
    "bts     dword [rsi+0x18], 0xd",
    "mov     rcx, rsi",
    "call    qword [rel _fileno]",
    "mov     rbx, qword [rel __pioinfo]",
    "mov     rcx, rsi",
    "movsxd  rdi, eax",
    "sar     rdi, 0x5",
    "call    qword [rel _fileno]",
    "mov     r11d, eax",
    "and     r11d, 0x1f",
    "imul    r11, r11, 0x38",
    "add     r11, qword [rbx+rdi*8]",
    "jmp     0x1400d0290",
    "mov     dword [rsi+0x24], 0x1000",
    "mov     al, byte [r11+0x8]",
    "and     al, 0x82",
    "cmp     al, 0x82",
    "jne     0x1400d029f"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}