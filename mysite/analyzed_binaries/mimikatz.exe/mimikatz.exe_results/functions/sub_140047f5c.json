{
  "address": "0x140047f5c",
  "rules": [
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "write file on Windows/035d57bed47747649158312e9532f27d"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "mov     dword [rsp+0x20], r9d",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     r12b, byte [rsp+0x90]",
    "mov     ebx, dword [rdx]",
    "mov     rax, rcx",
    "mov     rcx, qword [rcx+0x10]",
    "mov     r14b, r12b",
    "mov     edi, r8d",
    "not     r14b",
    "mov     qword [rsp+0x78], rcx",
    "and     r14b, 0x1",
    "or      r14b, 0x4e",
    "cmp     byte [rax+0x23], 0x0",
    "jne     0x140047fab",
    "xor     esi, esi",
    "lea     r13, [rdx+0x8]",
    "test    ebx, ebx",
    "jle     0x1400480a8",
    "and     r12b, 0xfd",
    "mov     eax, ebx",
    "mov     rbx, qword [rsp+0x80]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     r15b, r12b",
    "and     r15b, 0x4",
    "test    r12b, 0x2",
    "je      0x140048018",
    "movzx   eax, word [r13+0x20]",
    "test    eax, eax",
    "jle     0x140047fed",
    "mov     rcx, qword [rsp+0x70]",
    "mov     r8d, edi",
    "mov     rdx, rbp",
    "call    sub_140046b4c",
    "mov     r11d, eax",
    "cmp     eax, edi",
    "je      0x14004808b",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "lea     edx, [r8+0x2]",
    "call    sub_140044e20",
    "test    eax, eax",
    "je      0x140048018",
    "test    r12b, 0x8",
    "je      0x140047fe3",
    "mov     rcx, qword [rsp+0x78]",
    "mov     r10, qword [rsp+0x78]",
    "cmp     r14b, 0x4e",
    "jne     0x140048074",
    "mov     rcx, qword [rsp+0x70]",
    "mov     r8d, edi",
    "mov     rdx, rbp",
    "call    sub_140047c84",
    "jmp     0x14004808b",
    "lea     r8d, [rax+r9-0x1]",
    "jmp     0x14004807a",
    "dec     esi",
    "dec     edi",
    "dec     ebx",
    "jmp     0x140048098",
    "mov     rbp, qword [r13]",
    "test    r15b, r15b",
    "je      0x140047fed",
    "mov     r8d, r11d",
    "mov     rcx, r10",
    "or      edx, 0xffffffff",
    "mov     rcx, r10",
    "call    sub_140032d34",
    "mov     r9, rax",
    "cmp     byte [rax], r14b",
    "jne     0x140048074",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, edi",
    "movzx   edx, r14b",
    "call    sub_140032364",
    "inc     esi",
    "inc     edi",
    "add     r13, 0x28",
    "cmp     esi, ebx",
    "jl      0x140047fc0",
    "mov     eax, dword [rax+0xc]",
    "mov     ecx, dword [r9+0x4]",
    "lea     edx, [rcx+rax+0x1]",
    "cmp     edx, r11d",
    "jne     0x140048074",
    "mov     ecx, dword [r9+0x8]",
    "lea     edx, [rcx+rax+0x1]",
    "cmp     edx, edi",
    "jne     0x140048074",
    "inc     eax",
    "mov     rcx, r10",
    "mov     dword [r9+0xc], eax",
    "jmp     0x140048090",
    "mov     r9d, dword [rsp+0x88]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}