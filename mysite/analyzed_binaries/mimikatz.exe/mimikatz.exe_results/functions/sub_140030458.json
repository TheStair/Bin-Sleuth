{
  "address": "0x140030458",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "contain loop",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572"
  ],
  "disassembly": [
    "mov     dword [rsp+0x20], r9d",
    "mov     qword [rsp+0x18], r8",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x38",
    "mov     rax, qword [rcx+0x8]",
    "mov     r15, rcx",
    "mov     ebp, edx",
    "mov     r11, qword [rax+0x8]",
    "mov     rax, qword [rcx+0x28]",
    "mov     ecx, dword [r11+0x30]",
    "mov     r10, qword [rax+0x8]",
    "mov     r12, qword [r11]",
    "movsxd  rax, dword [r10+0x30]",
    "mov     r8d, ecx",
    "mov     dword [rsp+0x80], ecx",
    "cmp     eax, ecx",
    "mov     r14, rax",
    "cmovl   r8d, eax",
    "xor     ebx, ebx",
    "mov     dword [rsp+0x88], r8d",
    "imul    rbp, rax",
    "cmp     eax, ecx",
    "je      0x1400304c2",
    "mov     rdi, rbp",
    "sub     rdi, r14",
    "jmp     0x1400305b8",
    "cmp     byte [r12+0x10], bl",
    "lea     eax, [rbx+0x8]",
    "cmovne  ebx, eax",
    "test    ebx, ebx",
    "je      0x1400304cd",
    "cmp     rdi, rbp",
    "jge     0x1400305c0",
    "mov     eax, ebx",
    "add     rsp, 0x38",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "and     qword [rsp+0x20], 0x0",
    "movsxd  r13, ecx",
    "mov     rax, rdi",
    "cqo     ",
    "idiv    r13",
    "mov     rsi, rdx",
    "xor     edx, edx",
    "lea     r10d, [rax+0x1]",
    "mov     rax, qword [r15+0x8]",
    "mov     rcx, qword [rax+0x8]",
    "mov     eax, 0x40000000",
    "div     dword [rcx+0x30]",
    "inc     eax",
    "cmp     r10d, eax",
    "je      0x1400305ae",
    "mov     ecx, dword [rsp+0x80]",
    "add     rdi, r13",
    "lea     r8, [rsp+0x20]",
    "xor     r9d, r9d",
    "mov     edx, r10d",
    "mov     rcx, r12",
    "call    qword [r12+0x108]",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14003059f",
    "mov     rcx, qword [rsp+0x20]",
    "test    rcx, rcx",
    "je      0x1400305ae",
    "mov     rcx, qword [rsp+0x20]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14003059f",
    "call    sub_14002242c",
    "mov     rax, qword [rsp+0x20]",
    "movsxd  r8, dword [rsp+0x88]",
    "add     rsi, qword [rax+0x8]",
    "mov     rax, rdi",
    "cqo     ",
    "mov     rcx, rsi",
    "idiv    r14",
    "add     rdx, qword [rsp+0x90]",
    "call    memcpy",
    "mov     r11, qword [rsp+0x20]",
    "mov     rax, qword [r11+0x10]",
    "mov     byte [rax], bl",
    "test    rdi, rdi",
    "jne     0x14003059f",
    "cmp     dword [rsp+0x98], edi",
    "jne     0x14003059f",
    "mov     rax, qword [r15+0x28]",
    "mov     rcx, qword [rax+0x8]",
    "mov     edx, dword [rcx+0x3c]",
    "mov     eax, edx",
    "mov     byte [rsi+0x1f], dl",
    "shr     eax, 0x18",
    "mov     byte [rsi+0x1c], al",
    "mov     eax, edx",
    "shr     eax, 0x10",
    "mov     byte [rsi+0x1d], al",
    "mov     eax, edx",
    "shr     eax, 0x8",
    "mov     byte [rsi+0x1e], al"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}