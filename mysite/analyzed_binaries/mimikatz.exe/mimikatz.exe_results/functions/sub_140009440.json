{
  "address": "0x140009440",
  "rules": [
    "encrypt or decrypt via WinCrypt",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "encrypt data using DES via WinAPI"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "mov     qword [r11+0x10], rbp",
    "mov     qword [r11+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x80",
    "mov     r14, qword [rsp+0xe0]",
    "mov     rsi, rcx",
    "lea     rax, [r11-0x58]",
    "mov     rcx, qword [r14]",
    "mov     r13, r9",
    "mov     qword [r11-0x80], rax",
    "xor     r12d, r12d",
    "xor     r9d, r9d",
    "and     dword [rsp+0x20], r12d",
    "call    qword [rel CryptImportKey]",
    "test    eax, eax",
    "je      0x14000983e",
    "mov     rcx, qword [r14]",
    "xor     edx, edx",
    "call    qword [rel CryptReleaseContext]",
    "lea     r11, [rsp+0x80]",
    "mov     eax, r12d",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x38]",
    "mov     rsi, qword [r11+0x40]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     eax, dword [rsi+0x4]",
    "lea     edi, [r12+0x40]",
    "mov     rdx, rax",
    "mov     ecx, edi",
    "mov     dword [rsp+0x40], eax",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x140009833",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel CryptDestroyKey]",
    "mov     r8d, dword [rsp+0x40]",
    "mov     rdx, qword [rsi+0x1c]",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     rcx, qword [rsp+0x50]",
    "lea     r11, [rsp+0x40]",
    "mov     qword [rsp+0x28], r11",
    "lea     ebp, [rdi-0x3f]",
    "xor     r9d, r9d",
    "xor     edx, edx",
    "mov     r8d, ebp",
    "mov     qword [rsp+0x20], rbx",
    "call    qword [rel CryptDecrypt]",
    "test    eax, eax",
    "je      0x140009816",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400ea4d0]  {u\"ERROR kull_m_dpapi_unprotect_dom\u2026\"}",
    "lea     rcx, [rel data_1400ea370]  {u\"\\nRSA decrypt is a success\\n\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rbx]",
    "lea     rcx, [rel data_1400ea3a8]  {u\" * MasterKey len: %u\\n\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rbx]",
    "mov     r15d, 0x100001",
    "lea     rcx, [rbx+0x8]",
    "mov     r8d, r15d",
    "call    sub_140012f68",
    "mov     edx, dword [rbx+0x4]",
    "lea     rcx, [rel data_1400ea3d8]  {u\" * SuppKey   len: %u\\n\"}",
    "call    sub_14000c030",
    "mov     r11d, dword [rbx]",
    "mov     edx, dword [rbx+0x4]",
    "lea     rcx, [r11+rbx+0x8]",
    "mov     r8d, r15d",
    "call    sub_140012f68",
    "mov     r11d, dword [rbx]",
    "mov     rcx, qword [r14]",
    "lea     rax, [rsp+0x58]",
    "lea     r8, [r11+rbx+0x8]",
    "lea     r9d, [r12+0x18]",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0x48]",
    "mov     edx, 0x6603",
    "mov     qword [rsp+0x28], rax",
    "and     dword [rsp+0x20], r12d",
    "call    sub_140003b18",
    "test    eax, eax",
    "je      0x14000982a",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "mov     eax, dword [rbx]",
    "mov     rcx, qword [rsp+0x48]",
    "xor     r9d, r9d",
    "lea     r8, [rax+rbx+0x20]",
    "mov     edx, ebp",
    "call    qword [rel CryptSetKeyParam]",
    "test    eax, eax",
    "je      0x1400097da",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400ea570]  {u\"ERROR kull_m_dpapi_unprotect_dom\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     eax, dword [rsi+0x8]",
    "mov     ecx, edi",
    "mov     rdx, rax",
    "mov     dword [rsp+0x40], eax",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1400097ee",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400ea610]  {u\"ERROR kull_m_dpapi_unprotect_dom\u2026\"}",
    "jmp     0x140009823",
    "mov     rcx, qword [rsp+0x48]",
    "call    qword [rel CryptDestroyKey]",
    "mov     rcx, qword [rsp+0x58]",
    "call    sub_140003d2c",
    "test    eax, eax",
    "jne     0x14000982a",
    "mov     r8d, dword [rsp+0x40]",
    "mov     rdx, qword [rsi+0x24]",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     rcx, qword [rsp+0x48]",
    "lea     r11, [rsp+0x40]",
    "mov     qword [rsp+0x28], r11",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     qword [rsp+0x20], rdi",
    "call    qword [rel CryptDecrypt]",
    "test    eax, eax",
    "je      0x1400097bb",
    "mov     edx, eax",
    "call    sub_14000c030",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400ea4d0]  {u\"ERROR kull_m_dpapi_unprotect_dom\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     eax, dword [rdi+0x4]",
    "lea     rcx, [rel data_1400ea410]  {u\"\\n3DES decrypt is a success too\\n\"}",
    "lea     r15, [rax+rdi+0x8]",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x40]",
    "mov     r8d, 0x100001",
    "mov     rcx, rdi",
    "call    sub_140012f68",
    "lea     rsi, [rel data_1400d27a8]",
    "mov     rcx, rsi",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400ea450]  {u\" * nonce    : \"}",
    "call    sub_14000c030",
    "mov     edx, dword [rdi+0x4]",
    "lea     rcx, [rdi+0x8]",
    "xor     r8d, r8d",
    "call    sub_140012f68",
    "mov     rcx, rsi",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400ea470]  {u\" * SID      : \"}",
    "call    sub_14000c030",
    "mov     rcx, r15",
    "call    sub_14001311c",
    "mov     rcx, rsi",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400ea490]  {u\" * SHA1     : \"}",
    "call    sub_14000c030",
    "mov     r11d, dword [rsp+0x40]",
    "lea     ebp, [r12+0x14]",
    "lea     rcx, [r11+rdi-0x14]",
    "xor     r8d, r8d",
    "mov     edx, ebp",
    "call    sub_140012f68",
    "mov     rcx, rsi",
    "call    sub_14000c030",
    "mov     r8d, dword [rsp+0x40]",
    "lea     r9, [rsp+0x60]",
    "add     r8d, 0xffffffec",
    "mov     rdx, rdi",
    "mov     ecx, 0x8004",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140003970",
    "test    eax, eax",
    "je      0x1400097cf",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "jmp     0x1400097ee",
    "lea     rcx, [rel data_1400ea4b0]  {u\" > Calc SHA1: \"}",
    "call    sub_14000c030",
    "lea     rcx, [rsp+0x60]",
    "xor     r8d, r8d",
    "mov     edx, ebp",
    "call    sub_140012f68",
    "mov     rcx, rsi",
    "call    sub_14000c030",
    "mov     r11d, dword [rsp+0x40]",
    "lea     rcx, [rsp+0x60]",
    "lea     rax, [r11+rdi-0x14]",
    "mov     rdx, qword [rax]",
    "cmp     rdx, qword [rcx]",
    "jne     0x14000970d",
    "\ud83d\udeab\ud83d\udeabsbb     eax, eax",
    "sbb     eax, 0xffffffff",
    "mov     rdx, qword [rax+0x8]",
    "cmp     rdx, qword [rcx+0x8]",
    "jne     0x14000970d",
    "mov     edx, dword [rbx]",
    "mov     rbp, qword [rsp+0xd0]",
    "lea     ecx, [rax+0x40]",
    "mov     dword [rbp], edx",
    "call    qword [rel LocalAlloc]",
    "mov     qword [r13], rax",
    "test    rax, rax",
    "je      0x1400097cf",
    "mov     edx, dword [rax+0x10]",
    "cmp     edx, dword [rcx+0x10]",
    "jne     0x14000970d",
    "mov     r8d, dword [rbp]",
    "lea     rdx, [rbx+0x8]",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     rsi, qword [rsp+0xd8]",
    "mov     rcx, r15",
    "and     qword [rsi], r12",
    "call    qword [rel GetLengthSid]",
    "mov     ecx, 0x40",
    "mov     edx, eax",
    "mov     dword [rsp+0x40], eax",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsi], rax",
    "test    rax, rax",
    "je      0x140009791",
    "xor     eax, eax",
    "jmp     0x140009712",
    "mov     rcx, qword [r13]",
    "test    rcx, rcx",
    "je      0x1400097a4",
    "mov     ecx, dword [rsp+0x40]",
    "mov     r8, r15",
    "mov     rdx, rax",
    "call    qword [rel CopySid]",
    "mov     r12d, eax",
    "test    eax, eax",
    "jne     0x1400097cf",
    "test    eax, eax",
    "jne     0x1400097cf",
    "mov     rcx, qword [rsi]",
    "test    rcx, rcx",
    "je      0x1400097b5",
    "call    qword [rel LocalFree]",
    "mov     qword [r13], rax",
    "and     dword [rbp], 0x0",
    "jmp     0x1400097cf",
    "call    qword [rel LocalFree]",
    "mov     qword [rsi], rax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}