{
  "address": "0x14002de54",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     rdi, qword [rcx+0x88]",
    "mov     esi, dword [rdx+0x28]",
    "mov     rbp, rcx",
    "add     esi, dword [rdx+0x24]",
    "movzx   ecx, word [rcx+0x44]",
    "mov     r14, rdx",
    "mov     rdx, qword [rbp+0x38]",
    "mov     qword [rax+0x8], rdi",
    "lea     rax, [rdx+rcx]",
    "cmp     rax, qword [rdi+0x58]",
    "ja      0x14002dfb0",
    "mov     ecx, 0x118cc",
    "call    sub_140084e38",
    "movzx   eax, word [rdi+0x12]",
    "add     rax, qword [rdi+0x50]",
    "cmp     rdx, rax",
    "jb      0x14002dfb0",
    "mov     dword [rsp+0x20], ecx",
    "xor     r9d, r9d",
    "mov     r8, r14",
    "mov     rcx, rdi",
    "call    sub_14002dd6c",
    "test    eax, eax",
    "jne     0x14002dfba",
    "mov     rbx, qword [rsp+0x68]",
    "mov     rbp, qword [rsp+0x70]",
    "mov     rsi, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "movzx   ebx, word [rbp+0x44]",
    "cmp     ebx, esi",
    "jne     0x14002ded7",
    "mov     r15, qword [rdi+0x48]",
    "mov     rcx, rbx",
    "add     rcx, qword [rbp+0x38]",
    "mov     edi, dword [r15+0x34]",
    "movzx   eax, byte [rcx+0x2]",
    "movzx   ebp, byte [rcx+0x1]",
    "shl     ebp, 0x8",
    "or      ebp, eax",
    "movzx   eax, byte [rcx]",
    "shl     eax, 0x18",
    "shl     ebp, 0x8",
    "or      ebp, eax",
    "movzx   eax, byte [rcx+0x3]",
    "or      ebp, eax",
    "sub     edi, 0x4",
    "xor     eax, eax",
    "jmp     0x14002dfba",
    "mov     r13, qword [rsp+0x60]",
    "mov     rax, qword [r13+0x70]",
    "cmp     word [rax+0x36], 0x1",
    "je      0x14002df3d",
    "lea     eax, [rdi+rbx]",
    "cmp     eax, esi",
    "jae     0x14002df68",
    "mov     ecx, 0x118df",
    "call    sub_140084e38",
    "jmp     0x14002df86",
    "mov     edi, esi",
    "sub     edi, ebx",
    "mov     rcx, qword [r13+0x50]",
    "movzx   eax, byte [rcx+0x2]",
    "movzx   ebp, byte [rcx+0x1]",
    "shl     ebp, 0x8",
    "or      ebp, eax",
    "movzx   eax, byte [rcx]",
    "shl     eax, 0x18",
    "shl     ebp, 0x8",
    "or      ebp, eax",
    "movzx   eax, byte [rcx+0x3]",
    "or      ebp, eax",
    "jmp     0x14002df6c",
    "mov     rcx, qword [r13+0x70]",
    "mov     r12d, eax",
    "test    rcx, rcx",
    "je      0x14002df97",
    "test    r12d, r12d",
    "jne     0x14002dfab",
    "call    sub_14002242c",
    "mov     rdx, qword [r13+0x50]",
    "mov     r9d, ebx",
    "mov     r8, r14",
    "mov     rcx, r13",
    "add     rdx, 0x4",
    "mov     dword [rsp+0x20], edi",
    "call    sub_14002dd6c",
    "mov     eax, r12d",
    "jmp     0x14002dfba",
    "add     ebx, edi",
    "cmp     ebx, esi",
    "jl      0x14002df07",
    "lea     r8, [rsp+0x60]",
    "xor     r9d, r9d",
    "mov     edx, ebp",
    "mov     rcx, r15",
    "call    sub_1400277d8",
    "test    eax, eax",
    "jne     0x14002dfba",
    "jmp     0x14002ded0"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}