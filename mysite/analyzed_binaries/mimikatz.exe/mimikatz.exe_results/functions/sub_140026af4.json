{
  "address": "0x140026af4",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using RSA via embedded library/285da8a69bb24628bf4dae1e6958a35f",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x48",
    "mov     rdi, qword [rcx+0x50]",
    "movzx   r8d, byte [rcx+0x9]",
    "movzx   r11d, word [rcx+0x12]",
    "mov     rax, qword [rcx+0x48]",
    "movzx   r10d, word [rcx+0x18]",
    "and     qword [rsp+0x20], 0x0",
    "mov     r9, rcx",
    "mov     ecx, dword [rax+0x34]",
    "movzx   eax, byte [rdi+r8+0x7]",
    "cmp     eax, edx",
    "lea     r14d, [r11+r10*2]",
    "mov     r15, rdi",
    "mov     qword [rsp+0x28], rdi",
    "mov     dword [rsp+0xa0], r11d",
    "mov     rbp, r8",
    "mov     dword [rsp+0x98], r14d",
    "jg      0x140026d29",
    "and     qword [rsp+0xa0], 0x0",
    "mov     ebx, ecx",
    "lea     edx, [rcx-0x4]",
    "mov     qword [rsp+0x30], r10",
    "test    r10d, r10d",
    "jle     0x140026e7c",
    "movzx   esi, byte [rdi+r8+0x1]",
    "movzx   eax, byte [rdi+r8+0x2]",
    "lea     r8d, [rcx-0x4]",
    "shl     esi, 0x8",
    "or      esi, eax",
    "cmp     esi, r8d",
    "jle     0x140026b82",
    "mov     rsi, qword [rsp+0x90]",
    "lea     r12, [r11+rdi]",
    "mov     r13d, ecx",
    "jmp     0x140026d56",
    "test    esi, esi",
    "je      0x140026d29",
    "mov     ecx, 0xfd47",
    "movzx   eax, byte [rdi+rbp+0x7]",
    "sub     eax, r14d",
    "add     eax, ebx",
    "cmp     eax, dword [rsi+0x14]",
    "je      0x140026e8e",
    "movzx   esi, byte [r12]",
    "movzx   eax, byte [r12+0x1]",
    "shl     esi, 0x8",
    "or      esi, eax",
    "cmp     esi, r14d",
    "jl      0x140026e72",
    "movsxd  rdx, esi",
    "movzx   eax, byte [rdx+rdi]",
    "movzx   r12d, byte [rdx+rdi+0x1]",
    "shl     eax, 0x8",
    "or      r12d, eax",
    "cmp     r12d, r8d",
    "jle     0x140026ba9",
    "add     rsp, 0x48",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     eax, ebx",
    "mov     byte [rdi+rbp+0x6], bl",
    "movsxd  rcx, r14d",
    "sar     eax, 0x8",
    "sub     ebx, r14d",
    "xor     edx, edx",
    "add     rcx, rdi",
    "movsxd  r8, ebx",
    "mov     byte [rdi+rbp+0x1], 0x0",
    "mov     byte [rdi+rbp+0x5], al",
    "mov     byte [rdi+rbp+0x2], 0x0",
    "call    memset",
    "xor     eax, eax",
    "mov     ecx, 0xfd92",
    "jmp     0x140026b78",
    "mov     ecx, 0xfd77",
    "jmp     0x140026b78",
    "cmp     esi, edx",
    "jg      0x140026e72",
    "test    r12d, r12d",
    "je      0x140026bc6",
    "mov     ecx, 0xfd4a",
    "jmp     0x140026b78",
    "call    sub_140084e38",
    "jmp     0x140026eba",
    "movsxd  rax, esi",
    "mov     rcx, r9",
    "lea     rdx, [rax+r15]",
    "mov     qword [rsp+0xa8], rax",
    "call    qword [r9+0x78]",
    "movzx   r15d, ax",
    "sub     ebx, r15d",
    "cmp     ebx, r14d",
    "jl      0x140026e68",
    "movzx   r13d, byte [rdx+rdi+0x2]",
    "movzx   r15d, byte [rdi+rbp+0x5]",
    "movsxd  rax, r14d",
    "add     rax, rdi",
    "shl     r13d, 0x8",
    "shl     r15d, 0x8",
    "mov     qword [rsp+0xa8], rax",
    "movzx   eax, byte [rdx+rdi+0x3]",
    "xor     r14d, r14d",
    "or      r13d, eax",
    "movzx   eax, byte [rdi+rbp+0x6]",
    "or      r15d, eax",
    "cmp     r15d, esi",
    "jl      0x140026c0a",
    "movsxd  rax, r12d",
    "cmp     byte [rax+rdi], 0x0",
    "jne     0x140026d29",
    "mov     ecx, 0xfd7d",
    "jmp     0x140026b78",
    "lea     eax, [r15+rsi]",
    "cmp     eax, r13d",
    "jg      0x140026e68",
    "test    r12d, r12d",
    "je      0x140026ca7",
    "mov     ecx, 0xfd52",
    "jmp     0x140026b78",
    "cmp     byte [rax+rdi+0x1], 0x0",
    "jne     0x140026d29",
    "mov     eax, ebx",
    "mov     byte [r12+0x1], bl",
    "sar     eax, 0x8",
    "cmp     qword [rsp+0x20], 0x0",
    "mov     byte [r12], al",
    "jne     0x140026e13",
    "lea     eax, [r13+rsi]",
    "cmp     eax, ecx",
    "jle     0x140026c75",
    "lea     edx, [r13+rsi]",
    "cmp     edx, r12d",
    "jle     0x140026c27",
    "mov     rsi, qword [rsp+0x90]",
    "cmp     ebx, esi",
    "mov     rsi, qword [rsp+0x90]",
    "je      0x140026e3b",
    "mov     eax, esi",
    "lea     ebx, [r15+r13]",
    "movsxd  rdx, r15d",
    "sub     eax, r15d",
    "movsxd  rcx, ebx",
    "add     rdx, rdi",
    "add     rcx, rdi",
    "movsxd  r8, eax",
    "call    memmove",
    "movsxd  r11, dword [rsp+0xa0]",
    "mov     rdx, qword [rsp+0xa8]",
    "add     r11, rdi",
    "jmp     0x140026cf7",
    "mov     ecx, 0xfd5b",
    "jmp     0x140026b78",
    "movsxd  rax, r12d",
    "movzx   r14d, byte [rax+rdi+0x2]",
    "movzx   eax, byte [rax+rdi+0x3]",
    "shl     r14d, 0x8",
    "or      r14d, eax",
    "lea     eax, [r14+r12]",
    "cmp     eax, ecx",
    "jle     0x140026c4e",
    "mov     ecx, 0xfd55",
    "jmp     0x140026b78",
    "mov     rcx, qword [rsp+0xa0]",
    "add     r12, 0x2",
    "lea     edx, [r13-0x4]",
    "inc     rcx",
    "cmp     rcx, qword [rsp+0x30]",
    "mov     qword [rsp+0xa0], rcx",
    "jl      0x140026d4e",
    "mov     r15, qword [rsp+0x28]",
    "mov     rax, qword [rsi+0x48]",
    "movzx   edx, byte [rdi+rbp+0x5]",
    "mov     rcx, qword [rax]",
    "movzx   eax, byte [rdi+rbp+0x6]",
    "shl     edx, 0x8",
    "mov     r9, qword [rcx+0x110]",
    "or      edx, eax",
    "mov     eax, r15d",
    "sub     eax, edx",
    "movsxd  rcx, edx",
    "mov     qword [rsp+0x20], r9",
    "add     eax, ebx",
    "lea     rdx, [rcx+rdi]",
    "add     rcx, r9",
    "movsxd  r8, eax",
    "call    memcpy",
    "mov     rax, qword [rsp+0x20]",
    "mov     qword [rsp+0x28], rax",
    "jmp     0x140026e1b",
    "cmp     r11, rdx",
    "jb      0x140026cba",
    "mov     eax, r12d",
    "movsxd  rdx, edx",
    "lea     ebx, [r13+r14]",
    "sub     eax, r13d",
    "add     rdx, rdi",
    "sub     eax, esi",
    "movsxd  r8, eax",
    "lea     eax, [rbx+rsi]",
    "movsxd  rcx, eax",
    "add     rcx, rdi",
    "call    memmove",
    "mov     r13d, ebx",
    "mov     ecx, 0xfd57",
    "jmp     0x140026b78",
    "mov     r9, qword [rsp+0x90]",
    "jmp     0x140026e84",
    "mov     rdx, qword [rsp+0xa8]",
    "mov     r8, r15",
    "mov     r15, qword [rsp+0x28]",
    "movsxd  rcx, ebx",
    "add     rdx, r15",
    "add     rcx, rdi",
    "call    memcpy",
    "jmp     0x140026e40",
    "movzx   ecx, byte [r11]",
    "movzx   eax, byte [r11+0x1]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "cmp     ecx, esi",
    "jge     0x140026cdc",
    "mov     r14d, dword [rsp+0x98]",
    "mov     rsi, qword [rsp+0x90]",
    "mov     byte [rdi+rbp+0x7], 0x0",
    "jmp     0x140026d0c",
    "cmp     ecx, r12d",
    "jge     0x140026cf3",
    "lea     eax, [rcx+r13]",
    "sar     eax, 0x8",
    "mov     byte [r11], al",
    "lea     eax, [rcx+r13]",
    "jmp     0x140026cef",
    "add     r11, 0x2",
    "lea     eax, [rcx+r14]",
    "sar     eax, 0x8",
    "mov     byte [r11], al",
    "lea     eax, [rcx+r14]",
    "mov     byte [r11+0x1], al"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}