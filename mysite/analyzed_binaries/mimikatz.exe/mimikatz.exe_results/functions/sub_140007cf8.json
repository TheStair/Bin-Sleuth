{
  "address": "0x140007cf8",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "xor     edi, edi",
    "mov     r12d, edx",
    "mov     rbp, rcx",
    "test    rcx, rcx",
    "je      0x140007e44",
    "mov     rax, rdi",
    "mov     rbx, qword [rsp+0x68]",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "lea     ebx, [rdi+0x40]",
    "lea     edx, [rdi+0x24]",
    "mov     ecx, ebx",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140007e44",
    "mov     rcx, qword [r12+rbp-0x18]",
    "lea     esi, [rbx-0x28]",
    "mov     qword [rax], rcx",
    "mov     rcx, qword [r12+rbp-0x10]",
    "mov     edx, esi",
    "mov     qword [rax+0x8], rcx",
    "mov     rcx, qword [r12+rbp-0x8]",
    "mov     qword [rax+0x10], rcx",
    "mov     eax, dword [rax+0x14]",
    "cmp     r12d, esi",
    "jbe     0x140007d79",
    "mov     edx, dword [rdi+0x20]",
    "mov     ecx, ebx",
    "shl     rdx, 0x3",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rdi+0x18], rax",
    "test    rax, rax",
    "je      0x140007e44",
    "test    eax, eax",
    "je      0x140007d79",
    "mov     r13d, dword [rdi+0x14]",
    "cmp     r12d, esi",
    "jbe     0x140007e44",
    "lea     ecx, [rdx+rax]",
    "mov     rax, r12",
    "sub     rax, rcx",
    "mov     eax, dword [rax+rbp+0x14]",
    "inc     dword [rdi+0x20]",
    "add     edx, eax",
    "cmp     edx, r12d",
    "jb      0x140007d5e",
    "and     qword [rsp+0x60], 0x0",
    "lea     ecx, [r13+rsi]",
    "mov     rbx, r12",
    "xor     r15d, r15d",
    "sub     rbx, rcx",
    "add     rbx, rbp",
    "je      0x140007e1e",
    "mov     rcx, qword [rsp+0x60]",
    "mov     rax, qword [rdi+0x18]",
    "mov     qword [rcx+rax], r15",
    "mov     r13d, dword [rbx+0x14]",
    "add     rcx, 0x8",
    "add     esi, r13d",
    "mov     qword [rsp+0x60], rcx",
    "cmp     esi, r12d",
    "jb      0x140007da8",
    "lea     edx, [r15+0x58]",
    "lea     ecx, [rdx-0x18]",
    "call    qword [rel LocalAlloc]",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x140007e1e",
    "test    r13d, r13d",
    "je      0x140007e44",
    "mov     rcx, rax",
    "mov     rdx, rbx",
    "mov     r8d, 0x44",
    "call    memcpy",
    "mov     edx, dword [r15+0x24]",
    "lea     r11, [rbx+0x44]",
    "sub     r13d, edx",
    "lea     rcx, [r15+0x44]",
    "lea     r8, [rdx+r11]",
    "sub     r13d, 0x44",
    "mov     qword [r15+0x4c], r8",
    "mov     qword [rcx], r11",
    "mov     dword [r15+0x54], r13d",
    "call    sub_1400131d0",
    "mov     edx, dword [r15+0x54]",
    "lea     rcx, [r15+0x4c]",
    "call    sub_1400131d0"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}