{
  "address": "0x1400afeec",
  "rules": [
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "create thread",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rsi",
    "push    rdi",
    "sub     rsp, 0x80",
    "and     qword [rsp+0x20], 0x0",
    "lea     r8, [rel data_140119db0]  {u\"stop\"}",
    "xor     r9d, r9d",
    "mov     rdi, rdx",
    "mov     esi, ecx",
    "call    sub_140013220",
    "test    eax, eax",
    "jne     0x1400b0097",
    "and     dword [rel data_1401407a8], 0x0",
    "xor     ecx, ecx",
    "call    qword [rel RpcMgmtStopServerListening]",
    "test    eax, eax",
    "je      0x1400b00b8",
    "lea     edx, [rax+0x38]",
    "lea     ecx, [rax+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400b00b8",
    "lea     r11, [rsp+0x80]",
    "xor     eax, eax",
    "mov     rbx, qword [r11+0x10]",
    "mov     rsi, qword [r11+0x18]",
    "mov     rsp, r11",
    "pop     rdi",
    "retn    ",
    "lea     rcx, [rel data_14011d5e0]  {u\"ERROR kuhl_m_rpc_server ; RpcMgm\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     dword [rsp+0x60], 0x1",
    "lea     rcx, [rax+0x28]",
    "lea     rax, [rel data_14013f634]",
    "mov     qword [rsp+0x58], rax",
    "and     qword [rsp+0x50], 0x0",
    "and     qword [rsp+0x48], 0x0",
    "mov     dword [rsp+0x40], 0x9",
    "mov     qword [rsp+0x38], rcx",
    "and     qword [rsp+0x30], 0x0",
    "lea     rax, [rsp+0x70]",
    "lea     r9, [rsp+0xa0]",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0xa8]",
    "mov     rdx, rdi",
    "mov     ecx, esi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140010594",
    "mov     rdx, qword [rsp+0xa0]",
    "mov     rcx, rbx",
    "call    sub_1400134d4",
    "mov     rdx, qword [rsp+0xa8]",
    "test    rdx, rdx",
    "je      0x1400affc1",
    "mov     rdx, qword [rsp+0x70]",
    "test    rdx, rdx",
    "je      0x1400affd4",
    "lea     rcx, [rbx+0x8]",
    "call    sub_1400134d4",
    "and     qword [rsp+0x20], 0x0",
    "lea     r8, [rel data_14011d540]  {u\"noreg\"}",
    "xor     r9d, r9d",
    "mov     rdx, rdi",
    "mov     ecx, esi",
    "call    sub_140013220",
    "xor     ecx, ecx",
    "lea     rdx, [rel data_1400ec368]",
    "test    eax, eax",
    "lea     rax, [rel data_1400ec360]",
    "sete    cl",
    "test    ecx, ecx",
    "mov     dword [rbx+0x18], ecx",
    "lea     rcx, [rel data_14011d550]  {u\"Map Reg.: %s\\n\"}",
    "cmovne  rdx, rax",
    "call    sub_14000c030",
    "and     qword [rsp+0x20], 0x0",
    "lea     r8, [rel data_14011d570]  {u\"secure\"}",
    "xor     r9d, r9d",
    "mov     rdx, rdi",
    "mov     ecx, esi",
    "call    sub_140013220",
    "lea     rdx, [rel data_14011d598]  {u\"Allow no auth\"}",
    "neg     eax",
    "lea     rax, [rel data_14011d580]  {u\"Secure only\"}",
    "sbb     ecx, ecx",
    "and     ecx, 0xfffffff8",
    "add     ecx, 0x10",
    "test    cl, 0x8",
    "mov     dword [rbx+0x2c], ecx",
    "lea     rcx, [rel data_14011d5b8]  {u\"Security: %s\\n\"}",
    "cmovne  rdx, rax",
    "call    sub_14000c030",
    "and     qword [rsp+0x28], 0x0",
    "and     dword [rsp+0x20], 0x0",
    "lea     r11, [rel sub_1400104ac]",
    "lea     rax, [rel data_14013f630]",
    "lea     r8, [rel sub_1400afc94]",
    "mov     r9, rbx",
    "xor     edx, edx",
    "xor     ecx, ecx",
    "mov     qword [rbx+0x30], r11",
    "mov     qword [rbx+0x20], rax",
    "call    qword [rel CreateThread]",
    "jmp     0x1400b00b8",
    "lea     rcx, [rbx+0x10]",
    "call    sub_1400134d4"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}