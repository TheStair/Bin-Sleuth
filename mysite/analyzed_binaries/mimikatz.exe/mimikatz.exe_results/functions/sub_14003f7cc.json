{
  "address": "0x14003f7cc",
  "rules": [
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "hash data using fnv/628d667c74574c3a8ee33aa4d0133bda",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     rax, qword [rcx+0x10]",
    "mov     r13, qword [rcx+0x8]",
    "mov     rdi, rcx",
    "movsxd  r12, dword [rax+0x4]",
    "mov     r14, rdx",
    "lea     rcx, [r12+r12*4]",
    "mov     rsi, r12",
    "shl     rcx, 0x4",
    "add     rcx, qword [rdi+0x18]",
    "call    sub_14003ebc8",
    "xor     ebx, ebx",
    "cmp     eax, ebx",
    "jne     0x14003f964",
    "mov     rbx, qword [rsp+0x68]",
    "mov     rbp, qword [rsp+0x70]",
    "mov     rsi, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "or      rsi, 0x1",
    "mov     rax, r12",
    "mov     dword [rsp+0x60], ebx",
    "and     eax, 0xfffe",
    "lea     rsi, [rsi+rsi*4]",
    "lea     rbp, [rax+rax*4]",
    "mov     eax, dword [rdi]",
    "shl     rsi, 0x4",
    "add     rsi, qword [rdi+0x18]",
    "add     eax, r12d",
    "shl     rbp, 0x4",
    "add     rbp, qword [rdi+0x18]",
    "cdq     ",
    "sub     eax, edx",
    "sar     eax, 0x1",
    "cmp     eax, ebx",
    "mov     r12d, eax",
    "jle     0x14003f93e",
    "mov     rax, qword [rdi+0x10]",
    "movsxd  rcx, dword [rax+0x4]",
    "mov     rax, qword [rdi+0x18]",
    "lea     rdx, [rcx+rcx*4]",
    "add     rdx, rdx",
    "cmp     qword [rax+rdx*8+0x18], rbx",
    "mov     rax, qword [r13+0x18]",
    "movzx   eax, byte [rax+0x13]",
    "sete    bl",
    "mov     dword [r14], ebx",
    "mov     r15, 0x6666666666666667",
    "cmp     qword [rbp+0x18], rbx",
    "mov     eax, dword [rsp+0x60]",
    "movsxd  r8, r12d",
    "cmovne  eax, ebx",
    "mov     rcx, rsi",
    "sub     rcx, qword [rdi+0x18]",
    "mov     dword [rsp+0x60], eax",
    "mov     rax, r15",
    "imul    rcx",
    "sar     rdx, 0x5",
    "mov     rax, rdx",
    "shr     rax, 0x3f",
    "add     rdx, rax",
    "mov     rax, qword [rdi+0x10]",
    "mov     dword [rax+r8*4], edx",
    "mov     rax, qword [rdi+0x10]",
    "xor     r8, 0x1",
    "movsxd  rcx, dword [rax+r8*4]",
    "lea     rbp, [rcx+rcx*4]",
    "shl     rbp, 0x4",
    "add     rbp, qword [rdi+0x18]",
    "cmp     qword [rsi+0x18], rbx",
    "je      0x14003f89a",
    "cmp     qword [rbp+0x18], rbx",
    "je      0x14003f8de",
    "movsxd  r8, r12d",
    "mov     rcx, rbp",
    "mov     rax, r15",
    "sub     rcx, qword [rdi+0x18]",
    "imul    rcx",
    "sar     rdx, 0x5",
    "mov     rax, rdx",
    "shr     rax, 0x3f",
    "add     rdx, rax",
    "mov     rax, qword [rdi+0x10]",
    "mov     dword [rax+r8*4], edx",
    "mov     rax, qword [rdi+0x10]",
    "xor     r8, 0x1",
    "movsxd  rcx, dword [rax+r8*4]",
    "mov     dword [rsp+0x60], ebx",
    "lea     rsi, [rcx+rcx*4]",
    "shl     rsi, 0x4",
    "add     rsi, qword [rdi+0x18]",
    "jmp     0x14003f92b",
    "mov     eax, dword [rsi+0x14]",
    "mov     r9d, dword [rbp+0x14]",
    "mov     r8, qword [rbp+0x28]",
    "mov     dword [rsp+0x28], eax",
    "mov     rax, qword [rsi+0x28]",
    "lea     rdx, [rsp+0x60]",
    "mov     rcx, r13",
    "mov     qword [rsp+0x20], rax",
    "call    qword [r13+0x40]",
    "cmp     eax, ebx",
    "jl      0x14003f89a",
    "mov     eax, r12d",
    "cdq     ",
    "sub     eax, edx",
    "sar     eax, 0x1",
    "cmp     eax, ebx",
    "mov     r12d, eax",
    "jg      0x14003f85f",
    "jne     0x14003f8de",
    "cmp     rbp, rsi",
    "jae     0x14003f8de"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}