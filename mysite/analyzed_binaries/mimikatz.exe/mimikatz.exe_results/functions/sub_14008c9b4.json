{
  "address": "0x14008c9b4",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "contain loop"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x20], rbx",
    "mov     qword [r11+0x18], r8",
    "mov     dword [rsp+0x10], edx",
    "mov     qword [r11+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xb0",
    "mov     rbp, qword [rsp+0x110]",
    "mov     esi, r9d",
    "xor     r13d, r13d",
    "and     qword [r11-0x60], r13",
    "and     qword [r11-0x50], r13",
    "lea     rax, [rel data_1400e5b78]  {u\"mimikatz\"}",
    "xor     ebx, ebx",
    "lea     r8, [rel data_1400fd360]  {u\"unprotect\"}",
    "xor     r14d, r14d",
    "and     qword [rsp+0x20], rbx",
    "mov     rdx, rbp",
    "xor     r9d, r9d",
    "mov     ecx, esi",
    "mov     dword [rsp+0x74], r13d",
    "mov     dword [r11-0x58], 0x18",
    "mov     dword [r11-0x54], 0xb",
    "mov     qword [r11-0x48], rax",
    "mov     qword [r11-0x70], rbx",
    "mov     qword [r11-0x68], r14",
    "xor     r12d, r12d",
    "xor     r15d, r15d",
    "call    sub_140013220",
    "and     qword [rsp+0x20], rbx",
    "lea     r9, [rsp+0x68]",
    "lea     r8, [rel data_1400fbba8]  {u\"masterkey\"}",
    "mov     rdx, rbp",
    "mov     ecx, esi",
    "mov     dword [rsp+0x70], eax",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14008ca9c",
    "and     qword [rsp+0x20], r13",
    "lea     r9, [rsp+0x88]",
    "lea     r8, [rel data_1400fc488]  {u\"password\"}",
    "mov     rdx, rbp",
    "mov     ecx, esi",
    "call    sub_140013220",
    "and     qword [rsp+0x20], r13",
    "lea     r9, [rsp+0x78]",
    "lea     r8, [rel data_1400fbfa8]  {u\"entropy\"}",
    "mov     rdx, rbp",
    "mov     ecx, esi",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14008cb1d",
    "mov     rdi, qword [rsp+0x68]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "repne scasw word [rdi]",
    "not     rcx",
    "dec     rcx",
    "mov     r12, rcx",
    "mov     dword [rsp+0x60], ecx",
    "test    cl, 0x1",
    "jne     0x14008ca9c",
    "and     qword [rsp+0x20], r13",
    "lea     r8, [rel data_1400fbfc8]  {u\"prompt\"}",
    "xor     r9d, r9d",
    "mov     rdx, rbp",
    "mov     ecx, esi",
    "call    sub_140013220",
    "lea     rcx, [rsp+0x90]",
    "lea     r8, [rel data_1400fbfb8]  {u\"machine\"}",
    "neg     eax",
    "mov     rdx, rbp",
    "sbb     rax, rax",
    "and     qword [rsp+0x20], r13",
    "xor     r9d, r9d",
    "and     rax, rcx",
    "mov     ecx, esi",
    "mov     qword [rsp+0x80], rax",
    "call    sub_140013220",
    "xor     ebp, ebp",
    "lea     ecx, [rbp+0x4]",
    "test    eax, eax",
    "cmovne  ebp, ecx",
    "mov     rcx, qword [rsp+0xf0]",
    "mov     dword [rsp+0x60], ebp",
    "call    sub_140006e44",
    "mov     qword [rsp+0x68], rax",
    "test    rax, rax",
    "je      0x14008cd7f",
    "mov     rdi, qword [rsp+0x78]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "repne scasw word [rdi]",
    "not     rcx",
    "dec     rcx",
    "mov     r15, rcx",
    "mov     dword [rsp+0x60], ecx",
    "test    cl, 0x1",
    "jne     0x14008cb1d",
    "mov     rcx, qword [rsp+0x68]",
    "lea     r8, [rsp+0x60]",
    "lea     rdx, [rsp+0x78]",
    "call    sub_140012ed0",
    "mov     rbx, qword [rsp+0x78]",
    "mov     r12d, dword [rsp+0x60]",
    "test    r14, r14",
    "je      0x14008cd8d",
    "mov     rdi, qword [rel data_14013c8d8]",
    "lea     r9, [rel data_14013c8d8]",
    "cmp     rdi, r9",
    "je      0x14008cbcf",
    "mov     rcx, qword [rsp+0x78]",
    "lea     r8, [rsp+0x60]",
    "lea     rdx, [rsp+0x80]",
    "call    sub_140012ed0",
    "mov     r14, qword [rsp+0x80]",
    "mov     r15d, dword [rsp+0x60]",
    "test    rbx, rbx",
    "je      0x14008cd9b",
    "mov     rcx, r14",
    "call    qword [rel LocalFree]",
    "xor     edi, edi",
    "lea     r8, [rax+0x18]",
    "mov     eax, r13d",
    "mov     rbx, qword [rsp+0x108]",
    "add     rsp, 0xb0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "mov     esi, dword [rsp+0x70]",
    "test    rbx, rbx",
    "je      0x14008cbe0",
    "\ud83d\udeab\ud83d\udeabsbb     eax, eax",
    "sbb     eax, 0xffffffff",
    "mov     rdx, qword [r8+0x8]",
    "cmp     rdx, qword [rdi+0x18]",
    "jne     0x14008cbbe",
    "test    esi, esi",
    "je      0x14008cc1b",
    "lea     rcx, [rel data_1400f13d8]",
    "call    sub_14000c030",
    "mov     esi, dword [rsp+0x70]",
    "test    esi, esi",
    "je      0x14008cd72",
    "test    r12d, r12d",
    "jne     0x14008cbee",
    "test    rdi, rdi",
    "jne     0x14008cbee",
    "mov     rdi, qword [rdi]",
    "cmp     rdi, r9",
    "jne     0x14008cba7",
    "xor     eax, eax",
    "jmp     0x14008cbc3",
    "test    rdi, rdi",
    "je      0x14008cc34",
    "lea     rcx, [rel data_1400fd380]  {u\" * using CryptUnprotectData API\\n\"}",
    "call    sub_14000c030",
    "mov     rdi, qword [rsp+0x68]",
    "jmp     0x14008cbf2",
    "mov     rdx, qword [r8]",
    "cmp     rdx, qword [rdi+0x10]",
    "jne     0x14008cbbe",
    "test    eax, eax",
    "je      0x14008cbd1",
    "lea     r13, [rel data_1400d27a8]",
    "test    rbx, rbx",
    "je      0x14008cc62",
    "lea     rcx, [rel data_1400fd3c8]  {u\" * volatile cache: \"}",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    sub_14008d234",
    "mov     rdx, qword [rsp+0x138]",
    "test    rdx, rdx",
    "je      0x14008cc0b",
    "mov     rsi, qword [rsp+0x80]",
    "test    rsi, rsi",
    "je      0x14008cc8d",
    "lea     rcx, [rel data_1400fd3f0]  {u\" * masterkey     : \"}",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "mov     edx, r12d",
    "mov     rcx, rbx",
    "call    sub_140012f68",
    "mov     rcx, r13",
    "call    sub_14000c030",
    "or      ebp, 0x1",
    "mov     dword [rsp+0x60], ebp",
    "lea     rcx, [rel data_1400fd418]  {u\" > prompt flags  : \"}",
    "call    sub_14000c030",
    "mov     ecx, dword [rsi+0x4]",
    "call    sub_140009b44",
    "mov     rcx, r13",
    "call    sub_14000c030",
    "jmp     0x14008cc94",
    "mov     r13, qword [rsp+0x88]",
    "test    r13, r13",
    "je      0x14008ccd7",
    "lea     rcx, [rel data_1400fd440]  {u\" > entropy       : \"}",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "mov     edx, r15d",
    "mov     rcx, r14",
    "call    sub_140012f68",
    "mov     rcx, r13",
    "call    sub_14000c030",
    "test    r14, r14",
    "je      0x14008ccbb",
    "mov     ebp, dword [rsp+0x120]",
    "mov     rsi, qword [rsp+0x118]",
    "test    rdi, rdi",
    "je      0x14008cdb9",
    "lea     rcx, [rel data_1400fd468]  {u\" > password      : %s\\n\"}",
    "mov     rdx, r13",
    "call    sub_14000c030",
    "mov     rdi, qword [rsp+0x130]",
    "test    rsi, rsi",
    "je      0x14008ccfa",
    "cmp     dword [rsp+0x70], 0x0",
    "je      0x14008ced4",
    "test    r12d, r12d",
    "jne     0x14008cdd6",
    "mov     ecx, r15d",
    "mov     ecx, ebp",
    "test    ebp, ebp",
    "jne     0x14008ccfd",
    "mov     r13d, dword [rsp+0x74]",
    "jmp     0x14008cd72",
    "test    rsi, rsi",
    "je      0x14008cdeb",
    "mov     r9, r14",
    "mov     r9, rsi",
    "test    ebp, ebp",
    "jne     0x14008cd0c",
    "test    rsi, rsi",
    "je      0x14008cd09",
    "mov     rsi, r14",
    "test    ebp, ebp",
    "je      0x14008cde2",
    "test    rbx, rbx",
    "je      0x14008cdcb",
    "mov     r13d, eax",
    "mov     r8, qword [rsp+0x100]",
    "mov     edx, dword [rsp+0xf8]",
    "mov     qword [rsp+0x58], r13",
    "mov     dword [rsp+0x50], 0x14",
    "lea     rax, [rdi+0x20]",
    "mov     rdi, qword [rsp+0x130]",
    "mov     qword [rsp+0x48], rax",
    "mov     rax, qword [rsp+0x128]",
    "mov     qword [rsp+0x40], rdi",
    "mov     qword [rsp+0x38], rax",
    "and     dword [rsp+0x30], 0x0",
    "and     qword [rsp+0x28], 0x0",
    "mov     dword [rsp+0x20], ecx",
    "mov     rcx, qword [rsp+0xf0]",
    "call    sub_140008744",
    "mov     dword [rsp+0x74], eax",
    "test    eax, eax",
    "je      0x14008cdc1",
    "test    rbx, rbx",
    "jne     0x14008cd72",
    "mov     rdi, qword [rsp+0x68]",
    "test    rbx, rbx",
    "je      0x14008cd77",
    "test    rsi, rsi",
    "je      0x14008cdeb",
    "mov     r15d, ebp",
    "call    qword [rel GetLastError]",
    "cmp     eax, 0x8009000b",
    "jne     0x14008cebb",
    "mov     rcx, rdi",
    "call    sub_140006f80",
    "test    r12d, r12d",
    "je      0x14008cd77",
    "test    ebp, ebp",
    "jne     0x14008cdee",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400fd550]  {u\"ERROR kuhl_m_dpapi_unprotect_raw\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x14008cd72",
    "lea     rcx, [rel data_1400fd4a0]  {u\"ERROR kuhl_m_dpapi_unprotect_raw\u2026\"}",
    "call    sub_14000c030",
    "mov     rdi, qword [rsp+0x68]",
    "lea     rcx, [rdi+0x18]",
    "call    sub_1400130e8",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "jmp     0x14008cd77",
    "lea     rcx, [rdi+0x18]",
    "mov     r8d, r12d",
    "mov     rdx, rbx",
    "call    sub_14008d0c4",
    "jmp     0x14008cd77",
    "mov     rax, qword [rsp+0x128]",
    "mov     r8, qword [rsp+0x100]",
    "mov     edx, dword [rsp+0xf8]",
    "mov     rcx, qword [rsp+0xf0]",
    "mov     qword [rsp+0x58], r13",
    "mov     dword [rsp+0x50], r12d",
    "mov     qword [rsp+0x48], rbx",
    "mov     qword [rsp+0x40], rdi",
    "mov     qword [rsp+0x38], rax",
    "mov     eax, dword [rsp+0x60]",
    "mov     r9, rsi",
    "mov     dword [rsp+0x30], eax",
    "mov     rax, qword [rsp+0x80]",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140008744",
    "mov     r13d, eax",
    "test    eax, eax",
    "je      0x14008ce7a"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}