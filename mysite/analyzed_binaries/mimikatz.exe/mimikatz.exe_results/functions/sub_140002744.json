{
  "address": "0x140002744",
  "rules": [
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "mov     qword [rax+0x8], rcx",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "mov     rbp, rdx",
    "mov     r15, rcx",
    "mov     edx, r8d",
    "xor     edi, edi",
    "shl     rdx, 0x3",
    "mov     r12d, r8d",
    "lea     ecx, [rdi+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rbp], rax",
    "test    rax, rax",
    "je      0x14000283c",
    "mov     rcx, qword [rbp]",
    "mov     edx, r12d",
    "call    sub_14000286c",
    "and     qword [rbp], 0x0",
    "xor     r13d, r13d",
    "xor     r14d, r14d",
    "lea     edi, [r13+0x1]",
    "test    r12d, r12d",
    "je      0x14000284d",
    "mov     rbx, qword [rsp+0x58]",
    "mov     rbp, qword [rsp+0x60]",
    "mov     rsi, qword [rsp+0x68]",
    "mov     eax, edi",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "xor     esi, esi",
    "mov     edx, 0x1c",
    "mov     ebx, r14d",
    "lea     ecx, [rdx+0x24]",
    "add     rbx, r15",
    "call    qword [rel LocalAlloc]",
    "mov     r15, rax",
    "test    rax, rax",
    "je      0x1400027fd",
    "mov     rax, qword [rbp]",
    "mov     qword [rsi+rax], r15",
    "mov     rax, qword [rbp]",
    "cmp     qword [rsi+rax], 0x0",
    "je      0x140002821",
    "mov     rax, qword [rbx]",
    "lea     r8, [rbx+0x8]",
    "lea     rcx, [r15+0x8]",
    "mov     qword [r15], rax",
    "mov     edx, dword [r15+0x4]",
    "mov     qword [rcx], r8",
    "mov     eax, dword [rdx+r8]",
    "mov     dword [r15+0x10], eax",
    "lea     rax, [rdx+r8+0x4]",
    "mov     qword [r15+0x14], rax",
    "call    sub_1400131d0",
    "mov     edx, dword [r15+0x10]",
    "lea     rcx, [r15+0x14]",
    "call    sub_1400131d0",
    "xor     edi, edi",
    "mov     rax, qword [rsi+rax]",
    "mov     ecx, dword [rax+0x10]",
    "add     ecx, dword [rax+0x4]",
    "lea     r14d, [r14+rcx+0xc]",
    "jmp     0x140002823",
    "test    edi, edi",
    "je      0x14000283c",
    "test    edi, edi",
    "jne     0x14000284d",
    "mov     r15, qword [rsp+0x50]",
    "inc     r13d",
    "add     rsi, 0x8",
    "cmp     r13d, r12d",
    "jb      0x1400027a1"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}