{
  "address": "0x140067034",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x70",
    "mov     rdi, rdx",
    "xor     edx, edx",
    "mov     rsi, rcx",
    "cmp     rdi, rdx",
    "jne     0x14006705c",
    "mov     ebp, 0x1",
    "test    byte [rdi+0x4], bpl",
    "je      0x140067078",
    "xor     eax, eax",
    "jmp     0x140067243",
    "cmp     byte [rdi], 0xa2",
    "jne     0x1400671c0",
    "movsx   eax, word [rdi+0x30]",
    "cmp     eax, dword [rcx+0x8]",
    "jne     0x140067078",
    "lea     r11, [rsp+0x70]",
    "mov     rbx, qword [r11+0x10]",
    "mov     rbp, qword [r11+0x18]",
    "mov     rsi, qword [r11+0x20]",
    "mov     rsp, r11",
    "pop     rdi",
    "retn    ",
    "cmp     byte [rdi], 0xae",
    "jne     0x1400671d3",
    "mov     eax, dword [rcx+0x8]",
    "cmp     dword [rdi+0x28], eax",
    "jne     0x1400671c0",
    "movzx   eax, word [rcx+0xc]",
    "mov     word [rdi+0x30], ax",
    "mov     rdx, qword [rdi+0x10]",
    "call    sub_140067034",
    "mov     rdx, qword [rdi+0x18]",
    "mov     rcx, rsi",
    "mov     qword [rdi+0x10], rax",
    "call    sub_140067034",
    "bt      dword [rdi+0x4], 0xb",
    "mov     rdx, qword [rdi+0x20]",
    "mov     rcx, rsi",
    "mov     qword [rdi+0x18], rax",
    "jae     0x140067208",
    "mov     eax, dword [rcx+0x8]",
    "cmp     dword [rdi+0x28], eax",
    "jne     0x1400671d3",
    "cmp     word [rdi+0x2c], dx",
    "jge     0x14006709b",
    "call    sub_14006725c",
    "mov     r8d, ebp",
    "call    sub_1400672b4",
    "jmp     0x14006720d",
    "mov     eax, dword [rcx+0xc]",
    "mov     dword [rdi+0x28], eax",
    "movsx   rax, word [rdi+0x2c]",
    "lea     rcx, [rax+rax*4]",
    "mov     rax, qword [rsi+0x18]",
    "mov     rbx, qword [rax+rcx*8+0x8]",
    "mov     rcx, rbx",
    "call    sub_140043460",
    "cmp     eax, ebp",
    "jle     0x1400670f2",
    "mov     byte [rdi], 0x75",
    "jmp     0x140067240",
    "mov     rax, rdi",
    "mov     rbx, qword [rdi+0x40]",
    "mov     rcx, rsi",
    "mov     rdx, qword [rbx+0x48]",
    "call    sub_140067034",
    "mov     rdx, qword [rbx+0x10]",
    "mov     rcx, rsi",
    "mov     qword [rbx+0x48], rax",
    "call    sub_14006725c",
    "mov     rdx, qword [rbx+0x18]",
    "mov     rcx, rsi",
    "call    sub_14006725c",
    "bt      dword [rdi+0x4], 0x18",
    "jae     0x140067240",
    "mov     rax, qword [rsi]",
    "mov     rbp, qword [rax]",
    "cmp     dword [rsi+0x10], edx",
    "je      0x14006712a",
    "bt      dword [rbx+0x4], 0xb",
    "mov     rcx, qword [rsi]",
    "jae     0x1400670e1",
    "cmp     rbx, rdx",
    "je      0x140067147",
    "cmp     byte [rbx], 0xa2",
    "je      0x14006712a",
    "lea     rdx, [rel data_1400f4608]  {\"row value misused\"}",
    "call    sub_1400191b8",
    "jmp     0x140067240",
    "mov     rax, qword [rbx+0x20]",
    "mov     r9d, ebp",
    "mov     rdx, qword [rax]",
    "mov     r8d, dword [rdx]",
    "lea     rdx, [rel data_1400f4b40]  {\"sub-select returns %d columns - \u2026\"}",
    "call    sub_1400191b8",
    "jmp     0x140067240",
    "mov     rbx, rdx",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "xor     edx, edx",
    "mov     rbx, rax",
    "jmp     0x14006714a",
    "lea     rcx, [rsp+0x20]",
    "mov     r8d, 0x48",
    "call    memset",
    "mov     eax, dword [rsi+0xc]",
    "mov     qword [rsp+0x30], rbx",
    "mov     dword [rsp+0x48], eax",
    "mov     byte [rsp+0x20], 0xae",
    "lea     rbx, [rsp+0x20]",
    "xor     edx, edx",
    "mov     rdx, rdi",
    "mov     rcx, rbp",
    "call    sub_140043de4",
    "mov     rdi, rbx",
    "test    rbx, rbx",
    "je      0x140067240",
    "cmp     dword [rsi+0x10], edx",
    "je      0x140067159",
    "cmp     rbx, rdx",
    "je      0x14006716b",
    "cmp     byte [rbx], 0xa2",
    "je      0x1400671b6",
    "test    byte [rdi+0x4], 0x1",
    "je      0x14006716b",
    "bts     dword [rbx+0x4], 0x14",
    "btr     dword [rdi+0x4], 0x8",
    "jmp     0x140067240",
    "cmp     byte [rbx], 0x6d",
    "je      0x1400671b6",
    "movzx   eax, word [rdi+0x30]",
    "or      dword [rbx+0x4], 0x1",
    "mov     word [rbx+0x30], ax",
    "mov     rcx, qword [rsi]",
    "mov     rdx, rbx",
    "call    sub_1400430d4",
    "test    rax, rax",
    "je      0x1400671a1",
    "lea     r8, [rel data_1400f403c]  {\"BINARY\"}",
    "mov     r8, qword [rax]",
    "jmp     0x1400671a8",
    "mov     rcx, qword [rsi]",
    "mov     rdx, rbx",
    "call    sub_140043054",
    "mov     rdi, rax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}