{
  "address": "0x1400bfa94",
  "rules": [
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "mov     qword [r11+0x10], rsi",
    "push    rdi",
    "sub     rsp, 0xb0",
    "and     qword [rsp+0x30], 0x0",
    "and     qword [r11-0x78], 0x0",
    "and     qword [r11-0x10], 0x0",
    "lea     rax, [rel data_140140240]",
    "mov     dword [rsp+0x50], 0x1",
    "mov     rdi, r8",
    "mov     qword [r11-0x80], rax",
    "lea     rax, [rel data_1400e83e8]  {u\"dpapi.dll\"}",
    "mov     rbx, rdx",
    "mov     qword [r11-0x28], rax",
    "lea     rax, [rel data_1400e8418]  {\"CryptUnprotectMemory\"}",
    "mov     rsi, rcx",
    "mov     qword [r11-0x20], rax",
    "mov     rax, 0x4141414141414141",
    "mov     qword [r11-0x70], r8",
    "mov     qword [r11-0x18], rax",
    "lea     rax, [r11-0x28]",
    "mov     qword [r11-0x60], rax",
    "test    rdx, rdx",
    "je      0x1400bfc70",
    "lea     r11, [rsp+0xb0]",
    "mov     rbx, qword [r11+0x10]",
    "mov     rsi, qword [r11+0x18]",
    "mov     rsp, r11",
    "pop     rdi",
    "retn    ",
    "cmp     dword [rdx+0x18], 0x0",
    "je      0x1400bfc70",
    "cmp     qword [rdx], 0x0",
    "je      0x1400bfc70",
    "mov     edx, dword [rdx+0x18]",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x30], rax",
    "test    rax, rax",
    "je      0x1400bfc70",
    "mov     rax, qword [rbx]",
    "mov     r8d, dword [rbx+0x18]",
    "lea     rdx, [rsp+0x40]",
    "lea     rcx, [rsp+0x30]",
    "mov     qword [rsp+0x40], rax",
    "call    sub_14000b6d8",
    "test    eax, eax",
    "je      0x1400bfc65",
    "mov     rcx, qword [rsp+0x30]",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_14012b268]  {u\"    >  %s (todecode): \"}",
    "mov     rdx, rsi",
    "call    sub_14000c030",
    "mov     edx, dword [rbx+0x18]",
    "mov     rcx, qword [rsp+0x30]",
    "xor     r8d, r8d",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     r8, [rel sub_1400bfa8c]",
    "lea     rdx, [rel sub_1400bfa2c]",
    "lea     rax, [rsp+0x60]",
    "lea     r9, [rsp+0x50]",
    "sub     r8d, edx",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14000f924",
    "test    eax, eax",
    "je      0x1400bfc59",
    "lea     rcx, [rel data_14012b360]  {u\"ERROR dealWithStructToDecode ; k\u2026\"}",
    "call    sub_14000c030",
    "mov     r9, qword [rsp+0x30]",
    "mov     r8d, dword [rbx+0x18]",
    "xor     edx, edx",
    "xor     ecx, ecx",
    "call    sub_14000f4d4",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400bfc4d",
    "lea     rcx, [rsp+0x60]",
    "call    sub_14000bb6c",
    "jmp     0x1400bfc65",
    "lea     r8, [rsp+0x70]",
    "lea     rcx, [rsp+0x60]",
    "mov     rdx, rax",
    "call    sub_14000f540",
    "test    eax, eax",
    "je      0x1400bfc44",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "cmp     dword [rsp+0x80], 0x0",
    "je      0x1400bfc44",
    "cmp     qword [rsp+0x88], 0x0",
    "je      0x1400bfc44",
    "cmp     dword [rsp+0x7c], 0x0",
    "je      0x1400bfc38",
    "lea     rcx, [rel data_14012b2d0]  {u\"ERROR dealWithStructToDecode ; R\u2026\"}",
    "lea     rcx, [rel data_14012b298]  {u\"    >> %s (decoded) : \"}",
    "mov     rdx, rsi",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x80]",
    "mov     rcx, qword [rsp+0x88]",
    "mov     r8d, 0x4",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "jmp     0x1400bfc3f",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}