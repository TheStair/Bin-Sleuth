{
  "address": "0x1400458a4",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     dword [rsp+0x18], r8d",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x68",
    "mov     eax, dword [rdx+0x4]",
    "mov     rbp, qword [rcx+0x10]",
    "xor     r14d, r14d",
    "mov     r12d, r8d",
    "mov     rdi, rdx",
    "mov     rbx, rcx",
    "mov     r13d, r14d",
    "mov     qword [rsp+0x30], rbp",
    "test    al, 0x20",
    "jne     0x1400459b6",
    "mov     r15, qword [rdi+0x10]",
    "mov     rcx, r15",
    "mov     qword [rsp+0xb8], r15",
    "call    sub_140043460",
    "and     dword [rsp+0x20], 0x0",
    "mov     r8d, r12d",
    "movsxd  r14, eax",
    "mov     edx, 0x70",
    "mov     rcx, rbp",
    "mov     r9d, r14d",
    "mov     dword [rdi+0x28], r12d",
    "call    sub_140032364",
    "mov     rcx, qword [rbx]",
    "mov     r8d, 0x1",
    "mov     edx, r14d",
    "mov     dword [rsp+0xc8], eax",
    "call    sub_140064468",
    "bt      dword [rdi+0x4], 0xb",
    "mov     r12, qword [rdi+0x20]",
    "mov     rsi, rax",
    "mov     qword [rsp+0x38], rax",
    "jae     0x140045b4e",
    "cmp     dword [rcx+0x40], r14d",
    "jne     0x1400459b6",
    "test    r12, r12",
    "je      0x140045cd4",
    "mov     ecx, dword [r12+0x18]",
    "mov     r15, qword [r12]",
    "lea     rax, [rel data_1400f386c]",
    "mov     dword [rsp+0x20], ecx",
    "lea     r9, [rel data_1400f4b88]  {\"CORRELATED \"}",
    "test    r13d, r13d",
    "lea     r8, [rel data_1400f4b98]  {\"%sLIST SUBQUERY %d\"}",
    "mov     rcx, rbx",
    "mov     edx, 0x1",
    "cmovne  r9, rax",
    "mov     qword [rsp+0xb0], r15",
    "call    sub_140032580",
    "cmp     dword [r15], r14d",
    "jne     0x140045cd4",
    "xor     r8d, r8d",
    "bt      eax, 0x19",
    "mov     dword [rsp+0x20], r14d",
    "jae     0x140045978",
    "test    rsi, rsi",
    "je      0x140045cf1",
    "mov     rcx, r15",
    "call    sub_140042fa8",
    "mov     edx, 0x41",
    "cmp     al, 0x40",
    "movzx   ecx, al",
    "cmovle  ecx, edx",
    "mov     byte [rsp+0xb0], cl",
    "test    rsi, rsi",
    "je      0x140045b88",
    "mov     eax, dword [rsp+0xc0]",
    "xor     r15d, r15d",
    "mov     rdx, rdi",
    "mov     rcx, rbx",
    "mov     byte [rsp+0x40], 0xb",
    "mov     dword [rsp+0x44], eax",
    "mov     qword [rsp+0x50], r15",
    "mov     dword [rsp+0x48], r15d",
    "mov     dword [rsp+0x4c], r15d",
    "call    sub_1400457d0",
    "lea     r8, [rsp+0x40]",
    "mov     rdx, r12",
    "mov     rcx, rbx",
    "mov     dword [r12+0x10], r15d",
    "mov     qword [rsp+0x50], rax",
    "call    sub_1400692cc",
    "mov     rdx, qword [rsp+0x50]",
    "cmp     eax, r15d",
    "je      0x140045ae0",
    "bts     eax, 0x19",
    "mov     dword [rdx+0x4], eax",
    "inc     dword [rcx+0x38]",
    "mov     r9d, dword [rcx+0x38]",
    "mov     dword [rdx+0x44], r9d",
    "mov     rcx, rbp",
    "mov     edx, 0x46",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "inc     eax",
    "lea     edx, [r9+0x11]",
    "mov     rcx, rbp",
    "mov     dword [rdi+0x40], eax",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     r13d, eax",
    "lea     edx, [r14+0x11]",
    "xor     r9d, r9d",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "bt      dword [rdi+0x4], 0xb",
    "mov     esi, eax",
    "jae     0x140045929",
    "xor     esi, esi",
    "cmp     r13d, esi",
    "je      0x140045d44",
    "mov     edx, dword [rsp+0xc8]",
    "mov     r9d, 0xfffffff7",
    "mov     r8, rsi",
    "mov     rcx, rbp",
    "call    sub_140032c40",
    "mov     al, byte [rbx+0x1f]",
    "test    al, al",
    "jne     0x140045b98",
    "mov     rdx, qword [rdi+0x10]",
    "mov     rcx, rbx",
    "call    sub_1400430d4",
    "mov     qword [rsi+0x20], rax",
    "cmp     rdx, r15",
    "je      0x140045aed",
    "cmp     rdx, r15",
    "je      0x140045abd",
    "mov     r9d, dword [rdi+0x40]",
    "mov     r8d, dword [rdi+0x44]",
    "mov     edx, 0xc",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     r9d, dword [rdi+0x28]",
    "mov     r8d, r12d",
    "mov     edx, 0x6d",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     edx, esi",
    "mov     rcx, rbp",
    "call    sub_140032d34",
    "mov     r9, rax",
    "mov     eax, dword [rbp+0x90]",
    "mov     dword [r9+0x8], eax",
    "jmp     0x140045d44",
    "mov     rax, qword [rdi+0x20]",
    "lea     r8, [rel data_1400f4b70]  {\"REUSE LIST SUBQUERY %d\"}",
    "xor     edx, edx",
    "mov     r9d, dword [rax+0x18]",
    "mov     rcx, rbx",
    "call    sub_140032580",
    "add     rsp, 0x68",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     edx, r13d",
    "mov     rcx, rbp",
    "call    sub_140032d34",
    "mov     edx, dword [rbp+0x90]",
    "xor     r9d, r9d",
    "mov     dword [rax+0x8], edx",
    "mov     r8d, dword [rdi+0x44]",
    "lea     edx, [rsi+0x42]",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     edx, dword [rdi+0x40]",
    "mov     r11d, dword [rbp+0x90]",
    "dec     edx",
    "mov     rcx, rbp",
    "dec     r11d",
    "call    sub_140032d34",
    "mov     dword [rax+0x4], r11d",
    "mov     byte [rbx+0x1f], sil",
    "mov     dword [rbx+0x28], esi",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rbx+0x1f], al",
    "mov     r15d, dword [rbx+rax*4+0xbc]",
    "inc     dword [rbx+0x38]",
    "mov     r15d, dword [rbx+0x38]",
    "jmp     0x140045ba8",
    "mov     r12, r14",
    "test    r14d, r14d",
    "jle     0x140045cd4",
    "mov     rcx, qword [rbx]",
    "call    sub_1400169a8",
    "cmp     rsi, r15",
    "je      0x140045d44",
    "mov     rcx, qword [rbx]",
    "call    sub_1400169a8",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rbx+0x1f], al",
    "mov     r14d, dword [rbx+rax*4+0xbc]",
    "inc     dword [rbx+0x38]",
    "mov     r14d, dword [rbx+0x38]",
    "jmp     0x140045bc8",
    "mov     al, byte [rbx+0x1f]",
    "test    al, al",
    "jne     0x140045bb8",
    "mov     rbp, qword [rsp+0xb0]",
    "lea     r14, [rsi+0x20]",
    "mov     rsi, qword [rsp+0xb8]",
    "add     rbp, 0x8",
    "add     dword [rsi], 0xffffffff",
    "jne     0x140045d44",
    "test    r15d, r15d",
    "je      0x140045cba",
    "mov     esi, dword [rsp+0xc0]",
    "mov     eax, dword [r12]",
    "add     r12, 0x8",
    "mov     dword [rsp+0xb8], eax",
    "test    eax, eax",
    "jle     0x140045ca0",
    "mov     edx, r15d",
    "mov     rcx, rsi",
    "call    sub_140043488",
    "mov     r8, qword [rbp]",
    "mov     rcx, rbx",
    "mov     rdx, rax",
    "call    sub_140043358",
    "inc     r15d",
    "add     rbp, 0x28",
    "mov     qword [r14], rax",
    "add     r14, 0x8",
    "sub     r12, 0x1",
    "jne     0x140045b11",
    "mov     rsi, qword [rsp+0x38]",
    "mov     rbp, qword [rsp+0x30]",
    "jmp     0x140045cd4",
    "mov     rcx, qword [rsi+0x10]",
    "mov     rdx, rsi",
    "call    sub_1400169a8",
    "jmp     0x140045d44",
    "test    r14d, r14d",
    "je      0x140045cd4",
    "cmp     byte [rbx+0x1f], 0x8",
    "jae     0x140045cba",
    "mov     r8d, r15d",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_140047e2c",
    "mov     r9d, 0x1",
    "mov     r8d, r15d",
    "lea     edx, [r9+0x5b]",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "lea     r8, [rsp+0xb0]",
    "mov     r9d, 0x1",
    "mov     edx, eax",
    "mov     rcx, rbp",
    "call    sub_140032c40",
    "mov     r9d, r14d",
    "mov     r8d, esi",
    "mov     edx, 0x84",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x28], 0x1",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032678",
    "mov     eax, dword [rsp+0xb8]",
    "dec     eax",
    "add     r12, 0x28",
    "mov     dword [rsp+0xb8], eax",
    "test    eax, eax",
    "jg      0x140045be6",
    "xor     r8d, r8d",
    "mov     rcx, rax",
    "lea     edx, [r8+0x1]",
    "call    sub_140044e20",
    "test    eax, eax",
    "jne     0x140045c1a",
    "cmp     byte [rbx+0x1f], 0x8",
    "jae     0x140045cd4",
    "movzx   eax, byte [rbx+0x1f]",
    "mov     dword [rbx+rax*4+0xbc], r15d",
    "inc     byte [rbx+0x1f]",
    "mov     rax, qword [r12]",
    "mov     qword [rsp+0x30], rax",
    "test    r13d, r13d",
    "je      0x140045c1f",
    "mov     rsi, qword [rsp+0x38]",
    "mov     rax, qword [rsp+0x30]",
    "mov     edx, r13d",
    "mov     rcx, rbp",
    "call    sub_140032b38",
    "btr     dword [rdi+0x4], 0x19",
    "xor     r13d, r13d",
    "movzx   eax, byte [rbx+0x1f]",
    "mov     dword [rbx+rax*4+0xbc], r14d",
    "inc     byte [rbx+0x1f]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}