{
  "address": "0x14008d3f4",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x40",
    "mov     r12, r9",
    "mov     rbx, rcx",
    "test    rcx, rcx",
    "je      0x14008d571",
    "mov     rbx, qword [rsp+0x68]",
    "mov     rbp, qword [rsp+0x70]",
    "mov     rsi, qword [rsp+0x78]",
    "mov     eax, 0x1",
    "add     rsp, 0x40",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     rdi, qword [rbx+0x28]",
    "xor     eax, eax",
    "or      r9, 0xffffffffffffffff",
    "mov     rcx, r9",
    "repne scasw word [rdi]",
    "mov     eax, dword [rbx+0x10]",
    "not     rcx",
    "lea     r13, [rcx-0x1]",
    "add     r13d, r13d",
    "bt      eax, 0x1f",
    "jb      0x14008d453",
    "mov     rsi, qword [rsp+0x88]",
    "test    rsi, rsi",
    "je      0x14008d476",
    "test    rdx, rdx",
    "je      0x14008d453",
    "mov     ebp, dword [rsp+0x60]",
    "xor     eax, eax",
    "mov     rcx, r9",
    "mov     rdi, rsi",
    "repne scasw word [rdi]",
    "not     rcx",
    "lea     rbp, [rcx-0x1]",
    "add     ebp, ebp",
    "jmp     0x14008d47a",
    "movdqu  xmm0, xmmword [rdx]",
    "bts     eax, 0x1f",
    "mov     dword [rbx+0x10], eax",
    "movdqu  xmmword [rbx+0x14], xmm0",
    "test    byte [rbx+0x10], 0x2",
    "jne     0x14008d571",
    "test    r8, r8",
    "jne     0x14008d4ab",
    "test    byte [rbx+0x10], 0x1",
    "jne     0x14008d4f0",
    "test    r12, r12",
    "jne     0x14008d521",
    "movdqu  xmm0, xmmword [r8]",
    "lea     rdi, [rbx+0x30]",
    "movdqu  xmmword [rdi], xmm0",
    "test    rsi, rsi",
    "je      0x14008d4f0",
    "mov     rax, qword [r12]",
    "lea     rdi, [rbx+0x54]",
    "mov     qword [rdi], rax",
    "mov     rax, qword [r12+0x8]",
    "mov     qword [rdi+0x8], rax",
    "mov     eax, dword [r12+0x10]",
    "mov     dword [rdi+0x10], eax",
    "test    rsi, rsi",
    "je      0x14008d571",
    "or      dword [rbx+0x10], 0x1",
    "lea     rdi, [rbx+0x30]",
    "mov     r8d, ebp",
    "mov     rdx, rsi",
    "mov     ecx, 0x8002",
    "mov     r9, rdi",
    "mov     dword [rsp+0x20], 0x10",
    "call    sub_140003970",
    "jmp     0x14008d4b8",
    "lea     rdi, [rbx+0x54]",
    "mov     r8d, ebp",
    "mov     rdx, rsi",
    "mov     ecx, 0x8004",
    "mov     r9, rdi",
    "mov     dword [rsp+0x20], 0x14",
    "call    sub_140003970",
    "jmp     0x14008d53d",
    "mov     r9, qword [rbx+0x28]",
    "lea     ecx, [r13+0x2]",
    "lea     rax, [rbx+0x40]",
    "mov     dword [rsp+0x30], 0x14",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x20], ecx",
    "mov     ecx, 0x8004",
    "mov     r8d, 0x10",
    "mov     rdx, rdi",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x14008d4f0",
    "mov     r9, qword [rbx+0x28]",
    "lea     ecx, [r13+0x2]",
    "lea     rax, [rbx+0x68]",
    "mov     dword [rsp+0x30], 0x14",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x20], ecx",
    "mov     ecx, 0x8004",
    "mov     r8d, 0x14",
    "mov     rdx, rdi",
    "call    sub_140003e0c",
    "or      dword [rbx+0x10], 0x2"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}