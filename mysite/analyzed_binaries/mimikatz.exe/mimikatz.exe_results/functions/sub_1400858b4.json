{
  "address": "0x1400858b4",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "accept command line arguments",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "xor     ebp, ebp",
    "lea     rdx, [rax+0x18]",
    "mov     edi, ebp",
    "mov     dword [rsp+0x88], ebp",
    "call    qword [rel CommandLineToArgvW]",
    "mov     rsi, rbp",
    "mov     qword [rsp+0x20], rbp",
    "mov     r14, rbp",
    "mov     r13, rax",
    "mov     r12d, ebp",
    "mov     dword [rsp+0x78], ebp",
    "cmp     rax, rbp",
    "je      0x140085bf5",
    "mov     eax, edi",
    "mov     rbx, qword [rsp+0x70]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     dword [rsp+0x80], ebp",
    "jle     0x140085bf5",
    "mov     rcx, qword [rax]",
    "lea     rdx, [rel data_1400f81ac]",
    "call    qword [rel wcsstr]",
    "lea     r15d, [rbp+0x1]",
    "mov     rbx, rax",
    "cmp     rax, rbp",
    "je      0x14008598b",
    "mov     r14, qword [r13]",
    "mov     rdx, rax",
    "lea     ecx, [rbp+0x40]",
    "sub     rdx, qword [r13]",
    "sar     rdx, 0x1",
    "lea     rdx, [rdx+rdx+0x2]",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "mov     qword [rsp+0x20], rax",
    "cmp     rax, rbp",
    "je      0x14008598f",
    "cmp     r12d, ebp",
    "jne     0x140085aee  {\"9l$x\"}",
    "cmp     rsi, rbp",
    "je      0x1400859d6",
    "mov     r15d, 0x19",
    "movzx   edi, bp",
    "lea     rbx, [rel data_14013cf80]",
    "lea     eax, [r15-0x18]",
    "mov     rdi, qword [r13]",
    "xor     eax, eax",
    "or      rcx, 0xffffffffffffffff",
    "repne scasw word [rdi]",
    "mov     r8, rbx",
    "sub     r8, qword [r13]",
    "not     rcx",
    "lea     rax, [r8+0x4]",
    "sub     rcx, r15",
    "sar     rax, 0x1",
    "mov     eax, eax",
    "cmp     rax, rcx",
    "jae     0x140085977",
    "cmp     dword [rsp+0x78], ebp",
    "jne     0x140085bd7",
    "lea     rcx, [rel data_1400f81c0]  {u\"ERROR mimikatz_doLocal ; \"%s\" mo\u2026\"}",
    "mov     rdx, rsi",
    "call    sub_14000c030",
    "mov     esi, 0x1",
    "mov     r12d, eax",
    "cmp     r14, rbp",
    "je      0x140085a68",
    "movzx   edx, di",
    "mov     rcx, rsi",
    "mov     rdx, qword [rbx+rdx*8]",
    "mov     rdx, qword [rdx]",
    "call    qword [rel _wcsicmp]",
    "cmp     eax, ebp",
    "mov     eax, 0x1",
    "je      0x1400859d6",
    "mov     rdx, qword [r13]",
    "sar     r8, 0x1",
    "mov     rcx, rsi",
    "add     r8, r8",
    "call    memcpy",
    "jmp     0x14008598f",
    "lea     r14, [rbx+0x4]",
    "cmp     rsi, rbp",
    "je      0x140085be5",
    "mov     eax, 0xffff",
    "lea     rcx, [rel data_1400f8260]  {u\"ERROR mimikatz_doLocal ; \"%s\" co\u2026\"}",
    "mov     rdx, r14",
    "add     di, ax",
    "movzx   r12d, di",
    "mov     r8, qword [rbx+r12*8]",
    "mov     r8, qword [r8]",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx+r12*8]",
    "lea     rcx, [rel data_1400f82e8]  {u\"\\nModule :\\t%s\"}",
    "mov     rdx, qword [rdx]",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx+r12*8]",
    "mov     rdx, qword [rdx+0x8]",
    "cmp     rdx, rbp",
    "je      0x140085b46",
    "mov     rax, qword [rbx]",
    "mov     rdx, qword [rax+0x10]",
    "cmp     rdx, rbp",
    "je      0x140085acf",
    "lea     rcx, [rel data_1400f8238]  {u\"  -  %s\"}",
    "call    sub_14000c030",
    "add     di, ax",
    "cmp     r12d, ebp",
    "je      0x1400859a3",
    "cmp     dword [rsp+0x78], 0x0",
    "jne     0x140085a66",
    "mov     r12d, ebp",
    "jmp     0x140085a68",
    "mov     rcx, r13",
    "call    qword [rel LocalFree]",
    "mov     edi, dword [rsp+0x88]",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "mov     rax, qword [rbx+r12*8]",
    "mov     rdx, qword [rax+0x10]",
    "cmp     rdx, rbp",
    "je      0x140085b5f",
    "lea     rcx, [rel data_1400f8308]  {u\"\\nFull name :\\t%s\"}",
    "call    sub_14000c030",
    "add     rbx, 0x8",
    "sub     r15, rsi",
    "jne     0x140085a8d",
    "lea     rcx, [rel data_1400f8248]  {u\"  [%s]\"}",
    "call    sub_14000c030",
    "cmp     di, r15w",
    "jae     0x140085a74",
    "xor     ebp, ebp",
    "movzx   r15d, di",
    "xor     esi, esi",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+r12*8]",
    "xor     r14d, r14d",
    "cmp     r14w, word [rcx+0x18]",
    "jae     0x140085bc9",
    "lea     rcx, [rel data_1400f8328]  {u\"\\nDescription :\\t%s\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx]",
    "lea     rcx, [rel data_1400f8228]  {u\"\\n%16s\"}",
    "mov     rdx, qword [rdx]",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx]",
    "mov     rdx, qword [rdx+0x8]",
    "cmp     rdx, rbp",
    "je      0x140085ab7",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rsi, qword [rsp+0x20]",
    "jmp     0x140085bd7",
    "mov     rsi, qword [rsp+0x20]",
    "mov     r15d, 0x19",
    "mov     rdx, qword [rdx+0x20]",
    "movzx   eax, bp",
    "mov     rcx, r14",
    "lea     rax, [rax+rax*2]",
    "mov     qword [rsp+0x28], rax",
    "mov     rdx, qword [rdx+rax*8+0x8]",
    "call    qword [rel _wcsicmp]",
    "mov     ecx, esi",
    "cmp     eax, esi",
    "sete    cl",
    "mov     dword [rsp+0x78], ecx",
    "cmp     ecx, esi",
    "je      0x140085a4f",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "xor     ebp, ebp",
    "lea     esi, [r14+0x1]",
    "mov     eax, 0x1",
    "add     bp, ax",
    "cmp     ecx, esi",
    "je      0x1400859ef",
    "mov     rax, qword [rbx+r15*8]",
    "mov     ecx, dword [rsp+0x80]",
    "mov     r8, qword [rsp+0x28]",
    "mov     rax, qword [rax+0x20]",
    "lea     rdx, [r13+0x8]",
    "dec     ecx",
    "call    qword [rax+r8*8]",
    "mov     ecx, dword [rsp+0x78]",
    "mov     dword [rsp+0x88], eax",
    "mov     rcx, qword [rbx+r12*8]",
    "add     bp, si",
    "cmp     bp, word [rcx+0x18]",
    "jb      0x140085b7d",
    "lea     rcx, [rel data_1400f8238]  {u\"  -  %s\"}",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx+r15*8]",
    "cmp     bp, word [rdx+0x18]",
    "jae     0x140085a5b",
    "mov     rdx, qword [rcx+0x20]",
    "movzx   eax, bp",
    "lea     rcx, [rel data_1400f8228]  {u\"\\n%16s\"}",
    "lea     rdi, [rax+rax*2]",
    "mov     rdx, qword [rdx+rdi*8+0x8]",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx+r12*8]",
    "mov     rax, qword [rdx+0x20]",
    "mov     rdx, qword [rax+rdi*8+0x10]",
    "cmp     rdx, r14",
    "je      0x140085bb7",
    "mov     rsi, qword [rsp+0x20]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}