{
  "address": "0x14001beb4",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x18], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x30",
    "mov     r12, rcx",
    "xor     ebp, ebp",
    "lea     ecx, [rbp+0x18]",
    "call    sub_140016b70",
    "mov     rsi, rax",
    "test    rax, rax",
    "jne     0x14001bee5",
    "mov     rcx, qword [r12+0x30]",
    "call    sub_140019074",
    "movsxd  rdi, eax",
    "lea     rcx, [rdi+0xb1]",
    "call    sub_140016b70",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x14001bf10",
    "mov     eax, 0xc0a",
    "jmp     0x14001bf87",
    "lea     rdx, [rax+0xa0]",
    "lea     ecx, [rdi+0xf]",
    "lea     r8, [rel data_1400f3a34]  {\"%s-shm\"}",
    "mov     qword [rax+0x8], rdx",
    "mov     r9, qword [r12+0x30]",
    "call    _fprintf_p_l",
    "mov     rdi, qword [rel data_140140370]",
    "test    rdi, rdi",
    "je      0x14001bf9a",
    "mov     rcx, rsi",
    "call    sub_140016950",
    "jmp     0x14001bedb",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rbp, qword [rsp+0x60]",
    "add     rsp, 0x30",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "or      qword [rbx+0x20], 0xffffffffffffffff",
    "mov     rax, qword [rel data_140140370]",
    "and     dword [rsp+0x58], ebp",
    "mov     qword [rbx+0x98], rax",
    "mov     rdi, rbx",
    "mov     qword [rel data_140140370], rbx",
    "cmp     byte [rel data_14013d054], bpl",
    "je      0x14001bfcb",
    "mov     rdx, qword [rbx+0x8]",
    "mov     rcx, qword [rdi+0x8]",
    "call    sub_1400192b0",
    "test    eax, eax",
    "je      0x14001bf58",
    "mov     rcx, qword [r12+0x30]",
    "lea     rdx, [rel data_1400f3a40]  {\"readonly_shm\"}",
    "xor     r8d, r8d",
    "call    sub_1400852e8",
    "mov     rdx, qword [rbx+0x8]",
    "mov     ecx, 0x80006",
    "lea     r9d, [rcx-0x5]",
    "test    eax, eax",
    "lea     rax, [rsp+0x58]",
    "cmove   r9d, ecx",
    "mov     rcx, qword [r12+0x8]",
    "lea     r8, [rbx+0x10]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14001cb54",
    "mov     ebp, eax",
    "test    eax, eax",
    "je      0x14001c036",
    "mov     qword [rbx], 0x8",
    "test    rdi, rdi",
    "je      0x14001bf9a",
    "mov     rdi, qword [rdi+0x98]",
    "test    rdi, rdi",
    "jne     0x14001bf3b",
    "cmp     dword [rsp+0x58], 0x1",
    "jne     0x14001c041",
    "call    qword [rel data_14013d6d8]",
    "mov     r9, qword [rbx+0x8]",
    "lea     r8, [rel data_1400f3a50]  {\"winOpenShm\"}",
    "mov     edx, eax",
    "mov     ecx, ebp",
    "mov     dword [rsp+0x20], 0xaedd",
    "call    sub_14001ac00",
    "mov     ebp, eax",
    "jmp     0x14001c05e",
    "mov     rcx, rbx",
    "call    sub_140016950",
    "mov     rcx, rbx",
    "call    sub_14001bdf8",
    "mov     ebp, eax",
    "test    eax, eax",
    "je      0x14001bf65",
    "mov     byte [rbx+0x78], 0x1",
    "mov     edx, 0x1",
    "mov     rcx, rbx",
    "lea     r8d, [rdx+0x7f]",
    "mov     r9d, edx",
    "call    sub_14001bc94",
    "mov     rcx, qword [r12+0x8]",
    "xor     edx, edx",
    "call    sub_14001bd0c",
    "mov     rcx, rsi",
    "call    sub_140016950",
    "xor     ecx, ecx",
    "call    sub_140016950",
    "jmp     0x14001bf85",
    "mov     qword [rsi], rdi",
    "inc     dword [rdi+0x8c]",
    "mov     qword [r12+0x28], rsi",
    "mov     rax, qword [rdi+0x90]",
    "mov     qword [rsi+0x8], rax",
    "mov     qword [rdi+0x90], rsi",
    "cmp     eax, 0x508",
    "je      0x14001bf65",
    "mov     eax, ebp"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}