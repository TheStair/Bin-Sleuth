{
  "address": "0x1400678e8",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x20",
    "mov     r10d, dword [rcx+0x8]",
    "mov     rdi, r8",
    "xor     r8d, r8d",
    "mov     rbp, rdx",
    "mov     rbx, rcx",
    "test    r10d, r10d",
    "jle     0x14006793c",
    "mov     r12, qword [rbx+0x10]",
    "lea     eax, [r10+0x1]",
    "mov     dword [rbx+0x8], eax",
    "add     eax, eax",
    "mov     rdx, r12",
    "movsxd  r8, eax",
    "mov     rax, qword [rbx]",
    "mov     r13, qword [rax]",
    "shl     r8, 0x3",
    "mov     rcx, r13",
    "call    sub_140016c90",
    "mov     rsi, rax",
    "test    rax, rax",
    "jne     0x140067979",
    "mov     r9d, dword [rdx+0x28]",
    "mov     rcx, qword [rcx+0x10]",
    "mov     qword [rbx+0x10], rsi",
    "test    rsi, rsi",
    "jne     0x140067987",
    "test    r12, r12",
    "je      0x140067979",
    "inc     r8d",
    "add     rcx, 0x10",
    "cmp     r8d, r10d",
    "jl      0x14006791d",
    "movzx   eax, word [rbp+0x2c]",
    "cmp     word [rdx+0x2c], ax",
    "je      0x1400679ad",
    "test    byte [rdi+0x4], 0x8",
    "je      0x140067991",
    "and     dword [rbx+0x8], esi",
    "jmp     0x1400679ad",
    "mov     rdx, r12",
    "mov     rcx, r13",
    "call    sub_1400169a8",
    "mov     rdx, qword [rcx]",
    "cmp     dword [rdx+0x28], r9d",
    "jne     0x140067930",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "add     rsp, 0x20",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "movsxd  rax, dword [rbx+0x8]",
    "add     rax, rax",
    "mov     qword [rsi+rax*8-0x10], rbp",
    "movsxd  rcx, dword [rbx+0x8]",
    "mov     rax, qword [rbx+0x10]",
    "add     rcx, rcx",
    "mov     qword [rax+rcx*8-0x8], rdi",
    "mov     rdi, qword [rdi+0x10]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}