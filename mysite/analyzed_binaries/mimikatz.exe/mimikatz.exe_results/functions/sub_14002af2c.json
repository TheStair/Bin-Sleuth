{
  "address": "0x14002af2c",
  "rules": [
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "decompress data using LZO/4cde8899b401464e87ec185666d6508a",
    "hash data using jshash/f142a7a7597843a791ba4ccc676b6fb1",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "validate payment card number using luhn algorithm with lookup table/e9dbd1a1dd1a4f49b92ac6ff607eb75d",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     r15, qword [rcx+0x18]",
    "xor     r12d, r12d",
    "xor     r14d, r14d",
    "mov     ebp, r8d",
    "mov     rdi, rdx",
    "mov     rsi, rcx",
    "mov     qword [rax+0x20], r12",
    "cmp     r8d, 0x2",
    "jb      0x14002b2c9",
    "mov     ecx, 0x10fda",
    "call    sub_140084e38",
    "cmp     r8d, dword [rcx+0x3c]",
    "ja      0x14002b2c9",
    "test    rdx, rdx",
    "je      0x14002af8c",
    "mov     edx, r8d",
    "call    sub_140027848",
    "mov     rdi, rax",
    "mov     qword [rsp+0x70], rax",
    "mov     qword [rax+0x8], rdx",
    "mov     rax, qword [rdx+0x70]",
    "lea     ecx, [r12+0x1]",
    "add     word [rax+0x36], cx",
    "mov     rax, qword [rax+0x18]",
    "add     dword [rax+0x18], ecx",
    "jmp     0x14002af9c",
    "test    rdi, rdi",
    "je      0x14002b2af",
    "mov     rdx, qword [r15+0x50]",
    "movzx   eax, byte [rdx+0x26]",
    "movzx   r13d, byte [rdx+0x25]",
    "shl     r13d, 0x8",
    "or      r13d, eax",
    "movzx   eax, byte [rdx+0x24]",
    "shl     eax, 0x18",
    "shl     r13d, 0x8",
    "or      r13d, eax",
    "movzx   eax, byte [rdx+0x27]",
    "or      r13d, eax",
    "lea     ecx, [r13+0x1]",
    "mov     eax, ecx",
    "mov     byte [rdx+0x27], cl",
    "shr     eax, 0x18",
    "mov     byte [rdx+0x24], al",
    "mov     eax, ecx",
    "shr     eax, 0x10",
    "mov     byte [rdx+0x25], al",
    "mov     eax, ecx",
    "shr     eax, 0x8",
    "mov     byte [rdx+0x26], al",
    "test    byte [rsi+0x26], 0x4",
    "je      0x14002b057",
    "mov     rcx, qword [r15+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "mov     dword [rsp+0x80], eax",
    "test    eax, eax",
    "jne     0x14002b29e",
    "test    r12, r12",
    "je      0x14002b2be",
    "mov     byte [rdi], 0x0",
    "mov     rcx, qword [rdi+0x70]",
    "call    sub_14002242c",
    "cmp     byte [rsi+0x21], r12b",
    "je      0x14002b089",
    "test    rdi, rdi",
    "jne     0x14002b02a",
    "mov     eax, ebx",
    "jmp     0x14002b2d3",
    "mov     rcx, qword [r12+0x70]",
    "call    sub_14002242c",
    "test    r13d, r13d",
    "je      0x14002b217",
    "lea     rax, [rsp+0x80]",
    "xor     r9d, r9d",
    "mov     r8b, 0x2",
    "mov     edx, ebp",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14002650c",
    "mov     ebx, dword [rsp+0x80]",
    "test    ebx, ebx",
    "jne     0x14002b29e",
    "mov     rcx, qword [rdi+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "mov     dword [rsp+0x80], eax",
    "test    eax, eax",
    "jne     0x14002b29e",
    "lea     r8, [rsp+0x70]",
    "xor     r9d, r9d",
    "mov     edx, ebp",
    "mov     rcx, rsi",
    "call    sub_1400277d8",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002b2c2",
    "mov     rbx, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "test    rdi, rdi",
    "jne     0x14002b23d",
    "mov     rcx, qword [r15+0x50]",
    "lea     r8, [rsp+0x88]",
    "xor     r9d, r9d",
    "movzx   eax, byte [rcx+0x22]",
    "movzx   r14d, byte [rcx+0x21]",
    "shl     r14d, 0x8",
    "or      r14d, eax",
    "movzx   eax, byte [rcx+0x23]",
    "shl     r14d, 0x8",
    "or      r14d, eax",
    "movzx   eax, byte [rcx+0x20]",
    "mov     rcx, rsi",
    "shl     eax, 0x18",
    "or      r14d, eax",
    "mov     edx, r14d",
    "call    sub_1400277d8",
    "mov     r12, qword [rsp+0x88]",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002b29e",
    "mov     rax, qword [rdi+0x48]",
    "mov     rcx, qword [rdi+0x50]",
    "xor     edx, edx",
    "mov     r8d, dword [rax+0x30]",
    "call    memset",
    "mov     rdi, qword [rsp+0x70]",
    "jmp     0x14002b29e",
    "mov     rdi, qword [rsp+0x70]",
    "mov     rcx, qword [rdi+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002b29e",
    "lea     r8, [rsp+0x70]",
    "xor     r9d, r9d",
    "mov     edx, ebp",
    "mov     rcx, rsi",
    "call    sub_1400277d8",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002b2c2",
    "mov     rcx, qword [r12+0x50]",
    "movzx   eax, byte [rcx+0x6]",
    "movzx   r13d, byte [rcx+0x5]",
    "shl     r13d, 0x8",
    "or      r13d, eax",
    "movzx   eax, byte [rcx+0x4]",
    "shl     eax, 0x18",
    "shl     r13d, 0x8",
    "or      r13d, eax",
    "movzx   eax, byte [rcx+0x7]",
    "mov     ecx, dword [rsi+0x34]",
    "shr     ecx, 0x2",
    "or      r13d, eax",
    "lea     eax, [rcx-0x2]",
    "cmp     r13d, eax",
    "jbe     0x14002b12c",
    "mov     rcx, qword [rdi+0x50]",
    "mov     eax, r14d",
    "shr     eax, 0x18",
    "mov     byte [rcx+0x3], r14b",
    "mov     byte [rcx], al",
    "mov     eax, r14d",
    "shr     eax, 0x10",
    "mov     byte [rcx+0x1], al",
    "mov     eax, r14d",
    "shr     eax, 0x8",
    "mov     byte [rcx+0x2], al",
    "mov     rax, qword [rdi+0x50]",
    "mov     byte [rax+0x4], bl",
    "mov     byte [rax+0x5], bl",
    "mov     byte [rax+0x6], bl",
    "mov     byte [rax+0x7], bl",
    "mov     rdx, qword [r15+0x50]",
    "mov     eax, ebp",
    "shr     eax, 0x18",
    "mov     byte [rdx+0x23], bpl",
    "mov     byte [rdx+0x20], al",
    "mov     eax, ebp",
    "shr     eax, 0x10",
    "mov     byte [rdx+0x21], al",
    "mov     eax, ebp",
    "shr     eax, 0x8",
    "mov     byte [rdx+0x22], al",
    "mov     rdi, qword [rsp+0x70]",
    "lea     eax, [rcx-0x8]",
    "cmp     r13d, eax",
    "jae     0x14002b217",
    "mov     ecx, 0x11010",
    "call    sub_140084e38",
    "mov     rcx, qword [r12+0x70]",
    "call    sub_140022a44",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14002b29e",
    "mov     rcx, qword [r12+0x50]",
    "lea     edx, [r13+0x1]",
    "mov     byte [rcx+0x7], dl",
    "mov     eax, edx",
    "shr     eax, 0x18",
    "mov     byte [rcx+0x4], al",
    "mov     eax, edx",
    "shr     eax, 0x10",
    "mov     byte [rcx+0x5], al",
    "mov     eax, edx",
    "shr     eax, 0x8",
    "mov     byte [rcx+0x6], al",
    "lea     ecx, [r13*4+0x8]",
    "mov     eax, ebp",
    "add     rcx, qword [r12+0x50]",
    "shr     eax, 0x18",
    "mov     byte [rcx], al",
    "mov     eax, ebp",
    "mov     byte [rcx+0x3], bpl",
    "shr     eax, 0x10",
    "mov     byte [rcx+0x1], al",
    "mov     eax, ebp",
    "shr     eax, 0x8",
    "mov     byte [rcx+0x2], al",
    "test    rdi, rdi",
    "je      0x14002b1d0",
    "xor     ebx, ebx",
    "cmp     qword [rsi+0x58], rbx",
    "jne     0x14002b1ff",
    "test    byte [rsi+0x26], 0x4",
    "jne     0x14002b1d0",
    "mov     rcx, qword [rsi+0x58]",
    "cmp     ebp, dword [rcx]",
    "ja      0x14002b29e",
    "mov     r13d, dword [rsi+0x3c]",
    "mov     ecx, 0x200",
    "call    sub_140016b70",
    "test    rax, rax",
    "je      0x14002b1ee",
    "mov     rcx, qword [rdi+0x70]",
    "mov     rdx, qword [rcx+0x28]",
    "cmp     byte [rdx+0x10], bl",
    "jne     0x14002b1d0",
    "mov     edx, ebp",
    "call    sub_14001d808",
    "jmp     0x14002b125",
    "mov     qword [rsi+0x58], rax",
    "test    rax, rax",
    "jne     0x14002b1ff",
    "mov     dword [rax], r13d",
    "movzx   eax, word [rcx+0x34]",
    "test    al, 0x2",
    "je      0x14002b1d0",
    "mov     ebx, eax",
    "jmp     0x14002b29e",
    "lea     ebx, [rax+0x7]",
    "jmp     0x14002b29e",
    "cmp     dword [rdx+0x80], ebx",
    "jne     0x14002b1d0",
    "mov     edx, 0xfffb",
    "and     ax, dx",
    "or      ax, 0x10",
    "mov     word [rcx+0x34], ax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}