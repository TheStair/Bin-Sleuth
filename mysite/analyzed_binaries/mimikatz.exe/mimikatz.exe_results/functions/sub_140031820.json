{
  "address": "0x140031820",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "xor     ebx, ebx",
    "mov     r14b, r9b",
    "mov     ebp, r8d",
    "mov     r13, rdx",
    "mov     rsi, rcx",
    "cmp     rdx, rbx",
    "jne     0x14003185b",
    "mov     rdx, qword [rcx+0x28]",
    "cmp     rdx, rbx",
    "je      0x14003186a",
    "call    sub_140031524",
    "xor     eax, eax",
    "jmp     0x140031a70",
    "mov     r15d, 0x3b9aca00",
    "mov     r15d, dword [rdx+0x7c]",
    "jmp     0x140031870",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rbp, qword [rsp+0x58]",
    "mov     rsi, qword [rsp+0x60]",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     rdi, qword [rsp+0x70]",
    "cmp     rdi, 0xffffffffffffffff",
    "jne     0x140031976",
    "cmp     r14b, r8b",
    "jne     0x1400318b7",
    "mov     al, r14b",
    "mov     r8d, 0x1",
    "mov     r10d, 0x200",
    "neg     al",
    "lea     r9d, [r8+0x1]",
    "sbb     r12w, r12w",
    "and     r12w, 0xfff2",
    "add     r12w, 0x10",
    "cmp     ebp, ebx",
    "jge     0x1400318de",
    "mov     eax, 0x2400",
    "test    word [rsi+0x8], ax",
    "jne     0x140031986",
    "mov     edi, ebp",
    "test    r10w, r12w",
    "je      0x140031903",
    "movsxd  rdi, r15d",
    "mov     ebp, ebx",
    "mov     rcx, rbx",
    "cmp     rdi, rbx",
    "jl      0x1400318da",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "mov     rdi, r13",
    "repne scasb byte [rdi]",
    "not     rcx",
    "sub     rcx, r8",
    "mov     rbp, rcx",
    "btr     ebp, 0x1f",
    "jmp     0x1400318da",
    "mov     rcx, rsi",
    "call    sub_14003118c",
    "cmp     dword [rsi+0x20], ebx",
    "je      0x14003198e",
    "cmp     ebp, r15d",
    "jle     0x14003192c",
    "cmp     r14b, r8b",
    "mov     edi, ebx",
    "setne   dil",
    "add     edi, r8d",
    "add     edi, ebp",
    "or      r12w, r10w",
    "mov     al, byte [rcx+r13+0x1]",
    "or      al, byte [rcx+r13]",
    "je      0x1400318da",
    "mov     qword [rsi+0x30], rdi",
    "neg     rdi",
    "sbb     ax, ax",
    "and     ax, 0xfc00",
    "add     ax, 0x800",
    "or      r12w, ax",
    "mov     rcx, qword [rsi+0x28]",
    "mov     rdx, r13",
    "mov     qword [rsi+0x18], r13",
    "call    sub_140016904",
    "mov     dword [rsi+0x20], eax",
    "jmp     0x1400319c9",
    "lea     rax, [rel sub_1400168fc]",
    "mov     qword [rsi+0x10], r13",
    "cmp     rdi, rax",
    "jne     0x1400319b3",
    "mov     edx, 0x20",
    "cmp     edi, edx",
    "cmova   edx, edi",
    "cmp     dword [rsi+0x20], edx",
    "jge     0x140031948",
    "mov     ecx, 0x12",
    "cmp     rdx, rbx",
    "je      0x140031925",
    "add     rcx, r9",
    "add     ebp, r9d",
    "cmp     rcx, rdi",
    "jle     0x1400318c4",
    "mov     ecx, 0x12",
    "cmp     ebp, r15d",
    "cmovg   ebx, ecx",
    "mov     eax, ebx",
    "cmp     ebp, ecx",
    "mov     dil, bl",
    "jle     0x140031a63",
    "cmp     r14b, bl",
    "mov     ecx, 0x1",
    "movzx   eax, r14b",
    "cmove   eax, ecx",
    "mov     dword [rsi+0xc], ebp",
    "mov     word [rsi+0x8], r12w",
    "mov     byte [rsi+0xa], al",
    "cmp     al, cl",
    "je      0x140031a63",
    "mov     rax, qword [rsi+0x18]",
    "and     word [rsi+0x8], 0x2d",
    "mov     qword [rsi+0x10], rax",
    "mov     eax, ebx",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "call    sub_140030d38",
    "jmp     0x140031957",
    "mov     eax, ecx",
    "jmp     0x140031a70",
    "mov     rax, qword [rdx+0x128]",
    "cmp     rax, rbx",
    "je      0x140031925",
    "mov     rax, qword [rsi+0x10]",
    "cmp     byte [rax], 0xfe",
    "jne     0x140031a00",
    "mov     rcx, qword [rsi+0x10]",
    "mov     r8d, edi",
    "mov     rdx, r13",
    "call    memcpy",
    "jmp     0x1400319c9",
    "mov     eax, 0x7",
    "jmp     0x140031a70",
    "cmp     eax, ebx",
    "je      0x140031965",
    "add     dword [rax+0x30], r8d",
    "mov     dword [rax+0x18], ecx",
    "cmp     byte [rax], 0xff",
    "jne     0x140031a15",
    "cmp     byte [rax+0x1], 0xff",
    "jne     0x140031a63",
    "cmp     dil, bl",
    "je      0x140031a63",
    "cmp     byte [rax+0x1], 0xfe",
    "movzx   edi, dil",
    "mov     eax, 0x2",
    "cmove   edi, eax",
    "mov     dil, 0x3",
    "mov     rcx, rsi",
    "call    sub_140030eb4",
    "cmp     eax, ebx",
    "jne     0x14003195b",
    "mov     rcx, qword [rsi+0x10]",
    "add     dword [rsi+0xc], 0xfffffffe",
    "movsxd  r8, dword [rsi+0xc]",
    "lea     rdx, [rcx+0x2]",
    "call    memmove",
    "mov     rax, qword [rsi+0x10]",
    "movsxd  rdx, dword [rsi+0xc]",
    "mov     byte [rdx+rax], bl",
    "mov     rax, qword [rsi+0x10]",
    "movsxd  rcx, dword [rsi+0xc]",
    "mov     byte [rcx+rax+0x1], bl",
    "mov     eax, 0x200",
    "mov     byte [rsi+0xa], dil",
    "or      word [rsi+0x8], ax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}