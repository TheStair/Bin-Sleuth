{
  "address": "0x140099da0",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rsi",
    "push    rdi",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x90",
    "mov     rdi, rdx",
    "mov     esi, ecx",
    "mov     ebx, 0x10000",
    "and     qword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     r8, [rel data_140103d18]  {u\"export\"}",
    "call    sub_140013220",
    "mov     dword [rsp+0x48], eax",
    "and     qword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     r8, [rel data_140107788]  {u\"silent\"}",
    "mov     rdx, rdi",
    "mov     ecx, esi",
    "call    sub_140013220",
    "lea     ecx, [rbx+0x40]",
    "test    eax, eax",
    "cmovne  ebx, ecx",
    "mov     dword [rsp+0x40], ebx",
    "and     qword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     r8, [rel data_140107798]  {u\"nokey\"}",
    "mov     rdx, rdi",
    "mov     ecx, esi",
    "call    sub_140013220",
    "mov     dword [rsp+0x44], eax",
    "lea     rax, [rel data_1401074b8]  {u\"CURRENT_USER\"}",
    "mov     qword [rsp+0x20], rax",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rel data_1401074d8]  {u\"systemstore\"}",
    "mov     rdx, rdi",
    "mov     ecx, esi",
    "call    sub_140013220",
    "mov     r13, qword [rsp+0x60]",
    "mov     rcx, r13",
    "call    sub_1400055dc",
    "mov     ebx, eax",
    "lea     rax, [rel data_1400f9d5c]",
    "mov     qword [rsp+0x20], rax",
    "lea     r9, [rsp+0x68]",
    "lea     r8, [rel data_1401077a8]  {u\"store\"}",
    "mov     rdx, rdi",
    "mov     ecx, esi",
    "call    sub_140013220",
    "mov     rdi, qword [rsp+0x68]",
    "mov     r9, rdi",
    "mov     r8d, ebx",
    "mov     rdx, r13",
    "lea     rcx, [rel data_1401077c0]  {u\" * System Store  : '%s' (0x%08x)\u2026\"}",
    "call    sub_14000c030",
    "or      ebx, 0xc000",
    "mov     qword [rsp+0x20], rdi",
    "mov     r9d, ebx",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "lea     ecx, [rdx+0xa]",
    "call    qword [rel CertOpenStore]",
    "mov     r15, rax",
    "mov     qword [rsp+0x70], rax",
    "test    rax, rax",
    "je      0x14009a253",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140107cf0]  {u\"ERROR kuhl_m_crypto_l_certificat\u2026\"}",
    "call    sub_14000c030",
    "xor     r13d, r13d",
    "mov     dword [rsp+0x30], r13d",
    "xor     edx, edx",
    "mov     rcx, rax",
    "call    qword [rel CertEnumCertificatesInStore]",
    "mov     rbx, rax",
    "mov     qword [rsp+0x58], rax",
    "mov     edx, 0x1",
    "mov     rcx, r15",
    "call    qword [rel CertCloseStore]",
    "jmp     0x14009a267",
    "xor     edi, edi",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0xc0]",
    "add     rsp, 0x90",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "mov     rdx, rbx",
    "mov     rcx, r15",
    "call    qword [rel CertEnumCertificatesInStore]",
    "mov     rbx, rax",
    "mov     qword [rsp+0x58], rax",
    "inc     r13d",
    "mov     dword [rsp+0x30], r13d",
    "jmp     0x140099ed0",
    "lea     rax, [rel data_1400d5b28]",
    "and     dword [rsp+0x28], 0x0",
    "and     qword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, dword [rax+rdi*4]",
    "mov     rcx, rbx",
    "call    qword [rel CertGetNameStringW]",
    "mov     dword [rsp+0xd0], eax",
    "test    eax, eax",
    "je      0x14009a207",
    "test    rbx, rbx",
    "je      0x14009a243",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140107c50]  {u\"ERROR kuhl_m_crypto_l_certificat\u2026\"}",
    "call    sub_14000c030",
    "inc     edi",
    "jmp     0x140099edb",
    "mov     edx, eax",
    "add     rdx, rdx",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "mov     qword [rsp+0x78], rax",
    "test    rax, rax",
    "je      0x14009a222",
    "cmp     edi, 0x5",
    "jae     0x14009a222",
    "mov     ecx, dword [rsp+0xd0]",
    "mov     dword [rsp+0x28], ecx",
    "mov     qword [rsp+0x20], rax",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "lea     rax, [rel data_1400d5b28]",
    "mov     edx, dword [rax+rdi*4]",
    "mov     rcx, rbx",
    "call    qword [rel CertGetNameStringW]",
    "cmp     eax, dword [rsp+0xd0]",
    "jne     0x14009a1e8",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140107bc0]  {u\"ERROR kuhl_m_crypto_l_certificat\u2026\"}",
    "call    sub_14000c030",
    "mov     r8, rsi",
    "mov     edx, r13d",
    "lea     rcx, [rel data_140107400]  {u\"%2u. %s\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    sub_140099ba0",
    "and     dword [rsp+0xd0], 0x0",
    "lea     r9, [rsp+0xd0]",
    "xor     r8d, r8d",
    "lea     edx, [r8+0x2]",
    "mov     rcx, rbx",
    "call    qword [rel CertGetCertificateContextProperty]",
    "test    eax, eax",
    "je      0x14009a1b0",
    "cmp     dword [rsp+0x48], 0x0",
    "je      0x14009a1da",
    "mov     edx, dword [rsp+0xd0]",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "mov     qword [rsp+0x80], rax",
    "test    rax, rax",
    "je      0x14009a1b0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "jmp     0x14009a1fc",
    "mov     qword [rsp+0x28], rsi",
    "mov     dword [rsp+0x20], r13d",
    "mov     r9, qword [rsp+0x68]",
    "mov     r8, qword [rsp+0x60]",
    "mov     edx, dword [rsp+0xd0]",
    "mov     rcx, rbx",
    "call    sub_14009b658",
    "lea     r9, [rsp+0xd0]",
    "mov     r8, rax",
    "mov     edx, 0x2",
    "mov     rcx, rbx",
    "call    qword [rel CertGetCertificateContextProperty]",
    "test    eax, eax",
    "je      0x14009a193",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "jmp     0x14009a222",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140107b10]  {u\"ERROR kuhl_m_crypto_l_certificat\u2026\"}",
    "call    sub_14000c030",
    "mov     r10d, dword [rdi+0x10]",
    "mov     ecx, r10d",
    "call    sub_140005658",
    "lea     r8, [rel data_140107838]  {u\"(null)\"}",
    "cmp     qword [rdi+0x8], 0x0",
    "cmovne  r8, qword [rdi+0x8]",
    "lea     rdx, [rel data_140107838]  {u\"(null)\"}",
    "cmp     qword [rdi], 0x0",
    "cmovne  rdx, qword [rdi]",
    "lea     r9, [rel data_1400e17c8]",
    "test    rax, rax",
    "cmovne  r9, rax",
    "mov     dword [rsp+0x20], r10d",
    "lea     rcx, [rel data_140107850]  {u\"\\tKey Container  : %s\\n\\tProvide\u2026\"}",
    "call    sub_14000c030",
    "cmp     dword [rsp+0x44], 0x0",
    "jne     0x14009a1a7",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "lea     rax, [rsp+0x34]",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0xd8]",
    "mov     qword [rsp+0x20], rax",
    "lea     r9, [rsp+0x38]",
    "xor     r8d, r8d",
    "mov     edx, dword [rsp+0x40]",
    "mov     rcx, rbx",
    "call    qword [rel CryptAcquireCertificatePrivateKey]",
    "test    eax, eax",
    "je      0x14009a17d",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140107a60]  {u\"ERROR kuhl_m_crypto_l_certificat\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x14009a1a7",
    "mov     r8d, dword [rsp+0xd8]",
    "cmp     r8d, 0x1",
    "je      0x14009a0b6",
    "lea     rdx, [rel data_1400e68b8]  {u\"AT_KEYEXCHANGE\"}",
    "cmp     r8d, 0x2",
    "je      0x14009a0ad",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x38]",
    "call    sub_14009a99c",
    "cmp     dword [rsp+0x34], 0x0",
    "je      0x14009a151",
    "lea     r8, [rsp+0x50]",
    "mov     rcx, qword [rsp+0x38]",
    "call    qword [rel CryptGetUserKey]",
    "test    eax, eax",
    "je      0x14009a107",
    "lea     rdx, [rel data_1400e68d8]  {u\"AT_SIGNATURE\"}",
    "jmp     0x14009a0bd",
    "lea     rdx, [rel data_1400e17c8]",
    "lea     rax, [rel data_1400e68f8]  {u\"CNG Key\"}",
    "cmp     r8d, 0xffffffff",
    "cmove   rdx, rax",
    "jmp     0x14009a0bd",
    "jmp     0x14009a17b",
    "mov     rcx, qword [rsp+0x38]",
    "call    NCryptFreeObject",
    "call    qword [rel GetLastError]",
    "mov     edx, eax",
    "lea     rcx, [rel data_140107920]  {u\"ERROR kuhl_m_crypto_l_certificat\u2026\"}",
    "call    sub_14000c030",
    "mov     r8, qword [rsp+0x38]",
    "mov     rdx, qword [rsp+0x50]",
    "xor     ecx, ecx",
    "call    sub_14009a99c",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel CryptDestroyKey]",
    "jmp     0x14009a11b",
    "lea     rcx, [rel data_1401078e0]  {u\"\\tType           : %s (0x%08x)\\n\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0xd8]",
    "cmp     edx, 0xffffffff",
    "je      0x14009a131",
    "jmp     0x14009a1a7",
    "xor     edx, edx",
    "mov     rcx, qword [rsp+0x38]",
    "call    qword [rel CryptReleaseContext]",
    "jmp     0x14009a17b",
    "cmp     dword [rsp+0x34], 0x0",
    "je      0x14009a17b"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}