{
  "address": "0x14003efa8",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x20",
    "mov     rax, qword [r8+0x40]",
    "mov     r12d, edx",
    "mov     r13, r8",
    "movzx   r9d, word [rax+0x6]",
    "mov     rbp, rcx",
    "xor     esi, esi",
    "lea     r14d, [r9*8+0x20]",
    "lea     eax, [r14+0xc8]",
    "movsxd  rdx, eax",
    "call    sub_140016ba8",
    "mov     rbx, rax",
    "mov     qword [r13+0x38], rax",
    "test    rax, rax",
    "jne     0x14003f004",
    "lea     rdi, [rax+0xc8]",
    "movsxd  r8, r14d",
    "mov     qword [rax+0x28], rdi",
    "mov     rdx, qword [r13+0x40]",
    "mov     rcx, rdi",
    "call    memcpy",
    "and     qword [rdi+0x10], rsi",
    "test    r12d, r12d",
    "je      0x14003f02c",
    "lea     esi, [rax+0x7]",
    "jmp     0x14003f0fa",
    "mov     rax, qword [rbp+0x20]",
    "lea     rdx, [rbx+0x70]",
    "mov     rcx, qword [rax+0x8]",
    "mov     rax, qword [rcx+0x8]",
    "xor     ecx, ecx",
    "movsxd  r9, dword [rax+0x30]",
    "mov     byte [rbx+0x5b], 0x1",
    "mov     byte [rbx+0x5a], 0xff",
    "mov     byte [rbx+0x59], sil",
    "mov     qword [rbx+0x20], rbp",
    "mov     dword [rbx+0xc], r9d",
    "mov     word [rdi+0x6], r12w",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rdi, qword [rsp+0x58]",
    "mov     eax, esi",
    "mov     rsi, qword [rsp+0x50]",
    "add     rsp, 0x20",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "mov     qword [rdx], rbx",
    "movzx   eax, byte [rbx+0x5b]",
    "inc     ecx",
    "add     rdx, 0x68",
    "cmp     ecx, eax",
    "jl      0x14003f056",
    "cmp     byte [rbp+0x60], 0x2",
    "je      0x14003f0d7",
    "cmp     word [rdi+0x8], 0xd",
    "jae     0x14003f0fa",
    "mov     r8d, dword [rel data_14013d1a0]",
    "imul    r8d, r9d",
    "mov     dword [rbx], r8d",
    "mov     rax, qword [rbp+0x20]",
    "mov     rcx, qword [rax+0x18]",
    "movsxd  rdx, dword [rcx+0x74]",
    "test    rdx, rdx",
    "jns     0x14003f095",
    "mov     rcx, qword [rdi+0x20]",
    "test    rcx, rcx",
    "je      0x14003f0ed",
    "imul    rdx, r9",
    "neg     rdx",
    "shl     rdx, 0xa",
    "jmp     0x14003f099",
    "mov     rcx, qword [rdi+0x18]",
    "test    byte [rcx], 0x2",
    "jne     0x14003f0fa",
    "cmp     rcx, qword [rbp+0x10]",
    "jne     0x14003f0fa",
    "mov     rcx, r9",
    "mov     dword [rbx+0x54], r9d",
    "call    sub_140016870",
    "mov     ecx, esi",
    "mov     esi, 0x7",
    "test    rax, rax",
    "mov     qword [rbx+0x40], rax",
    "cmove   ecx, esi",
    "mov     esi, ecx",
    "mov     eax, 0x20000000",
    "cmp     rdx, rax",
    "cmovl   rax, rdx",
    "cmp     r8d, eax",
    "cmovg   eax, r8d",
    "mov     dword [rbx+0x4], eax",
    "cmp     byte [rel data_14013d058], sil",
    "jne     0x14003f0d7",
    "mov     byte [rbx+0x5c], 0x3"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}