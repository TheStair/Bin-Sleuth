{
  "address": "0x140028748",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x30",
    "cmp     byte [rcx], 0x0",
    "mov     r12, qword [rcx+0x48]",
    "mov     r13d, dword [rcx+0x4]",
    "mov     rbx, rcx",
    "je      0x140028777",
    "call    sub_1400275e0",
    "mov     edx, eax",
    "mov     dword [rsp+0x50], eax",
    "test    eax, eax",
    "jne     0x14002887f",
    "xor     edx, edx",
    "mov     dword [rax+0x8], edx",
    "jmp     0x14002878a",
    "mov     rbx, qword [rsp+0x58]",
    "mov     rbp, qword [rsp+0x60]",
    "mov     rsi, qword [rsp+0x68]",
    "add     rsp, 0x30",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "movzx   eax, word [rbx+0x18]",
    "xor     edi, edi",
    "mov     rbp, rax",
    "test    eax, eax",
    "jle     0x140028827",
    "cmp     byte [rbx+0x8], 0x0",
    "jne     0x14002887d",
    "mov     rcx, qword [rbx+0x60]",
    "movzx   eax, byte [rcx+rdi*2]",
    "shl     eax, 0x8",
    "movsxd  rsi, eax",
    "movzx   eax, byte [rcx+rdi*2+0x1]",
    "or      rsi, rax",
    "movzx   eax, word [rbx+0x1a]",
    "and     rsi, rax",
    "add     rsi, qword [rbx+0x50]",
    "test    edx, edx",
    "jne     0x1400287d7",
    "mov     eax, edx",
    "movzx   eax, byte [rbx+0x9]",
    "add     eax, 0x8",
    "movsxd  r10, eax",
    "add     r10, qword [rbx+0x50]",
    "test    edx, edx",
    "jne     0x14002887d",
    "cmp     byte [rbx+0x8], 0x0",
    "jne     0x14002881b",
    "lea     r9, [rsp+0x50]",
    "mov     r8, rsi",
    "mov     rdx, rbx",
    "mov     rcx, rbx",
    "call    sub_140026a3c",
    "mov     edx, dword [rsp+0x50]",
    "movzx   eax, byte [r10+0x2]",
    "movzx   edx, byte [r10+0x1]",
    "mov     r9d, r13d",
    "shl     edx, 0x8",
    "mov     r8b, 0x5",
    "mov     rcx, r12",
    "or      edx, eax",
    "movzx   eax, byte [r10]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [r10+0x3]",
    "or      edx, eax",
    "lea     rax, [rsp+0x50]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14002650c",
    "mov     edx, dword [rsp+0x50]",
    "inc     rdi",
    "cmp     rdi, rbp",
    "jl      0x14002879b",
    "test    edx, edx",
    "jne     0x14002881b",
    "movzx   eax, byte [rsi+0x2]",
    "movzx   edx, byte [rsi+0x1]",
    "mov     r9d, r13d",
    "shl     edx, 0x8",
    "mov     r8b, 0x5",
    "mov     rcx, r12",
    "or      edx, eax",
    "movzx   eax, byte [rsi]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rsi+0x3]",
    "or      edx, eax",
    "lea     rax, [rsp+0x50]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14002650c",
    "mov     edx, dword [rsp+0x50]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}