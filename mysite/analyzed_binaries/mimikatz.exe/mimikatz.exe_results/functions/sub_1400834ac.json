{
  "address": "0x1400834ac",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     dword [rsp+0x18], r8d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x60",
    "mov     ebx, r9d",
    "mov     rdi, rdx",
    "mov     rsi, rcx",
    "test    rdx, rdx",
    "je      0x140083780",
    "mov     ecx, 0x26903",
    "call    sub_140084e70",
    "mov     r10, qword [rsp+0xa8]",
    "mov     rbp, qword [rsp+0xb8]",
    "test    r10, r10",
    "je      0x1400834ed",
    "mov     rdx, qword [rsp+0xb0]",
    "xor     ecx, ecx",
    "test    rdx, rdx",
    "sete    cl",
    "xor     eax, eax",
    "test    rbp, rbp",
    "sete    al",
    "cmp     eax, ecx",
    "jne     0x140083780",
    "test    rbp, rbp",
    "jne     0x140083780",
    "mov     r11, qword [rsp+0xc0]",
    "xor     ecx, ecx",
    "test    r11, r11",
    "sete    cl",
    "xor     eax, eax",
    "cmp     qword [rsp+0xc8], rax",
    "sete    al",
    "cmp     ecx, eax",
    "jne     0x140083780",
    "lea     eax, [r8+0x1]",
    "cmp     eax, 0x80",
    "ja      0x140083780",
    "mov     rcx, rdi",
    "call    sub_140019074",
    "cmp     eax, 0xff",
    "jg      0x140083780",
    "mov     eax, ebx",
    "and     ebx, 0x7",
    "and     eax, 0x180800",
    "mov     dword [rsp+0x88], eax",
    "cmp     ebx, 0x4",
    "jne     0x140083574",
    "cmp     ebx, 0x5",
    "jne     0x140083657",
    "mov     ebx, 0x2",
    "jmp     0x140083657",
    "mov     r9b, bl",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     byte [rsp+0x20], 0x0",
    "call    sub_14005462c",
    "mov     r8d, dword [rsp+0x90]",
    "test    rax, rax",
    "je      0x1400836cc",
    "mov     r9d, eax",
    "mov     rax, qword [rsp+0xd0]",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x50], rax",
    "mov     rax, qword [rsp+0xc8]",
    "or      r9d, 0x1",
    "mov     qword [rsp+0x48], rax",
    "mov     rax, qword [rsp+0xa0]",
    "mov     qword [rsp+0x40], r11",
    "mov     qword [rsp+0x38], rbp",
    "mov     qword [rsp+0x30], rdx",
    "mov     qword [rsp+0x28], r10",
    "mov     rdx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400834ac",
    "test    eax, eax",
    "jne     0x14008378a",
    "mov     r9b, bl",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     byte [rsp+0x20], 0x1",
    "call    sub_14005462c",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x1400836ef",
    "mov     ecx, dword [rax+0x4]",
    "and     ecx, 0x3",
    "cmp     ecx, ebx",
    "jne     0x1400836cc",
    "mov     rbx, qword [rsp+0x80]",
    "add     rsp, 0x60",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rsp+0xd0]",
    "mov     r9d, dword [rsp+0x88]",
    "mov     r8d, dword [rsp+0x90]",
    "mov     qword [rsp+0x50], rax",
    "mov     rax, qword [rsp+0xc8]",
    "or      r9d, 0x2",
    "mov     qword [rsp+0x48], rax",
    "mov     rax, qword [rsp+0xc0]",
    "mov     rdx, rdi",
    "mov     qword [rsp+0x40], rax",
    "mov     rax, qword [rsp+0xb0]",
    "mov     qword [rsp+0x38], rbp",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsp+0xa8]",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x28], rax",
    "mov     rax, qword [rsp+0xa0]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400834ac",
    "test    eax, eax",
    "jne     0x14008378a",
    "mov     rdi, qword [rax+0x40]",
    "test    rdi, rdi",
    "je      0x14008370f",
    "lea     eax, [rbx+0x7]",
    "jmp     0x14008378a",
    "movsx   ecx, byte [rax]",
    "cmp     ecx, r8d",
    "jne     0x1400836cc",
    "mov     r8d, dword [rsp+0x90]",
    "lea     ebx, [rax+0x3]",
    "mov     rax, qword [rsp+0xd0]",
    "test    rax, rax",
    "je      0x14008371e",
    "add     dword [rdi], 0xffffffff",
    "jne     0x14008370f",
    "cmp     dword [rsi+0xc8], 0x0",
    "je      0x1400836af",
    "and     dword [rbx+0x4], 0x3",
    "mov     rcx, qword [rsp+0xa8]",
    "mov     qword [rbx+0x40], rax",
    "mov     eax, dword [rsp+0x88]",
    "mov     qword [rbx+0x20], rbp",
    "or      dword [rbx+0x4], eax",
    "mov     rax, qword [rsp+0xb0]",
    "test    rcx, rcx",
    "cmovne  rax, rcx",
    "mov     qword [rbx+0x18], rax",
    "mov     rax, qword [rsp+0xc0]",
    "mov     qword [rbx+0x28], rax",
    "mov     rax, qword [rsp+0xc8]",
    "mov     qword [rbx+0x30], rax",
    "mov     rax, qword [rsp+0xa0]",
    "mov     qword [rbx+0x8], rax",
    "mov     eax, dword [rsp+0x90]",
    "mov     byte [rbx], al",
    "xor     eax, eax",
    "jmp     0x14008378a",
    "inc     dword [rax]",
    "mov     rcx, qword [rdi+0x10]",
    "call    qword [rdi+0x8]",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "mov     rcx, qword [rsi+0x8]",
    "jmp     0x1400836c7",
    "mov     ebx, 0x5",
    "lea     r8, [rel data_1400f7ad0]  {\"unable to delete/modify user-fun\u2026\"}",
    "mov     rcx, rsi",
    "mov     edx, ebx",
    "call    sub_140019114",
    "mov     eax, ebx",
    "jmp     0x14008378a",
    "test    rcx, rcx",
    "jne     0x1400836b5",
    "and     dword [rcx+0xc8], 0xfffffffd",
    "or      dword [rcx+0xc8], 0x1",
    "mov     rcx, qword [rcx+0x10]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}