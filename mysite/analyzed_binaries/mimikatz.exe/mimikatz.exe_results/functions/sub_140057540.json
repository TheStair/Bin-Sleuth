{
  "address": "0x140057540",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "mov     rax, qword [rcx]",
    "mov     rdi, rcx",
    "mov     rcx, qword [r8]",
    "mov     rax, qword [rax+0x28]",
    "mov     dl, 0x1",
    "mov     rbx, r8",
    "mov     qword [rsp+0x48], rax",
    "call    sub_140031c84",
    "mov     qword [rsp+0x40], rax",
    "test    rax, rax",
    "je      0x1400577af",
    "mov     rbx, qword [rsp+0xb8]",
    "add     rsp, 0x70",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, qword [rbx]",
    "call    sub_140035e5c",
    "mov     rcx, qword [rbx+0x8]",
    "mov     dl, 0x1",
    "movsxd  r13, eax",
    "call    sub_140031c84",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x1400577af",
    "cmp     byte [rax], 0x0",
    "jne     0x1400575b5",
    "mov     rcx, qword [rbx+0x8]",
    "call    sub_140035e5c",
    "mov     rcx, qword [rbx+0x10]",
    "mov     dl, 0x1",
    "movsxd  rbp, eax",
    "mov     dword [rsp+0xc8], ebp",
    "call    sub_140031c84",
    "mov     qword [rsp+0x50], rax",
    "test    rax, rax",
    "je      0x1400577af",
    "mov     rdx, qword [rbx]",
    "mov     rcx, qword [rdi]",
    "call    sub_140031744",
    "jmp     0x1400577af",
    "mov     rcx, qword [rbx+0x10]",
    "call    sub_140035e5c",
    "mov     rcx, rdi",
    "mov     dword [rsp+0xb0], eax",
    "lea     eax, [r13+0x1]",
    "cdqe    ",
    "mov     rdx, rax",
    "mov     qword [rsp+0x38], rax",
    "call    sub_140056624",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400577af",
    "xor     esi, esi",
    "xor     edx, edx",
    "mov     ecx, r13d",
    "and     dword [rsp+0xc0], esi",
    "sub     ecx, ebp",
    "xor     r12d, r12d",
    "movsxd  rax, ecx",
    "xor     r15d, r15d",
    "mov     r8, rbp",
    "mov     qword [rsp+0x58], rbp",
    "mov     qword [rsp+0x30], rdx",
    "mov     qword [rsp+0x60], rax",
    "test    ecx, ecx",
    "js      0x14005775c",
    "mov     eax, r13d",
    "movsxd  rdx, r12d",
    "movsxd  rcx, esi",
    "add     rdx, qword [rsp+0x40]",
    "sub     eax, r12d",
    "add     rcx, rbx",
    "movsxd  r8, eax",
    "call    memcpy",
    "sub     r13d, r12d",
    "mov     r9b, 0x1",
    "add     esi, r13d",
    "mov     rdx, rbx",
    "movsxd  rax, esi",
    "mov     r8d, esi",
    "mov     byte [rax+rbx], 0x0",
    "mov     rcx, qword [rdi]",
    "lea     rax, [rel sub_140016950]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140031820",
    "cmp     eax, 0x12",
    "jne     0x1400577af",
    "mov     rax, qword [rsp+0x40]",
    "mov     bpl, byte [r15+rax]",
    "cmp     bpl, byte [r14]",
    "jne     0x14005773d",
    "mov     rcx, rdi",
    "call    sub_1400363a8",
    "mov     byte [rdx+rbx], bpl",
    "inc     esi",
    "inc     rdx",
    "movsxd  rcx, r12d",
    "mov     rdx, r14",
    "add     rcx, rax",
    "call    memcmp",
    "test    eax, eax",
    "jne     0x140057733",
    "mov     rdx, qword [rsp+0x30]",
    "mov     r8, qword [rsp+0x58]",
    "mov     ecx, dword [rsp+0xc8]",
    "mov     eax, dword [rsp+0xb0]",
    "cmp     eax, ecx",
    "jle     0x1400576f2",
    "movsxd  rbp, dword [rsp+0xb0]",
    "mov     rdx, qword [rsp+0x50]",
    "movsxd  rcx, esi",
    "mov     r8, rbp",
    "add     rcx, rbx",
    "call    memcpy",
    "movsxd  rax, dword [rsp+0xc8]",
    "mov     rdx, qword [rsp+0x30]",
    "add     esi, dword [rsp+0xb0]",
    "lea     r12d, [r12+rax-0x1]",
    "lea     r15, [r15+rax-0x1]",
    "add     rdx, rbp",
    "mov     r8, rax",
    "jmp     0x140057746",
    "mov     rdx, qword [rsp+0x38]",
    "sub     eax, ecx",
    "cdqe    ",
    "add     rdx, rax",
    "mov     rax, qword [rsp+0x48]",
    "movsxd  rcx, dword [rax+0x7c]",
    "lea     rax, [rdx-0x1]",
    "mov     qword [rsp+0x38], rdx",
    "cmp     rax, rcx",
    "jg      0x1400577d4",
    "inc     r15",
    "inc     r12d",
    "mov     qword [rsp+0x30], rdx",
    "cmp     r15, qword [rsp+0x60]",
    "jle     0x140057646",
    "mov     rcx, rdi",
    "call    sub_1400363a8",
    "mov     rcx, rbx",
    "mov     ecx, dword [rsp+0xc0]",
    "inc     ecx",
    "mov     dword [rsp+0xc0], ecx",
    "lea     eax, [rcx-0x1]",
    "test    ecx, eax",
    "jne     0x1400576f2",
    "mov     rbp, rbx",
    "call    sub_1400823f0",
    "test    eax, eax",
    "jne     0x1400577c7",
    "mov     rcx, rdi",
    "call    sub_1400363d4",
    "mov     rcx, rbp",
    "jmp     0x1400577df",
    "mov     rdx, qword [rsp+0x38]",
    "movsxd  rcx, edx",
    "sub     rcx, r13",
    "lea     rdx, [rcx+rdx-0x1]",
    "mov     rcx, rbx",
    "call    sub_1400169f4",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400577c7",
    "call    sub_140016950",
    "jmp     0x1400577af"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}