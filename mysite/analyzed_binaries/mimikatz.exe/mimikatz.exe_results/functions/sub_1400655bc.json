{
  "address": "0x1400655bc",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/dec108a2f8464ac388ec29affb61c4d8",
    "contain loop",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "64-bit execution via heavens gate/d7fcc2def38746b09a33d0c7032e9b82",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/88b7572ed916436d804701d7ca2c8848",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/1d2aacee85cc43a0a1c1ba47e394ae52",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], r8",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x88",
    "mov     rax, qword [rdx]",
    "mov     rbx, qword [rdx+0x28]",
    "mov     rbp, qword [rcx+0x10]",
    "mov     eax, dword [rax]",
    "xor     r15d, r15d",
    "mov     rdi, rdx",
    "mov     dword [rsp+0xd8], eax",
    "mov     rax, qword [rdx+0x50]",
    "mov     rsi, rcx",
    "mov     dword [rsp+0xd0], r15d",
    "mov     dword [rsp+0xe8], r15d",
    "mov     qword [rsp+0x48], rax",
    "cmp     qword [rdx+0x70], r15",
    "je      0x140065621",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x20], r15",
    "lea     edx, [r9+0x21]",
    "call    sub_14004da74",
    "cmp     eax, r15d",
    "jne     0x1400659a4",
    "lea     rdx, [rel data_1400f6900]  {\"cannot use window functions in r\u2026\"}",
    "call    sub_1400191b8",
    "jmp     0x1400659a4",
    "add     rsp, 0x88",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "dec     dword [rsi+0x44]",
    "mov     r14d, dword [rsi+0x44]",
    "mov     eax, 0x140",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     r8d, r14d",
    "mov     word [rdi+0xa], ax",
    "call    sub_140065330",
    "mov     rax, qword [rdi+0x60]",
    "mov     r13, qword [rdi+0x48]",
    "mov     qword [rsp+0x50], rax",
    "mov     eax, dword [rdi+0x10]",
    "mov     dword [rsp+0x44], eax",
    "mov     eax, dword [rdi+0x14]",
    "mov     qword [rdi+0x60], r15",
    "mov     dword [rdi+0x14], r15d",
    "mov     dword [rdi+0x10], r15d",
    "cmp     dword [rbx], r15d",
    "mov     dword [rsp+0x40], eax",
    "mov     eax, r15d",
    "jle     0x1400656b6",
    "mov     ebx, eax",
    "lea     rcx, [rbx+0x48]",
    "neg     rax",
    "sbb     ecx, ecx",
    "and     ecx, 0x2",
    "add     ecx, 0x5",
    "neg     rax",
    "lea     eax, [rdx+0x1]",
    "mov     dword [rsp+0xe8], edx",
    "sbb     ecx, ecx",
    "mov     dword [rsi+0x34], eax",
    "and     ecx, 0x2",
    "add     ecx, 0x6",
    "jmp     0x1400656f2",
    "cdqe    ",
    "imul    rax, rax, 0x70",
    "mov     ebx, dword [rax+rbx+0x4c]",
    "mov     dword [rsp+0xd0], ebx",
    "jmp     0x1400656b8",
    "inc     eax",
    "add     rcx, 0x70",
    "cmp     eax, dword [rbx]",
    "jl      0x14006568f",
    "mov     r9d, dword [rsp+0xd8]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r8d, r12d",
    "mov     edx, 0x70",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "mov     r8d, 0x1",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_1400654e0",
    "mov     r9d, dword [r13]",
    "and     dword [rsp+0x20], 0x0",
    "add     r9d, 0x2",
    "mov     r8d, r12d",
    "mov     edx, 0x70",
    "mov     rcx, rbp",
    "mov     rbx, rax",
    "call    sub_140032364",
    "mov     r9d, 0xfffffff7",
    "mov     r8, rbx",
    "mov     edx, eax",
    "mov     rcx, rbp",
    "call    sub_140032c40",
    "mov     ebx, dword [rsp+0xd0]",
    "mov     qword [rsp+0x70], r13",
    "jmp     0x1400657a3",
    "inc     dword [rsi+0x38]",
    "mov     eax, dword [rsp+0xd8]",
    "mov     qword [rsp+0x68], r15",
    "mov     dword [rsp+0x60], r15d",
    "mov     dword [rsp+0x64], r15d",
    "mov     r15d, dword [rsi+0x38]",
    "mov     byte [rsp+0x58], cl",
    "mov     r8d, ebx",
    "mov     edx, 0x74",
    "mov     r9d, r15d",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x5c], r12d",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "test    r13, r13",
    "je      0x140065786",
    "mov     r12d, dword [rsi+0x34]",
    "mov     rax, r13",
    "lea     edx, [r12+0x1]",
    "mov     dword [rsi+0x34], edx",
    "cmp     byte [rdi+0x8], 0x82",
    "jne     0x1400656e7",
    "test    byte [rcx], 0x20",
    "jne     0x1400656a3",
    "mov     ebx, r15d",
    "jmp     0x1400656b8",
    "mov     rcx, qword [rsp+0x48]",
    "and     qword [rdi+0x48], 0x0",
    "lea     r8, [rel data_1400f6934]  {\"SETUP\"}",
    "and     qword [rcx+0x58], 0x0",
    "mov     rcx, rsi",
    "mov     edx, 0x1",
    "call    sub_140032580",
    "mov     rdx, qword [rsp+0x48]",
    "lea     r8, [rsp+0x58]",
    "mov     rcx, rsi",
    "call    sub_1400692cc",
    "mov     rcx, qword [rsp+0x48]",
    "mov     qword [rcx+0x58], rdi",
    "test    eax, eax",
    "jne     0x140065983",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, eax",
    "lea     edx, [r9+0x70]",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "or      dword [rdi+0xc], 0x20",
    "mov     dword [rdi+0x1c], eax",
    "mov     eax, dword [rsp+0xe8]",
    "test    eax, eax",
    "je      0x1400657cc",
    "xor     r15d, r15d",
    "and     dword [rsp+0x20], eax",
    "lea     edx, [rax+0x24]",
    "mov     r9d, r14d",
    "mov     r8d, r12d",
    "mov     rcx, rbp",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, ebx",
    "mov     edx, 0x81",
    "mov     rcx, rbp",
    "mov     dword [rsp+0xd8], eax",
    "call    sub_140032364",
    "mov     r8d, r12d",
    "mov     rcx, rbp",
    "test    r13, r13",
    "je      0x140065864",
    "mov     rax, qword [rsp+0x50]",
    "mov     qword [rdi+0x48], r13",
    "mov     qword [rdi+0x60], rax",
    "mov     rcx, qword [rsi]",
    "call    sub_140044bf4",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r15d",
    "mov     edx, 0x7f",
    "mov     r9d, dword [r13]",
    "mov     dword [rsp+0x20], r15d",
    "mov     edx, 0x5a",
    "inc     r9d",
    "jmp     0x140065871",
    "mov     rax, qword [rsp+0xe0]",
    "mov     r8d, dword [rsp+0xd0]",
    "mov     dword [rsp+0x38], r14d",
    "mov     dword [rsp+0x30], ebx",
    "mov     qword [rsp+0x28], rax",
    "xor     r9d, r9d",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20], r15",
    "call    sub_1400639f0",
    "mov     eax, dword [rsp+0x44]",
    "cmp     eax, r15d",
    "je      0x14006590b",
    "lea     edx, [r15+0x2f]",
    "mov     r9d, ebx",
    "mov     r8d, eax",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], 0x1",
    "call    sub_140032364",
    "call    sub_140032364",
    "xor     r15d, r15d",
    "xor     r9d, r9d",
    "lea     edx, [r15+0x7b]",
    "mov     r8d, r12d",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "dec     dword [rsi+0x44]",
    "mov     eax, dword [rsp+0x40]",
    "mov     ebx, dword [rsi+0x44]",
    "cmp     eax, r15d",
    "jle     0x1400658b9",
    "mov     edx, ebx",
    "mov     rcx, rbp",
    "call    sub_14003278c",
    "test    byte [rdi+0xc], 0x8",
    "mov     rcx, rsi",
    "je      0x14006592c",
    "mov     r9d, r14d",
    "mov     r8d, eax",
    "mov     edx, 0x31",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "lea     r8, [rel data_1400f6970]  {\"RECURSIVE STEP\"}",
    "mov     edx, 0x1",
    "mov     qword [rdi+0x50], r15",
    "call    sub_140032580",
    "lea     r8, [rsp+0x58]",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_1400692cc",
    "mov     rax, qword [rsp+0x48]",
    "mov     qword [rdi+0x50], rax",
    "lea     rdx, [rel data_1400f6940]  {\"recursive aggregate queries not \u2026\"}",
    "call    sub_1400191b8",
    "jmp     0x14006595a",
    "mov     rdx, qword [rdi+0x48]",
    "cmp     rdx, r15",
    "je      0x140065997",
    "mov     r9d, dword [rsp+0xd8]",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "lea     edx, [r8+0xb]",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "mov     edx, r14d",
    "mov     rcx, rbp",
    "call    sub_14003278c",
    "jmp     0x140065986"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}