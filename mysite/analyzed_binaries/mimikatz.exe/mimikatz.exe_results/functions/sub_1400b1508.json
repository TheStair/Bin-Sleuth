{
  "address": "0x1400b1508",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp {__return_addr}",
    "mov     qword [rax+0x8 {__saved_rbx}], rbx",
    "mov     qword [rax+0x10 {__saved_rbp}], rbp",
    "push    rsi {__saved_rsi}",
    "push    rdi {__saved_rdi}",
    "push    r12 {__saved_r12}",
    "push    r13 {__saved_r13}",
    "push    r14 {__saved_r14}",
    "sub     rsp, 0x40",
    "and     qword [rax+0x20 {arg_20}], 0x0",
    "mov     r13, rcx",
    "call    qword [rel Ordinal_WLDAP32_26]",
    "jmp     0x1400b1764",
    "mov     rsi, rax",
    "test    rax, rax",
    "jne     0x1400b1532",
    "mov     rdx, rsi",
    "mov     rcx, r13",
    "call    qword [rel Ordinal_WLDAP32_133]",
    "lea     rcx, [rel data_1401190d0]  {u\"\\n%s\\n\"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "lea     r8, [rsp+0x88 {arg_20}]",
    "mov     rdx, rsi",
    "mov     rcx, r13",
    "call    qword [rel Ordinal_WLDAP32_127]",
    "jmp     0x1400b1737",
    "mov     rbx, qword [rsp+0x70 {__saved_rbx}]",
    "mov     rbp, qword [rsp+0x78 {__saved_rbp}]",
    "add     rsp, 0x40",
    "pop     r14 {__saved_r14}",
    "pop     r13 {__saved_r13}",
    "pop     r12 {__saved_r12}",
    "pop     rdi {__saved_rdi}",
    "pop     rsi {__saved_rsi}",
    "retn     {__return_addr}",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x1400b1566",
    "lea     rcx, [rel data_1401190e0]  {u\"  %s: \"}",
    "mov     rdx, rdi",
    "call    sub_14000c030",
    "mov     r8, rdi",
    "mov     rdx, rsi",
    "mov     rcx, r13",
    "call    qword [rel Ordinal_WLDAP32_142]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400b171a",
    "mov     rcx, qword [rsp+0x88 {arg_20}]",
    "test    rcx, rcx",
    "je      0x1400b1758",
    "mov     rcx, rdi",
    "call    qword [rel Ordinal_WLDAP32_147]",
    "mov     r8, qword [rsp+0x88 {arg_20}]",
    "mov     rdx, rsi",
    "mov     rcx, r13",
    "call    qword [rel Ordinal_WLDAP32_167]",
    "lea     rdx, [rel data_1401018a0]  {u\"name\"}",
    "mov     rcx, rdi",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "je      0x1400b16fc",
    "mov     rdx, rsi",
    "mov     rcx, r13",
    "call    qword [rel Ordinal_WLDAP32_27]",
    "xor     edx, edx  {0x0}",
    "call    qword [rel Ordinal_WLDAP32_301]",
    "mov     rax, qword [rbx]",
    "lea     rcx, [rel data_1401190f0]  {u\"%*S\\n\"}",
    "mov     r8, qword [rax+0x8]",
    "mov     edx, dword [rax]",
    "call    sub_14000c030",
    "lea     rdx, [rel data_1401191b0]  {u\"sAMAccountName\"}",
    "mov     rcx, rdi",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "je      0x1400b16fc",
    "lea     rdx, [rel data_1401192b8]  {u\"objectSid\"}",
    "mov     rcx, rdi",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "jne     0x1400b15e2",
    "lea     rdx, [rel data_140118cd0]  {u\"objectGUID\"}",
    "mov     rcx, rdi",
    "call    qword [rel _wcsicmp]",
    "test    eax, eax",
    "jne     0x1400b1613",
    "mov     rcx, qword [rbx]",
    "mov     rcx, qword [rcx+0x8]",
    "call    sub_14001311c",
    "jmp     0x1400b1602",
    "xor     r12d, r12d  {0x0}",
    "xor     r14d, r14d  {0x0}",
    "cmp     qword [rbx], r12",
    "je      0x1400b1602",
    "mov     rcx, qword [rbx]",
    "mov     rcx, qword [rcx+0x8]",
    "call    sub_1400130e8",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "jmp     0x1400b1711",
    "mov     rbp, rbx",
    "mov     rcx, rbx",
    "call    qword [rel Ordinal_WLDAP32_79]",
    "mov     edx, dword [rcx]",
    "mov     rcx, qword [rcx+0x8]",
    "mov     r8d, 0x1",
    "call    sub_140012f68",
    "mov     rcx, qword [rcx+0x8]",
    "call    sub_14001311c",
    "mov     rcx, qword [rbp]",
    "and     qword [rsp+0x20 {var_48}], 0x0",
    "mov     rcx, qword [rcx+0x8]",
    "lea     r9, [rsp+0x80 {arg_18}]",
    "lea     r8, [rsp+0x38 {hMem_1}]",
    "lea     rdx, [rsp+0x30 {hMem}]",
    "call    sub_1400140e0",
    "test    eax, eax",
    "je      0x1400b16e2",
    "lea     rcx, [rel data_14011ebe8]  {u\"\\n   [%u] \"}",
    "mov     edx, r14d",
    "call    sub_14000c030",
    "lea     rdx, [rel data_14011e7e0]  {u\"sIDHistory\"}",
    "mov     rcx, rdi",
    "call    qword [rel _wcsicmp]",
    "mov     rcx, qword [rbp]",
    "test    eax, eax",
    "jne     0x1400b16d1",
    "jmp     0x1400b1602",
    "inc     r12",
    "inc     r14d",
    "lea     rbp, [rbx+r12*8]",
    "cmp     qword [rbp], 0x0",
    "jne     0x1400b1621",
    "movsxd  rcx, dword [rsp+0x80 {arg_18}]",
    "lea     eax, [rcx-0x1]",
    "cmp     eax, 0x9",
    "ja      0x1400b169c",
    "lea     rdx, [rel data_1400f1800]  {u\"unk!\"}",
    "lea     rdx, [rel data_14013f5d0]",
    "mov     rdx, qword [rdx+rcx*8-0x8]",
    "jmp     0x1400b16a3",
    "mov     r9, qword [rsp+0x30 {hMem}]",
    "mov     r8, qword [rsp+0x38 {hMem_1}]",
    "lea     rcx, [rel data_14011ec00]  {u\" ( %s -- %s\\%s )\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x30 {hMem}]",
    "call    qword [rel LocalFree]",
    "mov     rcx, qword [rsp+0x38 {hMem_1}]",
    "call    qword [rel LocalFree]",
    "jmp     0x1400b16e2"
  ],
  "high_level_IL": [
    "arg_20 = 0",
    "int64_t i",
    "i = Ordinal_WLDAP32_26()",
    "while (i != 0)",
    "sub_14000c030(u\"\\n%s\\n\", Ordinal_WLDAP32_133(arg1, i))",
    "int64_t string1 = Ordinal_WLDAP32_127(arg1, i, &arg_20)",
    "while (string1 != 0)",
    "sub_14000c030(u\"  %s: \", string1)",
    "int64_t rax_1 = Ordinal_WLDAP32_142(arg1, i, string1)",
    "if (rax_1 != 0)",
    "int32_t rax_2 = _wcsicmp(string1, u\"name\")",
    "int32_t rax_3",
    "if (rax_2 != 0)",
    "rax_3 = _wcsicmp(string1, u\"sAMAccountName\")",
    "if (rax_2 == 0 || rax_3 == 0)",
    "int32_t* rax_9 = *rax_1",
    "*(rax_9 + 8)",
    "sub_14000c030(u\"%*S\\n\", zx.q(*rax_9))",
    "int64_t rdx_6",
    "if (_wcsicmp(string1, u\"objectSid\") != 0)",
    "int32_t rax_5",
    "rax_5, rdx_6 = _wcsicmp(string1, u\"objectGUID\")",
    "if (rax_5 != 0)",
    "int64_t r12_1 = 0",
    "int32_t r14_1 = 0",
    "if (*rax_1 != 0)",
    "int64_t rbp_1 = rax_1",
    "sub_14000c030(u\"\\n   [%u] \", zx.q(r14_1))",
    "int32_t rax_6 = _wcsicmp(string1, u\"sIDHistory\")",
    "int32_t* rcx_12 = *rbp_1",
    "if (rax_6 != 0)",
    "rdx_6 = sub_140012f68(*(rcx_12 + 8), zx.q(*rcx_12), 1)",
    "*(rcx_12 + 8)",
    "sub_14001311c()",
    "void* hMem",
    "void* hMem_1",
    "int32_t rax_7",
    "rax_7, rdx_6 = sub_1400140e0(*(*rbp_1 + 8), &hMem, &hMem_1, &arg_18, nullptr)",
    "if (rax_7 != 0)",
    "int64_t rcx_16 = sx.q(arg_18)",
    "wchar16 const* const rdx_9",
    "if ((rcx_16 - 1).d u> 9)",
    "rdx_9 = u\"unk!\"",
    "rdx_9 = *((rcx_16 << 3) + 0x14013f5c8)",
    "sub_14000c030(u\" ( %s -- %s\\%s )\", rdx_9)",
    "LocalFree(hMem)",
    "rdx_6 = LocalFree(hMem_1)",
    "r12_1 += 1",
    "r14_1 += 1",
    "rbp_1 = rax_1 + (r12_1 << 3)",
    "do while (*rbp_1 != 0)",
    "*(*rax_1 + 8)",
    "rdx_6 = sub_1400130e8()",
    "*(*rax_1 + 8)",
    "rdx_6 = sub_14001311c()",
    "sub_14000c030(U\"\\n\", rdx_6)",
    "Ordinal_WLDAP32_79(rax_1)",
    "Ordinal_WLDAP32_147(string1)",
    "string1 = Ordinal_WLDAP32_167(arg1, i, arg_20)",
    "int64_t rcx_23 = arg_20",
    "if (rcx_23 != 0)",
    "Ordinal_WLDAP32_301(rcx_23, 0)",
    "i = Ordinal_WLDAP32_27(arg1, i)",
    "return i"
  ]
}