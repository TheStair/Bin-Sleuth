{
  "address": "0x14002983c",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "mov     rax, qword [rcx+0x20]",
    "mov     rbp, qword [rcx+0x88]",
    "xor     esi, esi",
    "and     dword [rsp+0x20], esi",
    "mov     r15, r9",
    "mov     r13d, r8d",
    "mov     qword [rsp+0x30], rax",
    "mov     ebx, edx",
    "mov     r12, rcx",
    "call    sub_1400296c8",
    "mov     rdx, qword [r12+0x38]",
    "mov     r10, qword [rsp+0x30]",
    "mov     eax, dword [r10+0x34]",
    "movzx   ecx, word [r12+0x44]",
    "mov     r8, rdx",
    "sub     r8, qword [rbp+0x50]",
    "sub     eax, ecx",
    "mov     qword [rsp+0x70], rdx",
    "cmp     r8, rax",
    "jbe     0x1400298b4",
    "cmp     ebx, ecx",
    "jae     0x140029911",
    "mov     ecx, 0x10a46",
    "sub     ebx, ecx",
    "lea     eax, [rbx+r13]",
    "mov     edi, r13d",
    "cmp     eax, ecx",
    "jbe     0x1400298c7",
    "lea     r11, [rsp+0x40]",
    "mov     rbx, qword [r11+0x38]",
    "mov     rbp, qword [r11+0x40]",
    "mov     rsi, qword [r11+0x48]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     eax, esi",
    "test    r13d, r13d",
    "je      0x140029b5e",
    "add     rbx, rdx",
    "cmp     dword [rsp+0x90], esi",
    "je      0x1400298ea",
    "mov     edi, ecx",
    "sub     edi, ebx",
    "movzx   r8d, word [r12+0x44]",
    "mov     r14d, dword [r10+0x34]",
    "lea     rcx, [rdx+r8]",
    "sub     r14d, 0x4",
    "xor     edx, edx",
    "movzx   eax, byte [rcx+0x2]",
    "movzx   edi, byte [rcx+0x1]",
    "mov     dword [rsp+0x28], r14d",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rcx]",
    "shl     eax, 0x18",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rcx+0x3]",
    "or      edi, eax",
    "test    byte [r12+0x1], 0x4",
    "mov     dword [rsp+0x70], edi",
    "jne     0x1400299dc",
    "mov     rdx, rbx",
    "mov     rcx, r15",
    "mov     rcx, qword [rbp+0x70]",
    "call    sub_140022a44",
    "mov     esi, eax",
    "test    eax, eax",
    "jne     0x1400298fa",
    "mov     rcx, qword [r12+0x10]",
    "mov     eax, ebx",
    "div     r14d",
    "mov     r8d, eax",
    "cmp     dword [rcx+rax*4], 0x0",
    "je      0x1400299ff",
    "mov     ecx, dword [r12+0x40]",
    "sub     ecx, r8d",
    "lea     eax, [rcx+r14-0x1]",
    "mov     rcx, qword [r12+0x10]",
    "div     r14d",
    "movsxd  rbp, eax",
    "test    rcx, rcx",
    "je      0x140029993",
    "test    esi, esi",
    "jne     0x140029b5e",
    "mov     rdx, qword [rsp+0x70]",
    "mov     r10, qword [rsp+0x30]",
    "movsxd  rax, edi",
    "add     r15, rax",
    "xor     ebx, ebx",
    "sub     r13d, edi",
    "jmp     0x140029913",
    "mov     rdx, r15",
    "mov     rcx, rbx",
    "jmp     0x1400298f0",
    "movsxd  rbp, dword [rsp+0x20]",
    "test    edi, edi",
    "je      0x140029b4f",
    "movsxd  rax, r8d",
    "mov     ebx, edx",
    "mov     edi, dword [rcx+rax*4]",
    "mov     dword [rsp+0x20], eax",
    "mov     dword [rsp+0x70], edi",
    "mov     rcx, qword [r12+0x10]",
    "lea     eax, [rbp+rbp]",
    "movsxd  rdx, eax",
    "shl     rdx, 0x2",
    "call    sub_1400169f4",
    "test    rax, rax",
    "jne     0x1400299b7",
    "call    qword [rel data_14013d088]",
    "mov     ecx, ebp",
    "shl     ecx, 0x2",
    "cmp     ecx, eax",
    "jle     0x1400299bc",
    "movsxd  r8, edi",
    "call    memcpy",
    "xor     esi, esi",
    "test    r13d, r13d",
    "je      0x140029b5e",
    "lea     rbp, [rbp*4+0x4]",
    "mov     qword [rsp+0x38], rbp",
    "mov     qword [r12+0x10], rax",
    "mov     eax, 0x7",
    "jmp     0x140029b60",
    "mov     rcx, qword [r12+0x10]",
    "mov     r8, rbp",
    "xor     edx, edx",
    "shl     r8, 0x2",
    "call    memset",
    "or      byte [r12+0x1], 0x4",
    "mov     r10, qword [rsp+0x30]",
    "jmp     0x1400299ff",
    "mov     ecx, 0x10ad8",
    "jmp     0x1400298aa",
    "lea     eax, [rbx+r13]",
    "mov     ebp, r13d",
    "cmp     eax, r14d",
    "jbe     0x140029a6c",
    "mov     rax, qword [r12+0x10]",
    "cmp     dword [rax+rbp], 0x0",
    "je      0x140029a3b",
    "call    sub_140084e38",
    "jmp     0x140029b60",
    "mov     eax, dword [rsp+0x90]",
    "mov     r10, qword [r10]",
    "lea     r8, [rsp+0x20]",
    "neg     eax",
    "mov     edx, edi",
    "mov     rcx, r10",
    "sbb     r9d, r9d",
    "not     r9d",
    "and     r9d, 0x2",
    "call    qword [r10+0x108]",
    "mov     esi, eax",
    "test    eax, eax",
    "jne     0x140029b25",
    "mov     ebp, r14d",
    "sub     ebp, ebx",
    "lea     r9, [rsp+0x70]",
    "xor     r8d, r8d",
    "mov     edx, edi",
    "mov     rcx, r10",
    "call    sub_14002971c",
    "mov     edi, dword [rsp+0x70]",
    "mov     esi, eax",
    "mov     edi, dword [rax+rbp]",
    "mov     dword [rsp+0x70], edi",
    "jmp     0x140029a53",
    "sub     r13d, ebp",
    "je      0x140029b5e",
    "mov     r14, qword [rsp+0x20]",
    "add     ebx, 0x4",
    "mov     rdx, qword [r14+0x8]",
    "add     rbx, rdx",
    "movzx   eax, byte [rdx+0x2]",
    "movzx   edi, byte [rdx+0x1]",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rdx]",
    "shl     eax, 0x18",
    "shl     edi, 0x8",
    "or      edi, eax",
    "movzx   eax, byte [rdx+0x3]",
    "or      edi, eax",
    "mov     dword [rsp+0x70], edi",
    "cmp     dword [rsp+0x90], esi",
    "je      0x140029b01",
    "test    esi, esi",
    "jne     0x140029b5e",
    "sub     ebx, r14d",
    "jmp     0x140029b35",
    "movsxd  rax, ebp",
    "mov     rbp, qword [rsp+0x38]",
    "add     r15, rax",
    "movsxd  r8, ebp",
    "mov     rdx, rbx",
    "mov     rcx, r15",
    "call    memcpy",
    "mov     rcx, r14",
    "call    sub_140022a44",
    "mov     esi, eax",
    "test    eax, eax",
    "je      0x140029aec",
    "mov     r10, qword [rsp+0x30]",
    "add     rbp, 0x4",
    "mov     qword [rsp+0x38], rbp",
    "test    edi, edi",
    "jne     0x140029a19",
    "mov     r14d, dword [rsp+0x28]",
    "xor     ebx, ebx",
    "mov     rcx, r14",
    "call    sub_14002242c",
    "movsxd  r8, ebp",
    "mov     rdx, r15",
    "mov     rcx, rbx",
    "call    memcpy",
    "mov     r14, qword [rsp+0x20]",
    "jmp     0x140029b0f",
    "mov     r14, qword [rsp+0x20]",
    "jmp     0x140029b11",
    "mov     rax, qword [r12+0x10]",
    "mov     dword [rax+rbp-0x4], edi",
    "cmp     ebx, r14d",
    "jb      0x140029a5b",
    "xor     esi, esi",
    "test    r14, r14",
    "je      0x140029b1e"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}