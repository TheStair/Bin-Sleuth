{
  "address": "0x1400692cc",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "encrypt data using speck/4b1f3c27d17344b39cf9dede3bcf8b4b",
    "contain loop",
    "check for software breakpoints/eab8e97e968348cd9975bb039b618db9",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/5d37b64795ca4da78dcc19574a757de4",
    "load shellcode via donut/c9a72a5fdf6e462ea071ab99fb8585e2/5c9bba15e9b64c668b01383d9c9afe0e",
    "hash data using aphash/98bdcb90423346b7a1fc9c166925c881",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/7a997b34591146dbbd4411d920ff141c",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/14b9db6dcaf34a3e86e9217d3cc476a8",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using Curve25519/4be2ead1b08a4c049dae9c8694881d76",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/2ee106c7c5d34df799b377fb04fb2ee1",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], r8",
    "mov     qword [rsp+0x10], rdx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x1d8",
    "mov     rax, qword [rcx]",
    "xor     esi, esi",
    "mov     rbx, rdx",
    "mov     rdi, rcx",
    "mov     ebp, 0x1",
    "mov     qword [rsp+0x58], rax",
    "mov     qword [rsp+0x130], rsi",
    "call    sub_140065300",
    "mov     qword [rsp+0x40], rax",
    "cmp     rbx, rsi",
    "je      0x14006b011",
    "mov     eax, ebp",
    "mov     rcx, qword [rsp+0x58]",
    "cmp     byte [rcx+0x61], sil",
    "jne     0x14006b011",
    "cmp     dword [rdi+0x30], esi",
    "jne     0x14006b011",
    "lea     edx, [rbp+0x14]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rsi",
    "call    sub_14004da74",
    "cmp     eax, esi",
    "jne     0x14006b011",
    "lea     r8d, [rbp+0x3f]",
    "lea     rcx, [rsp+0xf0]",
    "xor     edx, edx",
    "call    memset",
    "mov     rax, qword [rsp+0x210]",
    "lea     ecx, [rbp+0x7]",
    "cmp     byte [rax], cl",
    "ja      0x140069389",
    "mov     rax, qword [rdi]",
    "cmp     byte [rax+0x61], sil",
    "jne     0x1400693a0",
    "mov     rdx, qword [rbx+0x48]",
    "cmp     rdx, rsi",
    "je      0x140069381",
    "mov     rax, qword [rsp+0x58]",
    "cmp     dword [rdi+0x30], esi",
    "jne     0x14006afc9",
    "xor     r8d, r8d",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140068bb8",
    "and     dword [rbx+0xc], 0xfffffffe",
    "mov     qword [rbx+0x48], rsi",
    "mov     rcx, qword [rsp+0x58]",
    "call    sub_140044bf4",
    "mov     rdx, qword [rsp+0x110]",
    "cmp     rdx, rsi",
    "je      0x14006afde",
    "cmp     byte [rax+0x61], sil",
    "jne     0x14006afc9",
    "mov     rdx, qword [rsp+0x120]",
    "cmp     rdx, rsi",
    "je      0x14006aff5",
    "mov     rcx, rax",
    "call    sub_1400169a8",
    "mov     rax, qword [rsp+0x210]",
    "cmp     byte [rax], 0x9",
    "jne     0x1400693d0",
    "mov     edx, dword [rdi+0x110]",
    "cmp     edx, esi",
    "je      0x14006b00b",
    "mov     rcx, qword [rsp+0x58]",
    "call    sub_1400169a8",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_14007ad18",
    "cmp     eax, esi",
    "jne     0x14006afc4",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140064c7c",
    "mov     dword [rdi+0x110], esi",
    "mov     rcx, qword [rdi+0x10]",
    "call    sub_140032d34",
    "mov     esi, dword [rax+0x8]",
    "mov     rax, qword [rsp+0x58]",
    "mov     rax, qword [rbx+0x28]",
    "xor     edx, edx",
    "lea     rcx, [rsp+0x138]",
    "mov     qword [rsp+0x60], rax",
    "mov     eax, dword [rbx+0xc]",
    "lea     r8d, [rdx+0x30]",
    "shr     eax, 0x3",
    "and     eax, ebp",
    "mov     dword [rsp+0x80], eax",
    "call    memset",
    "mov     rax, qword [rbx+0x48]",
    "mov     r8, qword [rsp+0x60]",
    "mov     qword [rsp+0x68], rax",
    "mov     qword [rsp+0x138], rax",
    "mov     rax, rsi",
    "mov     edx, esi",
    "mov     qword [rsp+0x48], rax",
    "mov     dword [rsp+0x218], edx",
    "cmp     qword [rbx+0x50], rsi",
    "jne     0x1400695db",
    "mov     r8, qword [rsp+0x210]",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140065a8c",
    "mov     r11d, eax",
    "cmp     qword [rbx+0x58], rsi",
    "jne     0x140069613",
    "mov     r11d, 0x8",
    "mov     eax, r11d",
    "jmp     0x14006b013",
    "mov     edx, dword [rdi+0x110]",
    "cmp     edx, esi",
    "je      0x14006960d",
    "cmp     qword [rbx+0x50], rsi",
    "je      0x14006961b",
    "imul    rax, rax, 0x70",
    "mov     qword [rsp+0x70], rax",
    "mov     r9, qword [rax+r8+0x30]",
    "mov     r10, qword [rax+r8+0x28]",
    "mov     qword [rsp+0x88], r9",
    "mov     qword [rsp+0xa0], r10",
    "test    byte [rax+r8+0x44], r11b",
    "je      0x1400694d5",
    "add     rsp, 0x1d8",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     dword [rdi+0x110], esi",
    "mov     rcx, qword [rdi+0x10]",
    "call    sub_140032d34",
    "mov     esi, dword [rax+0x8]",
    "cmp     dword [r8], ebp",
    "jle     0x140069640",
    "cmp     r9, rsi",
    "je      0x140069592",
    "mov     edx, dword [rax+r8+0x4c]",
    "mov     rcx, qword [rbx+0x30]",
    "call    sub_140049114",
    "mov     r8, qword [rsp+0x60]",
    "cmp     eax, esi",
    "je      0x1400694b8",
    "cmp     dword [r8], esi",
    "mov     rax, rsi",
    "mov     dword [rsp+0x84], esi",
    "mov     qword [rsp+0x88], rax",
    "lea     rdx, [rel data_1400f386c]",
    "jle     0x1400699f1",
    "mov     rax, qword [rsp+0x58]",
    "mov     ecx, 0x8000",
    "test    word [rax+0x5c], cx",
    "jne     0x140069640",
    "mov     rax, qword [rsp+0x48]",
    "add     edx, ebp",
    "add     rax, rbp",
    "mov     dword [rsp+0x218], edx",
    "mov     qword [rsp+0x48], rax",
    "cmp     qword [rbx+0x50], rsi",
    "jne     0x1400695db",
    "mov     rax, qword [r9]",
    "movsx   ecx, word [r10+0x46]",
    "cmp     ecx, dword [rax]",
    "jne     0x1400695b3",
    "mov     edx, dword [rsp+0x218]",
    "mov     r9, qword [rsp+0x88]",
    "mov     r10, qword [rsp+0xa0]",
    "mov     r11d, 0x8",
    "mov     rax, qword [rsp+0x58]",
    "mov     ecx, 0x2000",
    "test    word [rax+0x5c], cx",
    "jne     0x1400694b8",
    "mov     rax, qword [rbx+0x30]",
    "mov     rcx, qword [rbx]",
    "mov     qword [rsp+0x78], rax",
    "mov     rax, qword [rbx+0x38]",
    "mov     qword [rsp+0xa0], rcx",
    "mov     qword [rsp+0x48], rax",
    "mov     rax, qword [rbx+0x40]",
    "mov     qword [rsp+0x88], rax",
    "mov     al, byte [rbx+0xc]",
    "and     al, bpl",
    "mov     byte [rsp+0xc8], al",
    "mov     eax, dword [rbx+0xc]",
    "and     al, 0x9",
    "cmp     al, bpl",
    "jne     0x140069a70",
    "imul    rax, rax, 0x70",
    "lea     rcx, [rax+r8+0x8]",
    "mov     qword [rsp+0x48], rcx",
    "cmp     qword [rcx+0x58], rsi",
    "jne     0x1400696a3",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140067b68",
    "mov     r8, qword [rsp+0x60]",
    "jmp     0x140069445",
    "mov     eax, dword [rax]",
    "movsx   r8d, word [r10+0x46]",
    "mov     r9, qword [r10]",
    "lea     rdx, [rel data_1400f6cf0]  {\"expected %d columns for '%s' but\u2026\"}",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_1400191b8",
    "jmp     0x14006afc4",
    "test    byte [r9+0xc], r11b",
    "jne     0x140069592",
    "mov     rax, qword [rsp+0x70]",
    "and     byte [rax+r8+0x44], 0xd7",
    "mov     edx, dword [rax+r8+0x4c]",
    "mov     rcx, qword [rbx+0x30]",
    "call    sub_140063120",
    "mov     rax, qword [rsp+0x68]",
    "cmp     rax, rsi",
    "je      0x140069af7",
    "mov     rdx, rcx",
    "mov     rcx, qword [rsp+0x68]",
    "or      r8d, 0xffffffff",
    "call    sub_140048d24",
    "cmp     eax, esi",
    "jne     0x140069a68",
    "mov     rdx, qword [rcx+0x28]",
    "mov     qword [rsp+0xb0], rdx",
    "cmp     rdx, rsi",
    "je      0x1400699be",
    "cmp     qword [rcx+0x10], rsi",
    "je      0x1400696a3",
    "cmp     edx, dword [r8]",
    "jge     0x1400695d5",
    "cmp     qword [r9+0x48], rsi",
    "je      0x14006951c",
    "or      eax, 0xffffffff",
    "mov     dword [rsp+0x94], eax",
    "mov     r9d, dword [rcx]",
    "xor     r8d, r8d",
    "mov     rdx, rax",
    "mov     rcx, rdi",
    "call    sub_140064500",
    "mov     r8d, dword [rdi+0x34]",
    "mov     dword [rsp+0x20], esi",
    "lea     ecx, [r8+0x1]",
    "mov     rbx, rax",
    "mov     rax, qword [rsp+0x68]",
    "mov     dword [rdi+0x34], ecx",
    "mov     edx, dword [rax]",
    "mov     rax, qword [rsp+0xa0]",
    "mov     ecx, dword [rax]",
    "mov     dword [rsp+0x144], r8d",
    "lea     r9d, [rdx+rcx+0x1]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, 0x70",
    "call    sub_140032364",
    "mov     rcx, qword [rsp+0x40]",
    "mov     r9d, 0xfffffff7",
    "mov     edx, eax",
    "mov     r8, rbx",
    "mov     dword [rsp+0x94], eax",
    "call    sub_140032c40",
    "mov     eax, dword [rsp+0x94]",
    "mov     rbx, qword [rsp+0x208]",
    "jmp     0x140069b01",
    "mov     rcx, qword [rsp+0xa0]",
    "mov     rdx, qword [rsp+0xa0]",
    "mov     rcx, qword [rsp+0x58]",
    "and     dword [rbx+0xc], 0xfffffffe",
    "xor     r8d, r8d",
    "call    sub_140044284",
    "mov     qword [rsp+0x48], rax",
    "mov     qword [rbx+0x38], rax",
    "mov     edx, dword [rsp+0x84]",
    "mov     rax, qword [rsp+0x88]",
    "add     edx, ebp",
    "add     rax, rbp",
    "cmp     edx, dword [r8]",
    "mov     dword [rsp+0x84], edx",
    "lea     rdx, [rel data_1400f386c]",
    "mov     qword [rsp+0x88], rax",
    "jl      0x140069662",
    "mov     rax, qword [rsp+0x58]",
    "mov     r8d, 0x1000",
    "test    word [rax+0x5c], r8w",
    "jne     0x1400696ec",
    "mov     rax, qword [rcx+0x8]",
    "mov     r8, qword [rcx+0x10]",
    "mov     r9, rdx",
    "mov     edx, 0x14",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004da74",
    "mov     rcx, qword [rsp+0x48]",
    "mov     r8, qword [rsp+0x60]",
    "mov     r9d, dword [rsp+0x80]",
    "mov     r8d, edx",
    "mov     rcx, rdi",
    "mov     rdx, rbx",
    "call    sub_140067384",
    "cmp     eax, esi",
    "je      0x14006954f",
    "cmp     edx, esi",
    "jne     0x14006951c",
    "dec     dword [rdi+0x44]",
    "bt      dword [rbx+0xc], 0xe",
    "mov     eax, dword [rdi+0x44]",
    "mov     dword [rsp+0xb0], eax",
    "jb      0x140069b54",
    "mov     rcx, qword [rsp+0xa0]",
    "mov     r8d, dword [rax+0x4]",
    "mov     edx, 0x70",
    "mov     r9d, dword [rcx]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     dword [rsp+0x150], eax",
    "mov     rax, qword [rsp+0x210]",
    "cmp     byte [rax], 0xc",
    "jne     0x140069b37",
    "mov     rax, qword [rdi+0x148]",
    "mov     qword [rsp+0xe0], rax",
    "mov     rax, qword [rcx+0x10]",
    "mov     qword [rdi+0x148], rax",
    "cmp     qword [rsp+0x88], rsi",
    "jne     0x140069816",
    "movzx   eax, byte [rcx+0x3c]",
    "mov     r9d, dword [rcx+0x44]",
    "mov     r8, qword [rbx+0x30]",
    "shr     eax, 0x5",
    "mov     rcx, rdi",
    "and     eax, ebp",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140067c48",
    "mov     rcx, qword [rsp+0x48]",
    "mov     rax, qword [rsp+0x58]",
    "mov     r8, qword [rbx+0x28]",
    "mov     qword [rsp+0x60], r8",
    "cmp     byte [rax+0x61], sil",
    "jne     0x14006afc9",
    "cmp     dword [rdi+0x30], esi",
    "jne     0x14006afc4",
    "bt      dword [rbx+0xc], 0x12",
    "jae     0x14006951c",
    "mov     r8d, eax",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140065330",
    "cmp     dword [rbx+0x10], esi",
    "jne     0x140069b89",
    "mov     ecx, 0x140",
    "mov     word [rbx+0xa], cx",
    "add     dword [rdi+0x38], ebp",
    "mov     r9d, dword [rdi+0x38]",
    "xor     r8d, r8d",
    "mov     dword [rcx+0x34], r9d",
    "mov     rcx, qword [rsp+0x40]",
    "lea     edx, [r8+0x46]",
    "mov     dword [rsp+0x218], esi",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "lea     ecx, [rax+0x1]",
    "mov     dword [rsp+0x78], eax",
    "mov     rax, qword [rsp+0x48]",
    "mov     dword [rax+0x30], ecx",
    "mov     ecx, 0x8",
    "test    byte [rax+0x40], cl",
    "jne     0x140069879",
    "mov     rax, qword [rsp+0x60]",
    "cmp     dword [rax], ebp",
    "je      0x14006972a",
    "mov     rax, qword [rsp+0x210]",
    "mov     edx, dword [rsp+0x218]",
    "mov     r11d, 0x8",
    "cmp     byte [rax], r11b",
    "jbe     0x140069592",
    "or      rax, 0xffffffffffffffff",
    "mov     dword [rsp+0x218], eax",
    "mov     qword [rsp+0x48], rax",
    "cmp     dword [r8], ebp",
    "je      0x140069592",
    "test    byte [rbx+0xc], bpl",
    "je      0x140069c2c",
    "mov     eax, dword [rsp+0x94]",
    "cmp     eax, esi",
    "jl      0x140069b89",
    "mov     rcx, qword [rsp+0x60]",
    "mov     rdx, rax",
    "call    sub_140069204",
    "mov     rcx, qword [rsp+0x48]",
    "mov     qword [rsp+0x70], rax",
    "cmp     rax, rsi",
    "je      0x1400698cc",
    "lea     edx, [rcx+0x9]",
    "mov     rcx, qword [rsp+0x40]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     dword [rsp+0x218], eax",
    "mov     rax, qword [rsp+0x48]",
    "mov     rax, qword [rsp+0x40]",
    "xor     r9d, r9d",
    "mov     ebx, dword [rax+0x90]",
    "add     dword [rdi+0x38], ebp",
    "mov     r8d, dword [rdi+0x38]",
    "mov     dword [rcx+0x34], r8d",
    "lea     edx, [r9+0xd]",
    "add     ebx, ebp",
    "mov     rcx, rax",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "mov     rax, qword [rsp+0x48]",
    "mov     rcx, qword [rsp+0xb0]",
    "mov     dword [rax+0x30], ebx",
    "mov     eax, dword [rax+0x34]",
    "mov     byte [rsp+0x168], 0xd",
    "mov     qword [rsp+0x178], rsi",
    "mov     dword [rsp+0x170], esi",
    "mov     dword [rsp+0x174], esi",
    "mov     dword [rsp+0x16c], eax",
    "mov     r9d, dword [rcx+0x18]",
    "lea     r8, [rel data_1400f6d18]  {\"CO-ROUTINE %u\"}",
    "mov     edx, ebp",
    "mov     rcx, rdi",
    "call    sub_140032580",
    "mov     rdx, qword [rsp+0xb0]",
    "lea     r8, [rsp+0x168]",
    "mov     rcx, rdi",
    "call    sub_1400692cc",
    "mov     rcx, qword [rsp+0x48]",
    "mov     rax, qword [rsp+0xb0]",
    "movzx   eax, word [rax+0xa]",
    "mov     r11, qword [rcx+0x20]",
    "mov     word [r11+0x48], ax",
    "mov     eax, dword [rsp+0x170]",
    "or      dword [rcx+0x40], 0x10",
    "mov     edx, dword [rcx+0x34]",
    "mov     dword [rcx+0x38], eax",
    "mov     rcx, qword [rsp+0x40]",
    "call    sub_1400326bc",
    "mov     r9, qword [rsp+0x40]",
    "lea     edx, [rbx-0x1]",
    "mov     rcx, r9",
    "call    sub_140032d34",
    "mov     ecx, dword [r9+0x90]",
    "mov     rbx, qword [rsp+0x208]",
    "mov     dword [rax+0x8], ecx",
    "jmp     0x140069994",
    "test    byte [rax+0xb4], 0xa",
    "je      0x140069816",
    "mov     rax, qword [rbx+0x48]",
    "mov     qword [rsp+0x68], rax",
    "mov     qword [rsp+0x138], rax",
    "test    byte [r8+0xb4], 0xa",
    "jne     0x140069592",
    "mov     al, sil",
    "mov     ebx, dword [rdi+0x34]",
    "mov     rdx, qword [rsp+0x208]",
    "xor     r9d, r9d",
    "lea     eax, [rbx+0x1]",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "mov     dword [rdi+0x34], eax",
    "mov     rdx, qword [rdx]",
    "mov     dword [rsp+0xcc], ebx",
    "call    sub_140064500",
    "mov     rcx, qword [rsp+0x40]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x70]",
    "mov     r8d, ebx",
    "mov     dword [rsp+0x20], esi",
    "mov     rdi, rax",
    "call    sub_140032364",
    "mov     r8, rdi",
    "mov     rdi, qword [rsp+0x40]",
    "mov     r9d, 0xfffffff7",
    "mov     edx, eax",
    "mov     rcx, rdi",
    "mov     ebx, eax",
    "call    sub_140032c40",
    "movsxd  rax, dword [rdi+0x90]",
    "mov     dword [rsp+0xd0], ebx",
    "cmp     eax, esi",
    "jle     0x140069c18",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, eax",
    "call    sub_140032d34",
    "or      byte [rsp+0x15c], bpl",
    "mov     byte [rax], 0x72",
    "mov     eax, dword [rcx+0x44]",
    "mov     byte [rsp+0x168], 0xc",
    "mov     qword [rsp+0x178], rsi",
    "mov     dword [rsp+0x16c], eax",
    "mov     rax, qword [rsp+0xb0]",
    "mov     dword [rsp+0x170], esi",
    "mov     dword [rsp+0x174], esi",
    "mov     r9d, dword [rax+0x18]",
    "lea     r8, [rel data_1400f6d28]  {\"MATERIALIZE %u\"}",
    "mov     edx, ebp",
    "mov     rcx, rdi",
    "call    sub_140032580",
    "mov     rdx, qword [rsp+0xb0]",
    "lea     r8, [rsp+0x168]",
    "mov     rcx, rdi",
    "call    sub_1400692cc",
    "mov     r8d, dword [rcx+0x44]",
    "mov     r9d, dword [rax+0x44]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, 0x6d",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r10, qword [rsp+0x70]",
    "mov     rcx, qword [rsp+0xb0]",
    "mov     r11, qword [r10+0x28]",
    "movzx   eax, word [r11+0xa]",
    "mov     word [rcx+0xa], ax",
    "jmp     0x140069929",
    "mov     rax, qword [rsp+0x58]",
    "mov     dword [rdi+0x28], esi",
    "mov     byte [rdi+0x1f], sil",
    "cmp     byte [rax+0x61], sil",
    "jne     0x14006afc9",
    "mov     dword [rsp+0x50], esi",
    "mov     dword [rsp+0xa8], esi",
    "mov     dword [rsp+0x98], esi",
    "cmp     r9, rsi",
    "je      0x140069f6d",
    "cmp     r9, rsi",
    "jne     0x140069ebe",
    "mov     rdi, qword [rsp+0x200]",
    "mov     rbx, qword [rsp+0x208]",
    "mov     al, 0x3",
    "jmp     0x140069c2f",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rdi+0x88]",
    "mov     edx, 0x8",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     r8d, dword [r10+0x34]",
    "mov     rcx, qword [rsp+0x40]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x42]",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0x78]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     r11d, eax",
    "call    sub_140032d34",
    "mov     dword [rax+0x4], r11d",
    "mov     r9, qword [rsp+0x40]",
    "mov     edx, eax",
    "mov     rcx, r9",
    "call    sub_140032d34",
    "mov     ecx, dword [r9+0x90]",
    "mov     dword [rax+0x8], ecx",
    "mov     rax, qword [rsp+0xb0]",
    "mov     r10, qword [rsp+0x48]",
    "movzx   eax, word [rax+0xa]",
    "mov     rcx, qword [r10+0x20]",
    "mov     word [rcx+0x48], ax",
    "mov     eax, dword [rsp+0x218]",
    "cmp     eax, esi",
    "je      0x140069966",
    "mov     rax, qword [rsp+0xe0]",
    "mov     r8, qword [rsp+0x60]",
    "mov     qword [rdi+0x148], rax",
    "mov     word [rbx+0xa], si",
    "mov     rcx, qword [rbx]",
    "mov     eax, dword [rcx]",
    "cmp     eax, esi",
    "jle     0x140069ef3",
    "mov     al, byte [rsp+0xc8]",
    "mov     edx, 0x4000",
    "neg     al",
    "movzx   eax, word [rbx+0xc]",
    "sbb     cx, cx",
    "and     ax, dx",
    "and     cx, 0x100",
    "or      cx, ax",
    "mov     rax, qword [rbx+0x70]",
    "mov     word [rsp+0x218], cx",
    "mov     qword [rsp+0x70], rax",
    "cmp     rax, rsi",
    "je      0x140069ca1",
    "mov     r9, qword [rsp+0x48]",
    "mov     byte [rsp+0xc9], al",
    "mov     dword [rsp+0xbc], eax",
    "cmp     dword [rsp+0x80], esi",
    "jne     0x140069ebe",
    "mov     dword [rsp+0xfc], esi",
    "mov     eax, dword [rcx]",
    "mov     dword [rsp+0xfc], eax",
    "jmp     0x140069fde",
    "mov     eax, dword [r9]",
    "cmp     eax, esi",
    "jle     0x140069f0b",
    "add     rcx, 0x2a",
    "movsx   eax, word [rbx+0xa]",
    "mov     r9, qword [rsp+0x68]",
    "mov     r8, qword [rsp+0x78]",
    "mov     rdx, qword [rsp+0x60]",
    "mov     dword [rsp+0x30], eax",
    "mov     rax, qword [rbx]",
    "mov     word [rsp+0x28], cx",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140078d90",
    "mov     rdx, rax",
    "mov     qword [rsp+0x218], rax",
    "cmp     rax, rsi",
    "je      0x14006afc4",
    "mov     rdx, rax",
    "mov     rcx, rdi",
    "call    sub_14007b658",
    "movzx   ecx, word [rsp+0x218]",
    "mov     rax, qword [rsp+0x68]",
    "cmp     rax, rsi",
    "je      0x14006a01d",
    "lea     rcx, [rsp+0x198]",
    "mov     rdx, rax",
    "call    sub_1400495d4",
    "mov     rax, qword [rsp+0xa0]",
    "mov     qword [rsp+0x108], rcx",
    "cmp     rax, rsi",
    "je      0x14006a003",
    "mov     eax, 0x42",
    "cmp     word [rbx+0xa], ax",
    "jle     0x140069f1a",
    "lea     rcx, [r9+0x2a]",
    "sub     eax, ebp",
    "mov     word [rcx], si",
    "add     rcx, 0x28",
    "cmp     eax, esi",
    "jg      0x140069ee6",
    "movzx   eax, word [rax+0x60]",
    "cmp     ax, word [rbx+0xa]",
    "jge     0x140069cef",
    "cmp     qword [rsp+0x88], rsi",
    "je      0x14006a097",
    "lea     rcx, [rsp+0x198]",
    "mov     rdx, rax",
    "call    sub_1400495d4",
    "mov     rcx, qword [rsp+0x68]",
    "cmp     rcx, rsi",
    "je      0x140069f71",
    "mov     word [rbx+0xa], ax",
    "sub     eax, ebp",
    "mov     word [rcx], si",
    "add     rcx, 0x28",
    "cmp     eax, esi",
    "jg      0x140069efe",
    "cmp     byte [rsp+0xc8], sil",
    "je      0x140069d1b",
    "mov     word [rbx+0xa], ax",
    "mov     eax, dword [rsp+0x118]",
    "mov     r11d, dword [rsp+0x128]",
    "mov     dword [rsp+0x11c], eax",
    "cmp     qword [rbx+0x38], rsi",
    "jne     0x14006a185",
    "mov     rax, qword [rsp+0x48]",
    "cmp     rax, rsi",
    "je      0x14006a082",
    "dec     dword [rdi+0x44]",
    "mov     eax, dword [rdi+0x44]",
    "xor     edx, edx",
    "lea     r8d, [rdx+0x38]",
    "lea     rcx, [rsp+0x198]",
    "mov     dword [rsp+0x90], eax",
    "call    memset",
    "mov     rcx, qword [rsp+0x60]",
    "lea     rax, [rsp+0xf0]",
    "mov     qword [rsp+0x1a8], rax",
    "mov     eax, dword [rdi+0x38]",
    "mov     qword [rsp+0x1a0], rcx",
    "mov     rcx, qword [rsp+0x48]",
    "add     eax, ebp",
    "mov     qword [rsp+0x198], rdi",
    "mov     dword [rsp+0x100], eax",
    "cmp     rcx, rsi",
    "je      0x140069fd7",
    "mov     eax, dword [r9]",
    "cmp     eax, dword [rcx]",
    "jne     0x140069f71",
    "mov     rcx, qword [rsp+0x68]",
    "cmp     rcx, rsi",
    "je      0x140069d62",
    "movzx   ecx, byte [rdx+0x47]",
    "mov     eax, dword [rsp+0xbc]",
    "movzx   eax, al",
    "cmp     cl, sil",
    "cmovne  eax, ecx",
    "mov     dword [rsp+0xbc], eax",
    "mov     byte [rsp+0xc9], al",
    "mov     byte [rsp+0x54], sil",
    "cmp     qword [rbx+0x40], rsi",
    "jne     0x14006a185",
    "mov     rdx, qword [rsp+0x88]",
    "lea     rcx, [rsp+0x198]",
    "call    sub_140049588",
    "xor     edx, edx",
    "lea     rcx, [rsp+0x168]",
    "lea     r8d, [rdx+0x30]",
    "call    memset",
    "mov     rdx, qword [rbx+0x40]",
    "lea     rax, [rel sub_140069114]",
    "mov     qword [rsp+0x168], rdi",
    "mov     qword [rsp+0x170], rax",
    "mov     qword [rsp+0x190], rbx",
    "cmp     rdx, rsi",
    "je      0x14006a079",
    "cmp     eax, esi",
    "mov     r10d, esi",
    "jle     0x140069f51",
    "mov     eax, dword [rsp+0x94]",
    "cmp     eax, esi",
    "jl      0x140069d86  {\"H9t$p\"}",
    "movsx   r8d, byte [rdx+0x43]",
    "mov     dword [rsp+0x140], r8d",
    "cmp     byte [rdx+0x48], sil",
    "jne     0x140069d3d",
    "mov     eax, dword [rdi+0x38]",
    "mov     dword [rsp+0x104], eax",
    "mov     rax, qword [rsp+0x58]",
    "cmp     byte [rax+0x61], sil",
    "jne     0x14006afac",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x68], rcx",
    "cmp     r11d, ebp",
    "jne     0x14006a185",
    "mov     rax, qword [rbx+0x30]",
    "mov     qword [rsp+0x78], rax",
    "lea     rcx, [rsp+0x168]",
    "call    sub_1400409a0",
    "mov     rdx, rcx",
    "or      r8d, 0xffffffff",
    "mov     rcx, r9",
    "call    sub_140048d24",
    "cmp     eax, esi",
    "jne     0x140069f71",
    "mov     r8, rcx",
    "lea     rdx, [r9+0x20]",
    "sub     r8, r9",
    "cmp     qword [rsp+0x70], rsi",
    "je      0x140069e68",
    "cmp     rcx, rsi",
    "jne     0x140069d86  {\"H9t$p\"}",
    "movzx   eax, byte [rdx+0x42]",
    "imul    rax, rax, 0x58",
    "mov     eax, dword [rax+rdx+0x350]",
    "mov     eax, dword [rdx+0x34]",
    "jmp     0x140069d4c",
    "mov     rcx, qword [rsp+0x130]",
    "cmp     rcx, rsi",
    "je      0x14006afc9",
    "mov     rcx, qword [rsp+0x48]",
    "cmp     rcx, rsi",
    "je      0x14006aabd",
    "bt      dword [rax+0x4], 0x18",
    "jae     0x14006a21f",
    "lea     rcx, [rsp+0x198]",
    "mov     rdx, r8",
    "call    sub_1400495d4",
    "mov     r11d, dword [rsp+0x128]",
    "mov     rax, qword [rsp+0x70]",
    "mov     rcx, qword [rsp+0x68]",
    "mov     edx, dword [rsp+0x218]",
    "mov     rax, qword [rsp+0x120]",
    "mov     rcx, qword [rax]",
    "mov     rax, qword [rcx+0x20]",
    "mov     qword [rsp+0x70], rax",
    "cmp     rax, rsi",
    "je      0x14006a185",
    "mov     dword [rsp+0x98], ebp",
    "jmp     0x140069f71",
    "mov     al, byte [r8+rdx]",
    "add     r10d, ebp",
    "and     al, bpl",
    "mov     byte [rdx], al",
    "add     rdx, 0x28",
    "cmp     r10d, dword [r9]",
    "jl      0x140069f3c",
    "mov     eax, dword [rdx+0x38]",
    "lea     r9, [rsp+0x138]",
    "or      r8d, 0xffffffff",
    "mov     dword [rsp+0x38], eax",
    "mov     eax, dword [rdx+0x34]",
    "mov     rdx, rbx",
    "mov     dword [rsp+0x30], eax",
    "mov     rax, qword [rsp+0x210]",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0xc8]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400639f0",
    "mov     rcx, qword [rsp+0x218]",
    "call    sub_1400799ec",
    "mov     rbp, qword [rsp+0x40]",
    "jmp     0x14006af02",
    "mov     ebx, dword [rdi+0x44]",
    "inc     dword [rdi+0x38]",
    "mov     rcx, qword [rsp+0x200]",
    "dec     ebx",
    "mov     r8, rdx",
    "mov     rdx, qword [rsp+0x208]",
    "lea     esi, [rbx-0x1]",
    "mov     dword [rsp+0x20], ebx",
    "lea     ebp, [rsi-0x1]",
    "mov     dword [rdi+0x44], ebp",
    "mov     edi, dword [rdi+0x38]",
    "mov     r9d, edi",
    "call    sub_14007d0dc",
    "mov     rcx, qword [rsp+0x40]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "mov     r9d, ebp",
    "lea     edx, [r8+0xb]",
    "call    sub_140032364",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, ebx",
    "call    sub_14003278c",
    "mov     rax, qword [rsp+0x210]",
    "mov     rbx, qword [rsp+0x208]",
    "mov     rcx, qword [rsp+0x200]",
    "and     dword [rsp+0x158], 0x0",
    "mov     dword [rsp+0x38], ebp",
    "mov     dword [rsp+0x30], esi",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0xc8]",
    "lea     r9, [rsp+0x138]",
    "or      r8d, 0xffffffff",
    "mov     rdx, rbx",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400639f0",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, esi",
    "call    sub_14003278c",
    "mov     rcx, qword [rsp+0x40]",
    "xor     esi, esi",
    "lea     edx, [rsi+0x42]",
    "xor     r9d, r9d",
    "mov     r8d, edi",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     edx, ebp",
    "mov     rbp, qword [rsp+0x40]",
    "jmp     0x14006aefa",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, eax",
    "call    sub_140032b38",
    "mov     rdx, qword [rsp+0x218]",
    "cmp     r8d, dword [rcx]",
    "mov     dword [rsp+0x158], eax",
    "cmove   rcx, rsi",
    "mov     qword [rsp+0x138], rcx",
    "mov     rdx, rcx",
    "mov     rcx, rax",
    "call    sub_140044bf4",
    "cmp     qword [rbx+0x30], rsi",
    "jne     0x14006ac3a",
    "mov     eax, dword [rdi+0x34]",
    "mov     r9d, dword [rsp+0x118]",
    "mov     rdx, rcx",
    "mov     dword [rsp+0xf4], eax",
    "inc     eax",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "mov     dword [rdi+0x34], eax",
    "call    sub_140064500",
    "mov     r9d, dword [rsp+0xfc]",
    "mov     r8d, dword [rsp+0xf4]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, 0x72",
    "mov     qword [rsp+0xe0], rax",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r8, qword [rsp+0xe0]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, eax",
    "mov     r9d, 0xfffffff7",
    "mov     dword [rsp+0x68], eax",
    "call    sub_140032c40",
    "mov     eax, dword [rdi+0x38]",
    "mov     ecx, dword [rdi+0x44]",
    "mov     rdx, qword [rsp+0x48]",
    "inc     eax",
    "lea     r8d, [rax+0x1]",
    "dec     ecx",
    "mov     dword [rsp+0xc0], eax",
    "lea     eax, [r8+0x2]",
    "mov     dword [rsp+0xd8], ecx",
    "dec     ecx",
    "mov     dword [rdi+0x38], eax",
    "mov     dword [rdi+0x44], ecx",
    "mov     dword [rsp+0x84], eax",
    "inc     eax",
    "mov     dword [rsp+0x80], ecx",
    "mov     dword [rsp+0x218], r8d",
    "mov     dword [rsp+0xc4], eax",
    "mov     eax, dword [rdx]",
    "mov     r9d, r8d",
    "add     dword [rdi+0x38], eax",
    "mov     ecx, dword [rdi+0x38]",
    "xor     r8d, r8d",
    "lea     eax, [rcx+0x1]",
    "add     ecx, dword [rdx]",
    "lea     edx, [r8+0x46]",
    "mov     dword [rdi+0x38], ecx",
    "mov     rcx, qword [rsp+0x40]",
    "mov     dword [rsp+0xb8], eax",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     rax, qword [rsp+0x48]",
    "mov     ecx, dword [rsp+0xc4]",
    "mov     r11d, dword [rax]",
    "xor     r8d, r8d",
    "lea     eax, [r11+rcx-0x1]",
    "mov     r9d, ecx",
    "mov     rcx, qword [rsp+0x40]",
    "lea     edx, [r8+0x49]",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x80]",
    "mov     r8d, dword [rsp+0x84]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, 0xc",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r11d, dword [rsp+0x98]",
    "mov     r9, qword [rsp+0x48]",
    "mov     r8, qword [rsp+0x78]",
    "mov     rdx, qword [rsp+0x60]",
    "neg     r11d",
    "sbb     ax, ax",
    "mov     dword [rsp+0x30], esi",
    "mov     rcx, rdi",
    "and     ax, 0x200",
    "or      ax, 0x40",
    "mov     word [rsp+0x28], ax",
    "mov     qword [rsp+0x20], rsi",
    "call    sub_140078d90",
    "mov     rdx, rax",
    "mov     qword [rsp+0x70], rax",
    "cmp     rax, rsi",
    "je      0x14006afa7",
    "and     dword [rsp+0x1c0], 0xfffffff7",
    "add     edx, ebp",
    "add     rcx, 0x18",
    "cmp     edx, r11d",
    "mov     dword [rsp+0x218], edx",
    "mov     qword [rsp+0x68], rcx",
    "jl      0x14006a1a4",
    "mov     rdx, qword [rax+0x40]",
    "lea     rcx, [rsp+0x198]",
    "mov     rdx, qword [rdx+0x48]",
    "call    sub_140049588",
    "mov     r11d, dword [rsp+0x128]",
    "mov     rcx, qword [rsp+0x68]",
    "mov     edx, dword [rsp+0x218]",
    "cmp     dword [rax], ebp",
    "jne     0x14006a185",
    "cmp     byte [rsp+0xbc], 0x3",
    "mov     rdi, qword [rsp+0x200]",
    "jne     0x14006af2c",
    "mov     rcx, rbp",
    "call    sub_14003278c",
    "mov     rdx, rsi",
    "mov     qword [rsp+0x48], rdx",
    "mov     rax, qword [rbx]",
    "cmp     dword [rax], ebp",
    "jne     0x14006ac3a",
    "mov     rax, qword [rsp+0x58]",
    "movsx   ecx, byte [rax+0x43]",
    "mov     rax, qword [rsp+0x48]",
    "cmp     ecx, dword [rax]",
    "jne     0x14006a40a",
    "mov     rax, qword [rsp+0x120]",
    "mov     rax, qword [rax+rcx]",
    "or      dword [rsp+0x1c0], 0x8",
    "mov     r8, qword [rax+0x20]",
    "mov     qword [rsp+0x70], rax",
    "cmp     r8, rsi",
    "je      0x14006a1ef",
    "bt      dword [rcx+0x4], 0x18",
    "jb      0x14006a185",
    "cmp     qword [rsp+0x138], rsi",
    "je      0x14006af8b",
    "lea     r9, [rel data_1400f6d38]  {\"DISTINCT\"}",
    "lea     r8, [rel data_1400f68d0]  {\"USE TEMP B-TREE FOR %s\"}",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "call    sub_140032580",
    "mov     dword [rsp+0x208], esi",
    "cmp     dword [rsp+0x11c], esi",
    "je      0x14006ab96",
    "mov     r9, qword [rdx+0x70]",
    "mov     r8d, 0xfff0bdc0",
    "mov     dword [rsp+0x208], r8d",
    "cmp     r9, rsi",
    "je      0x14006ac91",
    "mov     rdx, qword [rbx+0x28]",
    "cmp     dword [rdx], ebp",
    "jne     0x14006ac3a",
    "cmp     byte [rsp+0xc8], sil",
    "je      0x14006a421",
    "mov     rbx, qword [rsp+0x40]",
    "mov     eax, esi",
    "mov     dword [rsp+0x54], eax",
    "jmp     0x14006a652",
    "mov     rax, qword [rcx+0x8]",
    "lea     rdx, [rel data_1400f252c]",
    "mov     rcx, rax",
    "mov     qword [rsp+0x218], rax",
    "call    sub_1400192b0",
    "cmp     eax, esi",
    "jne     0x14006a127",
    "mov     edx, dword [rsp+0xb0]",
    "mov     rcx, rbp",
    "call    sub_14003278c",
    "cmp     dword [rdi+0x30], esi",
    "mov     r11d, esi",
    "setg    r11b",
    "mov     ebp, r11d",
    "cmp     dword [rsp+0x140], esi",
    "lea     rax, [rel data_1400f6d58]  {\"RIGHT PART OF ORDER BY\"}",
    "lea     r9, [rel data_1400f69a0]  {\"ORDER BY\"}",
    "cmovg   r9, rax",
    "lea     r8, [rel data_1400f68d0]  {\"USE TEMP B-TREE FOR %s\"}",
    "mov     rcx, rdi",
    "xor     edx, edx",
    "call    sub_140032580",
    "mov     rax, qword [rsp+0x210]",
    "lea     r8, [rsp+0x138]",
    "mov     qword [rsp+0x20], rax",
    "mov     rax, qword [rsp+0xa0]",
    "mov     rdx, rbx",
    "mov     r9d, dword [rax]",
    "mov     rcx, rdi",
    "call    sub_1400645f0",
    "mov     eax, dword [rsp+0x118]",
    "lea     ecx, [r11+rax]",
    "cmp     ecx, esi",
    "je      0x14006abb5",
    "cmp     r11d, esi",
    "mov     edx, esi",
    "jle     0x14006ab64",
    "mov     eax, dword [rdi+0x34]",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x70], rsi",
    "mov     dword [rsp+0x218], eax",
    "inc     eax",
    "mov     qword [rsp+0x68], rsi",
    "mov     dword [rdi+0x34], eax",
    "mov     eax, dword [rdx+0x38]",
    "mov     edx, r8d",
    "mov     dword [rsp+0x78], eax",
    "call    sub_1400538c0",
    "mov     rax, qword [rsp+0x48]",
    "test    byte [rax+0x40], 0x20",
    "je      0x14006acf3",
    "mov     rax, qword [rdi]",
    "mov     r8d, esi",
    "mov     dword [rsp+0x208], esi",
    "mov     rcx, qword [rax+0x20]",
    "cmp     qword [rcx+0x18], r9",
    "je      0x14006ac91",
    "cmp     qword [rdx+0x30], rsi",
    "jne     0x14006ac3a",
    "lea     r9, [rel data_1400f6d48]  {\"GROUP BY\"}",
    "lea     r9, [rel data_1400f6d38]  {\"DISTINCT\"}",
    "test    byte [rbx+0xc], bpl",
    "je      0x14006a428",
    "cmp     dword [rsp+0x98], esi",
    "je      0x14006a687",
    "mov     rcx, qword [rsp+0x218]",
    "lea     rdx, [rel data_1400f2528]",
    "call    sub_1400192b0",
    "cmp     eax, esi",
    "jne     0x14006a185",
    "mov     dword [rsp+0x54], ebp",
    "mov     byte [rsp+0x218], 0x2",
    "jmp     0x14006a14f",
    "movzx   eax, byte [rsp+0x54]",
    "mov     r9, qword [rsp+0x130]",
    "mov     r8, qword [rsp+0x78]",
    "mov     rdx, qword [rsp+0x60]",
    "mov     dword [rsp+0x30], esi",
    "mov     word [rsp+0x28], ax",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rsi",
    "call    sub_140078d90",
    "mov     qword [rsp+0x218], rax",
    "cmp     rax, rsi",
    "je      0x14006afa7",
    "lea     rdx, [rsp+0xf0]",
    "mov     rcx, rdi",
    "call    sub_140068cd0",
    "cmp     edx, r11d",
    "jne     0x14006ab96",
    "mov     rcx, qword [rsp+0x120]",
    "mov     rcx, rsi",
    "mov     rcx, qword [rax+0x10]",
    "mov     qword [rsp+0x68], rcx",
    "cmp     rcx, rsi",
    "je      0x14006acf6",
    "add     rcx, 0x18",
    "mov     rdx, qword [rdx+0x28]",
    "mov     r8, qword [rax+0x8]",
    "mov     qword [rsp+0x48], rdx",
    "cmp     dword [rdx+0x54], esi",
    "jne     0x14006ab26",
    "mov     edx, ebx",
    "mov     rcx, rdi",
    "call    sub_140049624",
    "xor     r9d, r9d",
    "mov     rdx, r10",
    "mov     rcx, rdi",
    "mov     r8d, eax",
    "mov     byte [rsp+0x20], sil",
    "mov     dword [rsp+0xa8], eax",
    "call    sub_140047f5c",
    "mov     r8d, dword [rsp+0x118]",
    "cmp     r8d, esi",
    "mov     ecx, esi",
    "mov     dword [rsp+0x78], ecx",
    "jle     0x14006a52a",
    "mov     rax, qword [rsp+0x110]",
    "mov     edx, dword [rsp+0x118]",
    "add     rax, 0x10",
    "lea     r8, [rel data_1400f68d0]  {\"USE TEMP B-TREE FOR %s\"}",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "call    sub_140032580",
    "cmp     dword [rsp+0x118], esi",
    "mov     r10, qword [rsp+0x48]",
    "mov     eax, dword [r10]",
    "mov     dword [rsp+0x54], ebp",
    "mov     dword [rsp+0x50], eax",
    "mov     ebx, eax",
    "mov     dword [rsp+0x60], eax",
    "mov     ecx, eax",
    "jle     0x14006a482",
    "mov     eax, dword [rbx+0x90]",
    "mov     dword [rsp+0x98], eax",
    "mov     eax, dword [rsp+0x54]",
    "cmp     eax, esi",
    "je      0x14006a6c5",
    "mov     rcx, qword [rsp+0x58]",
    "test    byte [rcx+0x5c], 0x4",
    "jne     0x14006a687",
    "mov     dword [rsp+0x54], 0x2",
    "mov     byte [rsp+0x218], bpl",
    "mov     rdx, qword [rsp+0x70]",
    "mov     rcx, qword [rsp+0x58]",
    "xor     r8d, r8d",
    "call    sub_140044284",
    "mov     rcx, rax",
    "mov     qword [rsp+0x130], rax",
    "cmp     rax, rsi",
    "je      0x14006a17b",
    "mov     edx, dword [rsp+0x208]",
    "lea     r8, [rsp+0xf0]",
    "mov     rcx, rdi",
    "call    sub_140068e28",
    "mov     eax, dword [rsp+0x208]",
    "cmp     eax, esi",
    "je      0x14006ae50",
    "add     dword [rdi+0x38], ebp",
    "mov     eax, dword [rdi+0x38]",
    "mov     rcx, qword [rsp+0x40]",
    "xor     r8d, r8d",
    "mov     r9d, eax",
    "mov     dword [rsp+0x208], eax",
    "lea     edx, [r8+0x46]",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r11d, dword [rsp+0x128]",
    "add     edx, ebp",
    "add     rcx, 0x18",
    "cmp     edx, r11d",
    "jl      0x14006ab45",
    "mov     rax, qword [rcx+0x8]",
    "test    byte [rax+0x4], 0x20",
    "jne     0x14006ab64",
    "cmp     rcx, rsi",
    "je      0x14006ad50",
    "test    byte [rdx+0x64], 0x4",
    "jne     0x14006ad26",
    "mov     rdx, qword [rax+0x10]",
    "cmp     rdx, rsi",
    "je      0x14006ad34",
    "mov     eax, dword [rcx+0x64]",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "je      0x14006ace7",
    "add     rcx, 0x20",
    "add     r8d, ebp",
    "cmp     qword [rcx], r9",
    "jne     0x14006ac7d",
    "mov     dword [rsp+0x208], r8d",
    "cmp     byte [r8], 0xa3",
    "jne     0x14006ab26",
    "mov     al, byte [rdi+0x1f]",
    "cmp     al, sil",
    "jne     0x14006a53a",
    "mov     rdi, qword [rsp+0x40]",
    "mov     eax, dword [rsp+0x50]",
    "mov     rbx, rsi",
    "add     rax, 0x20",
    "sub     rdx, rbp",
    "jne     0x14006a46d",
    "add     ebx, ebp",
    "add     ecx, ebp",
    "movsxd  r8, eax",
    "mov     rax, qword [rsp+0x48]",
    "mov     ecx, esi",
    "cmp     dword [rax], esi",
    "mov     dword [rsp+0x78], ecx",
    "mov     qword [rsp+0x60], r8",
    "jle     0x14006a754",
    "mov     eax, dword [rsp+0x50]",
    "mov     r9d, dword [rsp+0xa8]",
    "mov     r8d, dword [rsp+0xf4]",
    "mov     edx, 0x7e",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     eax, dword [rsp+0x54]",
    "cmp     eax, esi",
    "jne     0x14006a670",
    "mov     r11d, dword [rsp+0x128]",
    "jmp     0x14006a18a",
    "mov     al, byte [rsp+0x218]",
    "mov     byte [rcx+0x20], al",
    "mov     rbp, qword [rsp+0x40]",
    "mov     r8d, ebp",
    "mov     rbp, qword [rsp+0x40]",
    "mov     r9d, eax",
    "mov     edx, 0x46",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "jmp     0x14006ae55",
    "mov     rax, qword [rcx]",
    "bt      dword [rax+0x4], 0x18",
    "jb      0x14006ab59",
    "mov     ecx, dword [rsp+0x208]",
    "mov     r9d, dword [rsp+0x78]",
    "mov     r8d, dword [rsp+0x218]",
    "mov     dword [rsp+0x28], ebp",
    "mov     dword [rsp+0x20], ecx",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, 0x61",
    "call    sub_140032678",
    "mov     rax, qword [rsp+0x70]",
    "cmp     rax, rsi",
    "je      0x14006ad9b",
    "mov     eax, dword [rcx+0x58]",
    "mov     rdx, rcx",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x78], eax",
    "call    sub_140053f50",
    "mov     qword [rsp+0x70], rax",
    "mov     rdx, qword [rdx+0x28]",
    "cmp     rdx, rsi",
    "jne     0x14006acff",
    "movzx   r8d, word [rdx+0x5c]",
    "cmp     r8w, word [rax+0x4a]",
    "jge     0x14006ad26",
    "mov     rax, qword [rsp+0x48]",
    "mov     qword [rsp+0x68], rcx",
    "jmp     0x14006acf6",
    "mov     rcx, qword [rcx+0x28]",
    "cmp     rcx, rsi",
    "jne     0x14006acd5",
    "cmp     r11d, esi",
    "je      0x14006ab26",
    "sub     al, bpl",
    "movzx   eax, al",
    "mov     byte [rdi+0x1f], al",
    "mov     eax, dword [rdi+rax*4+0xbc]",
    "add     dword [rdi+0x38], ebp",
    "mov     eax, dword [rdi+0x38]",
    "jmp     0x14006a54a",
    "add     ecx, ebp",
    "add     rbx, 0x20",
    "cmp     ecx, r8d",
    "mov     dword [rsp+0x78], ecx",
    "jl      0x14006a4c8",
    "mov     ecx, dword [rsp+0xa8]",
    "mov     r9d, dword [rdx+rbx+0xc]",
    "mov     r8d, dword [rdx+rbx+0x8]",
    "mov     rdx, qword [rdx+rbx]",
    "add     eax, ecx",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_1400469b0",
    "mov     eax, dword [rsp+0x50]",
    "mov     r8d, dword [rsp+0x118]",
    "mov     ecx, dword [rsp+0x78]",
    "add     eax, ebp",
    "mov     dword [rsp+0x50], eax",
    "cmp     dword [rax], ecx",
    "jl      0x14006a475",
    "mov     dword [rsp+0x60], ebx",
    "mov     rcx, qword [rsp+0xe0]",
    "cmp     rcx, rsi",
    "je      0x14006a763",
    "lea     rdx, [rax+0x8]",
    "mov     qword [rsp+0xa8], rdx",
    "mov     edx, dword [rsp+0x94]",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x138], rsi",
    "call    sub_140032b38",
    "cmp     byte [rdx+0x44], sil",
    "je      0x14006a687",
    "cmp     r11d, esi",
    "mov     edx, esi",
    "mov     dword [rsp+0x218], edx",
    "jle     0x14006a242",
    "mov     rcx, rax",
    "call    sub_1400799ec",
    "lea     rdx, [rsp+0xf0]",
    "mov     rcx, rdi",
    "call    sub_140068da4",
    "mov     r9d, dword [rax+0x38]",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "lea     edx, [r8+0xb]",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     rax, qword [rsp+0x218]",
    "mov     rax, qword [rsp+0x218]",
    "cmp     byte [rax+0x43], sil",
    "jle     0x14006ae82",
    "mov     rax, qword [rsp+0x120]",
    "mov     r8d, dword [rsp+0x218]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     r9d, dword [rax+0x10]",
    "mov     edx, 0x5d",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x218]",
    "mov     rcx, qword [rsp+0x40]",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x20], esi",
    "lea     edx, [r9+0x75]",
    "call    sub_140032364",
    "cmp     byte [rdi+0x103], 0x2",
    "jne     0x14006ae9a",
    "mov     rcx, qword [rsp+0x40]",
    "mov     r9d, 0xfffffff7",
    "mov     r8, rax",
    "or      edx, 0xffffffff",
    "call    sub_140032c40",
    "mov     qword [rsp+0x68], rcx",
    "cmp     qword [rdx+0x48], rsi",
    "jne     0x14006ad26",
    "mov     rax, qword [rsp+0x120]",
    "mov     rcx, qword [rax+0x8]",
    "bt      dword [rcx+0x4], 0x8",
    "jae     0x14006ab26",
    "mov     r8d, dword [rsp+0x60]",
    "mov     edx, dword [rsp+0xa8]",
    "mov     rcx, rdi",
    "call    sub_140049678",
    "mov     rcx, qword [rsp+0x70]",
    "call    sub_1400799ec",
    "mov     ecx, dword [rdi+0x34]",
    "lea     eax, [rcx+0x1]",
    "mov     dword [rsp+0x50], ecx",
    "mov     dword [rsp+0xf8], ecx",
    "mov     dword [rdi+0x34], eax",
    "mov     al, byte [rdi+0x1f]",
    "cmp     al, sil",
    "jne     0x14006a5f0",
    "mov     eax, 0x8",
    "cmp     byte [rdi+0x1f], al",
    "jae     0x14006a5ae",
    "mov     r8d, dword [rsp+0xa8]",
    "mov     r9d, ebx",
    "mov     rbx, qword [rsp+0x40]",
    "mov     edx, 0x5c",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x50], eax",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x50]",
    "mov     r8d, dword [rsp+0xf4]",
    "mov     edx, 0x83",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     ecx, dword [rsp+0x50]",
    "cmp     ecx, esi",
    "je      0x14006a5ae",
    "mov     rdx, qword [rsp+0x110]",
    "cmp     dword [rdx+rbx+0x10], eax",
    "jl      0x14006a50f",
    "mov     rdi, qword [rsp+0x200]",
    "mov     ebx, dword [rsp+0x60]",
    "mov     eax, dword [rax]",
    "mov     r9d, dword [rsp+0xb8]",
    "mov     r8d, dword [rsp+0xc4]",
    "mov     edx, 0x57",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     r8, qword [rsp+0xe0]",
    "mov     r9d, 0xfffffff7",
    "mov     edx, eax",
    "mov     rcx, rbx",
    "call    sub_140032c40",
    "mov     ebx, dword [rbx+0x90]",
    "mov     rcx, qword [rsp+0x40]",
    "xor     r9d, r9d",
    "lea     r8d, [rbx+0x1]",
    "lea     edx, [r9+0x10]",
    "mov     dword [rsp+0x20], r8d",
    "call    sub_140032364",
    "mov     rax, qword [rsp+0x48]",
    "mov     r9d, dword [rsp+0xc4]",
    "mov     r11d, dword [rax]",
    "mov     r8d, dword [rsp+0xb8]",
    "mov     rcx, qword [rdi+0x10]",
    "mov     edx, 0x4d",
    "mov     dword [rsp+0x20], r11d",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x218]",
    "mov     r9d, dword [rsp+0xd8]",
    "mov     rcx, qword [rsp+0x40]",
    "inc     r8d",
    "mov     edx, 0xc",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x90]",
    "mov     r8d, dword [rsp+0x218]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, 0x2f",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x80]",
    "mov     r8d, dword [rsp+0x84]",
    "mov     rcx, qword [rsp+0x40]",
    "mov     edx, 0xc",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rcx, rbx",
    "call    sub_140032d34",
    "mov     ecx, dword [rbx+0x90]",
    "mov     edx, dword [rsp+0xc0]",
    "mov     dword [rax+0x8], ecx",
    "lea     r8, [rsp+0xf0]",
    "mov     rcx, rdi",
    "call    sub_140068e28",
    "mov     r9d, dword [rsp+0xc0]",
    "mov     r8d, ebp",
    "mov     edx, 0x46",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "cmp     dword [rsp+0x54], esi",
    "je      0x14006a8c9",
    "add     dword [rcx], ebp",
    "mov     byte [rsp+0xf0], bpl",
    "mov     rdx, qword [rdx]",
    "lea     r8d, [rcx+rax]",
    "mov     rcx, rdi",
    "call    sub_140047e2c",
    "mov     r8d, dword [rsp+0x50]",
    "add     eax, ecx",
    "mov     r9d, ecx",
    "mov     edx, 0x5a",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "jmp     0x14006a728",
    "mov     ebp, dword [rsp+0x90]",
    "mov     rdx, qword [rsp+0x88]",
    "mov     r9d, 0x10",
    "mov     rcx, rdi",
    "mov     r8d, ebp",
    "mov     qword [rsp+0x138], rsi",
    "call    sub_1400485c0",
    "mov     rax, qword [rsp+0x210]",
    "mov     dword [rsp+0x38], ebp",
    "mov     dword [rsp+0x30], ebp",
    "mov     qword [rsp+0x28], rax",
    "xor     r9d, r9d",
    "or      r8d, 0xffffffff",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], rsi",
    "call    sub_1400639f0",
    "mov     rbp, qword [rsp+0x40]",
    "mov     rcx, qword [rsp+0x68]",
    "mov     r9, qword [rsp+0x48]",
    "cmp     rcx, rsi",
    "je      0x14006ae17",
    "cmp     rcx, rsi",
    "je      0x14006ad23",
    "test    dword [r8+0x4], 0x1000002",
    "je      0x14006ac42",
    "sub     al, bpl",
    "movzx   eax, al",
    "mov     byte [rdi+0x1f], al",
    "mov     edx, dword [rdi+rax*4+0xbc]",
    "add     dword [rdi+0x38], ebp",
    "mov     edx, dword [rdi+0x38]",
    "jmp     0x14006a600",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], ecx",
    "add     byte [rdi+0x1f], bpl",
    "mov     rcx, qword [rsp+0x70]",
    "call    sub_1400799ec",
    "mov     edx, dword [rsp+0x68]",
    "mov     rcx, rbx",
    "call    sub_140032b38",
    "mov     r9d, dword [rsp+0x98]",
    "mov     r8d, dword [rsp+0xf4]",
    "mov     edx, 0x3",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "jmp     0x14006a8df",
    "mov     eax, dword [rsp+0xb8]",
    "cmp     r8, rsi",
    "je      0x14006a711",
    "mov     ecx, dword [rsp+0x78]",
    "mov     rdx, qword [rsp+0xa8]",
    "mov     rax, qword [rsp+0x48]",
    "mov     r8, qword [rsp+0x60]",
    "add     ecx, ebp",
    "add     rdx, 0x28",
    "cmp     ecx, dword [rax]",
    "mov     dword [rsp+0x78], ecx",
    "mov     qword [rsp+0xa8], rdx",
    "jl      0x14006a6e8",
    "lea     rcx, [rel data_1400f386c]",
    "mov     ebp, esi",
    "mov     rax, rcx",
    "test    byte [r9+0x40], 0x20",
    "je      0x14006ae0b",
    "mov     rcx, rdx",
    "cmp     r8w, word [rcx+0x5c]",
    "jge     0x14006ad26",
    "cmp     rdx, rsi",
    "je      0x14006ab26",
    "mov     eax, dword [rsp+0x60]",
    "mov     dword [rsp+0xa8], edx",
    "mov     r9d, edx",
    "mov     r8d, ecx",
    "mov     edx, 0x74",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x90]",
    "mov     r8d, dword [rsp+0xf4]",
    "mov     edx, 0x22",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     rdx, qword [rsp+0x70]",
    "mov     byte [rsp+0xf1], bpl",
    "mov     eax, ebp",
    "mov     r9d, dword [rsp+0xc0]",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "lea     edx, [r8+0x46]",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x84]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x42]",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "jmp     0x14006aef3",
    "lea     rdx, [rsp+0xf0]",
    "mov     rcx, rdi",
    "call    sub_140068cd0",
    "mov     r8d, dword [rsp+0x218]",
    "mov     r9d, dword [rsp+0xd8]",
    "mov     edx, 0xc",
    "mov     rcx, rbx",
    "inc     r8d",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x90]",
    "xor     r8d, r8d",
    "lea     edx, [r8+0xb]",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x218]",
    "mov     edi, dword [rbx+0x90]",
    "mov     r8d, ebp",
    "mov     edx, 0x46",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x218]",
    "xor     r9d, r9d",
    "inc     r8d",
    "mov     rcx, rbx",
    "lea     edx, [r9+0x42]",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0xd8]",
    "mov     rcx, rbx",
    "call    sub_14003278c",
    "mov     ebx, dword [rbx+0x90]",
    "mov     rbp, qword [rsp+0x40]",
    "mov     r8d, dword [rsp+0xc0]",
    "lea     r9d, [rbx+0x2]",
    "mov     edx, 0x2f",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     r8d, dword [rsp+0x218]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x42]",
    "mov     rcx, rbp",
    "inc     r8d",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     rbp, qword [rsp+0x200]",
    "lea     rdx, [rsp+0xf0]",
    "mov     rcx, rbp",
    "call    sub_140068da4",
    "mov     rdx, qword [rsp+0x88]",
    "inc     ebx",
    "mov     r8d, ebx",
    "mov     r9d, 0x10",
    "mov     rcx, rbp",
    "call    sub_1400485c0",
    "mov     rax, qword [rsp+0x210]",
    "mov     dword [rsp+0x38], edi",
    "mov     dword [rsp+0x30], ebx",
    "mov     rbx, qword [rsp+0x208]",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0xc8]",
    "lea     r9, [rsp+0x138]",
    "or      r8d, 0xffffffff",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "mov     rdi, rbp",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400639f0",
    "mov     r8d, dword [rsp+0x218]",
    "mov     rbp, qword [rsp+0x40]",
    "xor     r9d, r9d",
    "inc     r8d",
    "lea     edx, [r9+0x42]",
    "mov     rcx, rbp",
    "mov     dword [rsp+0x20], esi",
    "call    sub_140032364",
    "mov     edx, dword [rsp+0x80]",
    "mov     rcx, rbp",
    "call    sub_14003278c",
    "mov     r11d, dword [rsp+0x118]",
    "mov     ecx, dword [rsp+0x128]",
    "add     ecx, r11d",
    "cmp     ecx, esi",
    "je      0x14006aa82",
    "mov     rax, qword [rcx]",
    "lea     rcx, [rel data_1400f386c]",
    "jmp     0x14006ae23",
    "mov     eax, dword [rcx+0x64]",
    "and     al, 0x3",
    "cmp     al, 0x2",
    "je      0x14006ae17",
    "mov     edx, dword [rsp+0x90]",
    "mov     r9, qword [r9]",
    "lea     rdx, [rel data_1400f6cc0]  {\" USING COVERING INDEX \"}",
    "cmp     ebp, esi",
    "cmovne  rcx, rdx",
    "mov     qword [rsp+0x28], rax",
    "lea     r8, [rel data_1400f6cd8]  {\"SCAN TABLE %s%s%s\"}",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, rdi",
    "xor     edx, edx",
    "call    sub_140032580",
    "jmp     0x14006ae9a"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}