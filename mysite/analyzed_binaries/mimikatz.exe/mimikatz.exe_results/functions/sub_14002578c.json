{
  "address": "0x14002578c",
  "rules": [
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x50",
    "mov     esi, dword [rcx+0x38]",
    "mov     rdi, rcx",
    "mov     r14d, edx",
    "add     esi, 0x18",
    "mov     ecx, esi",
    "call    sub_1400168a8",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x1400257cc",
    "mov     eax, dword [rdi+0x7c]",
    "cmp     eax, 0x1",
    "jne     0x1400257da",
    "lea     eax, [rbx+0x7]",
    "jmp     0x140025907",
    "add     eax, 0xfffffffe",
    "mov     r9d, eax",
    "movsxd  rax, esi",
    "imul    r9, rax",
    "add     r9, 0x30",
    "lea     r9d, [rax+0x17]",
    "jmp     0x1400257eb",
    "lea     r11, [rsp+0x50]",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x28]",
    "mov     rsi, qword [r11+0x30]",
    "mov     rdi, qword [r11+0x38]",
    "mov     rsp, r11",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "test    ebp, ebp",
    "je      0x140025850",
    "mov     rcx, qword [rdi+0x10]",
    "mov     r8d, 0x8",
    "mov     rdx, rbx",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x10]",
    "movzx   ecx, byte [rbx+0x2]",
    "movzx   edx, byte [rbx+0x1]",
    "mov     r13d, dword [rdi+0x7c]",
    "shl     edx, 0x8",
    "mov     ebp, eax",
    "movzx   eax, byte [rbx+0x3]",
    "or      edx, ecx",
    "movzx   ecx, byte [rbx]",
    "shl     ecx, 0x18",
    "shl     edx, 0x8",
    "or      edx, ecx",
    "or      edx, eax",
    "mov     dword [rdi+0x60], edx",
    "movzx   eax, byte [rbx+0x6]",
    "movzx   ecx, byte [rbx+0x5]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rbx+0x4]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rbx+0x7]",
    "or      ecx, eax",
    "and     dword [rdi+0x7c], 0x0",
    "mov     dword [rdi+0x64], ecx",
    "jmp     0x1400258f5",
    "cmp     r13d, r14d",
    "ja      0x1400258fd",
    "mov     rcx, rbx",
    "call    sub_140016950",
    "mov     eax, ebp",
    "mov     rcx, qword [rdi+0x10]",
    "movsxd  rax, esi",
    "lea     r12d, [r13-0x1]",
    "mov     r8d, esi",
    "mov     rdx, rbx",
    "imul    r12, rax",
    "mov     rax, qword [rcx]",
    "lea     r9, [r12+0x20]",
    "call    qword [rax+0x10]",
    "mov     ebp, eax",
    "test    eax, eax",
    "jne     0x1400258f2",
    "inc     r13d",
    "movzx   eax, byte [rbx+0x6]",
    "movzx   r8d, byte [rbx+0x5]",
    "movzx   edx, byte [rbx+0x1]",
    "shl     r8d, 0x8",
    "shl     edx, 0x8",
    "lea     r9, [rbx+0x18]",
    "or      r8d, eax",
    "movzx   eax, byte [rbx+0x4]",
    "mov     rcx, rdi",
    "shl     eax, 0x18",
    "shl     r8d, 0x8",
    "or      r8d, eax",
    "movzx   eax, byte [rbx+0x7]",
    "or      r8d, eax",
    "movzx   eax, byte [rbx+0x2]",
    "or      edx, eax",
    "movzx   eax, byte [rbx]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rbx+0x3]",
    "or      edx, eax",
    "lea     rax, [rsp+0x30]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400236d0",
    "mov     rcx, qword [rdi+0x10]",
    "mov     rax, qword [rcx]",
    "lea     r9, [r12+0x20]",
    "lea     r8d, [rbp+0x18]",
    "lea     rdx, [rsp+0x30]",
    "call    qword [rax+0x18]",
    "mov     ebp, eax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}