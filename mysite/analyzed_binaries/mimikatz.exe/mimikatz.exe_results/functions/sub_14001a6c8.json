{
  "address": "0x14001a6c8",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8 {__saved_rbx}], rbx",
    "lea     rbx, [rel data_14013d460]",
    "mov     r11, rdx",
    "xor     eax, eax  {0x0}",
    "mov     rcx, rbx  {data_14013d460}",
    "test    edx, edx",
    "je      0x14001a70e",
    "inc     r8",
    "test    r10d, r10d",
    "jne     0x14001a6e5",
    "lea     rax, [rax+rax*2]",
    "mov     rax, qword [rbx+rax*8+0x8]",
    "inc     eax",
    "add     rcx, 0x18",
    "cmp     eax, 0x50",
    "jb      0x14001a6dc",
    "movzx   edx, byte [r8]",
    "movzx   r10d, byte [r8+r9]",
    "sub     edx, r10d",
    "jne     0x14001a6fb",
    "mov     r9, qword [rcx]",
    "mov     r8, r11",
    "sub     r9, r11",
    "xor     eax, eax  {0x0}",
    "jmp     0x14001a717",
    "mov     rbx, qword [rsp+0x8 {__saved_rbx}]",
    "retn     {__return_addr}"
  ],
  "high_level_IL": [
    "uint64_t rax = 0",
    "char const (** rcx)[0x10] = &data_14013d460",
    "void* r8_1 = arg2",
    "uint32_t rdx",
    "uint32_t i",
    "rdx = zx.d(*r8_1)",
    "i = zx.d(*(r8_1 + *rcx - arg2))",
    "if (rdx != i)",
    "break",
    "r8_1 += 1",
    "do while (i != 0)",
    "if (rdx - i == 0)",
    "return (&data_14013d468)[rax * 3]",
    "rax = zx.q(rax.d + 1)",
    "rcx = &rcx[3]",
    "do while (rax.d u< 0x50)",
    "return 0"
  ]
}