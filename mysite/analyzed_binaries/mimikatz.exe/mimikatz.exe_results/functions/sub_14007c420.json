{
  "address": "0x14007c420",
  "rules": [
    "encrypt data using speck/4b1f3c27d17344b39cf9dede3bcf8b4b",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "check for software breakpoints/eab8e97e968348cd9975bb039b618db9",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "load shellcode via donut/c9a72a5fdf6e462ea071ab99fb8585e2/5c9bba15e9b64c668b01383d9c9afe0e",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x48",
    "mov     r15, qword [rcx+0x8]",
    "mov     rsi, qword [rcx+0x10]",
    "mov     rbp, rcx",
    "cmp     dword [r15+0x84], 0x0",
    "je      0x14007c454",
    "mov     rbx, qword [rcx]",
    "mov     rdi, r15",
    "lea     rbp, [rel data_1400d8800]  {\"nth_value\"}",
    "lea     r8, [rel data_1400d881c]  {\"lead\"}",
    "mov     edx, 0x1",
    "call    sub_14007c0a8",
    "jmp     0x14007c686",
    "mov     r14d, dword [rdi+0x64]",
    "dec     dword [rbx+0x44]",
    "mov     eax, dword [rbx+0x44]",
    "mov     dword [rsp+0x98], eax",
    "mov     al, byte [rbx+0x1f]",
    "test    al, al",
    "jne     0x14007c6d2",
    "lea     rcx, [rel data_1400d8810]  {\"first_value\"}",
    "cmp     rax, rcx",
    "je      0x14007c6b1",
    "mov     r9d, dword [rbp+0x18]",
    "mov     r8d, dword [rbp+0x1c]",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0xc",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "add     rsp, 0x48",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "sub     al, dl",
    "movzx   eax, al",
    "mov     byte [rbx+0x1f], al",
    "mov     r12d, dword [rbx+rax*4+0xbc]",
    "add     dword [rbx+0x38], edx",
    "mov     r12d, dword [rbx+0x38]",
    "jmp     0x14007c6e2",
    "cmp     rax, r8",
    "je      0x14007c4a3",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0x46",
    "mov     r9d, r12d",
    "lea     r8d, [rdx-0x45]",
    "call    sub_140032364",
    "mov     r9d, dword [rdi+0x7c]",
    "mov     r8d, dword [r15+0x58]",
    "mov     edx, 0x5a",
    "inc     r9d",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r8d, 0x2",
    "mov     edx, r12d",
    "mov     rcx, rbx",
    "call    sub_14007b898",
    "jmp     0x14007c746",
    "mov     r9d, dword [rdi+0x60]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "lea     edx, [r8+0x49]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     rcx, rsi",
    "cmp     qword [r13+0x38], rbp",
    "jne     0x14007c730",
    "mov     rax, qword [rdi+0x70]",
    "mov     rcx, qword [rax+0x20]",
    "mov     eax, dword [rdi+0x64]",
    "mov     ecx, dword [rcx]",
    "dec     dword [rbx+0x44]",
    "mov     dword [rsp+0x30], eax",
    "mov     eax, dword [rbx+0x44]",
    "mov     dword [rsp+0x98], ecx",
    "mov     dword [rsp+0xa8], eax",
    "mov     al, byte [rbx+0x1f]",
    "test    al, al",
    "jne     0x14007c4d8",
    "lea     rcx, [rel data_1400d8824]",
    "cmp     rax, rcx",
    "jne     0x14007c671",
    "mov     rcx, rsi",
    "call    sub_14003278c",
    "mov     edx, 0x1",
    "lea     r8, [rel data_1400d881c]  {\"lead\"}",
    "test    r12d, r12d",
    "je      0x14007c671",
    "mov     r9d, dword [rdi+0x68]",
    "mov     r8d, r12d",
    "mov     edx, 0x67",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r8d, dword [rdi+0x68]",
    "mov     r13d, dword [rsp+0x98]",
    "inc     r8d",
    "mov     r9d, r13d",
    "mov     edx, 0x36",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "xor     r9d, r9d",
    "mov     r8d, r14d",
    "lea     edx, [r9+0x1e]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r11d, dword [rdi+0x60]",
    "mov     r9d, dword [rdi+0x7c]",
    "mov     r8d, r14d",
    "mov     edx, 0x5a",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r11d",
    "call    sub_140032364",
    "mov     edx, r13d",
    "jmp     0x14007c643",
    "sub     al, dl",
    "movzx   eax, al",
    "mov     byte [rbx+0x1f], al",
    "mov     r12d, dword [rbx+rax*4+0xbc]",
    "add     dword [rbx+0x38], edx",
    "mov     r12d, dword [rbx+0x38]",
    "jmp     0x14007c4e8",
    "mov     rdi, qword [rdi+0x40]",
    "test    rdi, rdi",
    "jne     0x14007c46d",
    "cmp     byte [rbx+0x1f], 0x8",
    "jae     0x14007c671",
    "mov     r9d, dword [rdi+0x7c]",
    "mov     eax, dword [rdi+0x60]",
    "mov     r8d, r14d",
    "add     r9d, 0x2",
    "mov     dword [rsp+0x20], eax",
    "mov     edx, 0x5a",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, dword [rdi+0x60]",
    "xor     r8d, r8d",
    "lea     edx, [r8+0x49]",
    "jmp     0x14007c525",
    "mov     r14d, dword [r15+0x58]",
    "cmp     ecx, 0x3",
    "mov     rcx, rsi",
    "mov     dword [rsp+0xa0], r14d",
    "jge     0x14007c50e",
    "mov     r13, qword [rdi+0x50]",
    "mov     rax, qword [r13+0x38]",
    "cmp     rax, rbp",
    "je      0x14007c6b1",
    "mov     rbp, qword [rsp+0x90]",
    "movzx   eax, byte [rbx+0x1f]",
    "mov     dword [rbx+rax*4+0xbc], r12d",
    "add     byte [rbx+0x1f], dl",
    "xor     r14d, r14d",
    "cmp     qword [r13+0x38], rax",
    "mov     al, byte [rbx+0x1f]",
    "setne   r14b",
    "test    al, al",
    "jne     0x14007c597",
    "or      r9d, 0xffffffff",
    "cmp     qword [r13+0x38], rax",
    "lea     edx, [rcx+0x52]",
    "cmove   r9d, ecx",
    "and     dword [rsp+0x20], 0x0",
    "mov     rcx, rsi",
    "mov     r8d, r12d",
    "call    sub_140032364",
    "jmp     0x14007c5fe",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r12d",
    "mov     r8d, r14d",
    "mov     edx, 0x80",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "cmp     dword [rsp+0x98], 0x2",
    "lea     rax, [rel data_1400d881c]  {\"lead\"}",
    "mov     ecx, 0x1",
    "jge     0x14007c57c",
    "sub     al, cl",
    "movzx   eax, al",
    "mov     byte [rbx+0x1f], al",
    "mov     r13d, dword [rbx+rax*4+0xbc]",
    "add     dword [rbx+0x38], ecx",
    "mov     r13d, dword [rbx+0x38]",
    "jmp     0x14007c5a7",
    "mov     r14d, dword [rsp+0xa8]",
    "mov     r13d, dword [rsp+0x30]",
    "mov     edx, 0x1e",
    "mov     rcx, rsi",
    "mov     r9d, r14d",
    "mov     r8d, r13d",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r11d, dword [rdi+0x60]",
    "mov     r9d, dword [rdi+0x7c]",
    "mov     r8d, r13d",
    "mov     edx, 0x5a",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r11d",
    "call    sub_140032364",
    "mov     edx, r14d",
    "cmp     byte [rbx+0x1f], 0x8",
    "jae     0x14007c5fe",
    "mov     r9d, dword [rdi+0x7c]",
    "mov     r8d, dword [rsp+0xa0]",
    "mov     edx, 0x5a",
    "add     r9d, ecx",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "lea     edx, [r14+0x67]",
    "mov     r9d, r12d",
    "mov     r8d, r13d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "test    r13d, r13d",
    "je      0x14007c5fe",
    "movzx   eax, byte [rbx+0x1f]",
    "mov     dword [rbx+rax*4+0xbc], r13d",
    "mov     eax, 0x1",
    "add     byte [rbx+0x1f], al"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}