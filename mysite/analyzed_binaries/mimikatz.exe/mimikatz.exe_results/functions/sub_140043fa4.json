{
  "address": "0x140043fa4",
  "rules": [
    "inject pe/0fa951270c554b5eb43a556aa3ef2963",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x20], r9",
    "mov     dword [rax+0x18], r8d",
    "mov     qword [rax+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x40",
    "xor     edi, edi",
    "mov     rsi, rdx",
    "mov     r10, rcx",
    "cmp     r9, rdi",
    "je      0x140043fdc",
    "mov     edx, r8d",
    "mov     rcx, rsi",
    "call    sub_140043f44",
    "mov     rcx, r10",
    "movsxd  rdx, eax",
    "call    sub_140016c18",
    "mov     r8d, dword [rsp+0x70]",
    "mov     dword [rsp+0x24], edi",
    "mov     rbx, rax",
    "mov     qword [rsp+0x30], rax",
    "mov     rbx, qword [r9]",
    "mov     dword [rsp+0x24], 0x8000000",
    "mov     qword [rax-0x28], rbx",
    "jmp     0x140044003",
    "mov     rax, rbx",
    "mov     rbx, qword [rsp+0x68]",
    "add     rsp, 0x40",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     r9d, 0x48",
    "cmp     r8d, edi",
    "je      0x14004403d",
    "cmp     rbx, rdi",
    "je      0x140044243",
    "mov     ebp, r9d",
    "cmp     byte [rsi], 0xad",
    "je      0x14004403d",
    "mov     dword [rsp+0x28], edi",
    "mov     rcx, qword [rsi+0x8]",
    "cmp     rcx, rdi",
    "je      0x14004406e",
    "bt      dword [rsi+0x4], 0x18",
    "jb      0x14004403d",
    "bt      edx, 0xe",
    "jae     0x140044094",
    "movsxd  r8, eax",
    "mov     rdx, rsi",
    "mov     rcx, rbx",
    "call    memcpy",
    "jmp     0x1400440e0",
    "call    sub_140019074",
    "inc     eax",
    "mov     dword [rsp+0x28], eax",
    "mov     eax, dword [rsp+0x2c]",
    "jmp     0x140044072",
    "cmp     qword [rsi+0x10], rdi",
    "jne     0x140044036",
    "and     edx, 0x2000",
    "neg     edx",
    "sbb     eax, eax",
    "and     eax, 0xffffffe0",
    "add     eax, r9d",
    "mov     eax, 0x10",
    "jmp     0x1400440a4",
    "and     dword [rbx+0x4], 0xf7fe9fff",
    "movsxd  rdx, dword [rsp+0x28]",
    "and     ebp, 0x6000",
    "or      ebp, dword [rsp+0x24]",
    "or      dword [rbx+0x4], ebp",
    "cmp     edx, edi",
    "je      0x14004411a",
    "cmp     r8d, edi",
    "je      0x140044087",
    "mov     ebp, 0x2028",
    "jmp     0x140044040",
    "cmp     qword [rsi+0x20], rdi",
    "jne     0x140044036",
    "mov     rcx, qword [rsp+0x38]",
    "mov     rax, qword [rsp+0x30]",
    "sub     rdx, rcx",
    "add     rcx, rax",
    "mov     r8, rdx",
    "xor     edx, edx",
    "call    memset",
    "mov     r8, rax",
    "mov     rdx, rsi",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "mov     qword [rsp+0x38], rax",
    "call    memcpy",
    "mov     edx, 0x48",
    "cmp     dword [rsp+0x20], edx",
    "jae     0x1400440e0",
    "mov     eax, dword [rbx+0x4]",
    "mov     rbp, qword [rsp+0x60]",
    "or      eax, dword [rsi+0x4]",
    "test    eax, 0x804000",
    "jne     0x14004414f",
    "mov     rax, qword [rsp+0x30]",
    "movsxd  rcx, dword [rsp+0x2c]",
    "mov     r8, rdx",
    "add     rcx, rax",
    "mov     qword [rbx+0x8], rcx",
    "mov     rdx, qword [rsi+0x8]",
    "call    memcpy",
    "mov     edx, dword [rsi+0x4]",
    "mov     eax, ebp",
    "and     eax, 0xfff",
    "bt      edx, 0xa",
    "mov     dword [rsp+0x2c], eax",
    "jb      0x14004406e",
    "mov     ebp, 0x4010",
    "jmp     0x140044040",
    "test    dword [rbx+0x4], 0x1006000",
    "je      0x1400441f1",
    "bt      dword [rsi+0x4], 0xb",
    "mov     r8d, dword [rsp+0x70]",
    "mov     rdx, qword [rsi+0x20]",
    "mov     rcx, rbp",
    "jae     0x140044146",
    "test    dword [rsi+0x4], 0x804000",
    "jne     0x140044243",
    "mov     edx, dword [rsp+0x70]",
    "mov     rcx, rsi",
    "call    sub_140043ed4",
    "movsxd  rcx, eax",
    "add     qword [rsp+0x30], rcx",
    "test    dword [rbx+0x4], 0x804000",
    "jne     0x1400441c3",
    "call    sub_140044284",
    "call    sub_14004463c",
    "jmp     0x14004414b",
    "cmp     byte [rbx], 0xad",
    "jne     0x140044205",
    "bt      dword [rsi+0x4], 0x18",
    "jae     0x1400441dd",
    "mov     rdx, qword [rsi+0x10]",
    "cmp     rdx, rdi",
    "je      0x140044197",
    "mov     qword [rbx+0x20], rax",
    "mov     rdx, qword [rsi+0x10]",
    "cmp     rdx, rdi",
    "je      0x14004421e",
    "mov     rax, qword [rsi+0x10]",
    "jmp     0x140044221",
    "mov     rcx, qword [rsp+0x78]",
    "cmp     rcx, rdi",
    "je      0x140044243",
    "mov     r8, qword [rsi+0x40]",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "call    sub_14007cf44",
    "mov     qword [rbx+0x40], rax",
    "mov     rax, rdi",
    "lea     r9, [rsp+0x30]",
    "mov     r8d, 0x1",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "jmp     0x14004419a",
    "mov     rax, rdi",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "jmp     0x140044221",
    "mov     qword [rbx+0x10], rax",
    "mov     rdx, qword [rsi+0x18]",
    "cmp     rdx, rdi",
    "je      0x14004423f",
    "mov     rax, qword [rsp+0x30]",
    "mov     qword [rcx], rax",
    "jmp     0x140044243",
    "mov     rax, rdi",
    "lea     r9, [rsp+0x30]",
    "mov     r8d, 0x1",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "jmp     0x1400441bf",
    "mov     qword [rbx+0x10], rax",
    "mov     rdx, qword [rsi+0x18]",
    "cmp     rdx, rdi",
    "je      0x1400441bc",
    "mov     qword [rbx+0x18], rdi",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rbp",
    "call    sub_140043fa4",
    "mov     rdi, rax",
    "mov     qword [rbx+0x18], rax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}