{
  "address": "0x140053dcc",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x30",
    "mov     rsi, qword [rcx]",
    "mov     rbp, r8",
    "mov     r12, rdx",
    "mov     rbx, rcx",
    "call    sub_140062358",
    "test    eax, eax",
    "jne     0x140053f3a",
    "mov     rbx, qword [rsp+0x58]",
    "mov     rbp, qword [rsp+0x60]",
    "add     rsp, 0x30",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "test    r12, r12",
    "jne     0x140053e0b",
    "test    rbp, rbp",
    "je      0x140053e17",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "call    sub_140053d58",
    "jmp     0x140053f3a",
    "mov     rcx, qword [rbx]",
    "mov     rdx, r12",
    "call    sub_14004e64c",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140053f3a",
    "cmp     qword [rbp], 0x0",
    "jne     0x140053e67",
    "mov     dl, byte [rsi+0x5e]",
    "xor     r9d, r9d",
    "mov     r8, rax",
    "mov     rcx, rsi",
    "call    sub_1400544b4",
    "mov     rdx, rdi",
    "test    rax, rax",
    "je      0x140053e5f",
    "cmp     dword [rbp+0x8], 0x0",
    "mov     rax, qword [rbx]",
    "jbe     0x140053e91",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "mov     rcx, rbx",
    "call    sub_140053d58",
    "mov     rdx, rdi",
    "movzx   edi, byte [rax+0xb4]",
    "lea     r9, [rsp+0x50]",
    "mov     r8, rbp",
    "mov     rdx, r12",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004e6f0",
    "mov     r12, qword [rsp+0x50]",
    "mov     edi, eax",
    "jmp     0x140053e98",
    "mov     rdx, r12",
    "mov     rcx, rsi",
    "call    sub_14004e64c",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140053f3a",
    "test    edi, edi",
    "js      0x140053f3a",
    "mov     rcx, qword [rsi+0x20]",
    "movsxd  rdx, edi",
    "shl     rdx, 0x5",
    "mov     r12, qword [rdx+rcx]",
    "mov     rdx, rax",
    "mov     rcx, rsi",
    "mov     r8, r12",
    "call    sub_14004de30",
    "test    rax, rax",
    "je      0x140053eef",
    "mov     r8, r12",
    "mov     rdx, rbp",
    "mov     rcx, rsi",
    "call    sub_14004e0d8",
    "mov     rdx, rbp",
    "mov     rcx, rsi",
    "mov     r12, rax",
    "call    sub_1400169a8",
    "mov     rcx, rbx",
    "test    r12, r12",
    "je      0x140053f2e",
    "xor     r8d, r8d",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_140053c68",
    "mov     rdx, rbp",
    "jmp     0x140053e52",
    "lea     rdx, [rel data_1400f60c8]  {\"unable to identify the object to\u2026\"}",
    "call    sub_1400191b8",
    "mov     r8d, edi",
    "xor     edx, edx",
    "call    sub_14005398c",
    "or      r8d, 0xffffffff",
    "mov     rdx, r12",
    "mov     rcx, rbx",
    "call    sub_140051848",
    "jmp     0x140053f3a",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "jmp     0x140053f3a"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}