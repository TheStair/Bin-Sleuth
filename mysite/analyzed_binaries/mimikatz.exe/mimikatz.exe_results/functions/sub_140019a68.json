{
  "address": "0x140019a68",
  "rules": [
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/b698edc3bfd142ebb8f43c55408819b5",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/bfe99336573d4b5189dbca2cbd3ed1f2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/a3c4a1cc0982489686093c2de66a39c8",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/6cf0dbdc06cf4e518b05ed91d6a55995"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rdi",
    "xor     r10d, r10d",
    "cmp     byte [rcx], 0x2d",
    "mov     rdi, rdx",
    "mov     r8, rcx",
    "lea     rbp, [rel data_1400d6500]",
    "mov     r9, r10",
    "mov     ebx, r10d",
    "jne     0x140019a98",
    "cmp     byte [rcx], 0x2b",
    "jne     0x140019b28",
    "lea     ebx, [r10+0x1]",
    "jmp     0x140019aa1",
    "cmp     byte [rcx], 0x30",
    "jne     0x140019aa4",
    "inc     r8",
    "movzx   eax, byte [r8]",
    "test    byte [rax+rbp], 0x4",
    "je      0x140019bb7",
    "mov     al, byte [rcx+0x1]",
    "cmp     al, 0x78",
    "je      0x140019b40",
    "xor     eax, eax",
    "jmp     0x140019b18",
    "cmp     al, 0x30",
    "jne     0x140019abf",
    "lea     r11, [rcx+0x2]",
    "movzx   eax, byte [r11]",
    "test    byte [rax+rbp], 0x8",
    "je      0x140019aa4",
    "cmp     al, 0x58",
    "jne     0x140019aa4",
    "mov     rbx, qword [rsp+0x8]",
    "mov     rbp, qword [rsp+0x10]",
    "mov     rdi, qword [rsp+0x18]",
    "retn    ",
    "mov     r11d, r10d",
    "mov     rdx, r10",
    "inc     r8",
    "cmp     byte [r8], 0x30",
    "je      0x140019ab6",
    "jmp     0x140019b57",
    "cmp     r11d, 0xa",
    "jg      0x140019bb7",
    "lea     rcx, [r9+r9*4]",
    "cdqe    ",
    "inc     rdx",
    "inc     r11d",
    "cmp     rdx, 0xb",
    "lea     r9, [rax+rcx*2]",
    "jl      0x140019ac5",
    "cmp     byte [r11], 0x30",
    "je      0x140019b54",
    "movsxd  rax, ebx",
    "mov     rcx, r9",
    "sub     rcx, rax",
    "cmp     rcx, 0x7fffffff",
    "jg      0x140019bb7",
    "movsx   eax, byte [rdx+r8]",
    "sub     eax, 0x30",
    "cmp     eax, 0x9",
    "ja      0x140019ae8",
    "inc     r11",
    "movzx   eax, byte [r11]",
    "mov     r8, r10",
    "jmp     0x140019b94",
    "cmp     ebx, r10d",
    "je      0x140019b10",
    "test    byte [rax+rbp], 0x8",
    "jne     0x140019b66",
    "mov     dword [rdi], r9d",
    "neg     r9",
    "cmp     r8, 0x8",
    "jge     0x140019b9a",
    "bt      r10d, 0x1f",
    "jb      0x140019bb7",
    "movsx   edx, byte [r8+r11]",
    "mov     al, 0x7",
    "shl     r10d, 0x4",
    "mov     ecx, edx",
    "inc     r9d",
    "sar     ecx, 0x6",
    "and     cl, 0x1",
    "imul    cl",
    "sub     dl, al",
    "and     edx, 0xf",
    "add     r10d, edx",
    "inc     r8",
    "movzx   eax, byte [r8+r11]",
    "movsxd  rcx, r9d",
    "movzx   edx, byte [rcx+r11]",
    "test    byte [rdx+rbp], 0x8",
    "jne     0x140019bb7",
    "mov     dword [rdi], r10d",
    "jmp     0x140019b13",
    "mov     eax, 0x1"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}