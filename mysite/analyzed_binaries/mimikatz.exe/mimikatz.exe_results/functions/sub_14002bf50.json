{
  "address": "0x14002bf50",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "contain loop"
  ],
  "disassembly": [
    "mov     dword [rsp+0x10], edx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x68",
    "movzx   eax, byte [rcx+0x9]",
    "movzx   esi, word [rcx+0x18]",
    "movzx   ebx, byte [rcx+0xc]",
    "mov     r13, qword [rcx+0x50]",
    "mov     r12, qword [rsp+0xd0]",
    "mov     dword [rsp+0xc8], eax",
    "add     ebx, esi",
    "movsxd  r14, r8d",
    "lea     eax, [r9+r9]",
    "cdqe    ",
    "add     ebx, edx",
    "mov     ebp, r9d",
    "add     rax, qword [rcx+0x60]",
    "cmp     edx, r14d",
    "mov     rdi, rcx",
    "mov     qword [rsp+0xb0], rax",
    "lea     r15d, [r14+r9]",
    "jge     0x14002bff4",
    "cmp     r15d, ebx",
    "jge     0x14002c00f",
    "mov     r8d, r14d",
    "mov     r9, r12",
    "sub     r8d, edx",
    "call    sub_14002be5c",
    "cmp     eax, esi",
    "mov     edx, eax",
    "mov     dword [rsp+0xc0], eax",
    "jle     0x14002bfd5",
    "movsxd  r15, dword [rsp+0xc8]",
    "xor     ebx, ebx",
    "movzx   ecx, byte [r15+r13+0x5]",
    "movzx   eax, byte [r15+r13+0x6]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "dec     ecx",
    "movzx   eax, cx",
    "inc     eax",
    "movsxd  rcx, eax",
    "add     rcx, r13",
    "mov     qword [rsp+0x40], rcx",
    "cmp     rcx, qword [rsp+0xb0]",
    "jb      0x14002c216",
    "sub     ebx, r15d",
    "mov     r9, r12",
    "mov     edx, r15d",
    "mov     r8d, ebx",
    "mov     rcx, rdi",
    "call    sub_14002be5c",
    "sub     esi, eax",
    "mov     rcx, qword [rdi+0x60]",
    "lea     eax, [rsi+rsi]",
    "movsxd  r8, eax",
    "lea     eax, [rdx+rdx]",
    "movsxd  rdx, eax",
    "add     rdx, rcx",
    "call    memmove",
    "sub     esi, dword [rsp+0xc0]",
    "mov     ecx, 0x11379",
    "call    sub_140084e38",
    "jmp     0x14002c274",
    "cmp     ebp, ebx",
    "mov     esi, ebp",
    "mov     r13, r14",
    "jle     0x14002c263",
    "mov     eax, dword [rsp+0xb8]",
    "cmp     r14d, eax",
    "jge     0x14002c0c7",
    "add     rsp, 0x68",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     r9, rdi",
    "mov     r8d, ebp",
    "mov     edx, r14d",
    "mov     rcx, r12",
    "call    sub_14002ba7c",
    "mov     r15, qword [r12+0x18]",
    "shl     r13, 0x3",
    "lea     rbx, [r14+r14]",
    "xor     eax, eax",
    "mov     edx, ebx",
    "mov     dword [rsp+0xc0], ebx",
    "cmp     byte [rdi+0xc], bl",
    "jbe     0x14002c1a6",
    "mov     rbx, qword [rdi+0x60]",
    "mov     ecx, eax",
    "lea     eax, [rsi+rsi]",
    "sub     ecx, r14d",
    "movsxd  r8, eax",
    "mov     rdx, rbx",
    "cmp     ebp, ecx",
    "cmovl   ecx, ebp",
    "mov     dword [rsp+0xc0], ecx",
    "lea     eax, [rcx+rcx]",
    "movsxd  rcx, eax",
    "add     rcx, rbx",
    "call    memmove",
    "mov     eax, dword [rsp+0xc0]",
    "mov     rdx, qword [rsp+0xb0]",
    "mov     qword [rsp+0x30], r12",
    "mov     dword [rsp+0x28], eax",
    "lea     r8, [rsp+0x40]",
    "mov     r9, rbx",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_14002bcb4",
    "xor     ebx, ebx",
    "cmp     eax, ebx",
    "jne     0x14002c216",
    "dec     esi",
    "add     r13, 0x8",
    "add     rbx, 0x2",
    "cmp     esi, eax",
    "jg      0x14002c22e",
    "mov     rdx, qword [r12+0x10]",
    "mov     rax, qword [r12+0x8]",
    "mov     r15, qword [r12+0x18]",
    "mov     rdx, qword [rdx+r13]",
    "mov     rcx, rax",
    "call    qword [rax+0x78]",
    "mov     word [rbx+r15], ax",
    "xor     eax, eax",
    "mov     rdx, qword [rsp+0xb0]",
    "lea     eax, [rsi+rsi]",
    "mov     ecx, ebp",
    "movsxd  r9, eax",
    "sub     ecx, esi",
    "lea     eax, [rsi+r14]",
    "add     r9, qword [rdi+0x60]",
    "mov     qword [rsp+0x30], r12",
    "mov     dword [rsp+0x28], ecx",
    "lea     r8, [rsp+0x40]",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14002bcb4",
    "cmp     eax, ebx",
    "jne     0x14002c216",
    "lea     rcx, [rdi+0x1c]",
    "mov     qword [rsp+0x48], rcx",
    "add     esi, dword [rsp+0xc0]",
    "mov     eax, dword [rsp+0xb8]",
    "cmp     word [rbx+r15], ax",
    "jne     0x14002c255",
    "mov     rcx, qword [rsp+0x40]",
    "mov     word [rdi+0x18], bp",
    "mov     byte [rdi+0xc], bl",
    "shr     bp, 0x8",
    "mov     byte [r15+r13+0x3], bpl",
    "mov     al, byte [rdi+0x18]",
    "mov     byte [r15+r13+0x4], al",
    "mov     rax, rcx",
    "sub     cl, r13b",
    "sub     rax, r13",
    "mov     byte [r15+r13+0x6], cl",
    "sar     rax, 0x8",
    "mov     byte [r15+r13+0x5], al",
    "xor     eax, eax",
    "jmp     0x14002c274",
    "xor     ebx, ebx",
    "cmp     ebx, ebp",
    "jge     0x14002c17f",
    "movzx   ebx, word [rcx]",
    "sub     ebx, r14d",
    "add     ebx, eax",
    "js      0x14002c17f",
    "lea     eax, [rbx+rbx]",
    "movsxd  rdx, eax",
    "add     rdx, qword [rdi+0x60]",
    "cmp     esi, ebx",
    "mov     qword [rsp+0x50], rdx",
    "jle     0x14002c11d",
    "mov     rax, qword [r12+0x18]",
    "add     ebx, r14d",
    "xor     edx, edx",
    "movsxd  rcx, ebx",
    "inc     esi",
    "cmp     word [rax+rcx*2], dx",
    "jne     0x14002c13c",
    "mov     eax, esi",
    "lea     rcx, [rdx+0x2]",
    "sub     eax, ebx",
    "add     eax, eax",
    "movsxd  r8, eax",
    "call    memmove",
    "mov     r9, qword [rsp+0x50]",
    "mov     rdx, qword [rsp+0xb0]",
    "mov     qword [rsp+0x30], r12",
    "lea     r8, [rsp+0x40]",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x28], 0x1",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_14002bcb4",
    "xor     ebx, ebx",
    "cmp     eax, ebx",
    "jne     0x14002c216",
    "mov     edx, ebx",
    "mov     rcx, r12",
    "call    sub_14002ba44",
    "mov     rcx, qword [rsp+0x48]",
    "mov     edx, dword [rsp+0xc0]",
    "jmp     0x14002c181",
    "movzx   eax, byte [rdi+0xc]",
    "inc     edx",
    "add     rcx, 0x2",
    "cmp     edx, eax",
    "mov     eax, dword [rsp+0xb8]",
    "mov     dword [rsp+0xc0], edx",
    "mov     qword [rsp+0x48], rcx",
    "jl      0x14002c0e2"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}