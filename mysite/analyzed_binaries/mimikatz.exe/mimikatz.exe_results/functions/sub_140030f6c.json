{
  "address": "0x140030f6c",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x40",
    "cmp     dword [rcx+0x20], 0x20",
    "mov     bpl, r8b",
    "mov     sil, dl",
    "mov     rbx, rcx",
    "jge     0x140030f9d",
    "mov     rax, qword [rcx+0x18]",
    "and     word [rcx+0x8], 0x2d",
    "mov     qword [rcx+0x10], rax",
    "xor     eax, eax",
    "xor     r8d, r8d",
    "lea     edx, [r8+0x20]",
    "call    sub_140030d38",
    "jmp     0x140030fac",
    "mov     rdi, qword [rbx+0x10]",
    "and     qword [rsp+0x20], 0x0",
    "and     dword [rsp+0x34], 0x0",
    "and     dword [rsp+0x38], 0x0",
    "test    byte [rbx+0x8], 0x4",
    "mov     qword [rsp+0x28], rdi",
    "mov     dword [rsp+0x30], 0x20",
    "mov     byte [rsp+0x3c], 0x0",
    "mov     byte [rsp+0x3d], 0x0",
    "lea     rcx, [rsp+0x20]",
    "je      0x140031005",
    "mov     byte [rbx+0xa], 0x0",
    "mov     eax, 0x7",
    "jmp     0x14003108b",
    "test    eax, eax",
    "je      0x140030fbe",
    "test    byte [rbx+0x8], 0x20",
    "lea     rdx, [rel data_1400f4020]  {\"%!.15g\"}",
    "je      0x14003101d",
    "mov     r8, qword [rbx]",
    "lea     rdx, [rel data_1400f3808]  {\"%lld\"}",
    "call    sub_140018888",
    "jmp     0x14003102b",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rbp, qword [rsp+0x58]",
    "mov     rsi, qword [rsp+0x60]",
    "add     rsp, 0x40",
    "pop     rdi",
    "retn    ",
    "movsd   xmm2, qword [rbx]",
    "pxor    xmm2, xmm2",
    "cvtsi2sd xmm2, qword [rbx]",
    "jmp     0x140031021",
    "mov     eax, dword [rsp+0x38]",
    "or      rcx, 0xffffffffffffffff",
    "mov     byte [rax+rdi], 0x0",
    "mov     rdi, qword [rbx+0x10]",
    "xor     eax, eax",
    "repne scasb byte [rdi]",
    "mov     eax, 0x202",
    "mov     byte [rbx+0xa], 0x1",
    "or      word [rbx+0x8], ax",
    "movzx   eax, word [rbx+0x8]",
    "not     rcx",
    "dec     rcx",
    "and     ecx, 0x3fffffff",
    "mov     dword [rbx+0xc], ecx",
    "test    bpl, bpl",
    "je      0x140031070",
    "test    byte [rbx+0x8], 0x2",
    "movzx   eax, sil",
    "je      0x140031089",
    "mov     ecx, 0xffd3",
    "and     ax, cx",
    "mov     word [rbx+0x8], ax",
    "movq    r8, xmm2",
    "call    sub_140018888",
    "xor     eax, eax",
    "cmp     eax, 0x1",
    "je      0x140031089",
    "mov     dl, al",
    "mov     rcx, rbx",
    "call    sub_140018a98"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}