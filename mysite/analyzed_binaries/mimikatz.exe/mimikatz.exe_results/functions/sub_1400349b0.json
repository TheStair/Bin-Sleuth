{
  "address": "0x1400349b0",
  "rules": [
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/816eee64e52f4728b8d606bec12904e3",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "compute adler32 checksum/aded99c950db4d9b8d119cbfc64de8e4",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     ebx, 0x4",
    "mov     r11d, edx",
    "mov     r10, rcx",
    "lea     r9d, [rbx-0x3]",
    "cmp     edx, 0x5",
    "ja      0x140034ac1",
    "cmp     edx, 0x6",
    "jb      0x140034bb2",
    "je      0x140034a7d",
    "mov     qword [r8+0x10], rcx",
    "lea     eax, [rdx-0xc]",
    "mov     ecx, edx",
    "shr     eax, 0x1",
    "lea     rdx, [rel data_1400d4044]",
    "and     rcx, r9",
    "mov     dword [r8+0xc], eax",
    "movzx   ecx, word [rdx+rcx*2]",
    "mov     word [r8+0x8], cx",
    "cmp     edx, 0x7",
    "jbe     0x140034b19",
    "movzx   eax, byte [rcx+0x4]",
    "movzx   edx, byte [rcx+0x3]",
    "mov     r9d, 0x6",
    "shl     edx, 0x8",
    "or      edx, eax",
    "movzx   eax, byte [rcx+0x2]",
    "shl     eax, 0x18",
    "shl     edx, 0x8",
    "or      rdx, rax",
    "movzx   eax, byte [rcx+0x5]",
    "or      rdx, rax",
    "movsx   eax, byte [rcx]",
    "shl     eax, 0x8",
    "movsxd  rcx, eax",
    "movzx   eax, byte [r10+0x1]",
    "or      rcx, rax",
    "shl     rcx, 0x20",
    "add     rdx, rcx",
    "mov     qword [r8], rdx",
    "jmp     0x140034b0c",
    "mov     eax, edx",
    "test    edx, edx",
    "je      0x140034ae2",
    "movzx   eax, byte [rcx+0x2]",
    "movzx   r9d, byte [rcx+0x1]",
    "movzx   edx, byte [rcx+0x5]",
    "shl     r9d, 0x8",
    "shl     edx, 0x8",
    "or      r9d, eax",
    "movzx   eax, byte [rcx]",
    "shl     eax, 0x18",
    "shl     r9d, 0x8",
    "or      r9, rax",
    "movzx   eax, byte [rcx+0x3]",
    "or      r9, rax",
    "movzx   eax, byte [rcx+0x6]",
    "or      edx, eax",
    "movzx   eax, byte [rcx+0x4]",
    "shl     r9, 0x20",
    "shl     edx, 0x8",
    "shl     eax, 0x18",
    "or      rdx, rax",
    "movzx   eax, byte [rcx+0x7]",
    "or      rdx, rax",
    "add     r9, rdx",
    "mov     edx, 0x8",
    "mov     qword [r8], r9",
    "cmp     r11d, 0x6",
    "jne     0x140034b7a",
    "cmp     edx, 0x9",
    "jbe     0x140034b03",
    "mov     word [r8+0x8], bx",
    "mov     eax, r9d",
    "jmp     0x140034bd4",
    "mov     word [r8+0x8], r9w",
    "jmp     0x140034afc",
    "sub     eax, r9d",
    "je      0x140034a71",
    "mov     rcx, 0x7ff0000000000000",
    "mov     rax, r9",
    "and     rax, rcx",
    "cmp     rax, rcx",
    "jne     0x140034ba6",
    "mov     word [r8+0x8], bx",
    "jmp     0x140034bae",
    "lea     ecx, [rdx-0x8]",
    "xor     r9d, r9d",
    "cmp     edx, 0xa",
    "je      0x140034ae9",
    "mov     rbx, qword [rsp+0x8]",
    "retn    ",
    "xor     eax, eax",
    "jmp     0x140034bd4",
    "movsx   rax, byte [rcx]",
    "mov     qword [r8], rax",
    "jmp     0x140034b0c",
    "sub     eax, r9d",
    "je      0x140034a55",
    "mov     r9d, edx",
    "mov     rax, 0xfffffffffffff",
    "test    rax, r9",
    "je      0x140034ba6",
    "mov     eax, edx",
    "jmp     0x140034bd4",
    "and     dword [r8+0xc], 0x0",
    "and     dword [r8], 0x0",
    "mov     eax, 0x4001",
    "mov     word [r8+0x8], ax",
    "cmp     edx, 0xb",
    "jne     0x140034bb2",
    "movsx   eax, byte [rcx]",
    "mov     r9d, 0x2",
    "shl     eax, 0x8",
    "movsxd  rcx, eax",
    "movzx   eax, byte [r10+0x1]",
    "or      rcx, rax",
    "jmp     0x140034b09",
    "sub     eax, r9d",
    "je      0x140034a2c",
    "mov     r9d, 0x1",
    "jmp     0x140034ba9",
    "mov     qword [r8], rcx",
    "movzx   eax, byte [rcx+0x1]",
    "mov     r9d, 0x3",
    "shl     eax, 0x8",
    "movsxd  rcx, eax",
    "movsx   eax, byte [r10]",
    "shl     eax, 0x10",
    "cdqe    ",
    "or      rcx, rax",
    "movzx   eax, byte [r10+0x2]",
    "or      rcx, rax",
    "jmp     0x140034b09",
    "cmp     eax, r9d",
    "jne     0x140034bb2",
    "mov     word [r8+0x8], r9w",
    "movzx   ecx, byte [rcx+0x1]",
    "movzx   eax, byte [r10+0x2]",
    "mov     r9d, ebx",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movsx   eax, byte [r10]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "cdqe    ",
    "movsxd  rdx, ecx",
    "or      rdx, rax",
    "movzx   eax, byte [r10+0x3]",
    "or      rdx, rax",
    "mov     qword [r8], rdx",
    "jmp     0x140034b0c"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}