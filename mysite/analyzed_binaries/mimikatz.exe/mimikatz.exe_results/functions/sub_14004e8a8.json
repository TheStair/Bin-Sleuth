{
  "address": "0x14004e8a8",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check if file exists/a31a651e5a314ee9ac446400cc2abdd5/58dd2a2048194a11b60488e61f6f4fb2",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     rbp, qword [rcx]",
    "xor     r14d, r14d",
    "mov     rbx, rcx",
    "mov     r13d, r9d",
    "mov     rsi, r8",
    "mov     rdi, rdx",
    "lea     r15, [rel data_1400f5788]  {\"sqlite_temp_master\"}",
    "lea     rcx, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "mov     eax, 0x1",
    "cmp     byte [rbp+0xb5], r14b",
    "je      0x14004e91c",
    "cmp     dword [r8+0x8], r14d",
    "jbe     0x14004e943",
    "cmp     dword [rbp+0xb0], eax",
    "jne     0x14004e91c",
    "movzx   r12d, byte [rbp+0xb4]",
    "lea     r9, [rsp+0x60]",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x20], rbp",
    "call    sub_14004e6f0",
    "mov     rdi, qword [rsp+0x60]",
    "mov     r12d, eax",
    "mov     eax, 0x1",
    "jmp     0x14004e94b",
    "movzx   r12d, byte [rbp+0xb4]",
    "mov     rdx, r15",
    "cmp     r12d, eax",
    "cmovne  rdx, rcx",
    "mov     rcx, rbp",
    "call    sub_140016dac",
    "mov     rsi, rax",
    "jmp     0x14004e9a0",
    "mov     rbx, qword [rsp+0x68]",
    "mov     rbp, qword [rsp+0x70]",
    "mov     rsi, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "cmp     r13d, r14d",
    "je      0x14004e97b",
    "cmp     r12d, r14d",
    "jl      0x14004ead9",
    "movdqu  xmm0, xmmword [rdi]",
    "movdqu  xmmword [rbx+0xe0], xmm0",
    "cmp     rsi, r14",
    "je      0x14004ead9",
    "mov     rdx, rdi",
    "mov     rcx, rbp",
    "call    sub_14004e64c",
    "cmp     byte [rbx+0x104], 0x2",
    "mov     rsi, rax",
    "jb      0x14004e9a0",
    "cmp     dword [rsi+0x8], r14d",
    "jbe     0x14004e978",
    "cmp     dword [rsp+0x80], r14d",
    "lea     rax, [rel data_1400f534c]  {\"view\"}",
    "lea     r8, [rel data_1400f4e2c]  {\"table\"}",
    "mov     r9, rsi",
    "mov     rdx, rsi",
    "mov     rcx, rbx",
    "cmovne  r8, rax",
    "call    sub_14004e790",
    "cmp     eax, r14d",
    "jne     0x14004eace",
    "mov     r8, rdi",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_14004a2b8",
    "mov     r12d, eax",
    "cmp     r12d, eax",
    "je      0x14004e978",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "call    sub_1400169a8",
    "mov     rax, qword [rbp+0x20]",
    "mov     ecx, 0x1",
    "movsxd  r14, r12d",
    "cmp     byte [rbp+0xb4], cl",
    "cmove   r13d, ecx",
    "shl     r14, 0x5",
    "mov     rax, qword [r14+rax]",
    "cmp     r13d, ecx",
    "lea     rcx, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "cmovne  r15, rcx",
    "xor     r9d, r9d",
    "mov     rcx, rbx",
    "lea     edx, [r9+0x12]",
    "mov     r8, r15",
    "mov     qword [rsp+0x60], rax",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x14004eace",
    "lea     rdx, [rel data_1400f5830]  {\"temporary table name must be unq\u2026\"}",
    "mov     rcx, rbx",
    "call    sub_1400191b8",
    "jmp     0x14004ead9",
    "mov     r15d, dword [rsp+0x88]",
    "test    r15d, r15d",
    "jne     0x14004ea79",
    "cmp     byte [rbx+0x104], 0x0",
    "jne     0x14004eb1d",
    "movsxd  rcx, dword [rsp+0x80]",
    "movsxd  rax, r13d",
    "xor     r9d, r9d",
    "lea     rdx, [rax+rcx*2]",
    "lea     rax, [rel data_1400d6024]",
    "mov     r8, rsi",
    "movzx   edx, byte [rdx+rax]",
    "mov     rax, qword [rsp+0x60]",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004da74",
    "test    eax, eax",
    "jne     0x14004eace",
    "mov     edx, 0x80",
    "mov     rcx, rbp",
    "call    sub_140016ba8",
    "mov     r11, rax",
    "test    rax, rax",
    "jne     0x14004eb3e",
    "mov     rax, qword [rbp+0x20]",
    "mov     rcx, rbx",
    "mov     r13, qword [r14+rax]",
    "call    sub_140062358",
    "test    eax, eax",
    "jne     0x14004eace",
    "mov     qword [rax], rsi",
    "or      eax, 0xffffffff",
    "mov     word [r11+0x44], ax",
    "mov     rax, qword [rbp+0x20]",
    "mov     rcx, qword [r14+rax+0x18]",
    "mov     dword [r11+0x3c], 0x1",
    "mov     eax, 0xc8",
    "mov     qword [r11+0x70], rcx",
    "mov     word [r11+0x48], ax",
    "cmp     byte [rbx+0x1e], 0x0",
    "mov     qword [rbx+0x130], r11",
    "jne     0x14004eb8d",
    "inc     dword [rbx+0x30]",
    "mov     dword [rbx+0x18], 0x7",
    "jmp     0x14004eace",
    "mov     r8, r13",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "call    sub_14004de30",
    "test    rax, rax",
    "je      0x14004eaf6",
    "cmp     byte [rbp+0xb5], 0x0",
    "jne     0x14004ead9",
    "lea     rdi, [rel data_1400f5038]  {\"sqlite_sequence\"}",
    "mov     ecx, 0x10",
    "rep cmpsb byte [rsi], [rdi]",
    "jne     0x14004eb8d",
    "mov     r8, r13",
    "mov     rdx, rsi",
    "mov     rcx, rbp",
    "call    sub_14004e0d8",
    "test    rax, rax",
    "je      0x14004eb1d",
    "cmp     dword [rsp+0x90], 0x0",
    "mov     rcx, rbx",
    "jne     0x14004eac6",
    "mov     rcx, rbx",
    "call    sub_140065300",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x14004ead9",
    "mov     rax, qword [r11+0x70]",
    "mov     qword [rax+0x68], r11",
    "mov     r8, rsi",
    "lea     rdx, [rel data_1400f5878]  {\"there is already an index named \u2026\"}",
    "mov     rcx, rbx",
    "mov     edx, r12d",
    "call    sub_1400538c0",
    "mov     r8, rdi",
    "lea     rdx, [rel data_1400f5860]  {\"table %T already exists\"}",
    "jmp     0x14004eb16",
    "mov     r8d, r12d",
    "mov     edx, 0x1",
    "mov     rcx, rbx",
    "call    sub_14005398c",
    "test    r15d, r15d",
    "je      0x14004ebdb",
    "call    sub_1400191b8",
    "jmp     0x14004eace",
    "mov     eax, dword [rbx+0x38]",
    "mov     r8d, r12d",
    "mov     edx, 0x5e",
    "inc     eax",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], 0x2",
    "lea     r13d, [rax+0x1]",
    "mov     dword [rsp+0x60], eax",
    "mov     dword [rbx+0x78], eax",
    "lea     r14d, [r13+0x1]",
    "mov     dword [rbx+0x7c], r13d",
    "mov     r9d, r14d",
    "mov     dword [rbx+0x38], r14d",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     ecx, r12d",
    "mov     eax, 0x1",
    "lea     edx, [r9+0x12]",
    "shl     eax, cl",
    "mov     r8d, r14d",
    "mov     rcx, rsi",
    "or      dword [rsi+0xcc], eax",
    "call    sub_140032364",
    "mov     cl, byte [rbp+0x30]",
    "and     cl, 0x2",
    "mov     r9d, 0x2",
    "mov     r8d, r12d",
    "neg     cl",
    "mov     rcx, rsi",
    "mov     edi, eax",
    "sbb     edx, edx",
    "and     edx, 0xfffffffd",
    "add     edx, 0x4",
    "mov     dword [rsp+0x20], edx",
    "lea     edx, [r9+0x5d]",
    "call    sub_140032364",
    "movzx   ecx, byte [rbp+0x5e]",
    "mov     r9d, 0x5",
    "mov     dword [rsp+0x20], ecx",
    "lea     edx, [r9+0x5a]",
    "mov     r8d, r12d",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     edx, edi",
    "mov     rcx, rsi",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "xor     ebp, ebp",
    "mov     dword [rax+0x8], ecx",
    "cmp     dword [rsp+0x80], ebp",
    "jne     0x14004ecc7",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     edx, 0xa0",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "xor     r8d, r8d",
    "mov     r9d, r13d",
    "mov     rcx, rsi",
    "lea     edx, [r8+0x46]",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "cmp     r15d, ebp",
    "jne     0x14004ecc7",
    "mov     edi, dword [rsp+0x60]",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "lea     edx, [r8+0x79]",
    "mov     r9d, edi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "mov     edx, 0x4b",
    "mov     r9d, r14d",
    "lea     r8d, [rdx-0x45]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "lea     r8, [rel data_1400d73a8]",
    "or      r9d, 0xffffffff",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "xor     r8d, r8d",
    "mov     r9d, r14d",
    "lea     edx, [r8+0x7a]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "movsxd  rdx, dword [rsi+0x90]",
    "cmp     edx, ebp",
    "jle     0x14004ed90",
    "mov     dword [rbx+0x34], 0x1",
    "mov     r9d, r13d",
    "mov     r8d, r12d",
    "mov     edx, 0x8b",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], 0x1",
    "call    sub_140032364",
    "mov     dword [rbx+0xa8], eax",
    "jmp     0x14004ecdd",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rsi",
    "lea     edx, [r9+0x75]",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_140032364",
    "jmp     0x14004ead9",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [rdx+rdx*2]",
    "mov     edx, 0x8",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     rcx, rbx",
    "call    sub_140065300",
    "mov     r9d, 0x1",
    "xor     r8d, r8d",
    "lea     edx, [r9+0x61]",
    "mov     rcx, rax",
    "mov     dword [rsp+0x28], 0x5",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032678",
    "cmp     dword [rbx+0x34], ebp",
    "jne     0x14004ed13"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}