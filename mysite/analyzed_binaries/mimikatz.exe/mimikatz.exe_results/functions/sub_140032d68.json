{
  "address": "0x140032d68",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x50",
    "xor     r15d, r15d",
    "mov     rdi, rdx",
    "mov     dword [rax-0x38], r8d",
    "mov     qword [rax-0x40], rdi",
    "mov     qword [rax-0x48], r15",
    "mov     dword [rax-0x34], r15d",
    "mov     dword [rax-0x30], r15d",
    "mov     byte [rax-0x2c], r15b",
    "mov     byte [rax-0x2b], r15b",
    "movsx   eax, byte [rcx+0x1]",
    "mov     rdx, rcx",
    "mov     rbx, rdi",
    "add     eax, 0x11",
    "cmp     eax, 0xf",
    "ja      0x140032fec",
    "{Case 0x1, 0x7, 0xa}",
    "mov     rbx, qword [rdx+0x10]",
    "cmp     rbx, r15",
    "jne     0x140032ffb",
    "lea     rsi, [rel __dos_header]",
    "cdqe    ",
    "mov     ecx, dword [rsi+rax*4+0x33030]",
    "add     rcx, rsi",
    "jmp     rcx",
    "cmp     qword [rsp+0x38], r15",
    "je      0x14003300c",
    "mov     rbx, rdi",
    "{Case 0x8}",
    "mov     rbp, qword [rdx+0x10]",
    "lea     rcx, [rsp+0x30]",
    "lea     rdx, [rel data_1400f4034]  {\"k(%d\"}",
    "movzx   r8d, word [rbp+0x6]",
    "call    sub_140018888",
    "mov     r13d, r15d",
    "mov     r14, r15",
    "cmp     r15w, word [rbp+0x6]",
    "jae     0x140032e90",
    "{Case 0xf}",
    "mov     r8, qword [rdx+0x10]",
    "lea     rdx, [rel data_1400f4060]  {\"(%.20s)\"}",
    "{Case 0x9}",
    "mov     r8, qword [rdx+0x10]",
    "lea     rcx, [rsp+0x30]",
    "lea     rdx, [rel data_1400f4068]  {\"%s(%d)\"}",
    "movsx   r9d, byte [r8]",
    "mov     r8, qword [r8+0x38]",
    "call    sub_140018888",
    "jmp     0x140032ffb",
    "{Case 0x3}",
    "mov     r8, qword [rdx+0x10]",
    "mov     r8, qword [r8]",
    "{Case 0xe}",
    "mov     r8d, dword [rdx+0x10]",
    "lea     rcx, [rsp+0x30]",
    "lea     rdx, [rel data_1400f4070]",
    "call    sub_140018888",
    "jmp     0x140032ffb",
    "{Case 0x4}",
    "mov     rax, qword [rdx+0x10]",
    "movsd   xmm2, qword [rax]",
    "{Case 0x6}",
    "mov     rcx, qword [rdx+0x10]",
    "movzx   eax, word [rcx+0x8]",
    "test    al, 0x2",
    "je      0x140032f4d",
    "{Case 0x5}",
    "mov     r8, qword [rdx+0x10]",
    "lea     rdx, [rel data_1400f4080]  {\"vtab:%p\"}",
    "mov     r8, qword [r8+0x10]",
    "jmp     0x140032eba",
    "{Case 0x2}",
    "mov     rbp, qword [rdx+0x10]",
    "mov     esi, 0x1",
    "movsxd  r12, dword [rbp]",
    "jmp     0x140032fb0",
    "{Case 0xd}",
    "lea     rdx, [rel data_1400f4090]  {\"program\"}",
    "lea     rcx, [rsp+0x30]",
    "call    sub_140018888",
    "jmp     0x140032ffb",
    "{Case 0xb}",
    "mov     r8, qword [rdx+0x10]",
    "lea     rdx, [rel data_1400f38e8]",
    "jmp     0x140032eb7",
    "{Case 0x0, 0xc}",
    "mov     byte [rdi], r15b",
    "lea     r11, [rsp+0x50]",
    "mov     rax, rbx",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x38]",
    "mov     rsi, qword [r11+0x40]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "lea     rcx, [rsp+0x30]",
    "call    sub_1400184e8",
    "lea     rdx, [rel data_1400f4058]",
    "lea     rcx, [rsp+0x30]",
    "lea     r12, [rbp+0x20]",
    "lea     rcx, [rsp+0x30]",
    "call    sub_140018888",
    "jmp     0x140032ffb",
    "test    al, 0x24",
    "je      0x140032f56",
    "mov     rbx, qword [rcx+0x10]",
    "jmp     0x140032ffb",
    "cmp     rsi, r12",
    "lea     rcx, [rsp+0x30]",
    "jle     0x140032f9c",
    "mov     r8, qword [r8]",
    "lea     r8, [rel data_1400f386c]",
    "mov     r8, qword [rax]",
    "jmp     0x140032e15",
    "test    al, 0x8",
    "je      0x140032f60",
    "mov     r8, qword [rcx]",
    "jmp     0x140032ef2",
    "mov     r8d, dword [rbp+rsi*4]",
    "lea     rdx, [rel data_1400f4088]",
    "call    sub_140018888",
    "inc     rsi",
    "mov     byte [rdi], 0x5b",
    "lea     rdx, [rel data_1400f408c]",
    "jmp     0x140032e9c",
    "mov     rax, qword [r12]",
    "cmp     rax, r15",
    "je      0x140032e0e",
    "mov     rax, qword [rbp+0x18]",
    "mov     rsi, r8",
    "lea     rdi, [rel data_1400f403c]  {\"BINARY\"}",
    "mov     ecx, 0x7",
    "lea     rdx, [rel data_1400f4044]",
    "lea     r9, [rel data_1400f386c]",
    "rep cmpsb byte [rsi], [rdi]",
    "lea     rcx, [rel data_1400f4048]",
    "cmovne  rdx, r8",
    "test    byte [r14+rax], 0x2",
    "lea     r8, [rel data_1400f386c]",
    "cmovne  r9, rcx",
    "test    byte [r14+rax], 0x1",
    "lea     rax, [rel data_1400f4028]",
    "mov     qword [rsp+0x20], rdx",
    "lea     rdx, [rel data_1400f4050]  {\",%s%s%s\"}",
    "lea     rcx, [rsp+0x30]",
    "cmovne  r8, rax",
    "call    sub_140018888",
    "movzx   eax, word [rbp+0x6]",
    "inc     r13d",
    "inc     r14",
    "add     r12, 0x8",
    "cmp     r13d, eax",
    "jl      0x140032e00",
    "test    al, 0x1",
    "lea     rbx, [rel data_1400f3870]  {\"NULL\"}",
    "lea     rax, [rel data_1400f4074]  {\"(blob)\"}",
    "cmove   rbx, rax",
    "jmp     0x140032ffb",
    "movsd   xmm2, qword [rcx]",
    "jmp     0x140032f1d",
    "lea     rdx, [rel data_1400f3808]  {\"%lld\"}",
    "jmp     0x140032eba",
    "mov     r8d, 0x1",
    "call    sub_140018414",
    "jmp     0x140032ffb",
    "movq    r8, xmm2",
    "lea     rdx, [rel data_1400f3800]  {\"%.16g\"}",
    "lea     rcx, [rsp+0x30]",
    "call    sub_140018888",
    "jmp     0x140032ffb"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}