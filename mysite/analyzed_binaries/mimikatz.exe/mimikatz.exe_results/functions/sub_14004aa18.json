{
  "address": "0x14004aa18",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "sub     rsp, 0xe0",
    "mov     rdi, qword [rcx]",
    "mov     rsi, qword [rcx+0x140]",
    "mov     rbp, rcx",
    "mov     r12, rdx",
    "xor     ebx, ebx",
    "lea     rcx, [rsp+0x20]",
    "lea     r8d, [rbx+0x38]",
    "xor     edx, edx",
    "call    memset",
    "mov     qword [rsp+0x20], rbp",
    "mov     r8, qword [rsi+0x30]",
    "mov     ecx, 0xfff0bdc0",
    "test    r8, r8",
    "je      0x14004aa80",
    "mov     r8, qword [rdi+0x20]",
    "mov     rdx, qword [rsi+0x8]",
    "movsxd  rax, ecx",
    "shl     rax, 0x5",
    "mov     rcx, rdi",
    "mov     r8, qword [rax+r8]",
    "call    sub_14004de30",
    "mov     rdx, rax",
    "mov     qword [rbp+0x98], rax",
    "mov     al, byte [rsi+0x10]",
    "mov     byte [rbp+0xb8], al",
    "test    rdx, rdx",
    "je      0x14004aac1",
    "mov     rax, qword [rdi+0x20]",
    "xor     ecx, ecx",
    "add     rax, 0x18",
    "jmp     0x14004aa7b",
    "mov     rdx, qword [rsi+0x18]",
    "test    rdx, rdx",
    "je      0x14004aad6",
    "mov     rcx, rbp",
    "call    sub_140050b50",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14004aad6",
    "cmp     qword [rax], r8",
    "jne     0x14004aa75",
    "mov     rsi, qword [rsi+0x38]",
    "jmp     0x14004ac5a",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140042da4",
    "mov     ebx, eax",
    "inc     ecx",
    "add     rax, 0x20",
    "test    ebx, ebx",
    "je      0x14004aadf",
    "test    rsi, rsi",
    "je      0x14004ac62",
    "lea     r11, [rsp+0xe0]",
    "mov     eax, ebx",
    "mov     rbx, qword [r11+0x10]",
    "mov     rbp, qword [r11+0x18]",
    "mov     rsi, qword [r11+0x20]",
    "mov     rdi, qword [r11+0x28]",
    "mov     rsp, r11",
    "pop     r12",
    "retn    ",
    "mov     rdx, qword [rsi+0x10]",
    "test    rdx, rdx",
    "je      0x14004ab11",
    "test    ebx, ebx",
    "jne     0x14004ac56",
    "mov     rax, qword [rbp]",
    "cmp     byte [rax+0x61], 0x0",
    "jne     0x14004ab08",
    "mov     rsi, qword [rsi+0x48]",
    "mov     r8, qword [rsi+0x18]",
    "test    r8, r8",
    "je      0x14004ac56",
    "cmp     dword [rbp+0x30], 0x0",
    "je      0x14004ab11",
    "lea     r8, [rsp+0x20]",
    "mov     rcx, rbp",
    "call    sub_140068bb8",
    "mov     r9, r12",
    "xor     edx, edx",
    "mov     rcx, rbp",
    "call    sub_14004df10",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x14004ab43",
    "mov     ebx, dword [rbp+0x18]",
    "mov     rdx, rax",
    "mov     rcx, rbp",
    "call    sub_140050b50",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14004ac56",
    "lea     ebx, [rax+0x1]",
    "jmp     0x14004ac56",
    "lea     r8d, [rax+0x78]",
    "lea     rcx, [rsp+0x60]",
    "xor     edx, edx",
    "call    memset",
    "mov     rax, qword [rsi+0x18]",
    "mov     dword [rsp+0x60], 0x1",
    "mov     qword [rsp+0x78], rax",
    "lea     rax, [rsp+0x60]",
    "mov     qword [rsp+0x88], rdi",
    "mov     qword [rsp+0x28], rax",
    "mov     rdx, qword [rsi+0x20]",
    "test    rdx, rdx",
    "je      0x14004aba0",
    "test    ebx, ebx",
    "jne     0x14004abbd",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140042da4",
    "mov     ebx, eax",
    "mov     rdi, qword [rsi+0x38]",
    "test    rdi, rdi",
    "je      0x14004ac50",
    "mov     rdx, qword [rsi+0x28]",
    "test    rdx, rdx",
    "je      0x14004abbb",
    "and     qword [rsp+0x28], 0x0",
    "lea     rax, [rsp+0x60]",
    "mov     qword [rdi+0x28], rax",
    "mov     qword [rsp+0x30], rdi",
    "mov     dword [rsp+0x48], 0x200",
    "mov     rdx, qword [rdi]",
    "test    rdx, rdx",
    "je      0x14004abf6",
    "xor     ebx, ebx",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140042e3c",
    "mov     ebx, eax",
    "jmp     0x14004abbd",
    "xor     ebx, ebx",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140042e3c",
    "mov     ebx, eax",
    "jmp     0x14004abf8",
    "and     dword [rsp+0x48], 0x0",
    "mov     rdx, qword [rdi+0x10]",
    "test    rdx, rdx",
    "je      0x14004ac13",
    "test    ebx, ebx",
    "jne     0x14004ac4b",
    "xor     ebx, ebx",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140042e3c",
    "mov     ebx, eax",
    "jmp     0x14004ac15",
    "mov     rdx, qword [rdi+0x18]",
    "test    rdx, rdx",
    "je      0x14004ac32",
    "test    ebx, ebx",
    "jne     0x14004ac4b",
    "mov     rdx, qword [rdi+0x8]",
    "test    rdx, rdx",
    "jne     0x14004ac3f",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140042da4",
    "mov     ebx, eax",
    "test    eax, eax",
    "jne     0x14004ac4b",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140042da4",
    "mov     ebx, eax",
    "xor     ebx, ebx",
    "jmp     0x14004ac4b"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}