{
  "address": "0x140068368",
  "rules": [
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "encrypt data using Curve25519/4be2ead1b08a4c049dae9c8694881d76",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xa8",
    "mov     rsi, qword [rcx]",
    "movzx   eax, word [rdx+0xc]",
    "xor     r8d, r8d",
    "mov     r14, qword [rsi]",
    "or      dword [rdx+0xc], 0x40",
    "mov     r12, rdx",
    "mov     rbp, rcx",
    "mov     dword [rsp+0xf8], r8d",
    "mov     qword [rsp+0xf0], r14",
    "cmp     byte [r14+0x61], r8b",
    "jne     0x14006846d",
    "mov     eax, 0x2",
    "test    al, 0x40",
    "je      0x1400683ba",
    "cmp     byte [rcx+0x24], r8b",
    "je      0x1400683cf",
    "lea     eax, [r8+0x1]",
    "jmp     0x140068472",
    "mov     rcx, qword [rdx+0x68]",
    "mov     rdi, qword [rdx+0x28]",
    "mov     r15, qword [rdx]",
    "mov     qword [rsp+0x40], rdi",
    "mov     qword [rsp+0x68], r15",
    "cmp     rcx, r8",
    "je      0x1400683fb",
    "inc     dword [rsi+0x84]",
    "mov     eax, dword [rsi+0x84]",
    "mov     dword [rdx+0x18], eax",
    "add     rsp, 0xa8",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_1400533c8",
    "cmp     dword [rdi], r8d",
    "mov     r13d, r8d",
    "lea     rbx, [rdi+0x8]",
    "jle     0x14006858a",
    "mov     rax, qword [rsi+0x178]",
    "mov     qword [rcx+0x8], rax",
    "mov     qword [rsi+0x178], rcx",
    "cmp     byte [r14+0x61], r8b",
    "jne     0x14006846d",
    "test    byte [rbx+0x40], 0x20",
    "jne     0x140068572",
    "mov     rdx, r12",
    "mov     rcx, rsi",
    "call    sub_1400631bc",
    "xor     r8d, r8d",
    "cmp     eax, r8d",
    "jne     0x14006846d",
    "inc     r13d",
    "add     rbx, 0x70",
    "cmp     r13d, dword [rdi]",
    "jl      0x140068416",
    "mov     rdx, rbx",
    "mov     rcx, rbp",
    "call    sub_140067f80",
    "xor     r15d, r15d",
    "cmp     eax, r15d",
    "jne     0x14006846d",
    "cmp     dword [r15], r8d",
    "mov     ecx, r8d",
    "jle     0x1400685ee",
    "mov     r15, qword [rsp+0x68]",
    "xor     r8d, r8d",
    "cmp     qword [rbx+0x20], r15",
    "jne     0x14006855e",
    "cmp     ecx, dword [r15]",
    "jge     0x140068aec",
    "lea     r8, [r15+0x8]",
    "mov     eax, ecx",
    "mov     rdx, rbx",
    "mov     rcx, rsi",
    "call    sub_140067d8c",
    "cmp     eax, r15d",
    "jne     0x14006846d",
    "cmp     qword [rbx+0x10], r15",
    "jne     0x140068486",
    "mov     rcx, qword [r12]",
    "xor     eax, eax",
    "cmp     rcx, rax",
    "je      0x140068b2a",
    "mov     rax, qword [rsi]",
    "mov     rdi, r8",
    "test    byte [rax+0x30], 0x4",
    "je      0x14006860e",
    "xor     r8d, r8d",
    "cmp     byte [rdx], 0x89",
    "jne     0x1400685d6",
    "mov     r8, rbx",
    "xor     edx, edx",
    "mov     rcx, rsi",
    "call    sub_14004e084",
    "mov     rdi, rax",
    "mov     qword [rbx+0x20], rax",
    "cmp     rax, r15",
    "je      0x14006846d",
    "mov     rdx, qword [rbx+0x28]",
    "cmp     rdx, r15",
    "je      0x140068459",
    "xor     eax, eax",
    "jmp     0x140068472",
    "mov     eax, dword [r14+0x84]",
    "cmp     dword [rcx], eax",
    "jle     0x140068b16",
    "mov     eax, r8d",
    "test    byte [rax+0x30], 0x40",
    "mov     eax, 0x1",
    "je      0x140068611",
    "or      eax, dword [rdx+0x4]",
    "inc     ecx",
    "add     r8, 0x28",
    "cmp     ecx, dword [r15]",
    "mov     dword [rsp+0xf8], eax",
    "jl      0x1400685b9",
    "mov     rax, qword [rdx+0x18]",
    "cmp     byte [rax], 0xaf",
    "je      0x1400685eb",
    "mov     ecx, dword [rax+0x3c]",
    "cmp     ecx, 0xffff",
    "jae     0x1400686c4",
    "mov     rdx, rbx",
    "mov     rcx, rsi",
    "call    sub_140068294",
    "cmp     eax, r15d",
    "je      0x14006855e",
    "mov     rcx, rbp",
    "call    sub_140040a9c",
    "cmp     eax, r15d",
    "jne     0x14006846d",
    "test    dword [rsp+0xf8], 0x200004",
    "je      0x140068b2a",
    "lea     rdx, [rel data_1400f6c68]  {\"too many columns in result set\"}",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "jmp     0x14006846d",
    "mov     rdx, r15",
    "mov     rcx, r14",
    "call    sub_140044bf4",
    "mov     qword [r12], rdi",
    "lea     rbx, [r15+0x18]",
    "cdqe    ",
    "mov     qword [rsp+0x78], rbx",
    "mov     qword [rsp+0x88], rax",
    "cmp     dword [r15], r8d",
    "mov     ebp, r8d",
    "mov     dword [rsp+0x108], r8d",
    "jle     0x140068add",
    "mov     rdx, qword [r8]",
    "cmp     byte [rdx], 0xaf",
    "je      0x1400685eb",
    "mov     eax, dword [rsp+0xf8]",
    "mov     r8, qword [rax]",
    "lea     rdx, [rel data_1400f6bd8]  {\"too many references to \"%s\": max\u2026\"}",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "mov     qword [rbx+0x20], r15",
    "jmp     0x14006846d",
    "inc     ecx",
    "mov     dword [rax+0x3c], ecx",
    "mov     eax, dword [rax+0x54]",
    "cmp     eax, r15d",
    "jne     0x1400684d4",
    "bts     dword [r12+0xc], 0x12",
    "cmp     byte [rcx], 0x89",
    "mov     dword [rsp+0x48], r8d",
    "mov     r15, r8",
    "jne     0x1400686f4",
    "cmp     byte [rcx], 0x89",
    "jne     0x140068664",
    "mov     r15b, byte [rbp+0x24]",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140050b50",
    "xor     ecx, ecx",
    "cmp     eax, ecx",
    "jne     0x14006846d",
    "test    byte [rbx+0x40], 0x4",
    "jne     0x1400686ac",
    "mov     rax, qword [rsp+0x40]",
    "mov     dword [rsp+0x100], r8d",
    "cmp     dword [rax], r8d",
    "jle     0x140068a95",
    "mov     rax, qword [rcx+0x10]",
    "mov     r15, qword [rax+0x8]",
    "mov     r8, rcx",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140044974",
    "xor     r8d, r8d",
    "mov     rdi, rax",
    "cmp     rax, r8",
    "je      0x1400686a3",
    "mov     rax, qword [rcx+0x18]",
    "cmp     byte [rax], 0xaf",
    "je      0x1400686df",
    "cmp     qword [rdi+0x18], rcx",
    "je      0x14006850f",
    "mov     r8, qword [rbx+0x10]",
    "lea     rdx, [rel data_1400f6af0]  {\"'%s' is not a function\"}",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "jmp     0x14006846d",
    "cmp     eax, r15d",
    "jne     0x1400684d4",
    "mov     rcx, rsi",
    "cmp     r15, r8",
    "je      0x140068aae",
    "lea     r13, [rax+0x30]",
    "mov     qword [rsp+0x80], r13",
    "mov     qword [rbx-0x10], r8",
    "jmp     0x140068ac2",
    "movsxd  rax, dword [rax]",
    "lea     rcx, [rax+rax*4]",
    "mov     rax, qword [rbx-0x8]",
    "mov     qword [rdi+rcx*8-0x18], rax",
    "movsxd  rax, dword [rdi]",
    "lea     rcx, [rax+rax*4]",
    "mov     rax, qword [rbx]",
    "mov     qword [rdi+rcx*8-0x10], rax",
    "mov     qword [rbx-0x8], r8",
    "mov     qword [rbx], r8",
    "mov     rdx, qword [rdi+0x18]",
    "xor     r8d, r8d",
    "mov     rcx, r14",
    "call    sub_14004463c",
    "xor     ecx, ecx",
    "mov     qword [rbx+0x28], rax",
    "movzx   r14d, word [rdi+0x46]",
    "or      eax, 0xffffffff",
    "mov     word [rdi+0x46], ax",
    "mov     byte [rbp+0x24], 0x1",
    "mov     rdx, qword [rbx+0x28]",
    "cmp     rdx, rcx",
    "je      0x140068545",
    "mov     eax, dword [r14+0x30]",
    "mov     ecx, 0x80000000",
    "test    rcx, rax",
    "jne     0x14006850f",
    "cmp     qword [rdi+0x18], r15",
    "je      0x140068559",
    "lea     rdx, [rel data_1400f6c50]  {\"no tables specified\"}",
    "call    sub_1400191b8",
    "lea     rdx, [rel data_1400f6c38]  {\"no such table: %s\"}",
    "mov     r8, r15",
    "call    sub_1400191b8",
    "jmp     0x140068aba",
    "cmp     byte [r14+0x61], r8b",
    "jne     0x140068a82",
    "mov     rax, qword [r11]",
    "mov     qword [rsp+0x58], rax",
    "inc     ebp",
    "add     rbx, 0x28",
    "cmp     ebp, dword [r15]",
    "mov     dword [rsp+0x108], ebp",
    "mov     qword [rsp+0x78], rbx",
    "jl      0x140068638",
    "mov     byte [rbp+0x24], r15b",
    "mov     word [rdi+0x46], r14w",
    "mov     r14, qword [rsp+0xf0]",
    "xor     r15d, r15d",
    "mov     rcx, rbp",
    "call    sub_140040a9c",
    "mov     r8, qword [rdi]",
    "lea     rdx, [rel data_1400f6c00]  {\"access to view \"%s\" prohibited\"}",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "mov     rdi, qword [rsp+0x40]",
    "mov     rcx, qword [rbx-0x10]",
    "mov     eax, dword [rsp+0xf8]",
    "or      eax, dword [rcx+0x4]",
    "cmp     byte [rcx], 0xaf",
    "mov     dword [rsp+0xf8], eax",
    "je      0x1400686df",
    "xor     r8d, r8d",
    "mov     rbx, qword [rsp+0x78]",
    "mov     ebp, dword [rsp+0x108]",
    "cmp     dword [rsp+0x48], r8d",
    "jne     0x140068abd",
    "cmp     r9, r8",
    "je      0x14006875a",
    "mov     r15, qword [rsp+0x68]",
    "mov     r9, r8",
    "mov     qword [rsp+0x50], r8",
    "cmp     r15, r8",
    "je      0x140068783",
    "bt      dword [r9+0xc], 0xb",
    "jb      0x1400687cb",
    "mov     rdx, qword [r11+0x70]",
    "cmp     rdx, r8",
    "je      0x1400687bf",
    "mov     rdx, rax",
    "mov     rcx, r15",
    "call    sub_1400192b0",
    "xor     r8d, r8d",
    "cmp     eax, r8d",
    "jne     0x140068a59",
    "cmp     r8w, word [r11+0x46]",
    "mov     ecx, r8d",
    "mov     dword [rsp+0xf0], ecx",
    "jge     0x140068a59",
    "lea     rax, [rel data_1400f6c20]",
    "mov     rax, r8",
    "mov     r8, qword [r14+0x20]",
    "lea     rcx, [r8+0x18]",
    "cmp     qword [rcx], rdx",
    "je      0x1400687af",
    "mov     ecx, dword [rsp+0x100]",
    "mov     rax, qword [rsp+0x40]",
    "add     r13, 0x70",
    "inc     ecx",
    "mov     qword [rsp+0x80], r13",
    "cmp     ecx, dword [rax]",
    "mov     dword [rsp+0x100], ecx",
    "jl      0x140068716",
    "mov     r9, qword [rsp+0x50]",
    "mov     r10, r8",
    "mov     qword [rsp+0x30], r8",
    "mov     rbp, r8",
    "mov     qword [rsp+0x70], r8",
    "shl     rax, 0x5",
    "mov     rax, qword [rax+r8]",
    "xor     r8d, r8d",
    "jmp     0x1400687c6",
    "add     rcx, 0x20",
    "inc     rax",
    "cmp     qword [rcx], rdx",
    "jne     0x14006879c",
    "mov     rax, qword [r13-0x10]",
    "mov     r11, qword [r13-0x8]",
    "mov     r9, qword [r13]",
    "mov     qword [rsp+0x38], r11",
    "mov     qword [rsp+0x50], r9",
    "mov     qword [rsp+0x58], rax",
    "mov     qword [rsp+0x60], r8",
    "cmp     rax, r8",
    "jne     0x140068743",
    "bt      dword [r12+0xc], 0x11",
    "jb      0x14006884d",
    "cmp     r9, r8",
    "je      0x140068834",
    "mov     qword [rsp+0x60], rax",
    "xor     ecx, ecx",
    "cmp     rax, rcx",
    "jl      0x1400687bc",
    "mov     eax, dword [rsp+0x100]",
    "mov     dword [rsp+0x48], 0x1",
    "cmp     eax, r8d",
    "jle     0x1400688a8",
    "mov     rax, qword [rsp+0x70]",
    "test    byte [rbx+rax+0x1b], 0x2",
    "jne     0x140068a27",
    "mov     rcx, qword [r9]",
    "mov     r8, r15",
    "xor     edx, edx",
    "mov     rcx, qword [r10+rcx+0x18]",
    "xor     r9d, r9d",
    "call    sub_140040d70",
    "mov     r10, qword [rsp+0x30]",
    "mov     ecx, dword [rsp+0xf0]",
    "mov     r11, qword [rsp+0x38]",
    "xor     r8d, r8d",
    "cmp     eax, r8d",
    "je      0x140068a27",
    "xor     r8d, r8d",
    "mov     r8, rbp",
    "mov     edx, 0x3b",
    "mov     rcx, r14",
    "call    sub_14004397c",
    "mov     rbx, rax",
    "xor     eax, eax",
    "mov     r13, rax",
    "cmp     qword [rsp+0x88], rax",
    "jne     0x1400688d8",
    "cmp     r15, r8",
    "jne     0x1400688a8",
    "mov     rbp, qword [rsp+0x70]",
    "movsx   eax, word [r11+0x46]",
    "mov     r9, qword [rsp+0x50]",
    "inc     ecx",
    "add     rbp, 0x20",
    "add     r10, 0x28",
    "cmp     ecx, eax",
    "mov     qword [rsp+0x70], rbp",
    "mov     dword [rsp+0xf0], ecx",
    "mov     qword [rsp+0x30], r10",
    "jl      0x1400687f0",
    "mov     r8, qword [rsp+0x58]",
    "mov     edx, 0x3b",
    "mov     rcx, r14",
    "call    sub_14004397c",
    "mov     r9, rbx",
    "mov     edx, 0x89",
    "mov     r8, rax",
    "mov     rcx, rsi",
    "call    sub_140043a14",
    "xor     ecx, ecx",
    "mov     rbx, rax",
    "mov     rax, qword [rsp+0x60]",
    "cmp     rax, rcx",
    "je      0x140068930",
    "mov     rax, qword [rsp+0x40]",
    "cmp     dword [rax], 0x1",
    "jle     0x140068959",
    "test    byte [r13+0x14], 0x4",
    "je      0x140068890",
    "mov     rbx, qword [r11+0x8]",
    "mov     rbp, qword [rbx+rbp]",
    "cmp     r15, r8",
    "je      0x140068834",
    "xor     eax, eax",
    "cmp     qword [rsp+0x88], rax",
    "je      0x140068959",
    "lea     edx, [rcx+0x3b]",
    "mov     r8, rax",
    "mov     rcx, r14",
    "call    sub_14004397c",
    "mov     r9, rbx",
    "mov     edx, 0x89",
    "mov     r8, rax",
    "mov     rcx, rsi",
    "call    sub_140043a14",
    "mov     rbx, rax",
    "mov     r8, rbx",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_140044974",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x90], rbp",
    "mov     rdi, rax",
    "call    sub_140019074",
    "lea     r8, [rsp+0x90]",
    "xor     r9d, r9d",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x98], eax",
    "call    sub_140044b64",
    "xor     r8d, r8d",
    "cmp     rdi, r8",
    "je      0x1400689fb",
    "mov     rcx, qword [r13+0x28]",
    "mov     rdx, rbp",
    "call    sub_140053144",
    "xor     r8d, r8d",
    "cmp     eax, r8d",
    "jge     0x140068a16",
    "mov     rcx, qword [rsp+0x40]",
    "mov     qword [rsp+0x20], r8",
    "xor     r9d, r9d",
    "mov     r8, rbp",
    "mov     edx, eax",
    "call    sub_140062f88",
    "xor     r8d, r8d",
    "cmp     eax, r8d",
    "jne     0x140068a16",
    "mov     r8, qword [rsp+0x58]",
    "lea     rdx, [rel data_1400f5748]  {\"%s.%s\"}",
    "mov     r9, rbp",
    "mov     rcx, r14",
    "call    _printf_p_l",
    "mov     rbp, rax",
    "mov     r13, rax",
    "cmp     r13, r8",
    "je      0x140068a0e",
    "bt      dword [r12+0xc], 0xb",
    "jae     0x1400689fb",
    "mov     r10, qword [rsp+0x30]",
    "mov     ecx, dword [rsp+0xf0]",
    "mov     r11, qword [rsp+0x38]",
    "mov     r13, qword [rsp+0x80]",
    "mov     rdx, r13",
    "mov     rcx, r14",
    "call    sub_1400169a8",
    "xor     r8d, r8d",
    "mov     eax, dword [rdi]",
    "mov     rdx, qword [rsp+0x50]",
    "mov     rcx, r14",
    "dec     eax",
    "cdqe    ",
    "lea     rbx, [rax+rax*4]",
    "cmp     rdx, r8",
    "je      0x1400689d3",
    "mov     r9, qword [rsp+0x58]",
    "mov     r8, qword [rsp+0x60]",
    "lea     rdx, [rel data_1400f6c28]  {\"%s.%s.%s\"}",
    "mov     qword [rsp+0x20], rbp",
    "call    _printf_p_l",
    "mov     rdx, qword [rdx]",
    "mov     rax, qword [rsp+0x30]",
    "mov     rdx, qword [rax+rdx+0x18]",
    "call    sub_140016dac",
    "jmp     0x1400689ee",
    "or      dword [rdi+rbx*8+0x24], 0x2",
    "mov     qword [rdi+rbx*8+0x18], rax",
    "xor     r8d, r8d"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}