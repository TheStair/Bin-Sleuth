{
  "address": "0x140091630",
  "rules": [
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "contain loop",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x60",
    "and     qword [rax-0x58], 0x0",
    "lea     r9, [rax-0x28]",
    "lea     r8, [rel data_1400fbddc]",
    "mov     rsi, rdx",
    "mov     ebp, ecx",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x1400917f6",
    "lea     rcx, [rel data_140100ad0]  {u\"ERROR kuhl_m_dpapi_keys_tpm ; In\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x50]",
    "lea     r8, [rsp+0x90]",
    "lea     rdx, [rsp+0x58]",
    "xor     r9d, r9d",
    "call    sub_140009e4c",
    "test    eax, eax",
    "je      0x1400917e0",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140100a50]  {u\"ERROR kuhl_m_dpapi_keys_tpm ; ku\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x140091802",
    "cmp     dword [rsp+0x90], 0x8",
    "mov     rdi, qword [rsp+0x58]",
    "jbe     0x1400917c9",
    "lea     r11, [rsp+0x60]",
    "xor     eax, eax",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x28]",
    "mov     rsp, r11",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "lea     rcx, [rel data_140100a00]  {u\"ERROR kuhl_m_dpapi_keys_tpm ; Ba\u2026\"}",
    "mov     r12d, 0x50534b50",
    "cmp     dword [rdi], r12d",
    "jne     0x1400917c0",
    "lea     rcx, [rel data_1401009a0]  {u\"ERROR kuhl_m_dpapi_keys_tpm ; Ba\u2026\"}",
    "jmp     0x1400917d0",
    "mov     eax, dword [rsp+0x90]",
    "cmp     dword [rax+rdi-0x4], r12d",
    "jne     0x1400917c0",
    "call    sub_14000c030",
    "lea     rbx, [rdi+0x4]",
    "jmp     0x1400917b3",
    "mov     eax, dword [rbx]",
    "cmp     eax, r12d",
    "jne     0x1400916c4",
    "lea     rcx, [rel data_1401008a8]  {u\"[%08x] \"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     r11d, dword [rbx]",
    "sub     r11d, 0x1000003",
    "je      0x14009173a",
    "jmp     0x1400917d5",
    "lea     rcx, [rel data_1401008b8]  {u\"DPAPI encrypted blob\\n\"}",
    "call    sub_14000c030",
    "mov     edx, dword [rbx+0x4]",
    "lea     rax, [rel data_1401008e8]  {u\"Decrypting key data:\\n\"}",
    "mov     qword [rsp+0x48], rax",
    "lea     rax, [rsp+0x98]",
    "lea     rcx, [rbx+0x8]",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0x50]",
    "mov     r9d, ebp",
    "mov     qword [rsp+0x38], rax",
    "and     dword [rsp+0x30], 0x0",
    "and     qword [rsp+0x28], 0x0",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x20], rsi",
    "call    sub_14008c9b4",
    "test    eax, eax",
    "je      0x1400917ab",
    "sub     r11d, 0xfffffd",
    "je      0x140091722",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "jmp     0x140091802",
    "mov     eax, dword [rbx+0x4]",
    "lea     rbx, [rbx+rax+0x8]",
    "mov     edx, dword [rsp+0x98]",
    "mov     rcx, qword [rsp+0x50]",
    "call    sub_14009181c",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_140100918]  {u\"Unique container name\\n  %.*s\\n\"}",
    "cmp     r11d, 0x4",
    "je      0x140091719",
    "lea     rcx, [rel data_140100958]  {u\"Key type\\n  %.*s\\n\"}",
    "jmp     0x140091729",
    "lea     rcx, [rel data_140100980]  {u\"Unknown\\n  \"}",
    "call    sub_14000c030",
    "mov     edx, dword [rbx+0x4]",
    "lea     rcx, [rbx+0x8]",
    "xor     r8d, r8d",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "jmp     0x1400917ab",
    "mov     edx, dword [rbx+0x4]",
    "lea     r8, [rbx+0x8]",
    "shr     rdx, 0x1",
    "call    sub_14000c030",
    "jmp     0x1400917ab"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}