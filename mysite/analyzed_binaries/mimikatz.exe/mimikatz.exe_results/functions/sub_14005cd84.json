{
  "address": "0x14005cd84",
  "rules": [
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/1a6c04bed22346cdaee8fbdaa0f123d3",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "check OS version/e331473c09f0419eb22f4786f6872060",
    "contain loop"
  ],
  "disassembly": [
    "mov     dword [rsp+0x20], r9d",
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x8], rcx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x30",
    "mov     r12d, r8d",
    "mov     r13, rdx",
    "mov     rbp, rcx",
    "call    sub_140065300",
    "mov     rsi, qword [r13+0x10]",
    "xor     r14d, r14d",
    "mov     rdi, rax",
    "lea     ebx, [r14+0x20]",
    "test    rsi, rsi",
    "je      0x14005cea5",
    "test    byte [r13+0x40], bl",
    "jne     0x14005cf48",
    "mov     r12, qword [rsp+0x98]",
    "add     rsp, 0x30",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "cmp     byte [rbp+0x1e], 0x0",
    "je      0x14005ceb9",
    "mov     rsi, qword [rsi+0x28]",
    "inc     r14d",
    "add     r12, 0x4",
    "test    rsi, rsi",
    "jne     0x14005cdce",
    "cmp     qword [rsi+0x48], 0x0",
    "je      0x14005cdff",
    "cmp     dword [rsp+0xa0], 0x0",
    "movzx   eax, byte [rsp+0xa0]",
    "cmovne  ebx, eax",
    "or      bl, 0x1",
    "xor     bl, bl",
    "jmp     0x14005cecf",
    "mov     r8d, dword [r12]",
    "test    r8d, r8d",
    "je      0x14005ce84",
    "mov     rbp, qword [rsp+0x70]",
    "mov     r12d, dword [rsp+0x80]",
    "mov     eax, dword [rsp+0xb0]",
    "neg     eax",
    "mov     eax, dword [rsi+0x64]",
    "sbb     bpl, bpl",
    "and     al, 0x3",
    "and     bpl, 0x10",
    "cmp     al, 0x2",
    "jne     0x14005ce2c",
    "mov     r9d, dword [rdi+0x90]",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0x32",
    "add     r9d, 0x2",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "cmp     dword [rsp+0xb0], 0x0",
    "je      0x14005cee9",
    "or      bl, 0x8",
    "cmp     dword [rsp+0xa8], 0x0",
    "je      0x14005cedc",
    "test    byte [rsi+0x64], 0x8",
    "je      0x14005ce38",
    "test    byte [r13+0x40], bl",
    "je      0x14005ce2c",
    "mov     eax, dword [rsp+0x90]",
    "movsxd  rcx, r14d",
    "mov     r8d, r12d",
    "mov     dword [rsp+0x20], eax",
    "mov     rax, qword [rsp+0x98]",
    "mov     edx, 0x7a",
    "mov     r9d, dword [rax+rcx*4]",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "cmp     byte [rbp+0x1e], 0x0",
    "jne     0x14005cf2a",
    "or      bl, 0x10",
    "movzx   ecx, word [rsi+0x60]",
    "movzx   ecx, word [rsi+0x5e]",
    "jmp     0x14005ce3c",
    "mov     al, byte [rsp+0xa0]",
    "and     al, 0x2",
    "or      al, 0x1",
    "or      bpl, al",
    "movsxd  rax, dword [rdi+0x90]",
    "test    eax, eax",
    "jle     0x14005cf48",
    "mov     r8d, 0xfffffffa",
    "mov     rdx, r13",
    "mov     rcx, rdi",
    "call    sub_140032cc0",
    "mov     rax, qword [rdi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "movzx   edx, bpl",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     edx, dword [rsp+0x88]",
    "mov     r9d, dword [r12]",
    "mov     dword [rsp+0x28], ecx",
    "lea     eax, [r9+0x1]",
    "lea     r8d, [r14+rdx]",
    "mov     edx, 0x84",
    "mov     rcx, rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032678",
    "movsxd  r11, dword [rdi+0x90]",
    "test    r11d, r11d",
    "jle     0x14005ce84",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [rdi+0x88]",
    "movzx   edx, bl",
    "mov     word [rax+rcx*8-0x16], dx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}