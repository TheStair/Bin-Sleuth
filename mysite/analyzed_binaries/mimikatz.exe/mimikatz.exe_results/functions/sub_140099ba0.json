{
  "address": "0x140099ba0",
  "rules": [
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x50",
    "mov     rbx, rcx",
    "mov     rcx, qword [rcx+0x18]",
    "mov     dword [rsp+0x60], 0x14",
    "add     rcx, 0x50 {_CERT_INFO::Subject}",
    "call    sub_14008854c",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140099be7",
    "mov     rcx, qword [rbx+0x18]",
    "add     rcx, 0x30 {_CERT_INFO::Issuer}",
    "call    sub_14008854c",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140099c14",
    "lea     rcx, [rel data_1401075c0]  {u\"    Subject  : %s\\n\"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_140107610]  {u\"    Serial   : \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x18]",
    "xor     r8d, r8d",
    "mov     edx, dword [rcx+0x8 {_CERT_INFO::SerialNumber.cbData}]",
    "mov     rcx, qword [rcx+0x10 {_CERT_INFO::SerialNumber.pbData}]",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx+0x18]",
    "lea     rcx, [rel data_140107630]  {u\"    Algorithm: %S\"}",
    "mov     rdx, qword [rdx+0x60 {_CERT_INFO::SubjectPublicKeyInfo.Algorithm.pszObjId}]",
    "call    sub_14000c030",
    "mov     rdx, qword [rbx+0x18]",
    "mov     r8d, 0x80000000",
    "mov     rdx, qword [rdx+0x60 {_CERT_INFO::SubjectPublicKeyInfo.Algorithm.pszObjId}]",
    "mov     ecx, 0x1",
    "call    qword [rel CryptFindOIDInfo]",
    "test    rax, rax",
    "je      0x140099c81",
    "lea     rcx, [rel data_1401075e8]  {u\"    Issuer   : %s\\n\"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_140107658]  {u\"\\n    Validity : \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x18]",
    "add     rcx, 0x40 {_CERT_INFO::NotBefore}",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400f94f0]  {u\" -> \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x18]",
    "add     rcx, 0x48 {_CERT_INFO::NotAfter}",
    "call    sub_1400130c0",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "and     dword [rsp+0x28], 0x0",
    "and     qword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "lea     edx, [r9+0x8]",
    "call    qword [rel CertGetNameStringW]",
    "mov     esi, eax",
    "cmp     eax, 0x1",
    "jbe     0x140099d35",
    "mov     rdx, qword [rax+0x10]",
    "lea     rcx, [rel data_1400eaa38]  {u\" (%s)\"}",
    "call    sub_14000c030",
    "lea     r9, [rsp+0x60]",
    "lea     r8, [rsp+0x30]",
    "mov     edx, 0x3",
    "mov     rcx, rbx",
    "call    qword [rel CertGetCertificateContextProperty]",
    "test    eax, eax",
    "je      0x140099d7c",
    "mov     rdx, rsi",
    "mov     ecx, 0x40",
    "add     rdx, rdx",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140099d35",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1401076d0]  {u\"ERROR kuhl_m_crypto_certificate_\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1401076a8]  {u\"    Hash SHA1: \"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsp+0x60]",
    "lea     rcx, [rsp+0x30]",
    "xor     r8d, r8d",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "jmp     0x140099d90",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "lea     edx, [r9+0x8]",
    "mov     dword [rsp+0x28], esi",
    "mov     qword [rsp+0x20], rax",
    "call    qword [rel CertGetNameStringW]",
    "test    eax, eax",
    "je      0x140099d2c",
    "mov     rbx, qword [rsp+0x68]",
    "mov     rsi, qword [rsp+0x70]",
    "add     rsp, 0x50",
    "pop     rdi",
    "retn    ",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "lea     rcx, [rel data_140107680]  {u\"    UPN      : %s\\n\"}",
    "mov     rdx, rdi",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}