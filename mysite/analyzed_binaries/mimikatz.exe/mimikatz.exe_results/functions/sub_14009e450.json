{
  "address": "0x14009e450",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rsi",
    "push    rdi",
    "sub     rsp, 0x40",
    "and     dword [rax+0x18], 0x0",
    "mov     byte [rax+0x1c], 0x0",
    "mov     byte [rax+0x1d], 0x0",
    "mov     byte [rax+0x1e], 0x0",
    "xor     eax, eax",
    "cmp     dword [rel data_14014084c], 0x1388",
    "mov     byte [rsp+0x67], al",
    "mov     rbx, rdx",
    "mov     edi, ecx",
    "jb      0x14009e5ed",
    "lea     rcx, [rel data_14010c1c0]  {u\"ERROR kuhl_m_kernel_processProte\u2026\"}",
    "and     qword [rsp+0x20], rax",
    "lea     r8, [rel data_14010bda8]  {u\"remove\"}",
    "xor     r9d, r9d",
    "call    sub_140013220",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x68]",
    "lea     r8, [rel data_14010bdd8]  {u\"process\"}",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "mov     esi, eax",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14009e4fb",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x68]",
    "lea     r8, [rel data_14010c048]",
    "mov     rdx, rbx",
    "mov     ecx, edi",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14009e531",
    "mov     rdx, qword [rsp+0x68]",
    "lea     rcx, [rel data_14010bf78]  {u\"Process : %s\\n\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x68]",
    "lea     rdx, [rsp+0x60]",
    "call    sub_14000ca18",
    "test    eax, eax",
    "jne     0x14009e53d",
    "lea     rcx, [rel data_14010c050]  {u\"ERROR kuhl_m_kernel_processProte\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x68]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "call    qword [rel wcstoul]",
    "mov     dword [rsp+0x60], eax",
    "jmp     0x14009e53d",
    "cmp     dword [rsp+0x60], 0x0",
    "je      0x14009e5e4",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_14010bfa0]  {u\"ERROR kuhl_m_kernel_processProte\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x14009e53d",
    "lea     rcx, [rel data_14010c160]  {u\"ERROR kuhl_m_kernel_processProte\u2026\"}",
    "jmp     0x14009e5f4",
    "test    esi, esi",
    "jne     0x14009e58d",
    "call    sub_14000c030",
    "mov     r8b, byte [rsp+0x64]",
    "mov     eax, dword [rel data_14014084c]",
    "cmp     eax, 0x1f40",
    "jae     0x14009e563",
    "mov     rbx, qword [rsp+0x50]",
    "mov     rsi, qword [rsp+0x58]",
    "xor     eax, eax",
    "add     rsp, 0x40",
    "pop     rdi",
    "retn    ",
    "cmp     eax, 0x24b8",
    "jae     0x14009e579",
    "mov     r8b, 0x1",
    "mov     byte [rsp+0x64], r8b",
    "jmp     0x14009e592",
    "mov     r8b, 0x3f",
    "mov     byte [rsp+0x66], 0x62",
    "mov     byte [rsp+0x64], r8b",
    "mov     byte [rsp+0x65], r8b",
    "jmp     0x14009e592",
    "mov     r8b, 0xf",
    "mov     byte [rsp+0x64], r8b",
    "mov     byte [rsp+0x65], r8b",
    "jmp     0x14009e592",
    "movzx   edx, byte [rsp+0x66]",
    "movzx   r9d, byte [rsp+0x65]",
    "movzx   r8d, r8b",
    "mov     ecx, edx",
    "mov     eax, edx",
    "and     edx, 0x7",
    "shr     ecx, 0x4",
    "shr     eax, 0x3",
    "mov     dword [rsp+0x30], ecx",
    "and     eax, 0x1",
    "lea     rcx, [rel data_14010c110]  {u\"PID %u -> %02x/%02x [%1x-%1x-%1x\u2026\"}",
    "mov     dword [rsp+0x28], eax",
    "mov     dword [rsp+0x20], edx",
    "mov     edx, dword [rsp+0x60]",
    "call    sub_14000c030",
    "lea     rdx, [rsp+0x60]",
    "mov     r8d, 0x8",
    "mov     ecx, 0x22c04b",
    "call    sub_14000a67c",
    "jmp     0x14009e5f9"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}