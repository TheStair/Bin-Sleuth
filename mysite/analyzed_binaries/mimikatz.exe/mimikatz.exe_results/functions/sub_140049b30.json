{
  "address": "0x140049b30",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "mov     rsi, qword [rcx]",
    "xor     eax, eax",
    "mov     r14, rdx",
    "mov     rbx, rcx",
    "cmp     dword [rcx+0x30], eax",
    "jne     0x140049e44",
    "mov     rbx, qword [rsp+0x88]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     byte [rsi+0x61], al",
    "jne     0x140049e44",
    "mov     r12, qword [rcx+0x130]",
    "mov     ebp, 0xfff0bdc0",
    "mov     rcx, qword [r12+0x70]",
    "cmp     rcx, rax",
    "je      0x140049b92",
    "mov     rax, qword [rsi+0x20]",
    "mov     r15, qword [r12]",
    "movsxd  rcx, ebp",
    "shl     rcx, 0x5",
    "add     r15, 0x10",
    "mov     rcx, qword [rcx+rax]",
    "movsx   eax, word [r12+0x46]",
    "mov     rdx, r15",
    "dec     eax",
    "mov     qword [rsp+0x90], rcx",
    "mov     r8, rcx",
    "movsxd  r13, eax",
    "mov     rcx, rsi",
    "shl     r13, 0x5",
    "add     r13, qword [r12+0x8]",
    "mov     rdi, qword [r13+0x8]",
    "call    sub_14004de30",
    "xor     r8d, r8d",
    "mov     r9, qword [rax]",
    "mov     qword [rsp+0x20], r8",
    "mov     r8, qword [rsp+0x90]",
    "mov     edx, 0x1a",
    "mov     rcx, rbx",
    "call    sub_14004da74",
    "xor     edx, edx",
    "cmp     eax, edx",
    "jne     0x140049e44",
    "mov     ebp, eax",
    "mov     rax, qword [rsi+0x20]",
    "cmp     qword [rax+0x18], rcx",
    "je      0x140049b92",
    "cmp     rdi, rdx",
    "je      0x140049c11",
    "add     rax, 0x18",
    "test    byte [r13+0x1b], 0x1",
    "je      0x140049c2c",
    "mov     rax, qword [rdi+0x10]",
    "cmp     byte [rax], 0x75",
    "cmove   rdi, rdx",
    "add     rax, 0x20",
    "inc     ebp",
    "cmp     qword [rax], rcx",
    "jne     0x140049b87",
    "cmp     qword [r12+0x10], rdx",
    "je      0x140049c3c",
    "lea     rdx, [rel data_1400f5190]  {\"Cannot add a PRIMARY KEY column\"}",
    "mov     eax, dword [rsi+0x30]",
    "bt      rax, 0xe",
    "jae     0x140049c5b",
    "lea     rdx, [rel data_1400f51b0]  {\"Cannot add a UNIQUE column\"}",
    "jmp     0x140049c1f",
    "cmp     byte [r13+0x18], dl",
    "je      0x140049c6f",
    "cmp     qword [r12+0x20], rdx",
    "je      0x140049c5b",
    "mov     rcx, rbx",
    "call    sub_1400191b8",
    "jmp     0x140049e44",
    "cmp     rdi, rdx",
    "je      0x140049cd3",
    "cmp     rdi, rdx",
    "jne     0x140049c74",
    "cmp     rdi, rdx",
    "je      0x140049c5b",
    "mov     r8d, dword [r14+0x8]",
    "mov     rdx, qword [r14]",
    "mov     rcx, rsi",
    "call    sub_140016e18",
    "xor     r8d, r8d",
    "mov     rdi, rax",
    "cmp     rax, r8",
    "je      0x140049d6a",
    "mov     rcx, rdx",
    "mov     qword [rsp+0x80], rdx",
    "cmp     rdi, rdx",
    "je      0x140049cb3",
    "lea     rdx, [rel data_1400f5210]  {\"Cannot add a NOT NULL column wit\u2026\"}",
    "jmp     0x140049c1f",
    "lea     rdx, [rel data_1400f51d0]  {\"Cannot add a REFERENCES column w\u2026\"}",
    "jmp     0x140049c1f",
    "mov     rcx, rbx",
    "call    sub_140065300",
    "xor     r12d, r12d",
    "mov     rsi, rax",
    "cmp     rax, r12",
    "je      0x140049e3a",
    "mov     edx, dword [r14+0x8]",
    "mov     r13d, dword [rsi+0x2c]",
    "dec     edx",
    "add     rdx, rax",
    "cmp     rdx, rax",
    "jbe     0x140049d1f",
    "mov     eax, edx",
    "mov     qword [rsp+0x28], rdx",
    "lea     rax, [rsp+0x80]",
    "mov     r9b, 0x41",
    "mov     r8b, 0x1",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140031cec",
    "mov     rcx, qword [rsp+0x80]",
    "xor     edx, edx",
    "jmp     0x140049cb5",
    "mov     edx, ebp",
    "mov     rcx, rbx",
    "call    sub_140049778",
    "mov     cl, byte [rbx+0x1f]",
    "cmp     cl, r12b",
    "jne     0x140049d91",
    "or      dword [rsi+0x2c], 0x2",
    "mov     ecx, dword [r12+0x50]",
    "mov     r8, qword [rsp+0x90]",
    "lea     eax, [rcx+0x1]",
    "mov     qword [rsp+0x38], r15",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "mov     dword [rsp+0x30], eax",
    "mov     qword [rsp+0x28], rdi",
    "mov     dword [rsp+0x20], ecx",
    "lea     rdx, [rel data_1400f5280]  {\"UPDATE \"%w\".%s SET sql = substr(\u2026\"}",
    "mov     rcx, rbx",
    "call    sub_14004dd58",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "mov     dword [rsi+0x2c], r13d",
    "cmp     byte [rdx], 0x3b",
    "je      0x140049d14",
    "cmp     rcx, rdx",
    "jne     0x140049cce",
    "cmp     eax, edx",
    "jne     0x140049e44",
    "dec     cl",
    "movzx   eax, cl",
    "mov     byte [rbx+0x1f], al",
    "mov     edi, dword [rbx+rax*4+0xbc]",
    "inc     dword [rbx+0x38]",
    "mov     edi, dword [rbx+0x38]",
    "jmp     0x140049da0",
    "mov     byte [rdx], r8b",
    "dec     rdx",
    "cmp     rdx, rdi",
    "ja      0x140049cff",
    "movzx   eax, byte [rdx]",
    "lea     rcx, [rel data_1400d6500]",
    "test    byte [rax+rcx], 0x1",
    "je      0x140049d1f",
    "call    sub_14003210c",
    "lea     rdx, [rel data_1400f5248]  {\"Cannot add a column with non-con\u2026\"}",
    "jmp     0x140049c1f",
    "cmp     byte [rbx+0x1f], 0x8",
    "jae     0x140049e3a",
    "mov     r9d, edi",
    "mov     r8d, ebp",
    "mov     edx, 0x5e",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], 0x2",
    "call    sub_140032364",
    "mov     r9d, 0xfffffffe",
    "mov     ecx, ebp",
    "mov     eax, 0x1",
    "lea     edx, [r9+0x55]",
    "mov     r8d, edi",
    "shl     eax, cl",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "or      dword [rsi+0xcc], eax",
    "call    sub_140032364",
    "mov     r9d, dword [rsi+0x90]",
    "add     r9d, 0x2",
    "mov     r8d, edi",
    "mov     edx, 0x2f",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r9d, 0x2",
    "mov     r8d, ebp",
    "lea     edx, [r9+0x5d]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], 0x3",
    "call    sub_140032364",
    "cmp     edi, r12d",
    "je      0x140049e3a",
    "movzx   eax, byte [rbx+0x1f]",
    "mov     dword [rbx+rax*4+0xbc], edi",
    "inc     byte [rbx+0x1f]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}