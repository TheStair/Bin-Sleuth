{
  "address": "0x14008b000",
  "rules": [
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "create new key via CryptAcquireContext",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xe0",
    "xor     ebx, ebx",
    "lea     r8, [rel data_1400fc0e0]  {u\"protected\"}",
    "xor     r9d, r9d",
    "mov     r13, rdx",
    "mov     r14d, ecx",
    "mov     qword [rsp+0x60], rbx",
    "mov     r12, rbx",
    "mov     qword [rax-0x70], rbx",
    "mov     esi, ebx",
    "mov     ebp, ebx",
    "mov     qword [rax-0x90], rbx",
    "mov     qword [rax+0x18], rbx",
    "mov     qword [rax-0x50], rbx",
    "mov     qword [rax-0x58], rbx",
    "mov     qword [rsp+0x40], rbx",
    "mov     qword [rax-0x98], rbx",
    "mov     qword [rax-0x68], rbx",
    "mov     qword [rax-0x60], rbx",
    "mov     qword [rsp+0x78], rbx",
    "mov     qword [rsp+0x48], rbx",
    "mov     qword [rsp+0x58], rbx",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_140013220",
    "lea     r9, [rsp+0x130]",
    "lea     r8, [rel data_1400fbddc]",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "mov     r15d, eax",
    "mov     dword [rsp+0x138], ebx",
    "mov     qword [rsp+0x20], rbx",
    "call    sub_140013220",
    "cmp     eax, ebx",
    "je      0x14008bc74",
    "lea     rcx, [rel data_1400fcb40]  {u\"ERROR kuhl_m_dpapi_masterkey ; I\u2026\"}",
    "call    sub_14000c030",
    "mov     rdi, qword [rsp+0x130]",
    "lea     r8, [rsp+0xd4]",
    "lea     rdx, [rsp+0xa0]",
    "mov     rcx, rdi",
    "xor     r9d, r9d",
    "call    sub_140009e4c",
    "cmp     eax, ebx",
    "je      0x14008bc80",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0x120]",
    "add     rsp, 0xe0",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rcx, qword [rsp+0xa0]",
    "call    sub_1400076a0",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14008bc64",
    "mov     rcx, qword [rsp+0xa0]",
    "call    qword [rel LocalFree]",
    "jmp     0x14008bc80",
    "mov     rdx, rax",
    "xor     ecx, ecx",
    "call    sub_1400078cc",
    "lea     edx, [r12+0x4c]",
    "lea     ecx, [rdx-0xc]",
    "mov     word [rsp+0x92], dx",
    "mov     word [rsp+0x90], dx",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x98], rax",
    "test    rax, rax",
    "je      0x14008b192",
    "and     qword [rsp+0x20], rsi",
    "lea     r9, [rsp+0xc8]",
    "lea     r8, [rel data_1400fb7d8]",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14008b1fd",
    "lea     ecx, [r12+0x7b]",
    "lea     rdx, [rbx+0xc]",
    "lea     r8d, [r12+0x48]",
    "mov     word [rax], cx",
    "mov     rcx, qword [rsp+0x98]",
    "add     rcx, 0x2",
    "call    memcpy",
    "movzx   edx, word [rsp+0x90]",
    "mov     rax, qword [rsp+0x98]",
    "shr     rdx, 0x1",
    "lea     ecx, [r12+0x7d]",
    "mov     word [rax+rdx*2-0x2], cx",
    "lea     rdx, [rsp+0x68]",
    "lea     rcx, [rsp+0x90]",
    "call    RtlGUIDFromString",
    "xor     ecx, ecx",
    "test    eax, eax",
    "setns   cl",
    "mov     dword [rsp+0x138], ecx",
    "mov     rcx, qword [rsp+0x98]",
    "call    qword [rel LocalFree]",
    "test    rdi, rdi",
    "je      0x14008b20f",
    "mov     rcx, qword [rsp+0xc8]",
    "lea     rdx, [rsp+0x50]",
    "call    ConvertStringSidToSidW",
    "test    eax, eax",
    "je      0x14008b1e7",
    "and     qword [rsp+0x20], rsi",
    "lea     r9, [rsp+0x40]",
    "lea     r8, [rel data_1400fbdd0]  {u\"hash\"}",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14008b270",
    "lea     rdx, [rsp+0x48]",
    "mov     rcx, rdi",
    "call    sub_14008dbf4",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400fc100]  {u\"ERROR kuhl_m_dpapi_masterkey ; C\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x14008b20f",
    "mov     rcx, qword [rsp+0x50]",
    "lea     rdx, [rsp+0x48]",
    "call    ConvertSidToStringSidW",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel LocalFree]",
    "jmp     0x14008b20f",
    "and     qword [rsp+0x20], rbp",
    "lea     r9, [rsp+0x80]",
    "lea     r8, [rel data_1400ea8a0]  {u\"system\"}",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14008b2e5",
    "mov     rdi, qword [rsp+0x40]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "repne scasw word [rdi]",
    "not     rcx",
    "dec     rcx",
    "mov     rsi, rcx",
    "mov     dword [rsp+0x130], ecx",
    "test    cl, 0x1",
    "jne     0x14008b270",
    "cmp     qword [rbx+0x80], 0x0",
    "je      0x14008b765",
    "mov     rdi, qword [rsp+0x80]",
    "or      rcx, 0xffffffffffffffff",
    "xor     eax, eax",
    "repne scasw word [rdi]",
    "not     rcx",
    "dec     rcx",
    "mov     rbp, rcx",
    "mov     dword [rsp+0x130], ecx",
    "test    cl, 0x1",
    "jne     0x14008b2e5",
    "mov     rcx, qword [rsp+0x40]",
    "lea     r8, [rsp+0x130]",
    "lea     rdx, [rsp+0x60]",
    "call    sub_140012ed0",
    "mov     esi, dword [rsp+0x130]",
    "mov     r15d, dword [rsp+0x138]",
    "cmp     qword [rbx+0x60], 0x0",
    "je      0x14008b765",
    "mov     rcx, qword [rsp+0x80]",
    "lea     r8, [rsp+0x130]",
    "lea     rdx, [rsp+0xa8]",
    "call    sub_140012ed0",
    "mov     r12, qword [rsp+0xa8]",
    "mov     ebp, dword [rsp+0x130]",
    "mov     rax, qword [rbx+0x98]",
    "test    rax, rax",
    "je      0x14008bc2b",
    "cmp     qword [rbx+0x68], 0x0",
    "je      0x14008b855",
    "mov     rdx, qword [rbx+0x90]",
    "test    rdx, rdx",
    "je      0x14008b31d",
    "mov     rcx, qword [rsp+0x48]",
    "test    rcx, rcx",
    "je      0x14008bc3b",
    "cmp     qword [rbx+0x78], 0x0",
    "je      0x14008bc2b",
    "cmp     qword [rsp+0x48], 0x0",
    "je      0x14008b855",
    "mov     rcx, qword [rsp+0x48]",
    "test    rcx, rcx",
    "je      0x14008b3f2",
    "add     rdx, 0x4",
    "xor     ecx, ecx",
    "call    sub_14008d2a8",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x14008b33e",
    "mov     rax, qword [rsp+0x60]",
    "test    rax, rax",
    "je      0x14008bc4e",
    "call    qword [rel LocalFree]",
    "mov     rdi, qword [rel data_14013c8f8]",
    "lea     r8, [rax+0xc]",
    "lea     r9, [rel data_14013c8f8]",
    "jmp     0x14008b8a7",
    "test    byte [rbx+0x5c], 0x1",
    "je      0x14008b7a9",
    "test    byte [rbx+0x5c], 0x2",
    "je      0x14008b591",
    "xor     edx, edx",
    "call    sub_14008d2a8",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x14008b3f2",
    "lea     rcx, [rel data_1400fc180]  {u\"\\n[masterkey] with volatile cach\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    sub_14008d680",
    "test    byte [rbx+0x5c], 0x4",
    "je      0x14008b364",
    "test    r12, r12",
    "je      0x14008bc5c",
    "mov     rcx, rax",
    "call    qword [rel LocalFree]",
    "cmp     rdi, r9",
    "jne     0x14008b884",
    "lea     rax, [rel data_1400fc6e0]  {u\"with\"}",
    "lea     rdx, [rel data_1400fc6f0]  {u\"without\"}",
    "test    r12, r12",
    "lea     rcx, [rel data_1400fc700]  {u\"\\n[backupkey] %s DPAPI_SYSTEM: \"}",
    "cmovne  rdx, rax",
    "call    sub_14000c030",
    "test    r12, r12",
    "je      0x14008b7ee",
    "test    r12, r12",
    "je      0x14008b855",
    "cmp     qword [rsp+0x48], 0x0",
    "je      0x14008b765",
    "test    r12, r12",
    "je      0x14008b585",
    "test    byte [rdi+0x10], 0x1",
    "lea     rdx, [rdi+0x40]",
    "jne     0x14008b376",
    "test    byte [rdi+0x10], 0x2",
    "je      0x14008b36e",
    "mov     rcx, rbx",
    "call    sub_140007814",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "mov     rdx, qword [r8]",
    "cmp     rdx, qword [rdi+0x10]",
    "jne     0x14008b89b",
    "xor     edi, edi",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     r8, qword [rsp+0x48]",
    "mov     ecx, dword [rbx+0x5c]",
    "lea     rdx, [rsp+0x130]",
    "lea     rax, [rsp+0x40]",
    "mov     r9, r12",
    "mov     qword [rsp+0x30], rdx",
    "mov     rdx, qword [rbx+0x88]",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x20], ebp",
    "call    sub_1400092dc",
    "test    eax, eax",
    "je      0x14008b849",
    "xor     r8d, r8d",
    "mov     edx, ebp",
    "mov     rcx, r12",
    "call    sub_140012f68",
    "test    byte [rbx+0x5c], 0x1",
    "jne     0x14008b7ee",
    "test    ebp, ebp",
    "je      0x14008b855",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0xc0]",
    "lea     r8, [rel data_1400fc488]  {u\"password\"}",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "call    sub_140013220",
    "mov     rdi, qword [rsp+0xc0]",
    "test    eax, eax",
    "je      0x14008b68e",
    "lea     rcx, [rel data_1400fc400]  {u\"ERROR kuhl_m_dpapi_masterkey ; s\u2026\"}",
    "jmp     0x14008b760",
    "test    ebp, ebp",
    "je      0x14008b585",
    "test    rdx, rdx",
    "je      0x14008b3e6",
    "mov     rdx, qword [rsp+0x130]",
    "lea     rdx, [rdi+0x68]",
    "jmp     0x14008b376",
    "\ud83d\udeab\ud83d\udeabsbb     eax, eax",
    "sbb     eax, 0xffffffff",
    "mov     rdx, qword [r8+0x8]",
    "cmp     rdx, qword [rdi+0x18]",
    "jne     0x14008b89b",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0xb0]",
    "lea     r8, [rel data_1400fc8f8]",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14008baa1",
    "lea     rcx, [rel data_1400fc810]  {u\"\\n[domainkey] with volatile cach\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, rdi",
    "call    sub_14008d890",
    "mov     esi, dword [rdi+0x24]",
    "mov     rdi, qword [rdi+0x28]",
    "mov     rbp, qword [rbx+0x98]",
    "lea     rcx, [rsp+0x138]",
    "mov     r9d, 0x18",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], 0xf0000000",
    "call    qword [rel CryptAcquireContextW]",
    "test    eax, eax",
    "je      0x14008b937",
    "lea     rcx, [rel data_1400fc770]  {u\"ERROR kuhl_m_dpapi_masterkey ; k\u2026\"}",
    "call    sub_14000c030",
    "mov     r8d, dword [rsp+0x130]",
    "mov     rdx, qword [rsp+0x40]",
    "xor     r9d, r9d",
    "xor     ecx, ecx",
    "call    sub_14008cee0",
    "jmp     0x14008b855",
    "lea     rcx, [rel data_1400fc740]  {u\" (but is not needed)\"}",
    "call    sub_14000c030",
    "cmp     qword [rsp+0x60], 0x0",
    "je      0x14008b765",
    "lea     rax, [rel data_1400fc0e0]  {u\"protected\"}",
    "lea     r8, [rel data_1400fc4a0]  {u\"normal\"}",
    "test    r15d, r15d",
    "lea     rcx, [rel data_1400fc4b0]  {u\"\\n[masterkey] with password: %s \u2026\"}",
    "mov     rdx, rdi",
    "cmovne  r8, rax",
    "call    sub_14000c030",
    "mov     r9, qword [rsp+0x48]",
    "mov     rdx, qword [rbx+0x80]",
    "mov     ecx, dword [rbx+0x5c]",
    "lea     r11, [rsp+0x130]",
    "lea     rax, [rsp+0x40]",
    "mov     qword [rsp+0x30], r11",
    "mov     qword [rsp+0x28], rax",
    "mov     r8, rdi",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_14000898c",
    "test    eax, eax",
    "je      0x14008b682",
    "call    sub_14000c030",
    "xor     edi, edi",
    "cmp     ebp, 0x2c",
    "mov     esi, ebp",
    "lea     eax, [rdi+0x4]",
    "cmove   edi, eax",
    "sub     esi, edi",
    "cmp     esi, 0x28",
    "jne     0x14008b514",
    "lea     rcx, [rel data_1400fc1d0]  {u\"ERROR kuhl_m_dpapi_masterkey ; N\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x80]",
    "lea     rax, [rsp+0x130]",
    "lea     r9, [rsp+0x40]",
    "mov     r8d, 0x14",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140008b78",
    "test    eax, eax",
    "je      0x14008b3f2",
    "test    rdi, rdi",
    "je      0x14008b972",
    "mov     rdi, qword [rdi]",
    "xor     eax, eax",
    "jmp     0x14008b8a0",
    "and     qword [rsp+0x20], 0x0",
    "lea     r8, [rel data_1400fb7d0]",
    "xor     r9d, r9d",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x14008bc2b",
    "lea     rcx, [rel data_1400fc900]  {u\"\\n[domainkey] with RSA private k\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0xb0]",
    "lea     r8, [rsp+0xd0]",
    "lea     rdx, [rsp+0x138]",
    "xor     r9d, r9d",
    "call    sub_140009e4c",
    "test    eax, eax",
    "je      0x14008baa1",
    "xor     eax, eax",
    "lea     rax, [rsp+0x138]",
    "lea     r9, [rsp+0x40]",
    "mov     r8d, esi",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0x50]",
    "mov     rdx, rdi",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0x130]",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140009440",
    "jmp     0x14008b939",
    "lea     rcx, [rel data_1400fc5b0]  {u\"\\n[masterkey] with hash: \"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x60]",
    "xor     r8d, r8d",
    "mov     edx, esi",
    "call    sub_140012f68",
    "cmp     esi, 0x10",
    "jne     0x14008b6c3",
    "lea     rcx, [rel data_1400fc510]  {u\"ERROR kuhl_m_dpapi_masterkey ; k\u2026\"}",
    "call    sub_14000c030",
    "mov     rax, qword [rbx+0x90]",
    "test    rax, rax",
    "je      0x14008b63a",
    "lea     rcx, [rel data_1400fc3b0]  {u\"\\n[masterkey] with DPAPI_SYSTEM:\u2026\"}",
    "call    sub_14000c030",
    "add     rdi, r12",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "mov     edx, esi",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     r9, qword [rsp+0x48]",
    "mov     rcx, qword [rbx+0x80]",
    "lea     r11, [rsp+0x130]",
    "lea     rax, [rsp+0x40]",
    "mov     r8d, esi",
    "mov     qword [rsp+0x30], r11",
    "mov     qword [rsp+0x28], rax",
    "mov     rdx, rdi",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140008a74",
    "test    eax, eax",
    "je      0x14008b508",
    "lea     rcx, [rel data_1400fc250]  {u\"\\n[masterkey] with DPAPI_SYSTEM \u2026\"}",
    "call    sub_14000c030",
    "add     rdi, r12",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "mov     edx, esi",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     r9, qword [rsp+0x48]",
    "mov     rcx, qword [rbx+0x80]",
    "lea     r11, [rsp+0x130]",
    "lea     rax, [rsp+0x40]",
    "mov     esi, 0x14",
    "mov     qword [rsp+0x30], r11",
    "mov     qword [rsp+0x28], rax",
    "mov     r8d, esi",
    "mov     rdx, rdi",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140008a74",
    "test    eax, eax",
    "je      0x14008b4c7",
    "mov     rdx, qword [rbx+0x90]",
    "test    rdx, rdx",
    "je      0x14008b3bb",
    "test    eax, eax",
    "je      0x14008b8ae",
    "lea     rcx, [rel data_1400fc948]  {u\"\\n[domainkey] with RPC\\n\"}",
    "call    sub_14000c030",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0x78]",
    "lea     r8, [rel data_1400fc978]",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "call    sub_140013220",
    "test    eax, eax",
    "jne     0x14008bb93",
    "mov     rdi, qword [rsp+0x138]",
    "mov     rbp, qword [rbx+0x98]",
    "lea     rcx, [rsp+0x138]",
    "mov     esi, dword [rdi+0x14]",
    "mov     r9d, 0x18",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     dword [rsp+0x20], 0xf0000000",
    "call    qword [rel CryptAcquireContextW]",
    "test    eax, eax",
    "je      0x14008ba3f",
    "lea     rcx, [rel data_1400fc860]  {u\"ERROR kuhl_m_dpapi_masterkey ; k\u2026\"}",
    "call    sub_14000c030",
    "mov     r9, qword [rsp+0x50]",
    "mov     r8d, dword [rsp+0x130]",
    "mov     rdx, qword [rsp+0x40]",
    "mov     eax, r15d",
    "neg     eax",
    "lea     rax, [rsp+0x68]",
    "sbb     rcx, rcx",
    "and     rcx, rax",
    "call    sub_14008cee0",
    "jmp     0x14008b972",
    "test    eax, eax",
    "je      0x14008b966",
    "lea     rcx, [rel data_1400fc608]  {u\" (sha1 type)\\n\"}",
    "cmp     esi, 0x14",
    "je      0x14008b6d6",
    "lea     rcx, [rel data_1400fc5e8]  {u\" (ntlm type)\\n\"}",
    "jmp     0x14008b6d6",
    "xor     edx, edx",
    "lea     rdx, [rax+0x4]",
    "jmp     0x14008b63c",
    "lea     rcx, [rel data_1400fc300]  {u\"ERROR kuhl_m_dpapi_masterkey ; k\u2026\"}",
    "jmp     0x14008b760",
    "mov     r15d, dword [rsp+0x138]",
    "mov     eax, r15d",
    "neg     eax",
    "jmp     0x14008b4a2",
    "mov     r9, qword [rsp+0x48]",
    "mov     rcx, qword [rbx+0x80]",
    "lea     rax, [rsp+0x130]",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0x40]",
    "lea     rdx, [rdi+0x14]",
    "mov     qword [rsp+0x28], rax",
    "mov     r8d, esi",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140008a74",
    "test    eax, eax",
    "je      0x14008b508",
    "lea     rcx, [rel data_1400fc2c0]  {u\"** MACHINE **\\n\"}",
    "mov     eax, dword [rsp+0x138]",
    "mov     r8d, dword [rsp+0x130]",
    "mov     rdx, qword [rsp+0x40]",
    "neg     eax",
    "lea     rax, [rsp+0x68]",
    "sbb     rcx, rcx",
    "xor     r9d, r9d",
    "and     rcx, rax",
    "call    sub_14008cee0",
    "jmp     0x14008b3f2",
    "add     rdx, 0x4",
    "mov     rcx, rdi",
    "call    sub_14008d378",
    "mov     rsi, qword [rsp+0x58]",
    "and     qword [rsp+0x20], 0x0",
    "lea     r9, [rsp+0xb8]",
    "lea     r8, [rel data_1400fc980]  {u\"domain\"}",
    "mov     rdx, r13",
    "mov     ecx, r14d",
    "call    sub_140013220",
    "test    eax, eax",
    "jne     0x14008bb38",
    "xor     eax, eax",
    "lea     rax, [rsp+0x138]",
    "lea     rdx, [rdi+0x18]",
    "lea     r9, [rsp+0x40]",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0x50]",
    "mov     r8d, esi",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0x130]",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140009440",
    "jmp     0x14008ba41",
    "call    sub_14000c030",
    "mov     r9, qword [rsp+0x48]",
    "mov     rcx, qword [rbx+0x80]",
    "lea     rax, [rsp+0x130]",
    "mov     r8d, esi",
    "mov     qword [rsp+0x30], rax",
    "lea     rax, [rsp+0x40]",
    "mov     qword [rsp+0x28], rax",
    "mov     dword [rsp+0x20], r15d",
    "mov     r15, qword [rsp+0x60]",
    "mov     rdx, r15",
    "call    sub_140008a74",
    "test    eax, eax",
    "je      0x14008b759",
    "lea     rcx, [rel data_1400fc628]  {u\" (?)\\n\"}",
    "mov     rcx, qword [rsp+0x48]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x28], rdi",
    "and     qword [rsp+0x20], 0x0",
    "call    sub_14008d590",
    "mov     edx, dword [rsp+0x138]",
    "mov     r8d, dword [rsp+0x130]",
    "lea     rax, [rsp+0x68]",
    "neg     edx",
    "mov     rdx, qword [rsp+0x40]",
    "sbb     rcx, rcx",
    "xor     r9d, r9d",
    "and     rcx, rax",
    "call    sub_14008cee0",
    "jmp     0x14008b68e",
    "mov     r8d, dword [rsp+0x130]",
    "mov     rdx, qword [rsp+0x40]",
    "sbb     rcx, rcx",
    "lea     rax, [rsp+0x68]",
    "xor     r9d, r9d",
    "and     rcx, rax",
    "call    sub_14008cee0",
    "jmp     0x14008b76d",
    "lea     rcx, [rel data_1400fc2e0]  {u\"** USER **\\n\"}",
    "jmp     0x14008b490",
    "cmp     qword [rbx+0x88], 0x0",
    "je      0x14008b855",
    "lea     rcx, [rel data_1400fcac0]  {u\"ERROR kuhl_m_dpapi_masterkey ; D\u2026\"}",
    "call    sub_14000c030",
    "lea     rcx, [rel data_1400fca70]  {u\"[DC] '%s' will be the DC server\\n\"}",
    "mov     rdx, rdi",
    "call    sub_14000c030",
    "mov     rdx, qword [rsp+0xa0]",
    "lea     r11, [rsp+0x130]",
    "lea     r9, [rsp+0x40]",
    "mov     r8, rdi",
    "mov     rcx, rbx",
    "mov     qword [rsp+0x20], r11",
    "call    sub_140009870",
    "test    eax, eax",
    "je      0x14008bc0b",
    "mov     rdi, qword [rsp+0xb8]",
    "lea     rcx, [rsp+0x88]",
    "call    sub_14000b3b0",
    "test    eax, eax",
    "je      0x14008bb38",
    "lea     rcx, [rel data_1400fc860]  {u\"ERROR kuhl_m_dpapi_masterkey ; k\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rbx+0x98]",
    "mov     r8d, dword [rdi+0x14]",
    "lea     rdx, [rdi+0x18]",
    "add     rcx, 0xc",
    "mov     r9d, 0x1",
    "call    sub_14008d76c",
    "mov     r9, qword [rsp+0x50]",
    "mov     r8d, dword [rsp+0x130]",
    "mov     edx, r15d",
    "lea     rax, [rsp+0x68]",
    "neg     edx",
    "mov     rdx, qword [rsp+0x40]",
    "sbb     rcx, rcx",
    "and     rcx, rax",
    "call    sub_14008cee0",
    "jmp     0x14008ba98",
    "test    eax, eax",
    "je      0x14008ba8c",
    "lea     rcx, [rel data_1400fc640]  {u\"ERROR kuhl_m_dpapi_masterkey ; k\u2026\"}",
    "mov     rax, qword [rbx+0x90]",
    "test    rax, rax",
    "je      0x14008b729",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0x88]",
    "test    rcx, rcx",
    "je      0x14008bc2b",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "test    rsi, rsi",
    "je      0x14008bc19",
    "mov     r8d, dword [rsp+0x130]",
    "mov     rdx, qword [rsp+0x40]",
    "neg     r15d",
    "sbb     rcx, rcx",
    "lea     rax, [rsp+0x68]",
    "xor     r9d, r9d",
    "and     rcx, rax",
    "call    sub_14008cee0",
    "jmp     0x14008bc0b",
    "lea     rcx, [rel data_1400fc9d0]  {u\"ERROR kuhl_m_dpapi_masterkey ; D\u2026\"}",
    "call    sub_14000c030",
    "mov     edx, 0x2e",
    "mov     rcx, rdi",
    "call    qword [rel wcschr]",
    "test    rax, rax",
    "je      0x14008bb87",
    "mov     rax, qword [rsp+0x88]",
    "mov     rdi, qword [rax+0x18]",
    "jmp     0x14008bb40",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "xor     edx, edx",
    "lea     rdx, [rax+0x4]",
    "jmp     0x14008b72b",
    "call    LsaFreeMemory",
    "lea     rcx, [rel data_1400fc990]  {u\"[DC] '%s' will be the domain\\n\"}",
    "mov     rdx, rdi",
    "call    sub_14000c030",
    "lea     r8, [rsp+0x58]",
    "mov     edx, 0x1000",
    "mov     rcx, rdi",
    "call    sub_14000b418",
    "mov     rsi, qword [rsp+0x58]",
    "test    eax, eax",
    "je      0x14008bb98",
    "test    rdi, rdi",
    "je      0x14008bb87",
    "mov     r15d, dword [rsp+0x138]",
    "mov     edx, r15d",
    "neg     edx",
    "mov     rcx, qword [rsp+0x48]",
    "xor     r9d, r9d",
    "cmp     esi, 0x14",
    "cmove   r9, r15",
    "xor     r8d, r8d",
    "cmp     esi, 0x10",
    "cmove   r8, r15",
    "mov     qword [rsp+0x28], rdi",
    "and     qword [rsp+0x20], 0x0",
    "call    sub_14008d590",
    "jmp     0x14008b495",
    "mov     rdi, qword [rsp+0x78]",
    "mov     rdi, rsi",
    "jmp     0x14008bb9d",
    "test    rdi, rdi",
    "je      0x14008bbff"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}