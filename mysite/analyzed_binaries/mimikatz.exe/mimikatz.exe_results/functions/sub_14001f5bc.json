{
  "address": "0x14001f5bc",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "contain loop",
    "PEB access/e2c35c8722ff407f92bb1a8869064106",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x18], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x20",
    "xor     r12d, r12d",
    "mov     rdi, rdx",
    "mov     rbx, rcx",
    "test    rdx, rdx",
    "je      0x14001f706",
    "xor     eax, eax",
    "cmp     byte [rcx+0x9], 0x4",
    "je      0x14001f706",
    "mov     r9, qword [rcx+0x50]",
    "cmp     qword [r9], r12",
    "je      0x14001f706",
    "mov     byte [rcx+0x17], 0x1",
    "mov     al, byte [rdx]",
    "xor     esi, esi",
    "test    al, al",
    "je      0x14001f617",
    "cmp     byte [rbx+0xc], 0x0",
    "je      0x14001f642",
    "mov     rcx, rdx",
    "mov     rbp, qword [rbx+0x60]",
    "mov     eax, 0x40000000",
    "mov     rcx, r9",
    "cdq     ",
    "idiv    dword [rbx+0xbc]",
    "mov     rdx, rbp",
    "lea     r8d, [rax+0x1]",
    "call    sub_14001efb8",
    "test    eax, eax",
    "jne     0x14001f708",
    "mov     rdx, qword [rbx+0x60]",
    "xor     eax, eax",
    "test    rdx, rdx",
    "je      0x14001f63e",
    "movsx   eax, al",
    "inc     rcx",
    "inc     esi",
    "add     r12d, eax",
    "mov     al, byte [rcx]",
    "test    al, al",
    "jne     0x14001f606",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x50]",
    "add     rsp, 0x20",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "mov     rcx, qword [rbx+0x50]",
    "lea     r9, [rbp+0x4]",
    "mov     r8d, esi",
    "mov     rax, qword [rcx]",
    "mov     rdx, rdi",
    "call    qword [rax+0x18]",
    "test    eax, eax",
    "jne     0x14001f708",
    "mov     qword [rbx+0x60], rax",
    "mov     ecx, dword [rbx+0xb8]",
    "lea     rax, [rdx-0x1]",
    "cqo     ",
    "idiv    rcx",
    "inc     rax",
    "imul    rax, rcx",
    "mov     rcx, qword [rbx+0x50]",
    "movsxd  rdi, esi",
    "mov     r8d, esi",
    "lea     rdx, [rdi+rbp+0x4]",
    "call    sub_14001efb8",
    "test    eax, eax",
    "jne     0x14001f708",
    "mov     rcx, qword [rbx+0x50]",
    "lea     rdx, [rdi+rbp+0x8]",
    "mov     r8d, r12d",
    "call    sub_14001efb8",
    "test    eax, eax",
    "jne     0x14001f708",
    "mov     rcx, qword [rbx+0x50]",
    "lea     r9, [rdi+rbp+0xc]",
    "lea     rdx, [rel data_1400d6fb8]",
    "mov     rax, qword [rcx]",
    "mov     r8d, 0x8",
    "call    qword [rax+0x18]",
    "test    eax, eax",
    "jne     0x14001f708",
    "lea     eax, [rsi+0x14]",
    "lea     rdx, [rsp+0x48]",
    "movsxd  rcx, eax",
    "add     qword [rbx+0x60], rcx",
    "mov     rcx, qword [rbx+0x50]",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x30]",
    "test    eax, eax",
    "jne     0x14001f708",
    "mov     rdx, qword [rbx+0x60]",
    "cmp     qword [rsp+0x48], rdx",
    "jle     0x14001f708",
    "mov     rcx, qword [rbx+0x50]",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x20]",
    "jmp     0x14001f708"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}