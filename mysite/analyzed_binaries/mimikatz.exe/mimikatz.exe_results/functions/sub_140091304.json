{
  "address": "0x140091304",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     dword [rax+0x8], ecx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "lea     r9, [rax+0x18]",
    "lea     r8, [rel data_1400fbddc]",
    "xor     r14d, r14d",
    "and     qword [rsp+0x20], r14",
    "mov     r15, rdx",
    "mov     edi, ecx",
    "call    sub_140013220",
    "test    eax, eax",
    "je      0x140091612",
    "lea     rcx, [rel data_140100810]  {u\"ERROR kuhl_m_dpapi_keys_cng ; In\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rsp+0xc0]",
    "lea     r8, [rsp+0x50]",
    "lea     rdx, [rsp+0x60]",
    "xor     r9d, r9d",
    "call    sub_140009e4c",
    "test    eax, eax",
    "je      0x1400915fc",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140100790]  {u\"ERROR kuhl_m_dpapi_keys_cng ; ku\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x14009161e",
    "mov     rcx, qword [rsp+0x60]",
    "call    sub_14000ac90",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x1400915ef",
    "xor     eax, eax",
    "add     rsp, 0x70",
    "pop     r15",
    "pop     r14",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rcx, qword [rsp+0x60]",
    "call    qword [rel LocalFree]",
    "jmp     0x14009161e",
    "mov     rdx, rax",
    "xor     ecx, ecx",
    "call    sub_14000ad54",
    "mov     edx, dword [rbx+0x14]",
    "mov     rcx, qword [rbx+0x40]",
    "lea     rax, [rel data_1401006e0]  {u\"Decrypting Private Properties:\\n\"}",
    "mov     r9d, edi",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x48], rax",
    "lea     rax, [rsp+0xc8]",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0x58]",
    "mov     qword [rsp+0x38], rax",
    "lea     rax, [rel data_140100720]  {\"6jnkd5J3ZdQDtrsu\"}",
    "mov     dword [rsp+0x30], 0x11",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], r15",
    "call    sub_14008c9b4",
    "test    eax, eax",
    "je      0x140091487",
    "mov     edx, dword [rbx+0x18]",
    "mov     rcx, qword [rbx+0x48]",
    "lea     rax, [rel data_140100738]  {u\"Decrypting Private Key:\\n\"}",
    "mov     qword [rsp+0x48], rax",
    "lea     rax, [rsp+0xc8]",
    "mov     r9d, edi",
    "mov     qword [rsp+0x40], rax",
    "lea     rax, [rsp+0x58]",
    "xor     r8d, r8d",
    "mov     qword [rsp+0x38], rax",
    "lea     rax, [rel data_140100770]  {\"xT5rZW5qVVbrvpuA\"}",
    "mov     dword [rsp+0x30], 0x11",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], r15",
    "call    sub_14008c9b4",
    "test    eax, eax",
    "je      0x1400915a4",
    "mov     edx, dword [rsp+0xc8]",
    "mov     rcx, qword [rsp+0x58]",
    "lea     r9, [rsp+0xc0]",
    "lea     r8, [rsp+0x68]",
    "call    sub_14000af10",
    "test    eax, eax",
    "je      0x14009147c",
    "mov     rcx, qword [rbx+0x2c]",
    "test    rcx, rcx",
    "je      0x1400915b3",
    "mov     rdi, qword [rsp+0x58]",
    "test    r14d, r14d",
    "je      0x140091506",
    "mov     rcx, qword [rsp+0x58]",
    "call    qword [rel LocalFree]",
    "mov     rsi, qword [rsp+0x68]",
    "mov     r8d, dword [rsp+0xc0]",
    "xor     ecx, ecx",
    "mov     rdx, rsi",
    "call    sub_14000b0d0",
    "xor     edi, edi",
    "cmp     dword [rsp+0xc0], edi",
    "jbe     0x140091466",
    "mov     edx, dword [rbx+0x34]",
    "test    edx, edx",
    "je      0x1400915c8",
    "call    qword [rel LocalFree]",
    "mov     edx, dword [rsp+0xc8]",
    "xor     r8d, r8d",
    "mov     rcx, rdi",
    "call    sub_140012f68",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     edx, dword [rbx+0x8]",
    "mov     ecx, 0x40",
    "add     rdx, 0x2",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x14009159b",
    "lea     rcx, [rdi+0x4]",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "call    sub_1400c52e4",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "jmp     0x14009159b",
    "mov     edx, dword [rsp+0xc0]",
    "mov     rcx, rsi",
    "call    sub_14000b054",
    "mov     edi, dword [rsp+0xb0]",
    "mov     r12, rsi",
    "mov     rcx, qword [rbx+0x40]",
    "test    rcx, rcx",
    "je      0x1400915d7",
    "mov     rcx, qword [rbx+0x38]",
    "test    rcx, rcx",
    "je      0x1400915c8",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "mov     r8d, dword [rbx+0x8]",
    "mov     rdx, qword [rbx+0x2c]",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     edx, dword [rsp+0xc8]",
    "mov     dword [rsp+0x48], 0x1",
    "mov     dword [rsp+0x40], 0x1",
    "mov     qword [rsp+0x38], rsi",
    "and     dword [rsp+0x30], 0x0",
    "lea     rax, [rel data_1400fbda8]  {u\"dpapi\"}",
    "or      r9d, 0xffffffff",
    "mov     r8d, 0x1",
    "mov     qword [rsp+0x28], rax",
    "and     dword [rsp+0x20], 0x0",
    "mov     rcx, rdi",
    "call    sub_14009af94",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "inc     edi",
    "add     r12, 0x8",
    "cmp     edi, dword [rsp+0xc0]",
    "jae     0x140091466",
    "mov     rdx, qword [rbp+0x14]",
    "lea     rcx, [rel data_1401006c0]  {u\"Virtual Iso\"}",
    "mov     r8d, 0x16",
    "call    memcmp",
    "test    eax, eax",
    "jne     0x14009144a",
    "mov     rcx, qword [rbx+0x48]",
    "test    rcx, rcx",
    "je      0x1400915e6",
    "call    qword [rel LocalFree]",
    "call    sub_14000b054",
    "jmp     0x140091420",
    "cmp     dword [rbp+0x10], 0x4",
    "je      0x14009145b",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "call    qword [rel LocalFree]",
    "mov     rbp, qword [r12]",
    "cmp     dword [rbp+0xc], 0x16",
    "jb      0x14009144a",
    "mov     r8, qword [rsi+rdi*8]",
    "mov     rax, qword [r8+0x1c]",
    "mov     r14d, dword [rax]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}