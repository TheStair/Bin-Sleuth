{
  "address": "0x140058680",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     qword [rsp+0x20], r9",
    "mov     qword [rsp+0x18], r8",
    "mov     dword [rsp+0x10], edx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x58",
    "mov     rbx, r9",
    "mov     rdi, rcx",
    "mov     qword [rsp+0x40], rcx",
    "call    sub_140065300",
    "dec     dword [rdi+0x44]",
    "mov     r14d, dword [rsp+0xd8]",
    "mov     r15d, dword [rdi+0x44]",
    "mov     rbp, qword [rsp+0xc0]",
    "mov     rsi, rax",
    "mov     eax, dword [rdi+0x34]",
    "mov     dword [rsp+0x30], r15d",
    "dec     eax",
    "mov     dword [rsp+0xa0], eax",
    "test    r14d, r14d",
    "jns     0x1400586f8",
    "mov     r13d, dword [rsp+0xd0]",
    "xor     r12d, r12d",
    "cmp     dword [rbp+0x28], r12d",
    "jle     0x140058742",
    "movzx   r8d, byte [rbp+0x2c]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r15d",
    "mov     edx, 0x2e",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "cmp     dword [rsp+0xe0], 0x0",
    "jne     0x140058ae1",
    "mov     rbx, qword [rsp+0xc8]",
    "mov     r12d, dword [rsp+0xa0]",
    "test    rbx, rbx",
    "jne     0x1400588ab",
    "mov     eax, dword [rbx]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r15d",
    "lea     r8d, [rax+r13+0x1]",
    "mov     edx, 0x32",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "inc     r12d",
    "add     rbx, 0x4",
    "cmp     r12d, dword [rbp+0x28]",
    "jl      0x140058711",
    "mov     rbx, qword [rsp+0xb8]",
    "test    r14d, r14d",
    "jle     0x140058b47",
    "mov     rax, qword [rdi]",
    "mov     ecx, dword [rax+0x30]",
    "bt      rcx, 0x13",
    "jb      0x140058b2c",
    "movsxd  r12, dword [rbp+0x28]",
    "mov     rcx, rdi",
    "mov     edx, r12d",
    "call    sub_140049624",
    "mov     cl, byte [rdi+0x1f]",
    "mov     r13d, eax",
    "mov     dword [rsp+0x3c], eax",
    "test    cl, cl",
    "jne     0x1400588d0",
    "mov     al, byte [rdi+0x1f]",
    "test    al, al",
    "jne     0x140058768",
    "movzx   r8d, byte [rbp+0x2c]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r14d",
    "mov     edx, 0x96",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "test    dl, dl",
    "jne     0x140058b47",
    "cmp     qword [rdi+0x90], 0x0",
    "jne     0x140058b2c",
    "dec     cl",
    "movzx   eax, cl",
    "mov     byte [rdi+0x1f], al",
    "mov     ecx, dword [rdi+rax*4+0xbc]",
    "inc     dword [rdi+0x38]",
    "mov     ecx, dword [rdi+0x38]",
    "jmp     0x1400588df",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rdi+0x1f], al",
    "mov     ebx, dword [rdi+rax*4+0xbc]",
    "inc     dword [rdi+0x38]",
    "mov     ebx, dword [rdi+0x38]",
    "jmp     0x140058777",
    "mov     rax, qword [rdi+0x90]",
    "test    rax, rax",
    "cmovne  rdi, rax",
    "mov     byte [rdi+0x21], 0x1",
    "cmp     byte [rdi+0x20], dl",
    "jne     0x140058b2c",
    "mov     rax, qword [rsp+0xb0]",
    "cmp     rax, qword [rbp]",
    "jne     0x140058a44",
    "mov     ebp, dword [rsp+0xd0]",
    "mov     r15, qword [rsp+0xc8]",
    "mov     eax, dword [rsp+0xa8]",
    "mov     r9d, dword [rbx+0x58]",
    "mov     r8d, dword [rsp+0xa0]",
    "mov     dword [rsp+0xe0], ecx",
    "mov     edx, 0x61",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140032364",
    "mov     rdx, rbx",
    "mov     rcx, rdi",
    "call    sub_140032d08",
    "xor     ebx, ebx",
    "mov     r14, r12",
    "test    r12d, r12d",
    "jle     0x140058964",
    "mov     r8d, dword [rsp+0xa8]",
    "mov     r9, r12",
    "mov     r12d, dword [rsp+0xa0]",
    "mov     rcx, rdi",
    "mov     edx, r12d",
    "mov     dword [rsp+0x20], 0x61",
    "call    sub_14005a1e8",
    "xor     r9d, r9d",
    "mov     r8d, r12d",
    "lea     edx, [r9+0x1f]",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "lea     edx, [r8+0xb]",
    "mov     r9d, r15d",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r9d, dword [rsi+0x90]",
    "mov     rcx, rsi",
    "lea     edx, [r9-0x2]",
    "call    sub_140032d34",
    "mov     edx, dword [rsp+0xd8]",
    "mov     rcx, rsi",
    "mov     dword [rax+0x8], r9d",
    "call    sub_140032d34",
    "mov     ecx, dword [rsi+0x90]",
    "mov     dword [rax+0x8], ecx",
    "test    ebx, ebx",
    "je      0x140058ae9",
    "cmp     r14d, 0x1",
    "jne     0x140058804",
    "mov     rax, qword [rsp+0xc8]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, ebx",
    "mov     eax, dword [rax]",
    "mov     edx, 0x4f",
    "mov     rcx, rsi",
    "lea     r8d, [rax+r13+0x1]",
    "call    sub_140032364",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0xf]",
    "mov     r8d, ebx",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "mov     r12, qword [rsp+0xb0]",
    "mov     dword [rsp+0xd8], eax",
    "cmp     r12, qword [rbp]",
    "jne     0x140058804",
    "xor     r9d, r9d",
    "mov     edx, 0x313",
    "mov     rcx, rdi",
    "lea     r8d, [r9+0x2]",
    "mov     byte [rsp+0x28], 0x4",
    "mov     byte [rsp+0x20], 0xff",
    "call    sub_1400539dc",
    "jmp     0x140058b61",
    "mov     r13, qword [rsp+0xb8]",
    "cmp     dword [rsp+0xd8], 0x1",
    "jne     0x140058a44",
    "mov     eax, dword [r15+rbx*4]",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, r13d",
    "lea     r8d, [rax+rbp+0x1]",
    "mov     edx, 0x4e",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "inc     rbx",
    "inc     r13d",
    "cmp     rbx, r12",
    "jl      0x14005892e",
    "mov     rbp, qword [rsp+0xc0]",
    "mov     r15d, dword [rsp+0x30]",
    "mov     dl, byte [rbp+0x2c]",
    "test    dl, dl",
    "jne     0x140058b2c",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x140058ae9",
    "lea     edx, [r14+0x34]",
    "mov     r9d, r15d",
    "mov     r8d, r13d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "movsxd  r11, dword [rsi+0x90]",
    "test    r11d, r11d",
    "jle     0x140058804",
    "mov     edx, r15d",
    "mov     rcx, rsi",
    "call    sub_14003278c",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x75]",
    "mov     r8d, r12d",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "add     rsp, 0x58",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     r8d, r12d",
    "mov     edx, r14d",
    "mov     rcx, rdi",
    "call    sub_140049678",
    "mov     r14d, dword [rsp+0xd8]",
    "cmp     byte [rdi+0x1f], 0x8",
    "jae     0x140058acb",
    "mov     eax, dword [rsi+0x90]",
    "mov     r13, qword [rsp+0xb8]",
    "xor     ebx, ebx",
    "lea     ecx, [r12+rax+0x1]",
    "test    r12d, r12d",
    "jle     0x140058a2b",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], ebx",
    "inc     byte [rdi+0x1f]",
    "jmp     0x140058ae9",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "mov     edx, 0x90",
    "mov     word [rax+rcx*8-0x16], dx",
    "movzx   eax, byte [rdi+0x1f]",
    "mov     dword [rdi+rax*4+0xbc], r13d",
    "inc     byte [rdi+0x1f]",
    "and     dword [rsp+0x20], 0x0",
    "xor     r8d, r8d",
    "mov     r9d, r15d",
    "lea     edx, [r8+0xb]",
    "mov     rcx, rsi",
    "call    sub_140032364",
    "jmp     0x140058a4c",
    "mov     ebp, dword [rsp+0xd0]",
    "mov     r15, qword [rsp+0xc8]",
    "mov     r12, qword [rsp+0xb0]",
    "mov     edi, ecx",
    "mov     rcx, qword [rdi]",
    "mov     rdx, r13",
    "call    sub_14005a288",
    "mov     r14d, dword [rsp+0x3c]",
    "mov     r13d, dword [rsp+0xe0]",
    "mov     r8d, r14d",
    "mov     r9d, r12d",
    "mov     edx, 0x5c",
    "mov     rcx, rsi",
    "mov     rbx, rax",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032364",
    "mov     r9d, r12d",
    "mov     r8, rbx",
    "mov     edx, eax",
    "mov     rcx, rsi",
    "call    sub_140032c40",
    "mov     r8d, dword [rsp+0xa0]",
    "and     dword [rsp+0x28], 0x0",
    "mov     r9d, r15d",
    "mov     edx, 0x1d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x20], r13d",
    "call    sub_140032678",
    "test    r13d, r13d",
    "je      0x140058acb",
    "inc     rbx",
    "cmp     rbx, r14",
    "jl      0x1400589bb",
    "mov     rax, qword [rsi+0x88]",
    "lea     rcx, [r11+r11*2]",
    "mov     edx, 0x10",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     eax, dword [r15+rbx*4]",
    "mov     r9d, edi",
    "lea     r8d, [rax+rbp+0x1]",
    "mov     rax, qword [r13+0x8]",
    "movsx   ecx, word [rax+rbx*2]",
    "cmp     cx, word [r12+0x44]",
    "lea     edx, [rcx+rbp+0x1]",
    "mov     rcx, rsi",
    "cmove   edx, ebp",
    "mov     dword [rsp+0x20], edx",
    "mov     edx, 0x34",
    "call    sub_140032364",
    "movsxd  r11, dword [rsi+0x90]",
    "test    r11d, r11d",
    "jle     0x140058a0e",
    "mov     rdi, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0xc0]",
    "mov     r15d, dword [rsp+0x30]",
    "mov     r12d, r14d"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}