{
  "address": "0x14001f258",
  "rules": [
    "PEB access/2627ea084e2f4bea91f14e6cd276939a",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "PEB access/e2c35c8722ff407f92bb1a8869064106",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x20",
    "mov     ebp, dword [rcx+0xbc]",
    "mov     eax, dword [rcx+0xb8]",
    "mov     rsi, qword [rcx+0x110]",
    "xor     r12d, r12d",
    "cmp     ebp, eax",
    "mov     rdi, rcx",
    "cmova   ebp, eax",
    "xor     edx, edx",
    "cmp     dword [rcx+0x80], edx",
    "jle     0x14001f2bc",
    "mov     rdx, qword [rdi+0x60]",
    "xor     eax, eax",
    "test    rdx, rdx",
    "je      0x14001f2dd",
    "xor     ecx, ecx",
    "mov     qword [rdi+0x60], rax",
    "mov     qword [rdi+0x68], rax",
    "cmp     byte [rdi+0xb], r12b",
    "jne     0x14001f30b",
    "mov     ecx, dword [rdi+0xb8]",
    "lea     rax, [rdx-0x1]",
    "cqo     ",
    "idiv    rcx",
    "inc     rax",
    "imul    rax, rcx",
    "inc     edx",
    "add     rcx, 0x30",
    "cmp     edx, dword [rdi+0x80]",
    "jl      0x14001f29a",
    "mov     rax, qword [rdi+0x60]",
    "mov     qword [rcx+r8+0x8], rax",
    "mov     rax, qword [rel data_1400d6fb8]",
    "mov     qword [rsi], rax",
    "mov     byte [rsi+0x8], 0xff",
    "mov     byte [rsi+0x9], 0xff",
    "mov     byte [rsi+0xa], 0xff",
    "mov     byte [rsi+0xb], 0xff",
    "cmp     byte [rdi+0x9], 0x4",
    "je      0x14001f30b",
    "mov     r8, qword [rdi+0x78]",
    "cmp     qword [rcx+r8+0x8], r12",
    "jne     0x14001f2ae",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "mov     eax, r12d",
    "add     rsp, 0x20",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     rcx, qword [rdi+0x50]",
    "mov     r9, qword [rdi+0x60]",
    "mov     r8d, ebp",
    "mov     rax, qword [rcx]",
    "mov     rdx, rsi",
    "call    qword [rax+0x18]",
    "add     qword [rdi+0x60], r13",
    "add     ebx, ebp",
    "mov     r12d, eax",
    "test    eax, eax",
    "je      0x14001f3ca",
    "mov     rcx, qword [rdi+0x48]",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x60]",
    "bt      eax, 0x9",
    "jb      0x14001f30b",
    "cmp     ebx, dword [rdi+0xb8]",
    "jae     0x14001f3f3",
    "xor     eax, eax",
    "mov     qword [rsi], rax",
    "mov     dword [rsi+0x8], eax",
    "jmp     0x14001f325",
    "lea     rdx, [rdi+0x34]",
    "mov     ecx, 0x4",
    "call    sub_1400188ac",
    "mov     r11d, dword [rdi+0x34]",
    "lea     r8, [rbp-0x1c]",
    "mov     byte [rsi+0xf], r11b",
    "mov     eax, r11d",
    "xor     edx, edx",
    "shr     eax, 0x18",
    "mov     r13d, ebp",
    "mov     byte [rsi+0xc], al",
    "mov     eax, r11d",
    "shr     eax, 0x10",
    "mov     byte [rsi+0xd], al",
    "mov     eax, r11d",
    "shr     eax, 0x8",
    "mov     byte [rsi+0xe], al",
    "mov     ecx, dword [rdi+0x20]",
    "mov     byte [rsi+0x13], cl",
    "mov     eax, ecx",
    "shr     eax, 0x18",
    "mov     byte [rsi+0x10], al",
    "mov     eax, ecx",
    "shr     eax, 0x10",
    "mov     byte [rsi+0x11], al",
    "mov     eax, ecx",
    "shr     eax, 0x8",
    "mov     byte [rsi+0x12], al",
    "mov     ecx, dword [rdi+0xb8]",
    "mov     byte [rsi+0x17], cl",
    "mov     eax, ecx",
    "shr     eax, 0x18",
    "mov     byte [rsi+0x14], al",
    "mov     eax, ecx",
    "shr     eax, 0x10",
    "mov     byte [rsi+0x15], al",
    "mov     eax, ecx",
    "shr     eax, 0x8",
    "mov     byte [rsi+0x16], al",
    "mov     ecx, dword [rdi+0xbc]",
    "mov     eax, ecx",
    "mov     byte [rsi+0x1b], cl",
    "shr     eax, 0x18",
    "mov     byte [rsi+0x18], al",
    "mov     eax, ecx",
    "shr     eax, 0x10",
    "mov     byte [rsi+0x19], al",
    "mov     eax, ecx",
    "lea     rcx, [rsi+0x1c]",
    "shr     eax, 0x8",
    "mov     byte [rsi+0x1a], al",
    "call    memset",
    "xor     ebx, ebx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}