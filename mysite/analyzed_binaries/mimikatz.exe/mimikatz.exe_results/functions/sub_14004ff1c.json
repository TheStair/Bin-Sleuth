{
  "address": "0x14004ff1c",
  "rules": [
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "contain loop",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using Curve25519/4be2ead1b08a4c049dae9c8694881d76",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211"
  ],
  "disassembly": [
    "mov     byte [rsp+0x20], r9b",
    "mov     qword [rsp+0x18], r8",
    "mov     qword [rsp+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x78",
    "mov     rbp, qword [rcx]",
    "mov     r14, qword [rsp+0xe0]",
    "xor     r12d, r12d",
    "mov     r15, rdx",
    "mov     rsi, rcx",
    "cmp     r8, r12",
    "jne     0x14004ff5d",
    "mov     rdi, qword [rcx+0x130]",
    "cmp     rdi, r12",
    "je      0x1400504fc",
    "cmp     r14, r12",
    "je      0x1400504fc",
    "add     rsp, 0x78",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "cmp     r14, r12",
    "jne     0x14005000a",
    "cmp     byte [rbp+0xb5], r12b",
    "je      0x14005003d",
    "mov     r12, qword [rdi]",
    "mov     edx, 0x5f",
    "mov     rcx, r12",
    "call    qword [rel strrchr]",
    "mov     rbx, rax",
    "xor     eax, eax",
    "cmp     rbx, rax",
    "je      0x14004ffff",
    "test    r9b, 0x20",
    "je      0x140050079",
    "cmp     r14, r12",
    "je      0x14005002c",
    "xor     r12d, r12d",
    "xor     r8d, r8d",
    "mov     rdx, r12",
    "mov     rcx, rbp",
    "mov     byte [rbx], al",
    "call    sub_14004de30",
    "xor     r12d, r12d",
    "mov     byte [rbx], 0x5f",
    "cmp     rax, r12",
    "je      0x140050002",
    "mov     rcx, qword [rdi+0x70]",
    "mov     r13d, 0xfff0bdc0",
    "cmp     rcx, r12",
    "je      0x1400500a5",
    "mov     eax, dword [rdi+0x40]",
    "test    al, 0x8",
    "je      0x140050053",
    "mov     eax, dword [rbp+0xb0]",
    "mov     dword [rdi+0x38], eax",
    "cmp     eax, 0x1",
    "jne     0x14005003d",
    "lea     rdx, [rel data_1400f386c]",
    "mov     r9b, byte [rsp+0xd8]",
    "cmp     dword [rax+0x54], r12d",
    "je      0x140050002",
    "mov     rax, qword [rdi+0x30]",
    "cmp     rax, r12",
    "je      0x1400500c5",
    "mov     rax, qword [rbp+0x20]",
    "mov     r13d, r12d",
    "cmp     qword [rax+0x18], rcx",
    "je      0x1400500a5",
    "mov     rcx, rsi",
    "test    al, 0x4",
    "jne     0x14005006b",
    "lea     rdx, [rel data_1400f59a0]  {\"AUTOINCREMENT not allowed on WIT\u2026\"}",
    "jmp     0x14005001f",
    "or      dword [rdi+0x40], eax",
    "mov     rax, qword [rax+0x58]",
    "lea     rcx, [rbp+0x1b8]",
    "xor     r8d, r8d",
    "mov     rdx, qword [rax]",
    "call    sub_14001a410",
    "mov     rax, qword [rax+0x10]",
    "cmp     rax, r12",
    "je      0x140050002",
    "movsx   edx, word [rdi+0x46]",
    "mov     r8, qword [rdi+0x8]",
    "mov     ecx, r12d",
    "cmp     edx, r12d",
    "jle     0x1400500ea",
    "xor     r9d, r9d",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "lea     r8d, [r9+0x4]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140042edc",
    "add     rax, 0x18",
    "or      eax, 0x60",
    "mov     rdx, rdi",
    "mov     dword [rdi+0x40], eax",
    "call    sub_14004fae4",
    "mov     r8, qword [rdi]",
    "lea     rdx, [rel data_1400f59d8]  {\"PRIMARY KEY missing on table %s\"}",
    "call    sub_1400191b8",
    "jmp     0x140050079",
    "mov     rcx, rsi",
    "call    sub_1400191b8",
    "jmp     0x1400504fc",
    "mov     rax, qword [rax]",
    "cmp     dword [rax], 0x3",
    "jl      0x140050002",
    "cmp     word [rdi+0x44], r12w",
    "jge     0x1400500f3",
    "add     r8, 0x1a",
    "add     rax, 0x20",
    "inc     r13d",
    "cmp     qword [rax], rcx",
    "jne     0x140050099",
    "mov     rdx, qword [rax+0xb8]",
    "cmp     rdx, r12",
    "je      0x140050002",
    "shl     ecx, 0x2",
    "call    sub_14001a0b8",
    "mov     rbx, qword [rdi+0x10]",
    "mov     word [rdi+0x4a], ax",
    "jmp     0x140050111",
    "inc     ecx",
    "movzx   eax, byte [r8]",
    "dec     edx",
    "add     r8, 0x20",
    "add     ecx, eax",
    "cmp     edx, r12d",
    "jg      0x1400500d9",
    "lea     rcx, [rbx+0x1]",
    "call    rdx",
    "mov     r9b, byte [rsp+0xd8]",
    "cmp     eax, r12d",
    "je      0x14005000a",
    "cmp     rbx, r12",
    "jne     0x140050105",
    "bts     dword [rdi+0x40], 0xa",
    "jmp     0x14005000a",
    "mov     rcx, rbx",
    "call    sub_14004f9fc",
    "mov     rbx, qword [rbx+0x28]",
    "cmp     byte [rbp+0xb5], r12b",
    "jne     0x1400504a6",
    "mov     rcx, qword [rdi+0x70]",
    "mov     rdx, qword [rdi]",
    "mov     r8, rdi",
    "add     rcx, 0x8",
    "call    sub_14001a4ac",
    "cmp     rax, r12",
    "je      0x1400504c8",
    "mov     rcx, rsi",
    "call    sub_140065300",
    "xor     ebx, ebx",
    "mov     r12, rax",
    "cmp     rax, rbx",
    "je      0x1400504fc",
    "mov     qword [rsi+0x130], r12",
    "or      dword [rbp+0x2c], 0x1",
    "cmp     qword [rdi+0x18], r12",
    "jne     0x1400504fc",
    "mov     rcx, rbp",
    "call    sub_140016efc",
    "jmp     0x1400504fc",
    "lea     edx, [rbx+0x75]",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, rax",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "cmp     qword [rdi+0x18], rbx",
    "jne     0x140050164",
    "mov     rcx, qword [rsi+0xe0]",
    "cmp     qword [r15], r12",
    "cmove   r15, qword [rsp+0xd0]",
    "mov     edx, dword [r15]",
    "sub     edx, ecx",
    "call    sub_140018f3c",
    "add     eax, 0xd",
    "mov     dword [rdi+0x50], eax",
    "lea     rax, [rel data_1400f534c]  {\"view\"}",
    "lea     r8, [rel data_1400f5a00]  {\"VIEW\"}",
    "lea     rax, [rel data_1400f4e2c]  {\"table\"}",
    "lea     r8, [rel data_1400f59f8]  {\"TABLE\"}",
    "jmp     0x140050172",
    "cmp     byte [rsp+0xd8], bl",
    "mov     rcx, qword [rsp+0xd0]",
    "lea     rax, [rsi+0xf0]",
    "cmovne  rcx, rax",
    "mov     r9d, dword [rcx]",
    "mov     rax, qword [rcx]",
    "sub     r9d, dword [rsi+0xe0]",
    "cmp     byte [rax], 0x3b",
    "je      0x1400503c3",
    "mov     r15d, dword [rsi+0x38]",
    "mov     edx, 0x62",
    "mov     rcx, rsi",
    "inc     r15d",
    "lea     r8d, [rdx-0x61]",
    "mov     dword [rsp+0x20], r13d",
    "lea     eax, [r15+0x2]",
    "mov     dword [rsi+0x38], eax",
    "mov     rax, qword [rsi+0x90]",
    "cmp     rax, rbx",
    "cmovne  rcx, rax",
    "mov     byte [rcx+0x21], 0x1",
    "mov     r9d, dword [rsi+0x7c]",
    "mov     rcx, r12",
    "call    sub_140032364",
    "movsxd  rax, dword [r12+0x90]",
    "cmp     eax, ebx",
    "jle     0x1400501e2",
    "mov     qword [rsp+0xc0], rax",
    "cmp     r14, rbx",
    "je      0x140050393",
    "mov     rax, qword [rsi+0xe0]",
    "lea     rdx, [rel data_1400f5a08]  {\"CREATE %s %.*s\"}",
    "mov     rcx, rbp",
    "mov     qword [rsp+0x20], rax",
    "call    _printf_p_l",
    "add     r9d, dword [rcx+0x8]",
    "mov     dword [rsi+0x34], 0x2",
    "mov     ebx, dword [r12+0x90]",
    "xor     r9d, r9d",
    "lea     edx, [r9+0xd]",
    "inc     ebx",
    "mov     r8d, r15d",
    "mov     rcx, r12",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "xor     ecx, ecx",
    "cmp     dword [rsi+0x30], ecx",
    "jne     0x1400504fc",
    "lea     rcx, [rax+rax*2]",
    "mov     rax, qword [r12+0x88]",
    "mov     edx, 0x10",
    "mov     word [rax+rcx*8-0x16], dx",
    "mov     edx, r13d",
    "mov     rcx, rsi",
    "call    sub_14004f620",
    "test    byte [rdi+0x40], 0x8",
    "je      0x14005047a",
    "mov     rdx, r14",
    "mov     rcx, rbp",
    "call    sub_1400169a8",
    "mov     r8b, 0x41",
    "mov     rdx, r14",
    "mov     rcx, rsi",
    "call    sub_1400651f4",
    "xor     edx, edx",
    "cmp     rax, rdx",
    "je      0x1400504fc",
    "mov     r8, qword [rdi]",
    "lea     rdx, [rel data_1400f5aa8]  {\"tbl_name='%q' AND type!='trigger\u2026\"}",
    "mov     rcx, rbp",
    "call    _printf_p_l",
    "mov     edx, r13d",
    "mov     rcx, r12",
    "mov     r8, rax",
    "call    sub_140032608",
    "xor     r12d, r12d",
    "cmp     byte [rbp+0xb5], r12b",
    "je      0x1400504fc",
    "mov     r8, qword [rbp+0x20]",
    "xor     ecx, ecx",
    "mov     rax, qword [rbx+r8+0x18]",
    "cmp     qword [rax+0x68], rcx",
    "jne     0x14005047a",
    "movzx   ecx, word [rax+0x46]",
    "mov     word [rdi+0x46], cx",
    "mov     rcx, qword [rax+0x8]",
    "mov     qword [rdi+0x8], rcx",
    "mov     word [rax+0x46], dx",
    "mov     qword [rax+0x8], rdx",
    "cmp     qword [rbp+0x298], rdx",
    "jne     0x140050254",
    "mov     r8, qword [rbx+r8]",
    "lea     rdx, [rel data_1400f5a78]  {\"CREATE TABLE %Q.sqlite_sequence(\u2026\"}",
    "mov     rcx, rsi",
    "call    sub_14004dd58",
    "mov     rdx, rax",
    "mov     rcx, rbp",
    "call    sub_14004e45c",
    "xor     edx, edx",
    "add     dword [rax+0x3c], 0xffffffff",
    "jne     0x140050261",
    "mov     edx, r15d",
    "mov     rcx, r12",
    "call    sub_1400326bc",
    "lea     edx, [rbx-0x1]",
    "mov     rcx, r12",
    "call    sub_140032d34",
    "mov     ecx, dword [r12+0x90]",
    "mov     r8d, dword [rsp+0x54]",
    "mov     dword [rax+0x8], ecx",
    "lea     edx, [r14+0xe]",
    "xor     r9d, r9d",
    "mov     rcx, r12",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     r9d, dword [rsp+0x5c]",
    "mov     r8d, dword [rsp+0x58]",
    "lea     r14d, [r15+0x1]",
    "mov     edx, 0x5c",
    "mov     rcx, r12",
    "mov     ebx, eax",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "xor     r8d, r8d",
    "mov     rdx, rdi",
    "mov     rcx, r12",
    "call    sub_14005a384",
    "xor     ecx, ecx",
    "lea     r15d, [r14+0x1]",
    "lea     edx, [rcx+0x79]",
    "lea     r8d, [rcx+0x1]",
    "mov     dword [rsp+0x20], ecx",
    "mov     r9d, r15d",
    "mov     rcx, r12",
    "call    sub_140032364",
    "mov     dword [rsp+0x20], r15d",
    "mov     r15d, 0x1",
    "lea     edx, [r15+0x79]",
    "mov     r9d, r14d",
    "mov     r8d, r15d",
    "mov     rcx, r12",
    "call    sub_140032364",
    "lea     edx, [r15+0xa]",
    "xor     r14d, r14d",
    "mov     r9d, ebx",
    "xor     r8d, r8d",
    "mov     rcx, r12",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     edx, ebx",
    "mov     rcx, r12",
    "call    sub_140032d34",
    "mov     ecx, dword [r12+0x90]",
    "lea     edx, [r15+0x74]",
    "mov     dword [rax+0x8], ecx",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     rcx, r12",
    "mov     dword [rsp+0x20], r14d",
    "call    sub_140032364",
    "mov     rdx, rdi",
    "mov     rcx, rbp",
    "call    sub_14004f74c",
    "mov     r15, qword [rsp+0xc8]",
    "jmp     0x1400503de",
    "mov     qword [rsp+0x60], rdx",
    "mov     dword [rsp+0x58], edx",
    "mov     dword [rsp+0x5c], edx",
    "lea     r8, [rsp+0x50]",
    "mov     rdx, r14",
    "mov     rcx, rsi",
    "mov     byte [rsp+0x50], 0xd",
    "mov     dword [rsp+0x54], r15d",
    "call    sub_1400692cc",
    "xor     r14d, r14d",
    "cmp     dword [rsi+0x30], r14d",
    "jne     0x1400504fc",
    "mov     rcx, qword [rdi]",
    "mov     r8, qword [rbp+0x20]",
    "mov     r14, rax",
    "mov     eax, dword [rsi+0x78]",
    "movsxd  rbx, r13d",
    "lea     r9, [rel data_1400f43b8]  {\"sqlite_master\"}",
    "mov     dword [rsp+0x48], eax",
    "mov     eax, dword [rsi+0x7c]",
    "mov     qword [rsp+0x40], r14",
    "mov     dword [rsp+0x38], eax",
    "mov     rax, qword [rsp+0xc0]",
    "mov     qword [rsp+0x30], rcx",
    "mov     qword [rsp+0x28], rcx",
    "shl     rbx, 0x5",
    "lea     rdx, [rel data_1400f5a20]  {\"UPDATE %Q.%s SET type='%s', name\u2026\"}",
    "mov     r8, qword [rbx+r8]",
    "mov     rcx, rsi",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14004dd58",
    "xor     eax, eax",
    "cmp     r14, rax",
    "je      0x140050445"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}