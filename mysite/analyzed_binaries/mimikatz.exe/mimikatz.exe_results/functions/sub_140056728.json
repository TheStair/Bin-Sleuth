{
  "address": "0x140056728",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x30",
    "mov     rdi, rcx",
    "mov     rcx, qword [r8]",
    "mov     dl, 0x1",
    "mov     rbx, r8",
    "call    sub_140031c84",
    "mov     rcx, qword [rbx]",
    "mov     rsi, rax",
    "call    sub_140035e5c",
    "movsxd  rbp, eax",
    "test    rsi, rsi",
    "je      0x1400567c1",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "add     rsp, 0x30",
    "pop     rdi",
    "retn    ",
    "lea     rdx, [rbp+0x1]",
    "mov     rcx, rdi",
    "mov     rbx, rbp",
    "call    sub_140056624",
    "mov     rdx, rax",
    "test    rax, rax",
    "je      0x1400567c1",
    "test    ebp, ebp",
    "jle     0x14005679a",
    "mov     rcx, qword [rdi]",
    "lea     rax, [rel sub_140016950]",
    "mov     r9b, 0x1",
    "mov     r8d, ebp",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140031820",
    "cmp     eax, 0x12",
    "jne     0x1400567c1",
    "mov     rcx, rax",
    "sub     rsi, rax",
    "mov     rcx, rdi",
    "call    sub_1400363a8",
    "movzx   eax, byte [rsi+rcx]",
    "lea     r8, [rel data_1400d6400]",
    "mov     al, byte [rax+r8]",
    "mov     byte [rcx], al",
    "inc     rcx",
    "sub     rbx, 0x1",
    "jne     0x140056780"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}