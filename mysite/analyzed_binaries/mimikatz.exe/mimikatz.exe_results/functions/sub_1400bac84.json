{
  "address": "0x1400bac84",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "decompress data using LZO/368a268678dc46ccbe6ee697869692a3",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     dword [rax+0x18], r8d",
    "mov     qword [rax+0x8], rcx",
    "mov     qword [rax+0x20], r9",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x38",
    "xor     ebx, ebx",
    "mov     rbp, rcx",
    "mov     rdi, rdx",
    "mov     dword [rdx], 0x71",
    "lea     r12, [rax+0x20]",
    "lea     ecx, [rbx+0x8]",
    "lea     r15d, [rbx+0x1]",
    "mov     esi, ebx",
    "mov     dword [rsp+0x28], ebx",
    "mov     r13d, ebx",
    "mov     r14d, ebx",
    "cmp     r8d, ebx",
    "jbe     0x1400bad45",
    "lea     eax, [r13+r8]",
    "mov     ecx, 0x40",
    "mov     qword [rsp+0x28], rbx",
    "lea     r12d, [rax+rax-0x2]",
    "lea     eax, [r12+r12+0x16]",
    "add     dword [rdi], eax",
    "mov     edx, dword [rdi]",
    "call    qword [rel LocalAlloc]",
    "mov     r11, rax",
    "mov     qword [rbp], rax",
    "cmp     rax, rbx",
    "je      0x1400baf70",
    "add     r12, 0xfffffffffffffff8",
    "mov     rbp, r15",
    "lea     esi, [rbx+0x10]",
    "mov     eax, esi",
    "add     rsp, 0x38",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     eax, dword [rdi]",
    "mov     edx, 0x30",
    "mov     rcx, rbx",
    "sub     eax, 0xd",
    "lea     r9d, [rdx-0x2e]",
    "mov     dword [r11+0x4], eax",
    "mov     eax, dword [rsp+0x20]",
    "mov     r8d, dword [rsp+0x90]",
    "add     r14d, ebp",
    "add     eax, r15d",
    "mov     ecx, 0x8",
    "lea     eax, [rax+rax+0x6]",
    "add     dword [rdi], eax",
    "cmp     r14d, r8d",
    "jb      0x1400bacd7",
    "add     r13d, 0xfffffff8",
    "mov     rax, qword [rbp]",
    "mov     r8d, 0x20",
    "mov     word [rcx+rax+0xc], r8w",
    "add     rcx, r9",
    "sub     rdx, r15",
    "jne     0x1400bad8d",
    "mov     rax, qword [rbp]",
    "lea     ecx, [rdx+0x50]",
    "mov     r14d, ebx",
    "mov     word [rax+0x6c], cx",
    "movzx   ecx, word [rsp+0x90]",
    "mov     rax, qword [rbp]",
    "add     cx, r15w",
    "lea     r15, [rsp+0x98]",
    "mov     word [rax+0x6e], cx",
    "mov     rax, qword [rbp]",
    "lea     rsi, [rax+0x70]",
    "cmp     bx, word [rax+0x6e]",
    "jae     0x1400baf51",
    "add     r12, rcx",
    "mov     rbx, qword [r12]",
    "add     r12, rsi",
    "mov     eax, dword [r12]",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], eax",
    "call    qword [rel lstrlenW]",
    "lea     rdx, [rel data_1401276b0]  {u\"Primary:\"}",
    "mov     rcx, rbx",
    "mov     r15d, eax",
    "add     r13d, eax",
    "call    qword [rel wcsstr]",
    "cmp     rbx, rax",
    "jne     0x1400bad11",
    "mov     rbp, qword [rsp+0x80]",
    "mov     esi, dword [rsp+0x28]",
    "xor     ebx, ebx",
    "lea     r15d, [rcx-0x7]",
    "mov     rcx, qword [rbp]",
    "mov     esi, ebx",
    "movzx   edx, word [rcx+0x6e]",
    "cmp     r14d, edx",
    "sete    sil",
    "cmp     esi, ebx",
    "jne     0x1400baf70",
    "mov     r13, qword [rsp+0x28]",
    "add     r15, 0xfffffffffffffff8",
    "call    qword [rel LocalFree]",
    "mov     qword [rbp], rax",
    "mov     ecx, 0x8",
    "add     r15, rcx",
    "mov     rax, qword [r15]",
    "add     r15, rcx",
    "mov     rdi, qword [r15]",
    "add     r15, rcx",
    "mov     rcx, rax",
    "mov     ebx, dword [r15]",
    "mov     qword [rsp+0x28], rax",
    "call    qword [rel lstrlenW]",
    "mov     rdx, qword [rsp+0x28]",
    "add     ax, ax",
    "lea     rcx, [rsi+0x6]",
    "movzx   r8d, ax",
    "movzx   eax, bx",
    "add     ax, ax",
    "mov     word [rsi], r8w",
    "mov     word [rsi+0x2], ax",
    "mov     eax, 0x1",
    "mov     word [rsi+0x4], ax",
    "call    memcpy",
    "movzx   eax, word [rsi]",
    "movzx   r9d, word [rsi+0x2]",
    "lea     r8, [rax+rsi+0x6]",
    "mov     edx, ebx",
    "mov     rcx, rdi",
    "call    sub_1400babc4",
    "xor     ebx, ebx",
    "cmp     eax, ebx",
    "je      0x1400baf51",
    "mov     word [rsi+0x4], r9w",
    "mov     eax, 0x10",
    "add     r12w, r12w",
    "mov     word [rsi], ax",
    "mov     word [rsi+0x2], r12w",
    "mov     rax, qword [rel data_1401276c8]  {u\"Packages\"}",
    "mov     qword [rsi+0x6], rax",
    "mov     rax, qword [rel data_1401276c8[4]]  {u\"ages\"}",
    "mov     qword [rsi+0xe], rax",
    "movzx   eax, word [rsi]",
    "movzx   r12d, word [rsi+0x2]",
    "lea     r13, [rax+rsi+0x6]",
    "jmp     0x1400baf2a",
    "mov     rdi, qword [rsp+0x28]",
    "lea     rdx, [rel data_1401276b0]  {u\"Primary:\"}",
    "mov     rcx, rdi",
    "call    qword [rel wcsstr]",
    "movzx   edx, word [rsi]",
    "mov     r9d, r12d",
    "cmp     rdi, rax",
    "lea     eax, [rbx+0x8]",
    "mov     r8, r13",
    "cmove   ebx, eax",
    "lea     eax, [rbx+rbx]",
    "lea     rcx, [rsi+rbx*2+0x6]",
    "sub     edx, eax",
    "call    sub_1400babc4",
    "test    eax, eax",
    "je      0x1400baf4f",
    "movzx   eax, word [rsi]",
    "movzx   ecx, word [rsi+0x2]",
    "inc     r14d",
    "add     rax, rsi",
    "lea     rsi, [rax+rcx+0x6]",
    "mov     rax, qword [rbp]",
    "movzx   ecx, word [rax+0x6e]",
    "cmp     r14d, ecx",
    "jb      0x1400badea",
    "xor     ebx, ebx",
    "movzx   ecx, word [rsi]",
    "mov     eax, ecx",
    "sub     eax, ebx",
    "sub     ebx, ecx",
    "add     eax, eax",
    "lea     r12d, [r12+rbx*2]",
    "add     r13, rax",
    "mov     rax, qword [rbp]",
    "movzx   ecx, word [rax+0x6e]",
    "lea     eax, [r14+0x1]",
    "cmp     eax, ecx",
    "jae     0x1400baf22",
    "cmp     r14d, ebx",
    "jne     0x1400bae2d",
    "jmp     0x1400baf51",
    "xor     ebx, ebx",
    "lea     rcx, [rel data_1401276dc]",
    "mov     r9d, r12d",
    "mov     r8, r13",
    "mov     edx, 0x2",
    "call    sub_1400babc4",
    "xor     ebx, ebx",
    "cmp     eax, ebx",
    "je      0x1400baf51",
    "add     r13, 0x4",
    "add     r12d, 0xfffffffc",
    "jmp     0x1400baf24",
    "mov     r9d, 0x2"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}