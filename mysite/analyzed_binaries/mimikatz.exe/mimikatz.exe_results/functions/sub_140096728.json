{
  "address": "0x140096728",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/dec108a2f8464ac388ec29affb61c4d8",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/88b7572ed916436d804701d7ca2c8848",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/1d2aacee85cc43a0a1c1ba47e394ae52"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x10], rbx",
    "mov     dword [r11+0x20], r9d",
    "mov     dword [r11+0x18], r8d",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "mov     ebp, r8d",
    "mov     rax, rdx",
    "test    ecx, ecx",
    "je      0x140096b7e",
    "lea     rcx, [rel data_140105640]  {u\"ERROR kuhl_m_kerberos_ccache_enu\u2026\"}",
    "call    sub_14000c030",
    "mov     rcx, qword [rax]",
    "lea     r8, [r11+0x8]",
    "lea     rdx, [r11-0x50]",
    "xor     r9d, r9d",
    "call    sub_140009e4c",
    "test    eax, eax",
    "je      0x140096b68",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1401055b0]  {u\"ERROR kuhl_m_kerberos_ccache_enu\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "jmp     0x140096b8a",
    "mov     r12, qword [rsp+0x28]",
    "mov     eax, 0x504",
    "movzx   r13d, word [r12]",
    "lea     rcx, [r12+0x2]",
    "ror     r13w, 0x8",
    "mov     qword [rsp+0x20], rcx",
    "cmp     r13w, ax",
    "je      0x1400967af",
    "xor     eax, eax",
    "mov     rbx, qword [rsp+0x88]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "movzx   eax, word [rcx]",
    "ror     ax, 0x8",
    "movzx   eax, ax",
    "lea     rcx, [rcx+rax+0x2]",
    "mov     qword [rsp+0x20], rcx",
    "mov     eax, 0x503",
    "cmp     r13w, ax",
    "je      0x1400967c3",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "jmp     0x140096b8a",
    "lea     r8, [rsp+0x30]",
    "lea     rdx, [rsp+0x28]",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140096c90",
    "mov     r14, qword [rsp+0x28]",
    "test    r14, r14",
    "je      0x140096b5d",
    "mov     r9d, dword [rcx+0x4]",
    "and     qword [rsp+0x28], 0x0",
    "bswap   r9d",
    "test    r9d, r9d",
    "je      0x140096b5d",
    "lea     rcx, [rel data_140105500]  {u\"ERROR kuhl_m_kerberos_ccache_enu\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x140096b5d",
    "lea     r8, [rsp+0x30]",
    "lea     rcx, [rel data_1401053a0]  {u\"\\nPrincipal : \"}",
    "mov     rdx, r14",
    "call    sub_140097d9c",
    "mov     eax, dword [rsp+0x80]",
    "mov     rdi, qword [rsp+0x20]",
    "add     rax, r12",
    "xor     r15d, r15d",
    "cmp     rdi, rax",
    "jae     0x140096b55",
    "mov     rcx, r14",
    "call    sub_140098180",
    "mov     r14d, dword [rsp+0x98]",
    "mov     eax, dword [rsp+0x80]",
    "inc     r15d",
    "add     rax, r12",
    "cmp     rdi, rax",
    "jb      0x140096832",
    "mov     r9d, dword [rdi+0x4]",
    "lea     rdx, [rax+0x30]",
    "and     qword [rdx], 0x0",
    "bswap   r9d",
    "test    r9d, r9d",
    "je      0x140096882",
    "lea     rcx, [rel data_1401053c0]  {u\"\\n\\nData %u\"}",
    "mov     edx, r15d",
    "call    sub_14000c030",
    "mov     edx, 0xa8",
    "lea     ecx, [rdx-0x68]",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x140096b3a",
    "mov     r14, qword [rsp+0x28]",
    "mov     r9d, dword [rdi+0x4]",
    "and     qword [rbx], 0x0",
    "bswap   r9d",
    "test    r9d, r9d",
    "je      0x1400968a8",
    "lea     r8, [rax+0x38]",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140096c90",
    "mov     rdi, qword [rsp+0x20]",
    "mov     rcx, qword [rbx]",
    "call    sub_1400980c8",
    "lea     rcx, [rbx+0x8]",
    "lea     rdx, [rbx+0x20]",
    "mov     qword [rbx+0x18], rax",
    "call    sub_140012cc8",
    "movzx   r11d, word [rdi]",
    "ror     r11w, 0x8",
    "movzx   eax, r11w",
    "mov     dword [rbx+0x70], eax",
    "movzx   eax, word [rdi+0x2]",
    "ror     ax, 0x8",
    "movzx   eax, ax",
    "mov     dword [rbx+0x8c], eax",
    "mov     eax, 0x504",
    "cmp     r13w, ax",
    "jne     0x1400968fe",
    "lea     r8, [rbx+0x8]",
    "lea     rcx, [rsp+0x20]",
    "mov     rdx, rbx",
    "call    sub_140096c90",
    "mov     rdi, qword [rsp+0x20]",
    "mov     eax, dword [rdi+0x4]",
    "add     rdi, 0x8",
    "bswap   eax",
    "movzx   eax, word [rdi+0x4]",
    "ror     ax, 0x8",
    "add     rdi, 0x6",
    "movzx   eax, ax",
    "jmp     0x140096907",
    "mov     eax, dword [rbx+0x78]",
    "mov     rdx, 0x2b6109100",
    "lea     rdi, [rdi+rax+0x4]",
    "mov     eax, dword [rdi]",
    "add     rdi, 0x15",
    "bswap   eax",
    "movsxd  rcx, eax",
    "add     rcx, rdx",
    "imul    rcx, rcx, 0x989680",
    "mov     qword [rbx+0x58], rcx",
    "mov     eax, dword [rdi-0x11]",
    "bswap   eax",
    "movsxd  rcx, eax",
    "add     rcx, rdx",
    "imul    rcx, rcx, 0x989680",
    "mov     qword [rbx+0x60], rcx",
    "mov     eax, dword [rdi-0xd]",
    "bswap   eax",
    "movsxd  rcx, eax",
    "add     rcx, rdx",
    "imul    rcx, rcx, 0x989680",
    "mov     qword [rbx+0x68], rcx",
    "mov     eax, dword [rdi-0x8]",
    "bswap   eax",
    "mov     dword [rbx+0x88], eax",
    "mov     eax, dword [rdi-0x4]",
    "bswap   eax",
    "test    eax, eax",
    "je      0x1400969b5",
    "mov     edx, eax",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rbx+0x80], rax",
    "test    rax, rax",
    "je      0x140096936",
    "mov     dword [rbx+0x78], eax",
    "test    eax, eax",
    "je      0x140096936",
    "mov     eax, dword [rdi]",
    "add     rdi, 0x4",
    "bswap   eax",
    "test    eax, eax",
    "je      0x1400969d5",
    "mov     ecx, eax",
    "mov     r8d, dword [rbx+0x78]",
    "mov     rdx, rdi",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     eax, dword [rdi]",
    "add     rdi, 0x4",
    "mov     dword [rbx+0x90], 0x2",
    "bswap   eax",
    "mov     dword [rbx+0x98], eax",
    "test    eax, eax",
    "je      0x140096a1c",
    "mov     ecx, eax",
    "sub     rcx, 0x1",
    "mov     eax, dword [rdi+0x2]",
    "bswap   eax",
    "mov     eax, eax",
    "lea     rdi, [rdi+rax+0x6]",
    "jne     0x1400969a3",
    "mov     eax, dword [rbx+0x98]",
    "lea     rdx, [rbx+0x20]",
    "lea     rcx, [rel data_1400d5ea0]",
    "add     rdi, rax",
    "mov     r8b, 0x1",
    "mov     eax, dword [rdi]",
    "bswap   eax",
    "mov     eax, eax",
    "lea     rdi, [rdi+rax+0x4]",
    "mov     qword [rsp+0x20], rdi",
    "call    RtlEqualUnicodeString",
    "test    al, al",
    "jne     0x140096b1f",
    "mov     edx, eax",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rbx+0xa0], rax",
    "test    rax, rax",
    "je      0x140096a1c",
    "sub     rcx, 0x1",
    "mov     eax, dword [rdi+0x2]",
    "bswap   eax",
    "mov     eax, eax",
    "lea     rdi, [rdi+rax+0x6]",
    "jne     0x1400969c3",
    "lea     rdx, [rel data_1400d5ea0]",
    "lea     rcx, [rel data_1401054d8]  {u\"\\n\\t* %wZ entry? *\"}",
    "call    sub_14000c030",
    "xor     r8d, r8d",
    "mov     rcx, rbx",
    "lea     edx, [r8+0x1]",
    "call    sub_140097c10",
    "test    r14d, r14d",
    "jne     0x140096a6c",
    "mov     r8d, dword [rbx+0x98]",
    "mov     rdx, rdi",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     edx, 0x1",
    "mov     rcx, rbx",
    "call    sub_1400981f0",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140096b32",
    "test    ebp, ebp",
    "je      0x140096b32",
    "mov     rcx, rbx",
    "call    sub_140097fe0",
    "test    ebp, ebp",
    "je      0x140096ab2",
    "lea     r8, [rel data_140103e68]  {u\"kirbi\"}",
    "mov     rdx, rbx",
    "mov     ecx, r15d",
    "call    sub_140096d3c",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140096b0d",
    "lea     rcx, [rel data_1401053d8]  {u\"\\n\\t   * Injecting ticket : \"}",
    "call    sub_14000c030",
    "mov     edx, dword [rsi]",
    "mov     rcx, qword [rsi+0x8]",
    "call    sub_1400946b0",
    "test    eax, eax",
    "js      0x140096b14",
    "mov     ebp, dword [rsp+0x90]",
    "mov     r8d, dword [rsi]",
    "mov     rdx, qword [rsi+0x8]",
    "mov     rcx, rax",
    "call    sub_140009ce8",
    "test    eax, eax",
    "je      0x140096af0",
    "mov     rcx, rsi",
    "call    qword [rel Ordinal_WLDAP32_54]",
    "jmp     0x140096b32",
    "lea     rcx, [rel data_1400f9538]",
    "call    sub_14000c030",
    "jmp     0x140096b14",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_140105450]  {u\"ERROR kuhl_m_kerberos_ccache_enu\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140105410]  {u\"\\n\\t   * Saved to file %s !\"}",
    "mov     rdx, rbp",
    "call    sub_14000c030",
    "jmp     0x140096b04",
    "mov     rcx, rbp",
    "call    qword [rel LocalFree]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}