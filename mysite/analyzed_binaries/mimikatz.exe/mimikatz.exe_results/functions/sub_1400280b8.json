{
  "address": "0x1400280b8",
  "rules": [
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using HC-128/9c50649e7db346e5b98b1de875012b97",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x20",
    "mov     rdi, rcx",
    "mov     rcx, qword [rcx]",
    "call    sub_140021cc4",
    "xor     r12d, r12d",
    "cmp     eax, r12d",
    "jne     0x1400283ec",
    "mov     rbx, qword [rsp+0x60]",
    "add     rsp, 0x20",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "lea     esi, [r12+0x1]",
    "lea     r8, [rsp+0x68]",
    "xor     r9d, r9d",
    "mov     edx, esi",
    "mov     rcx, rdi",
    "call    sub_1400277d8",
    "cmp     eax, r12d",
    "jne     0x1400283ec",
    "mov     r15, qword [rsp+0x68]",
    "mov     r8, qword [rdi]",
    "mov     rbp, qword [r15+0x50]",
    "mov     edx, dword [r8+0x1c]",
    "movzx   eax, byte [rbp+0x1e]",
    "movzx   ebx, byte [rbp+0x1d]",
    "mov     dword [rsp+0x70], edx",
    "shl     ebx, 0x8",
    "or      ebx, eax",
    "movzx   eax, byte [rbp+0x1c]",
    "shl     eax, 0x18",
    "shl     ebx, 0x8",
    "or      ebx, eax",
    "movzx   eax, byte [rbp+0x1f]",
    "or      ebx, eax",
    "je      0x140028140",
    "mov     ebx, edx",
    "mov     eax, dword [rbp+0x18]",
    "cmp     eax, dword [rbp+0x5c]",
    "je      0x140028142",
    "mov     r8d, dword [rdi+0x34]",
    "mov     r9d, 0x80808081",
    "add     r8d, 0xfffffff4",
    "mov     eax, r9d",
    "mov     ecx, r8d",
    "shl     r8d, 0x5",
    "shl     ecx, 0x6",
    "mul     ecx",
    "mov     eax, r9d",
    "mov     ecx, edx",
    "mul     r8d",
    "movzx   eax, word [rdi+0x34]",
    "shr     ecx, 0x7",
    "shr     edx, 0x7",
    "sub     ax, 0x23",
    "sub     dx, 0x17",
    "sub     cx, 0x17",
    "mov     word [rdi+0x2c], ax",
    "mov     word [rdi+0x2a], dx",
    "mov     word [rdi+0x2e], dx",
    "mov     word [rdi+0x28], cx",
    "cmp     cx, 0x7f",
    "jbe     0x1400283e0",
    "mov     rdx, qword [rbp]",
    "lea     rcx, [rel __dos_header]",
    "mov     r13d, 0x1a",
    "lea     rcx, [rcx+0xd70e8]",
    "cmp     rdx, qword [rcx]",
    "jne     0x140028187",
    "mov     rax, qword [rdi+0x8]",
    "mov     ecx, dword [rax+0x30]",
    "bt      rcx, 0x19",
    "cmovb   ebx, r12d",
    "cmp     ebx, r12d",
    "jbe     0x140028389",
    "mov     byte [rdi+0x25], cl",
    "mov     byte [rdi+0x25], 0x7f",
    "jmp     0x1400283e3",
    "\ud83d\udeab\ud83d\udeabsbb     eax, eax",
    "sbb     eax, 0xffffffff",
    "mov     rdx, qword [rbp+0x8]",
    "cmp     rdx, qword [rcx+0x8]",
    "jne     0x140028187",
    "mov     qword [rdi+0x18], r15",
    "mov     dword [rdi+0x3c], ebx",
    "mov     rcx, qword [r15+0x70]",
    "mov     rbx, qword [rcx+0x28]",
    "call    sub_14001ddb0",
    "mov     rcx, rbx",
    "call    sub_140022054",
    "mov     qword [rdi+0x18], r12",
    "mov     eax, r13d",
    "jmp     0x1400283ec",
    "mov     r14d, 0x2",
    "cmp     byte [rbp+0x12], r14b",
    "jbe     0x1400281a5",
    "mov     eax, r12d",
    "jmp     0x14002818c",
    "mov     al, byte [rbp+0x13]",
    "cmp     al, r14b",
    "ja      0x14002830e",
    "or      word [rdi+0x26], si",
    "cmp     eax, r12d",
    "jne     0x14002830e",
    "jne     0x140028218",
    "mov     dl, 0x3",
    "mov     rcx, rdi",
    "call    sub_140028050",
    "test    byte [rdi+0x26], 0x20",
    "jne     0x140028218",
    "\ud83d\udeab\ud83d\udeabsbb     eax, eax",
    "sbb     eax, 0xffffffff",
    "mov     dl, byte [rbp+r14+0x15]",
    "cmp     dl, byte [rcx+r14]",
    "jne     0x140028249",
    "mov     dword [rsp+0x68], r12d",
    "cmp     byte [r8+0x10], r12b",
    "jne     0x1400281da",
    "movzx   eax, byte [rbp+0x10]",
    "movzx   esi, byte [rbp+0x11]",
    "shl     esi, 0x8",
    "or      esi, eax",
    "shl     esi, 0x8",
    "lea     eax, [rsi-0x1]",
    "test    esi, eax",
    "jne     0x14002830e",
    "mov     eax, r12d",
    "jmp     0x14002824e",
    "mov     r13d, r12d",
    "lea     rdx, [rsp+0x68]",
    "mov     rcx, r8",
    "call    sub_1400232f4",
    "mov     esi, dword [rsp+0x68]",
    "mov     r13d, eax",
    "jmp     0x1400281dd",
    "lea     eax, [rsi-0x101]",
    "cmp     eax, 0xfeff",
    "ja      0x14002830e",
    "cmp     eax, r12d",
    "jne     0x14002830e",
    "mov     dl, r14b",
    "mov     rcx, rdi",
    "call    sub_140028050",
    "cmp     esi, r12d",
    "jne     0x140028210",
    "cmp     r13d, r12d",
    "jne     0x14002830e",
    "or      word [rdi+0x26], r14w",
    "movzx   eax, byte [rbp+0x14]",
    "mov     r12d, esi",
    "sub     r12d, eax",
    "cmp     esi, dword [rdi+0x30]",
    "je      0x1400282e5",
    "mov     r13d, 0x1a",
    "jmp     0x140028222",
    "mov     rcx, qword [r15+0x70]",
    "mov     rbx, qword [rcx+0x28]",
    "call    sub_14001ddb0",
    "mov     rcx, rbx",
    "call    sub_140022054",
    "jmp     0x1400283ea",
    "mov     rax, qword [rdi+0x8]",
    "mov     ecx, dword [rax+0x30]",
    "and     ecx, 0x10000001",
    "cmp     rcx, 0x1",
    "je      0x14002832f",
    "mov     rcx, qword [r15+0x70]",
    "mov     rbx, qword [rcx+0x28]",
    "call    sub_14001ddb0",
    "mov     rcx, rbx",
    "call    sub_140022054",
    "mov     rcx, qword [rdi+0x60]",
    "mov     dword [rdi+0x34], r12d",
    "mov     dword [rdi+0x30], esi",
    "test    rcx, rcx",
    "je      0x1400282ce",
    "mov     dx, word [rbp+0x15]",
    "lea     rcx, [rel __dos_header]",
    "lea     rcx, [rcx+0xf3c64]",
    "cmp     dx, word [rcx]",
    "jne     0x140028249",
    "xor     eax, eax",
    "cmp     r12d, 0x1e0",
    "jb      0x14002830b",
    "cmp     ebx, dword [rsp+0x70]",
    "jbe     0x14002832f",
    "mov     rcx, qword [rdi]",
    "sub     esi, r12d",
    "lea     rdx, [rdi+0x30]",
    "mov     r8d, esi",
    "call    sub_140020c94",
    "jmp     0x1400283ec",
    "add     rcx, 0xfffffffffffffffc",
    "mov     qword [rdi+0x60], rcx",
    "call    sub_14001e248",
    "and     qword [rdi+0x60], 0x0",
    "xor     r12d, r12d",
    "mov     dword [rdi+0x30], esi",
    "mov     dword [rdi+0x34], r12d",
    "movzx   eax, byte [rbp+0x36]",
    "movzx   ecx, byte [rbp+0x35]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rbp+0x34]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rbp+0x37]",
    "or      ecx, eax",
    "setne   al",
    "mov     byte [rdi+0x21], al",
    "movzx   eax, byte [rbp+0x42]",
    "movzx   ecx, byte [rbp+0x41]",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rbp+0x40]",
    "shl     eax, 0x18",
    "shl     ecx, 0x8",
    "or      ecx, eax",
    "movzx   eax, byte [rbp+0x43]",
    "or      ecx, eax",
    "setne   al",
    "mov     byte [rdi+0x22], al",
    "mov     ecx, 0x10414",
    "call    sub_140084e38",
    "mov     r13d, eax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}