{
  "address": "0x140008b78",
  "rules": [
    "encrypt or decrypt via WinCrypt",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b"
  ],
  "disassembly": [
    "mov     qword [rsp+0x20], r9",
    "mov     dword [rsp+0x18], r8d",
    "mov     qword [rsp+0x10], rdx",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x78",
    "mov     ebx, dword [rcx+0x18]",
    "mov     eax, 0x8004",
    "mov     rdi, rcx",
    "xor     r12d, r12d",
    "cmp     ebx, 0x8009",
    "mov     r13d, r8d",
    "cmove   ebx, eax",
    "mov     ecx, ebx",
    "mov     dword [rsp+0x50], ebx",
    "call    sub_1400049d0",
    "mov     ecx, dword [rdi+0x1c]",
    "mov     r15d, eax",
    "call    sub_140004af4",
    "mov     ecx, dword [rdi+0x1c]",
    "mov     esi, eax",
    "call    sub_140004a60",
    "lea     ecx, [r12+0x40]",
    "lea     ebp, [rax+rsi]",
    "mov     edx, ebp",
    "call    qword [rel LocalAlloc]",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x140008e4d",
    "mov     eax, r12d",
    "add     rsp, 0x78",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rdx, qword [rsp+0xc8]",
    "mov     dword [rsp+0x40], 0x1",
    "mov     dword [rsp+0x38], ebp",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rdi+0x14]",
    "lea     r9, [rdi+0x4]",
    "mov     dword [rsp+0x28], eax",
    "mov     r8d, r13d",
    "mov     ecx, ebx",
    "mov     dword [rsp+0x20], 0x10",
    "call    sub_140003fc8",
    "test    eax, eax",
    "je      0x140008e44",
    "mov     rcx, r14",
    "call    qword [rel LocalFree]",
    "mov     ecx, dword [rdi+0x1c]",
    "lea     rax, [rsp+0x60]",
    "xor     r9d, r9d",
    "mov     qword [rsp+0x28], rax",
    "lea     rax, [rsp+0x58]",
    "mov     r8d, esi",
    "mov     rdx, r14",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140004704",
    "test    eax, eax",
    "je      0x140008e30",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400e9f90]  {u\"ERROR kull_m_dpapi_unprotect_mas\u2026\"}",
    "mov     rcx, qword [rsp+0x58]",
    "lea     r8, [r14+rsi]",
    "lea     edx, [r12+0x1]",
    "xor     r9d, r9d",
    "call    qword [rel CryptSetKeyParam]",
    "test    eax, eax",
    "je      0x140008e08",
    "mov     rcx, qword [rsp+0x58]",
    "call    qword [rel CryptDestroyKey]",
    "mov     rcx, qword [rsp+0x60]",
    "call    sub_140003d2c",
    "test    eax, eax",
    "jne     0x140008e44",
    "mov     eax, dword [rdi+0x28]",
    "lea     ecx, [r12+0x40]",
    "mov     rdx, rax",
    "mov     dword [rsp+0xc0], eax",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x140008e08",
    "call    qword [rel GetLastError]",
    "lea     rcx, [rel data_1400e9ea0]  {u\"ERROR kull_m_dpapi_unprotect_mas\u2026\"}",
    "jmp     0x140008e3d",
    "mov     r8d, dword [rsp+0xc0]",
    "mov     rdx, qword [rdi+0x20]",
    "mov     rcx, rax",
    "call    memcpy",
    "mov     rcx, qword [rsp+0x58]",
    "lea     r11, [rsp+0xc0]",
    "mov     qword [rsp+0x28], r11",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     qword [rsp+0x20], rbx",
    "call    qword [rel CryptDecrypt]",
    "test    eax, eax",
    "je      0x140008dff",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "mov     rsi, qword [rsp+0xe0]",
    "xor     eax, eax",
    "cmp     dword [rdi+0x1c], 0x6603",
    "lea     ecx, [rax+0x4]",
    "lea     edi, [r12+0x40]",
    "mov     rdx, r15",
    "cmove   eax, ecx",
    "mov     ecx, dword [rsp+0xc0]",
    "sub     ecx, eax",
    "sub     ecx, r15d",
    "sub     ecx, 0x10",
    "mov     dword [rsi], ecx",
    "mov     ecx, edi",
    "call    qword [rel LocalAlloc]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140008dff",
    "mov     r8d, dword [rsp+0xd0]",
    "mov     rdx, qword [rsp+0xc8]",
    "mov     ecx, dword [rsp+0x50]",
    "mov     dword [rsp+0x30], r15d",
    "mov     qword [rsp+0x28], rax",
    "mov     r9, rbx",
    "mov     dword [rsp+0x20], 0x10",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x140008df6",
    "mov     rcx, rbp",
    "call    qword [rel LocalFree]",
    "mov     rdx, r15",
    "mov     ecx, edi",
    "call    qword [rel LocalAlloc]",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x140008df6",
    "mov     eax, dword [rsi]",
    "mov     r9d, dword [rsp+0xc0]",
    "mov     ecx, dword [rsp+0x50]",
    "sub     r9, rax",
    "mov     dword [rsp+0x30], r15d",
    "mov     r8d, r15d",
    "add     r9, rbx",
    "mov     rdx, rbp",
    "mov     qword [rsp+0x28], rdi",
    "mov     dword [rsp+0x20], eax",
    "call    sub_140003e0c",
    "test    eax, eax",
    "je      0x140008ded",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "lea     rdx, [rbx+0x10]",
    "mov     r8, r15",
    "mov     rcx, rdi",
    "call    memcmp",
    "test    eax, eax",
    "sete    r12b",
    "test    r12d, r12d",
    "je      0x140008ded",
    "mov     edx, dword [rsi]",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rcx, qword [rsp+0xd8]",
    "mov     qword [rcx], rax",
    "test    rax, rax",
    "je      0x140008ded",
    "mov     r8d, dword [rsi]",
    "mov     edx, dword [rsp+0xc0]",
    "mov     rcx, rax",
    "sub     rdx, r8",
    "add     rdx, rbx",
    "call    memcpy"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}