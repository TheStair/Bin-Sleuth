{
  "address": "0x140034e88",
  "rules": [
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "contain loop",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "push    rdi",
    "sub     rsp, 0x20",
    "mov     ebx, dword [rcx+0xc]",
    "mov     edi, dword [rdx+0xc]",
    "mov     r9, rcx",
    "movzx   ecx, word [rdx+0x8]",
    "mov     r8d, 0x4000",
    "movzx   eax, cx",
    "or      ax, word [r9+0x8]",
    "test    r8w, ax",
    "je      0x140034f11",
    "mov     rdx, qword [rdx+0x10]",
    "mov     rcx, qword [r9+0x10]",
    "mov     eax, ebx",
    "cmp     ebx, edi",
    "cmovg   eax, edi",
    "movsxd  r8, eax",
    "call    memcmp",
    "test    eax, eax",
    "jne     0x140034f30",
    "and     cx, word [r9+0x8]",
    "test    r8w, cx",
    "je      0x140034ec5",
    "mov     rbx, qword [rsp+0x30]",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    ",
    "sub     ebx, edi",
    "xor     ecx, ecx",
    "test    word [r9+0x8], r8w",
    "je      0x140034ef0",
    "mov     eax, dword [r9]",
    "sub     eax, dword [rdx]",
    "jmp     0x140034f30",
    "test    ebx, ebx",
    "jle     0x140034f06",
    "test    edi, edi",
    "jle     0x140034ee4",
    "sub     ebx, dword [rdx]",
    "jmp     0x140034f2e",
    "mov     rax, qword [r9+0x10]",
    "mov     eax, dword [r9]",
    "sub     eax, edi",
    "jmp     0x140034f30",
    "mov     rax, qword [rdx+0x10]",
    "mov     eax, ebx",
    "mov     eax, 0x1",
    "jmp     0x140034f30",
    "inc     ecx",
    "inc     rax",
    "cmp     ecx, ebx",
    "jl      0x140034ef8",
    "or      eax, 0xffffffff",
    "jmp     0x140034f30",
    "inc     ecx",
    "inc     rax",
    "cmp     ecx, edi",
    "jl      0x140034ed6",
    "cmp     byte [rax], 0x0",
    "jne     0x140034f0a",
    "cmp     byte [rax], 0x0",
    "jne     0x140034eeb"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}