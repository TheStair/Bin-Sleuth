{
  "address": "0x1400856f4",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "get OS version",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x20",
    "mov     edi, ecx",
    "test    ecx, ecx",
    "je      0x14008575a",
    "mov     ebx, 0x30",
    "lea     r8, [rel data_14014084c]",
    "lea     rdx, [rel data_140140844]",
    "lea     rcx, [rel data_140140848]",
    "call    RtlGetNtVersionNumbers",
    "and     dword [rel data_14014084c], 0x7fff",
    "xor     edx, edx",
    "xor     ecx, ecx",
    "mov     ebx, 0x28",
    "call    qword [rel CoInitializeEx]",
    "test    eax, eax",
    "jns     0x140085753",
    "add     rbx, 0x8",
    "sub     rsi, 0x1",
    "jne     0x14008576e",
    "call    rcx",
    "test    eax, eax",
    "jns     0x1400857a9",
    "call    sub_14000143c",
    "jmp     0x14008575f",
    "lea     rcx, [rel data_1400f80d0]  {u\"ERROR mimikatz_initOrClean ; CoI\u2026\"}",
    "mov     edx, eax",
    "call    sub_14000c030",
    "mov     rax, qword [rbx]",
    "mov     rcx, qword [rax+rbp]",
    "test    rcx, rcx",
    "je      0x1400857a9",
    "test    edi, edi",
    "jne     0x1400857dc",
    "mov     r8, qword [rbx]",
    "lea     rcx, [rel data_1400f8138]  {u\"INIT\"}",
    "test    edi, edi",
    "mov     r8, qword [r8]",
    "lea     rdx, [rel data_1400f8148]  {u\"CLEAN\"}",
    "mov     r9d, eax",
    "cmovne  rdx, rcx",
    "lea     rcx, [rel data_1400f8160]  {u\">>> %s of '%s' module failed : %\u2026\"}",
    "call    sub_14000c030",
    "movsxd  rbp, ebx",
    "mov     esi, 0x19",
    "lea     rbx, [rel data_14013cf80]",
    "mov     rbx, qword [rsp+0x30]",
    "mov     rbp, qword [rsp+0x38]",
    "mov     rsi, qword [rsp+0x40]",
    "xor     eax, eax",
    "add     rsp, 0x20",
    "pop     rdi",
    "retn    ",
    "call    sub_140001544",
    "call    qword [rel CoUninitialize]",
    "mov     rcx, qword [rel data_140140250]",
    "test    rcx, rcx",
    "je      0x1400857d4",
    "and     qword [rel data_140140250], 0x0",
    "call    qword [rel fclose]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}