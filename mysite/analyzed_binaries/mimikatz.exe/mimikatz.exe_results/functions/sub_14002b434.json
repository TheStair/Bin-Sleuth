{
  "address": "0x14002b434",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "encrypt data using Curve25519/bf3cf3909d844745bc0e01f23d66c6a9",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "encrypt data using RSA via embedded library/285da8a69bb24628bf4dae1e6958a35f",
    "contain loop",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x50",
    "cmp     byte [rcx+0x2], 0x0",
    "movzx   r10d, byte [rcx+0xa]",
    "mov     r12, r9",
    "mov     r11, r8",
    "mov     rbx, rdx",
    "mov     rbp, rcx",
    "mov     r14d, 0x1",
    "je      0x14002b4d6",
    "movsxd  rdi, dword [r8+0x8]",
    "mov     r11, qword [r8]",
    "mov     r13d, edi",
    "mov     qword [rsp+0x38], r11",
    "cmp     edi, 0x80",
    "jae     0x14002b4f6",
    "mov     eax, dword [r8+0x28]",
    "mov     r13d, dword [r8+0x24]",
    "lea     edi, [r13+rax]",
    "mov     rax, qword [r8+0x10]",
    "mov     qword [rsp+0x38], rax",
    "cmp     edi, 0x80",
    "jae     0x14002b48c",
    "mov     rdx, rdi",
    "lea     rcx, [rbx+r10]",
    "cmp     rdi, 0x7f",
    "ja      0x14002b50d",
    "movsxd  rax, r10d",
    "mov     byte [rax+rdx], dil",
    "jmp     0x14002b508",
    "movsxd  rcx, r10d",
    "movsxd  rdx, edi",
    "add     rcx, rbx",
    "cmp     rdx, 0x7f",
    "ja      0x14002b4a5",
    "movsxd  rax, r10d",
    "mov     byte [rax+rdx], dil",
    "jmp     0x14002b4a0",
    "call    sub_140019c64",
    "and     dl, 0x7f",
    "mov     byte [rcx], dl",
    "mov     eax, r14d",
    "jmp     0x14002b512",
    "call    sub_140019c64",
    "and     dl, 0x7f",
    "mov     byte [rcx], dl",
    "mov     eax, r14d",
    "jmp     0x14002b4aa",
    "movzx   r8d, word [rbp+0x10]",
    "mov     r14, qword [rbp+0x48]",
    "xor     edx, edx",
    "mov     ecx, dword [r14+0x34]",
    "mov     eax, edi",
    "mov     qword [rsp+0x40], r14",
    "sub     ecx, 0x4",
    "sub     eax, r8d",
    "div     ecx",
    "add     edx, r8d",
    "cmp     edx, r9d",
    "cmovg   edx, r8d",
    "lea     ecx, [rdx+r10]",
    "movsxd  r15, ecx",
    "lea     eax, [rcx+0x4]",
    "add     r15, rbx",
    "mov     dword [r12], eax",
    "xor     r12d, r12d",
    "xor     ebx, ebx",
    "mov     dword [rsp+0x90], ebx",
    "lea     eax, [rdi+r10]",
    "mov     ecx, 0x4",
    "movsxd  rbx, r13d",
    "cmp     eax, ecx",
    "mov     r8, rbx",
    "mov     rdx, r11",
    "cmovl   eax, ecx",
    "mov     rcx, rsi",
    "mov     dword [r12], eax",
    "call    memcpy",
    "sub     edi, r13d",
    "lea     rcx, [rbx+rsi]",
    "movsxd  r8, edi",
    "xor     edx, edx",
    "call    memset",
    "jmp     0x14002b76b",
    "movzx   eax, al",
    "call    sub_140019c64",
    "and     dl, 0x7f",
    "mov     eax, r14d",
    "mov     byte [rcx], dl",
    "jmp     0x14002b4cf",
    "mov     rdx, qword [r11+0x8]",
    "movzx   eax, al",
    "add     r10d, eax",
    "movsxd  rcx, r10d",
    "add     rcx, rbx",
    "cmp     rdx, 0x7f",
    "ja      0x14002b4ca",
    "test    r13d, r13d",
    "jle     0x14002b5d9",
    "movsxd  r14, ebp",
    "jmp     0x14002b5cc",
    "xor     eax, eax",
    "movzx   r9d, word [rbp+0xe]",
    "add     r10d, eax",
    "movsxd  rsi, r10d",
    "add     rsi, rbx",
    "cmp     edi, r9d",
    "jg      0x14002b561",
    "mov     r11, qword [rsp+0x38]",
    "jmp     0x14002b515",
    "movsxd  r14, ebp",
    "xor     edx, edx",
    "mov     r8, r14",
    "call    memset",
    "mov     ebp, r13d",
    "movsxd  r14, r13d",
    "mov     rdx, r11",
    "mov     r8, r14",
    "call    memcpy",
    "jmp     0x14002b5e6",
    "test    r12, r12",
    "je      0x14002b76b",
    "mov     r11, qword [rsp+0x38]",
    "mov     edx, dword [rsp+0x98]",
    "add     rsi, r14",
    "add     r11, r14",
    "sub     r13d, ebp",
    "sub     edx, ebp",
    "mov     dword [rsp+0x98], edx",
    "mov     qword [rsp+0x38], r11",
    "jne     0x14002b5ad",
    "sub     edi, ebp",
    "test    edi, edi",
    "jle     0x14002b75c",
    "mov     rcx, qword [r12+0x70]",
    "call    sub_14002242c",
    "cmp     edi, edx",
    "mov     ebp, edi",
    "mov     rcx, rsi",
    "cmovg   ebp, edx",
    "cmp     r13d, ebp",
    "jl      0x14002b5c1",
    "mov     r14, qword [rsp+0x40]",
    "and     qword [rsp+0x48], 0x0",
    "mov     dword [rsp+0x30], ebx",
    "cmp     byte [r14+0x21], 0x0",
    "je      0x14002b663",
    "lea     r8, [rsp+0x90]",
    "lea     rdx, [rsp+0x48]",
    "mov     r9d, ebx",
    "mov     rcx, r14",
    "mov     byte [rsp+0x20], 0x0",
    "call    sub_14002a71c",
    "cmp     byte [r14+0x21], 0x0",
    "mov     rbp, qword [rsp+0x48]",
    "mov     ebx, dword [rsp+0x90]",
    "mov     esi, eax",
    "mov     dword [rsp+0x98], eax",
    "je      0x14002b6e5",
    "mov     r10, qword [rsp+0x40]",
    "mov     r14d, 0x1",
    "test    esi, esi",
    "jne     0x14002b749",
    "test    eax, eax",
    "jne     0x14002b749",
    "add     ebx, r14d",
    "mov     rcx, r10",
    "mov     edx, ebx",
    "call    sub_1400264c0",
    "cmp     eax, ebx",
    "je      0x14002b636",
    "xor     edx, edx",
    "mov     eax, 0x40000000",
    "div     dword [r10+0x30]",
    "add     eax, r14d",
    "cmp     ebx, eax",
    "je      0x14002b636",
    "test    r12, r12",
    "je      0x14002b758",
    "mov     eax, ebx",
    "mov     byte [r15+0x3], bl",
    "shr     eax, 0x18",
    "mov     byte [r15], al",
    "mov     eax, ebx",
    "shr     eax, 0x10",
    "mov     byte [r15+0x1], al",
    "mov     eax, ebx",
    "shr     eax, 0x8",
    "mov     byte [r15+0x2], al",
    "test    r12, r12",
    "je      0x14002b716",
    "mov     eax, dword [rsp+0x30]",
    "lea     rcx, [rsp+0x98]",
    "mov     edx, ebx",
    "test    eax, eax",
    "mov     qword [rsp+0x20], rcx",
    "mov     r9d, eax",
    "setne   r8b",
    "mov     rcx, r14",
    "add     r8b, 0x3",
    "call    sub_14002650c",
    "mov     esi, dword [rsp+0x98]",
    "test    esi, esi",
    "je      0x14002b6e9",
    "mov     dword [rsp+0x90], ebx",
    "mov     r14, r10",
    "mov     eax, esi",
    "jmp     0x14002b76d",
    "mov     rcx, qword [r12+0x70]",
    "call    sub_14002242c",
    "mov     r15, qword [rbp+0x50]",
    "mov     r11, qword [rsp+0x38]",
    "mov     r12, rbp",
    "mov     byte [r15], 0x0",
    "mov     byte [r15+0x1], 0x0",
    "mov     byte [r15+0x2], 0x0",
    "mov     byte [r15+0x3], 0x0",
    "mov     rsi, qword [rbp+0x50]",
    "mov     edx, dword [r14+0x34]",
    "add     rsi, 0x4",
    "sub     edx, 0x4",
    "jmp     0x14002b5a6",
    "mov     rcx, qword [r12+0x70]",
    "call    sub_14002242c",
    "test    rbp, rbp",
    "je      0x14002b6e5",
    "mov     rbx, qword [rsp+0xa0]",
    "add     rsp, 0x50",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     dword [rsp+0x98], edx",
    "mov     rcx, qword [rbp+0x70]",
    "call    sub_14002242c"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}