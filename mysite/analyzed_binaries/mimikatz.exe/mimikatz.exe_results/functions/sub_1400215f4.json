{
  "address": "0x1400215f4",
  "rules": [
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "load assembly via IAssembly/08d07504566140e580f88ed84a643e72",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x18], rbx",
    "mov     qword [r11+0x10], rdx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x50",
    "xor     eax, eax",
    "xor     ebx, ebx",
    "xor     esi, esi",
    "and     qword [rsp+0x40], rbx",
    "mov     dword [rsp+0x34], eax",
    "mov     eax, dword [rsp+0xb0]",
    "not     eax",
    "xor     r14d, r14d",
    "xor     r15d, r15d",
    "and     eax, 0x1",
    "xor     ebp, ebp",
    "mov     r12, r8",
    "mov     dword [rsp+0x38], eax",
    "lea     eax, [rsi+0x58]",
    "mov     r13, rcx",
    "cmp     dword [rcx+0x4], eax",
    "mov     dword [r11+0x8], 0x1000",
    "cmovg   eax, dword [rcx+0x4]",
    "and     qword [rdx], rbx",
    "add     eax, 0x7",
    "and     eax, 0xfffffff8",
    "test    byte [rsp+0xb0], 0x2",
    "mov     dword [rsp+0x30], eax",
    "je      0x1400216a3",
    "test    r12, r12",
    "je      0x14002175a",
    "lea     eax, [rsi+0x1]",
    "mov     dword [rsp+0x34], eax",
    "test    r8, r8",
    "je      0x14002175a",
    "mov     eax, dword [r13+0x4]",
    "movsxd  r9, ebp",
    "movsxd  rdx, r15d",
    "add     eax, 0x7",
    "add     rdx, 0x83",
    "mov     qword [rsp+0x48], r9",
    "movsxd  r8, eax",
    "lea     rax, [r9+rdx*2]",
    "add     rdx, rax",
    "mov     eax, dword [rsp+0x30]",
    "and     r8, 0xfffffffffffffff8",
    "add     eax, eax",
    "add     rdx, r8",
    "movsxd  rcx, eax",
    "add     rcx, rdx",
    "call    sub_140016b70",
    "mov     r11, rax",
    "test    rax, rax",
    "jne     0x1400217b3",
    "cmp     byte [r12], sil",
    "je      0x14002175a",
    "cmp     byte [r8], bl",
    "je      0x1400216a3",
    "add     r11, 0x130",
    "mov     rdi, rax",
    "mov     qword [rax+0x118], r11",
    "add     r11, 0x48",
    "mov     qword [rax+0x48], r11",
    "mov     eax, dword [r13+0x4]",
    "add     eax, 0x7",
    "movsxd  rcx, eax",
    "movsxd  rax, dword [rsp+0x30]",
    "and     rcx, 0xfffffffffffffff8",
    "add     r11, rcx",
    "mov     qword [rdi+0x58], r11",
    "add     r11, rax",
    "mov     qword [rdi+0x50], r11",
    "add     r11, rax",
    "mov     qword [rdi+0xd0], r11",
    "test    rbx, rbx",
    "je      0x1400218c7",
    "test    rbx, rbx",
    "je      0x14002168b",
    "mov     edi, dword [r13+0x8]",
    "lea     eax, [rdi+rdi+0x2]",
    "movsxd  rcx, eax",
    "call    sub_140016870",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14002168b",
    "mov     rdx, r8",
    "xor     ecx, ecx",
    "call    sub_140016dac",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x140021695",
    "mov     ebx, dword [rsp+0xb8]",
    "xor     r15d, r15d",
    "mov     qword [rdi], r13",
    "mov     dword [rdi+0xb4], ebx",
    "cmp     r12, r15",
    "je      0x1400219a7",
    "lea     eax, [rbp+r15+0x1]",
    "movsxd  r8, r15d",
    "mov     rdx, rbx",
    "movsxd  rcx, eax",
    "add     rcx, r11",
    "mov     qword [rdi+0xd8], rcx",
    "mov     rcx, r11",
    "call    memcpy",
    "test    ebp, ebp",
    "je      0x140021841",
    "mov     eax, 0x7",
    "jmp     0x140021b1d",
    "mov     rcx, rbx",
    "call    sub_140016950",
    "jmp     0x14002168b",
    "lea     r8d, [rdi+0x1]",
    "mov     r9, rax",
    "mov     rdx, r12",
    "mov     rcx, r13",
    "mov     byte [rax], sil",
    "call    qword [r13+0x40]",
    "mov     rcx, rbx",
    "mov     esi, eax",
    "call    sub_140019074",
    "mov     rcx, r12",
    "mov     r15d, eax",
    "call    sub_140019074",
    "inc     eax",
    "movsxd  rdi, eax",
    "add     rdi, r12",
    "mov     qword [rsp+0x40], rdi",
    "mov     rbp, rdi",
    "cmp     byte [rdi], r14b",
    "je      0x140021730",
    "mov     rcx, rax",
    "call    sub_140019074",
    "xor     r12d, r12d",
    "mov     r15d, eax",
    "mov     r14d, 0x1",
    "mov     ebp, ebx",
    "mov     byte [rdi+0x15], 0x4",
    "mov     byte [rdi+0x14], r14b",
    "mov     byte [rdi+0x11], r14b",
    "and     ebp, r14d",
    "cmp     byte [r12], r15b",
    "je      0x1400219a7",
    "mov     rcx, qword [rdi+0xd8]",
    "movsxd  rbp, r15d",
    "mov     rdx, rbx",
    "mov     r8, rbp",
    "call    memcpy",
    "mov     r11, qword [rdi+0xd8]",
    "lea     rcx, [rel __dos_header]",
    "mov     rax, qword [rcx+0xf3be0]",
    "mov     r8, rbp",
    "mov     rdx, rbx",
    "mov     qword [r11+rbp], rax",
    "movzx   eax, word [rcx+0xf3be8]",
    "mov     word [r11+rbp+0x8], ax",
    "lea     eax, [r15+0x9]",
    "movsxd  rcx, eax",
    "add     rcx, qword [rdi+0xd8]",
    "mov     qword [rdi+0x128], rcx",
    "call    memcpy",
    "mov     r11, qword [rdi+0x128]",
    "lea     rcx, [rel __dos_header]",
    "mov     eax, dword [rcx+0xf3bec]",
    "mov     dword [r11+rbp], eax",
    "mov     al, byte [rcx+0xf3bf0]",
    "mov     rcx, rbx",
    "mov     byte [r11+rbp+0x4], al",
    "call    sub_140016950",
    "mov     r8, qword [rsp+0x48]",
    "mov     rdx, qword [rsp+0x40]",
    "lea     eax, [r15+0x1]",
    "movsxd  rcx, eax",
    "add     rcx, qword [rdi+0xd0]",
    "call    memcpy",
    "mov     rbx, qword [rsp+0xa0]",
    "add     rsp, 0x50",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "sub     ebp, edi",
    "inc     ebp",
    "test    esi, esi",
    "jne     0x140021752",
    "mov     rcx, rbp",
    "call    sub_140019074",
    "inc     eax",
    "cdqe    ",
    "add     rbp, rax",
    "mov     rcx, rbp",
    "call    sub_140019074",
    "inc     eax",
    "cdqe    ",
    "add     rbp, rax",
    "cmp     byte [rbp], r14b",
    "jne     0x14002170c",
    "mov     rbx, qword [rdi+0x48]",
    "mov     rax, qword [rbx]",
    "cmp     rax, r15",
    "je      0x140021b07",
    "or      r13, 0xffffffffffffffff",
    "lea     rdx, [rsp+0x90]",
    "mov     rcx, rdi",
    "mov     r8d, r13d",
    "call    sub_140020c94",
    "mov     esi, eax",
    "cmp     eax, r15d",
    "jne     0x140021af2",
    "mov     r8, qword [rdi+0x48]",
    "mov     rdx, qword [rdi+0xd0]",
    "mov     r9d, ebx",
    "lea     rax, [rsp+0xb0]",
    "and     r9d, 0x87f7f",
    "mov     rcx, r13",
    "mov     qword [rsp+0x20], rax",
    "mov     dword [rsp+0xb0], r15d",
    "call    qword [r13+0x28]",
    "mov     ebp, dword [rsp+0xb0]",
    "mov     esi, eax",
    "and     ebp, 0x1",
    "cmp     eax, r15d",
    "jne     0x140021af2",
    "mov     rcx, rbx",
    "jmp     0x140021b16",
    "lea     eax, [r15+0x8]",
    "cmp     eax, dword [r13+0x8]",
    "jle     0x14002175a",
    "mov     rcx, qword [rdi+0x110]",
    "call    sub_14001e248",
    "mov     rcx, rdi",
    "mov     rcx, rbx",
    "call    qword [rax+0x8]",
    "mov     qword [rbx], r15",
    "mov     rbx, qword [rdi+0x118]",
    "lea     r8d, [r13+0x49]",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "call    memset",
    "mov     r12d, dword [rsp+0x34]",
    "mov     edx, dword [rsp+0x90]",
    "mov     eax, 0x88",
    "cmp     r12d, r15d",
    "lea     rcx, [rel sub_140021524]",
    "mov     dword [rbx+0x28], eax",
    "sete    al",
    "cmp     r12d, r15d",
    "mov     byte [rbx+0x2c], al",
    "mov     rax, r15",
    "mov     dword [rbx+0x24], 0x1",
    "cmove   rax, rcx",
    "mov     rcx, rbx",
    "mov     byte [rbx+0x2d], 0x2",
    "mov     qword [rbx+0x38], rdi",
    "mov     dword [rbx+0x1c], 0x64",
    "mov     dword [rbx+0x20], 0x1",
    "mov     qword [rbx+0x30], rax",
    "call    sub_14001dbcc",
    "mov     esi, eax",
    "cmp     eax, r15d",
    "jne     0x140021af2",
    "mov     rcx, qword [rdi+0x48]",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x60]",
    "mov     r13d, eax",
    "cmp     ebp, r15d",
    "jne     0x140021971",
    "call    sub_140016950",
    "mov     eax, esi",
    "mov     ecx, 0xd930",
    "call    sub_140084ea8",
    "mov     esi, eax",
    "test    eax, eax",
    "je      0x14002175a",
    "mov     ebx, dword [rsp+0x38]",
    "mov     dword [rdi+0xc0], 0x3fffffff",
    "mov     byte [rdi+0x10], r14b",
    "mov     byte [rdi+0x8], r14b",
    "mov     byte [rdi+0x16], r14b",
    "mov     byte [rdi+0x13], r12b",
    "mov     byte [rdi+0xa], bl",
    "mov     byte [rdi+0x12], bpl",
    "mov     byte [rdi+0xb], r14b",
    "cmp     r14b, r15b",
    "jne     0x140021a9e",
    "lea     rdx, [rel data_1400f3bf4]  {\"nolock\"}",
    "xor     r8d, r8d",
    "mov     rcx, r12",
    "call    sub_1400852e8",
    "bt      r13d, 0xd",
    "mov     byte [rdi+0x11], al",
    "jb      0x1400219a4",
    "mov     rcx, rdi",
    "call    sub_1400201c8",
    "mov     r11d, dword [rdi+0xb8]",
    "cmp     r11d, 0x1000",
    "jbe     0x140021971",
    "mov     eax, 0x88",
    "mov     rcx, rdi",
    "mov     qword [rdi+0xc8], r13",
    "mov     word [rdi+0xb0], ax",
    "call    sub_1400201c8",
    "cmp     ebx, r15d",
    "jne     0x140021ac4",
    "mov     byte [rdi+0xc], 0x1",
    "mov     byte [rdi+0xd], r15b",
    "mov     byte [rdi+0xe], 0x2",
    "mov     byte [rdi+0xf], 0xa",
    "or      ebx, 0x1",
    "lea     rdx, [rel data_1400f3c00]  {\"immutable\"}",
    "xor     r8d, r8d",
    "mov     rcx, r12",
    "call    sub_1400852e8",
    "cmp     eax, r15d",
    "je      0x1400219be",
    "mov     eax, 0x2000",
    "cmp     r11d, eax",
    "cmova   r11d, eax",
    "mov     dword [rsp+0x90], r11d",
    "cmp     r12d, r15d",
    "je      0x140021acd",
    "mov     byte [rdi+0x9], 0x2",
    "jmp     0x140021acd",
    "cmp     esi, r15d",
    "jne     0x140021af2",
    "lea     rax, [rel sub_140027a04]",
    "mov     rcx, rdi",
    "mov     qword [rdi+0x100], rax",
    "call    sub_14001ef34",
    "mov     rcx, qword [rsp+0x98]",
    "mov     qword [rcx], rdi",
    "xor     eax, eax",
    "jmp     0x140021b1d",
    "mov     byte [rdi+0x9], 0x4"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}