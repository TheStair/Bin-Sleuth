{
  "address": "0x1400629c8",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using chaskey/7025f739e4b341df894563ee3ec22dfd",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decompress data using aPLib/a5c76dae137d4aaa9aade786acafaa41",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x50",
    "mov     r12, qword [rsp+0x90]",
    "and     qword [rax-0x28], 0x0",
    "xor     ebx, ebx",
    "and     qword [r12], rbx",
    "mov     r13d, r9d",
    "movsxd  rbp, r8d",
    "mov     rsi, rdx",
    "mov     rdi, rcx",
    "call    sub_140019f68",
    "test    eax, eax",
    "je      0x140062b09",
    "mov     ecx, 0x1ea64",
    "call    sub_140084e70",
    "test    rsi, rsi",
    "je      0x140062b09",
    "test    ebp, ebp",
    "js      0x140062a3a",
    "mov     r9b, 0x2",
    "mov     r8d, ebp",
    "mov     rdx, rsi",
    "mov     rcx, rdi",
    "call    sub_140018f8c",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x140062ae8",
    "xor     ecx, ecx",
    "xor     eax, eax",
    "test    ebp, ebp",
    "jle     0x140062a38",
    "cmp     byte [rdi+0x61], 0x0",
    "jne     0x140062afb",
    "lea     rax, [rsp+0x40]",
    "mov     r9d, r13d",
    "or      r8d, 0xffffffff",
    "mov     qword [rsp+0x30], rax",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], r12",
    "and     qword [rsp+0x20], rbx",
    "call    sub_140062858",
    "mov     ebx, eax",
    "mov     rax, qword [rsp+0x40]",
    "test    rax, rax",
    "je      0x140062add",
    "mov     ebp, ecx",
    "cmp     byte [rax+rsi], bl",
    "jne     0x140062a2c",
    "mov     rcx, rdi",
    "call    sub_140016f38",
    "mov     ebx, eax",
    "cmp     ebx, 0xc0a",
    "je      0x140062afb",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "mov     r11, qword [rsp+0x98]",
    "test    r11, r11",
    "je      0x140062add",
    "add     rax, 0x2",
    "add     ecx, 0x2",
    "cmp     rax, rbp",
    "jl      0x140062a21",
    "cmp     byte [rax+rsi+0x1], bl",
    "je      0x140062a38",
    "lea     r11, [rsp+0x50]",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x28]",
    "mov     rsi, qword [r11+0x30]",
    "mov     rsp, r11",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "and     ebx, dword [rdi+0x54]",
    "jmp     0x140062b05",
    "sub     eax, ebp",
    "mov     rcx, rbp",
    "mov     edx, eax",
    "call    sub_140018f3c",
    "mov     rdx, rsi",
    "test    eax, eax",
    "jle     0x140062ad2",
    "mov     eax, ebx",
    "jmp     0x140062b13",
    "sub     edx, esi",
    "movsxd  rax, edx",
    "add     rax, rsi",
    "mov     qword [r11], rax",
    "mov     r8d, eax",
    "sub     r8, 0x1",
    "jne     0x140062aac",
    "add     rdx, 0x2",
    "movzx   eax, byte [rdx+0x1]",
    "movzx   ecx, byte [rdx]",
    "add     rdx, 0x2",
    "shl     eax, 0x8",
    "add     eax, ecx",
    "add     eax, 0xffff2800",
    "cmp     eax, 0x7ff",
    "ja      0x140062acc"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}