{
  "address": "0x1400210a8",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/ef08a8f7c1c64992b1a0b647e1999c0e",
    "contain loop",
    "hash data using murmur3/aeb1a4346751469b809f4261bcfbbb07/dbb00f9448c04dc1b720ac16935c1891",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/2b55bffaca6540fe805283ae15561184",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/9dc0064ea6fd4874bc7d54bf7517d572"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x30",
    "mov     eax, dword [rcx+0x2c]",
    "mov     r12d, edx",
    "mov     rbx, rcx",
    "test    eax, eax",
    "jne     0x14002128e",
    "mov     rbx, qword [rsp+0x58]",
    "mov     rbp, qword [rsp+0x60]",
    "add     rsp, 0x30",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "cmp     qword [rcx+0x120], 0x0",
    "jne     0x1400210e5",
    "cmp     byte [rbx+0xb], 0x0",
    "jne     0x140021262",
    "lea     edx, [rax+0x4]",
    "call    sub_140020db4",
    "test    eax, eax",
    "jne     0x14002128e",
    "mov     rcx, qword [rbx+0x118]",
    "mov     rax, qword [rcx]",
    "jmp     0x14002127b",
    "mov     rax, qword [rbx+0x50]",
    "cmp     qword [rax], 0x0",
    "je      0x14002125a",
    "test    rax, rax",
    "jne     0x14002126e",
    "mov     rax, qword [rbx+0x60]",
    "mov     qword [rbx+0x68], rax",
    "cmp     byte [rbx+0x9], 0x4",
    "je      0x14002125a",
    "mov     edx, 0xfff7",
    "and     word [rax+0x34], dx",
    "mov     rax, qword [rax+0x38]",
    "mov     rax, qword [rcx+0x8]",
    "mov     qword [rcx+0x10], rax",
    "mov     byte [rbx+0x14], 0x4",
    "xor     eax, eax",
    "mov     rcx, qword [rbx+0x48]",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x60]",
    "mov     ebp, eax",
    "mov     edi, eax",
    "and     ebp, 0x200",
    "jne     0x14002120e",
    "bt      edi, 0xa",
    "jb      0x140021238",
    "mov     edx, dword [rbx+0x30]",
    "mov     rcx, qword [rel data_1400d6fb8]",
    "xor     esi, esi",
    "mov     qword [rsp+0x20], rcx",
    "mov     eax, edx",
    "mov     ecx, edx",
    "shr     ecx, 0x18",
    "shr     eax, 0x8",
    "mov     byte [rsp+0x2b], dl",
    "mov     byte [rsp+0x28], cl",
    "mov     byte [rsp+0x2a], al",
    "mov     rax, qword [rbx+0x60]",
    "mov     ecx, edx",
    "shr     ecx, 0x10",
    "mov     byte [rsp+0x29], cl",
    "test    rax, rax",
    "je      0x140021170",
    "mov     rax, qword [rbx+0x60]",
    "mov     qword [rbx+0x68], rax",
    "test    r12d, r12d",
    "je      0x140021262",
    "movzx   eax, byte [rbx+0xe]",
    "xor     edx, edx",
    "lea     ecx, [rdx+0x10]",
    "cmp     al, 0x3",
    "cmove   edx, ecx",
    "mov     rcx, qword [rbx+0x50]",
    "or      edx, eax",
    "je      0x140021232",
    "mov     rcx, qword [rbx+0x50]",
    "lea     rdx, [rsp+0x50]",
    "mov     r9, rsi",
    "mov     rax, qword [rcx]",
    "mov     r8d, 0x8",
    "call    qword [rax+0x10]",
    "test    eax, eax",
    "jne     0x1400211b8",
    "mov     ecx, dword [rbx+0xb8]",
    "dec     rax",
    "cqo     ",
    "idiv    rcx",
    "lea     rsi, [rax+0x1]",
    "imul    rsi, rcx",
    "test    ebp, ebp",
    "jne     0x140021262",
    "xor     eax, eax",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x28]",
    "jmp     0x140021234",
    "cmp     eax, 0x20a",
    "jne     0x14002128e",
    "mov     rax, qword [rsp+0x50]",
    "cmp     rax, qword [rel data_1400d6fb8]",
    "jne     0x1400211c3",
    "and     dword [rbx+0x30], ebp",
    "mov     rcx, rbx",
    "call    sub_14001f258",
    "test    eax, eax",
    "je      0x140021262",
    "test    eax, eax",
    "jne     0x14002128e",
    "cmp     byte [rbx+0xc], 0x0",
    "je      0x1400211ed",
    "mov     rcx, qword [rbx+0x50]",
    "lea     rdx, [rel data_1400d3fc2]",
    "mov     r9, rsi",
    "mov     rax, qword [rcx]",
    "mov     r8d, 0x1",
    "call    qword [rax+0x18]",
    "test    eax, eax",
    "je      0x1400211c3",
    "jmp     0x14002128e",
    "mov     rcx, qword [rbx+0x50]",
    "mov     r9, qword [rbx+0x68]",
    "lea     rdx, [rsp+0x20]",
    "mov     rax, qword [rcx]",
    "mov     r8d, 0xc",
    "call    qword [rax+0x18]",
    "test    eax, eax",
    "jne     0x14002128e",
    "bt      edi, 0xa",
    "jb      0x1400211ed",
    "movzx   edx, byte [rbx+0xe]",
    "mov     rcx, qword [rbx+0x50]",
    "test    edx, edx",
    "je      0x1400211e3",
    "xor     eax, eax",
    "mov     rax, qword [rcx]",
    "call    qword [rax+0x28]",
    "jmp     0x1400211e5",
    "test    eax, eax",
    "jne     0x14002128e"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}