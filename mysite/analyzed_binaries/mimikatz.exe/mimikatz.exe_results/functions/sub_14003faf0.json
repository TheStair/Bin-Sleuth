{
  "address": "0x14003faf0",
  "rules": [
    "check for kernel debugger via shared user data structure/f02b2044f10f450f9f5b2b0d5d96cef0",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "hash data with CRC32/7620b456d97a4aaeb63e1213270df3d4",
    "hash data using aphash/53c84e7b18b64c82aa36e25c45372fcd",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using HC-128/9c50649e7db346e5b98b1de875012b97",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "sub     rsp, 0x20",
    "mov     rbx, qword [rcx+0x38]",
    "mov     rcx, qword [rdx+0x10]",
    "xor     r13d, r13d",
    "inc     rcx",
    "mov     rsi, rdx",
    "cmp     byte [rcx], 0x80",
    "jae     0x14003fb23",
    "lea     rdx, [rsp+0x40]",
    "call    sub_140019e28",
    "mov     ecx, dword [rsp+0x40]",
    "movzx   ecx, byte [rcx]",
    "jmp     0x14003fb31",
    "cmp     ecx, 0xa",
    "jle     0x14003fb54",
    "cmp     ecx, 0x7",
    "je      0x14003fb44",
    "lea     eax, [rcx-0x1]",
    "cmp     eax, 0x8",
    "ja      0x14003fb44",
    "mov     byte [rbx+0x5c], r13b",
    "test    cl, 0x1",
    "je      0x14003fb54",
    "and     byte [rbx+0x5c], 0x1",
    "jmp     0x14003fb58",
    "shr     rcx, 0x7",
    "test    rcx, rcx",
    "jne     0x14003fb6a",
    "and     byte [rbx+0x5c], 0x2",
    "jmp     0x14003fb58",
    "movsxd  rax, dword [rsi+0xc]",
    "mov     edx, 0x1",
    "lea     r12d, [rax+0x10]",
    "mov     rcx, rax",
    "jmp     0x14003fb6c",
    "inc     edx",
    "mov     ecx, dword [rbx+0x4]",
    "lea     edi, [rdx+rax]",
    "test    ecx, ecx",
    "je      0x14003fbbc",
    "add     dword [rbx+0x48], edi",
    "cmp     edi, dword [rbx+0x8]",
    "jle     0x14003fbc7",
    "cmp     qword [rbx+0x40], r13",
    "je      0x14003fb95",
    "cmp     qword [rbx+0x40], 0x0",
    "je      0x14003fc6c",
    "mov     dword [rbx+0x8], edi",
    "mov     eax, dword [rbx+0x48]",
    "cmp     eax, ecx",
    "jg      0x14003fba9",
    "mov     eax, dword [rbx+0x50]",
    "test    eax, eax",
    "je      0x14003fbbc",
    "movsxd  rcx, r12d",
    "call    sub_140016870",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x14003fc28",
    "mov     eax, dword [rbx+0x50]",
    "lea     ecx, [r12+rax]",
    "cmp     ecx, dword [rbx+0x54]",
    "jle     0x14003fc44",
    "mov     rcx, rbx",
    "call    sub_14003f984",
    "and     dword [rbx+0x48], 0x0",
    "and     dword [rbx+0x50], 0x0",
    "mov     r13d, eax",
    "cmp     eax, dword [rbx]",
    "jle     0x14003fbbc",
    "add     eax, r12d",
    "cmp     eax, ecx",
    "jg      0x14003fba9",
    "mov     eax, 0x7",
    "jmp     0x14003fca3",
    "mov     rax, qword [rbx+0x38]",
    "mov     qword [rdi+0x8], rax",
    "movsxd  rdi, dword [rbx+0x50]",
    "lea     eax, [r12+0x7]",
    "add     rdi, qword [rbx+0x40]",
    "and     eax, 0xfffffff8",
    "add     eax, dword [rbx+0x50]",
    "cmp     qword [rbx+0x38], 0x0",
    "mov     dword [rbx+0x50], eax",
    "je      0x14003fc84",
    "movsxd  rdi, dword [rbx+0x54]",
    "or      ebp, 0xffffffff",
    "add     rdi, rdi",
    "cmp     qword [rbx+0x38], 0x0",
    "je      0x14003fbf5",
    "cmp     dword [rel data_140140338], r13d",
    "je      0x14003fbbc",
    "jmp     0x14003fbbc",
    "mov     rbx, qword [rsp+0x48]",
    "mov     rbp, qword [rsp+0x50]",
    "mov     rsi, qword [rsp+0x58]",
    "add     rsp, 0x20",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "movsxd  r8, dword [rsi+0xc]",
    "mov     rdx, qword [rsi+0x10]",
    "lea     rcx, [rdi+0x10]",
    "call    memcpy",
    "mov     r11d, dword [rsi+0xc]",
    "mov     eax, r13d",
    "mov     dword [rdi], r11d",
    "mov     qword [rbx+0x38], rdi",
    "mov     eax, dword [rbx+0x38]",
    "sub     eax, dword [rbx+0x40]",
    "mov     dword [rdi+0x8], eax",
    "jmp     0x14003fc84",
    "movsxd  r8, ecx",
    "jmp     0x14003fbfd",
    "mov     ebp, dword [rbx+0x38]",
    "sub     ebp, dword [rbx+0x40]",
    "cmp     rdi, r8",
    "jl      0x14003fbfa",
    "add     rdi, rdi",
    "movsxd  rdx, dword [rbx+0x4]",
    "mov     rcx, qword [rbx+0x40]",
    "cmp     rdi, rdx",
    "cmovg   rdi, rdx",
    "cmp     rdi, r8",
    "cmovl   rdi, r8",
    "mov     rdx, rdi",
    "call    sub_1400169f4",
    "mov     r11, rax",
    "test    rax, rax",
    "jne     0x14003fc2f",
    "test    ebp, ebp",
    "js      0x14003fc3d",
    "mov     qword [rbx+0x40], r11",
    "mov     dword [rbx+0x54], edi",
    "movsxd  rax, ebp",
    "add     rax, r11",
    "mov     qword [rbx+0x38], rax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}