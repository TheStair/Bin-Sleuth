{
  "address": "0x1400ceab8",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "check for kernel debugger via shared user data structure/2b084810430e4f13a9526b5f4838cb62",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "compute adler32 checksum/aded99c950db4d9b8d119cbfc64de8e4"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rdx",
    "push    rbx",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "movzx   eax, word [rcx+0xa]",
    "xor     ebx, ebx",
    "mov     r15d, 0x1f",
    "mov     edi, eax",
    "and     eax, 0x8000",
    "lea     esi, [rbx+0x1]",
    "mov     dword [rsp+0x80], eax",
    "mov     eax, dword [rcx+0x6]",
    "and     edi, 0x7fff",
    "mov     dword [rsp+0x20], eax",
    "mov     eax, dword [rcx+0x2]",
    "sub     edi, 0x3fff",
    "mov     dword [rsp+0x24], eax",
    "movzx   eax, word [rcx]",
    "shl     eax, 0x10",
    "mov     dword [rsp+0x28], eax",
    "cmp     edi, 0xffffc001",
    "jne     0x1400ceb42",
    "mov     r9d, dword [rel data_140139060]",
    "lea     rcx, [rsp+0x20]",
    "mov     r11d, r15d",
    "mov     rax, qword [rcx]",
    "or      r13d, 0xffffffff",
    "mov     dword [rsp+0x90], edi",
    "mov     qword [rsp+0x30], rax",
    "mov     eax, dword [rcx+0x8]",
    "mov     r12d, ebx",
    "mov     dword [rsp+0x38], eax",
    "mov     eax, r9d",
    "cdq     ",
    "and     edx, r15d",
    "add     eax, edx",
    "mov     r10d, eax",
    "and     eax, r15d",
    "sar     r10d, 0x5",
    "sub     eax, edx",
    "movsxd  r14, r10d",
    "sub     r11d, eax",
    "mov     ecx, dword [rsp+r14*4+0x20]",
    "bt      ecx, r11d",
    "jae     0x1400cec31",
    "mov     r8d, ebx",
    "mov     rax, rbx",
    "mov     ecx, r11d",
    "mov     eax, r13d",
    "shl     eax, cl",
    "and     dword [rsp+r14*4+0x20], eax",
    "lea     eax, [r10+0x1]",
    "movsxd  rdx, eax",
    "cmp     rdx, 0x3",
    "jge     0x1400cec64",
    "mov     ecx, r11d",
    "mov     eax, r13d",
    "movsxd  r8, r10d",
    "shl     eax, cl",
    "not     eax",
    "test    dword [rsp+r8*4+0x20], eax",
    "jne     0x1400cebc5",
    "mov     qword [rsp+0x20], rbx",
    "mov     dword [rsp+0x28], ebx",
    "mov     ebx, 0x2",
    "jmp     0x1400cf067",
    "add     rax, rsi",
    "cmp     rax, 0x3",
    "jl      0x1400ceb1b",
    "cmp     r12d, ebx",
    "je      0x1400cec6b",
    "lea     rcx, [rsp+rdx*4+0x20]",
    "mov     r8d, 0x3",
    "sub     r8, rdx",
    "xor     edx, edx",
    "shl     r8, 0x2",
    "call    memset",
    "lea     eax, [r9-0x1]",
    "mov     ecx, r15d",
    "cdq     ",
    "and     edx, r15d",
    "add     eax, edx",
    "mov     r8d, eax",
    "and     eax, r15d",
    "sub     eax, edx",
    "sar     r8d, 0x5",
    "mov     edx, esi",
    "sub     ecx, eax",
    "movsxd  r9, r8d",
    "mov     eax, dword [rsp+r9*4+0x20]",
    "shl     edx, cl",
    "lea     ecx, [rax+rdx]",
    "cmp     ecx, eax",
    "jb      0x1400cebf7",
    "lea     eax, [rsi+r8]",
    "cdqe    ",
    "jmp     0x1400cebbd",
    "sub     r15d, dword [rel data_140139064]",
    "mov     cl, r15b",
    "shl     r8d, cl",
    "neg     dword [rsp+0x80]",
    "sbb     eax, eax",
    "and     eax, 0x80000000",
    "or      r8d, eax",
    "mov     eax, dword [rel data_140139068]",
    "or      r8d, dword [rsp+0x20]",
    "cmp     eax, 0x40",
    "jne     0x1400cf0a1",
    "cmp     dword [rsp+rax*4+0x20], ebx",
    "jne     0x1400ceb2f",
    "jmp     0x1400cf067",
    "mov     edx, dword [rel data_14013905c]",
    "mov     eax, edx",
    "sub     eax, dword [rel data_140139060]",
    "cmp     edi, eax",
    "jge     0x1400cec93",
    "add     edi, esi",
    "mov     r12d, esi",
    "cmp     ecx, edx",
    "jae     0x1400cebfa",
    "cmp     rax, 0x3",
    "jl      0x1400cebb4",
    "cmp     eax, 0x20",
    "jne     0x1400cf0a9",
    "mov     eax, dword [rsp+0x24]",
    "mov     dword [rdx+0x4], r8d",
    "mov     dword [rdx], eax",
    "jmp     0x1400cf0a9",
    "cmp     edi, edx",
    "jg      0x1400ceef8",
    "mov     qword [rsp+0x20], rbx",
    "mov     dword [rsp+0x28], ebx",
    "mov     r8d, ebx",
    "mov     ebx, 0x2",
    "jmp     0x1400cf05f",
    "cmp     r12d, ebx",
    "je      0x1400cec31",
    "sub     r8d, esi",
    "mov     dword [rsp+r9*4+0x20], ecx",
    "movsxd  rdx, r8d",
    "cmp     rdx, rbx",
    "jl      0x1400cec31",
    "cmp     dword [rsp+rax*4+0x20], ebx",
    "jne     0x1400cebc5",
    "jmp     0x1400cec31",
    "mov     eax, ebx",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbx",
    "retn    ",
    "mov     dword [rdx], r8d",
    "mov     eax, dword [rel data_140139064]",
    "cdq     ",
    "and     edx, r15d",
    "add     eax, edx",
    "cmp     edi, dword [rel data_140139058]",
    "jl      0x1400cefc2",
    "sub     edx, dword [rsp+0x90]",
    "lea     rax, [rsp+0x30]",
    "mov     r11d, r13d",
    "mov     rcx, qword [rax]",
    "mov     r12d, 0x20",
    "mov     r9d, ebx",
    "mov     qword [rsp+0x20], rcx",
    "mov     ecx, dword [rax+0x8]",
    "mov     eax, edx",
    "cdq     ",
    "mov     dword [rsp+0x28], ecx",
    "mov     r8, rbx",
    "and     edx, r15d",
    "add     eax, edx",
    "mov     r10d, eax",
    "and     eax, r15d",
    "sub     eax, edx",
    "sar     r10d, 0x5",
    "mov     ecx, eax",
    "mov     edi, eax",
    "shl     r11d, cl",
    "sub     r12d, eax",
    "not     r11d",
    "mov     rdx, qword [rsp+0x88]",
    "mov     eax, dword [rsp+rdx*4+0x20]",
    "mov     r12d, ebx",
    "lea     r8d, [rax+0x1]",
    "cmp     r8d, eax",
    "jb      0x1400cec24",
    "add     rax, rsi",
    "mov     r8d, dword [rel data_14013906c]",
    "btr     dword [rsp+0x20], 0x1f",
    "mov     r11d, eax",
    "and     eax, r15d",
    "add     r8d, edi",
    "mov     r12d, 0x20",
    "sub     eax, edx",
    "sar     r11d, 0x5",
    "mov     r10d, ebx",
    "mov     ecx, eax",
    "mov     edi, eax",
    "mov     r9, rbx",
    "shl     r13d, cl",
    "sub     r12d, eax",
    "not     r13d",
    "mov     r10d, eax",
    "and     eax, r15d",
    "mov     edi, 0x20",
    "sub     eax, edx",
    "mov     qword [rsp+0x20], rbx",
    "bts     dword [rsp+0x20], 0x1f",
    "mov     ecx, eax",
    "sar     r10d, 0x5",
    "mov     dword [rsp+0x28], ebx",
    "shl     r13d, cl",
    "mov     r11d, eax",
    "mov     r9d, ebx",
    "not     r13d",
    "mov     r8, rbx",
    "sub     edi, eax",
    "mov     edx, dword [rsp+r8*4+0x20]",
    "mov     ecx, edi",
    "mov     eax, edx",
    "shr     edx, cl",
    "mov     ecx, r12d",
    "or      edx, r9d",
    "and     eax, r11d",
    "mov     dword [rsp+0x90], eax",
    "mov     dword [rsp+r8*4+0x20], edx",
    "add     r8, rsi",
    "mov     r9d, dword [rsp+0x90]",
    "shl     r9d, cl",
    "cmp     r8, 0x3",
    "jl      0x1400cece6",
    "movsxd  r8, r10d",
    "lea     rdx, [rsp+0x28]",
    "mov     edi, 0x2",
    "mov     rax, r8",
    "mov     rcx, rdi",
    "shl     rax, 0x2",
    "sub     rdx, rax",
    "mov     r12d, esi",
    "cmp     r8d, esi",
    "jae     0x1400cec27",
    "mov     edx, dword [rsp+r9*4+0x20]",
    "mov     ecx, edi",
    "mov     eax, r13d",
    "and     eax, edx",
    "shr     edx, cl",
    "mov     ecx, r12d",
    "or      edx, r10d",
    "mov     dword [rsp+0x90], eax",
    "mov     r10d, dword [rsp+0x90]",
    "mov     dword [rsp+r9*4+0x20], edx",
    "add     r9, rsi",
    "shl     r10d, cl",
    "cmp     r9, 0x3",
    "jl      0x1400ceff7",
    "movsxd  rdx, r11d",
    "lea     rcx, [rsp+0x28]",
    "mov     edi, 0x2",
    "mov     rax, rdx",
    "shl     rax, 0x2",
    "sub     rcx, rax",
    "mov     edx, dword [rsp+r8*4+0x20]",
    "mov     ecx, r11d",
    "mov     eax, r13d",
    "and     eax, edx",
    "shr     edx, cl",
    "mov     ecx, edi",
    "or      edx, r9d",
    "mov     dword [rsp+0x90], eax",
    "mov     r9d, dword [rsp+0x90]",
    "mov     dword [rsp+r8*4+0x20], edx",
    "add     r8, rsi",
    "shl     r9d, cl",
    "cmp     r8, 0x3",
    "jl      0x1400cef43",
    "movsxd  rdx, r10d",
    "lea     rcx, [rsp+0x28]",
    "mov     edi, 0x2",
    "mov     rax, rdx",
    "shl     rax, 0x2",
    "sub     rcx, rax",
    "mov     dword [rsp+rcx*4+0x20], ebx",
    "mov     eax, dword [rdx]",
    "mov     dword [rsp+rcx*4+0x20], eax",
    "jmp     0x1400ced45",
    "mov     dword [rsp+rdx*4+0x20], r8d",
    "sub     rdx, rsi",
    "jns     0x1400cec0a",
    "mov     dword [rsp+rdi*4+0x20], ebx",
    "mov     eax, dword [rcx]",
    "mov     dword [rsp+rdi*4+0x20], eax",
    "jmp     0x1400cf053",
    "mov     dword [rsp+rdi*4+0x20], ebx",
    "mov     eax, dword [rcx]",
    "mov     dword [rsp+rdi*4+0x20], eax",
    "jmp     0x1400cef9f",
    "cmp     rcx, r8",
    "jl      0x1400ced41",
    "mov     r9d, dword [rel data_140139060]",
    "mov     r12d, r15d",
    "mov     eax, r9d",
    "cdq     ",
    "and     edx, r15d",
    "add     eax, edx",
    "mov     r11d, eax",
    "and     eax, r15d",
    "sar     r11d, 0x5",
    "sub     eax, edx",
    "movsxd  r14, r11d",
    "sub     r12d, eax",
    "mov     ecx, dword [rsp+r14*4+0x20]",
    "bt      ecx, r12d",
    "jae     0x1400cee20",
    "sub     rcx, rsi",
    "sub     rdx, 0x4",
    "cmp     rcx, rbx",
    "jge     0x1400ced34",
    "cmp     rdi, rdx",
    "jl      0x1400cf04f",
    "sub     rdi, rsi",
    "sub     rcx, 0x4",
    "cmp     rdi, rbx",
    "jge     0x1400cf042",
    "cmp     rdi, rdx",
    "jl      0x1400cef9b",
    "mov     ecx, dword [rel data_140139058]",
    "mov     r8d, dword [rel data_14013906c]",
    "mov     ebx, esi",
    "add     r8d, ecx",
    "jmp     0x1400cf05f",
    "sub     rdi, rsi",
    "sub     rcx, 0x4",
    "cmp     rdi, rbx",
    "jge     0x1400cef8e",
    "mov     ecx, r12d",
    "mov     eax, r13d",
    "shl     eax, cl",
    "and     dword [rsp+r14*4+0x20], eax",
    "lea     eax, [r11+0x1]",
    "movsxd  rdx, eax",
    "cmp     rdx, 0x3",
    "jge     0x1400cee53",
    "mov     ecx, r12d",
    "mov     eax, r13d",
    "movsxd  r8, r11d",
    "shl     eax, cl",
    "not     eax",
    "test    dword [rsp+r8*4+0x20], eax",
    "jne     0x1400cedb2",
    "mov     eax, dword [rel data_140139064]",
    "mov     r12d, 0x20",
    "mov     r9d, ebx",
    "inc     eax",
    "mov     r8, rbx",
    "cdq     ",
    "and     edx, r15d",
    "add     eax, edx",
    "mov     r10d, eax",
    "and     eax, r15d",
    "sub     eax, edx",
    "sar     r10d, 0x5",
    "mov     ecx, eax",
    "mov     r11d, eax",
    "shl     r13d, cl",
    "sub     r12d, eax",
    "not     r13d",
    "lea     rcx, [rsp+rdx*4+0x20]",
    "mov     r8d, 0x3",
    "sub     r8, rdx",
    "xor     edx, edx",
    "shl     r8, 0x2",
    "call    memset",
    "lea     eax, [r9-0x1]",
    "mov     ecx, r15d",
    "mov     r9d, esi",
    "cdq     ",
    "and     edx, r15d",
    "add     eax, edx",
    "mov     r8d, eax",
    "and     eax, r15d",
    "sub     eax, edx",
    "sar     r8d, 0x5",
    "sub     ecx, eax",
    "movsxd  r10, r8d",
    "mov     eax, dword [rsp+r10*4+0x20]",
    "shl     r9d, cl",
    "mov     ecx, ebx",
    "lea     edx, [rax+r9]",
    "cmp     edx, eax",
    "jb      0x1400cedea",
    "lea     eax, [rsi+r8]",
    "cdqe    ",
    "jmp     0x1400cedaa",
    "mov     edx, dword [rsp+r8*4+0x20]",
    "mov     ecx, r11d",
    "mov     eax, edx",
    "shr     edx, cl",
    "mov     ecx, r12d",
    "or      edx, r9d",
    "and     eax, r13d",
    "mov     dword [rsp+0x90], eax",
    "mov     dword [rsp+r8*4+0x20], edx",
    "add     r8, rsi",
    "mov     r9d, dword [rsp+0x90]",
    "shl     r9d, cl",
    "cmp     r8, 0x3",
    "jl      0x1400cee87",
    "movsxd  r8, r10d",
    "lea     rdx, [rsp+0x28]",
    "mov     rcx, rdi",
    "mov     rax, r8",
    "shl     rax, 0x2",
    "sub     rdx, rax",
    "mov     ecx, esi",
    "cmp     edx, r9d",
    "jae     0x1400cedec",
    "cmp     rax, 0x3",
    "jl      0x1400ceda1",
    "mov     dword [rsp+rcx*4+0x20], ebx",
    "mov     eax, dword [rdx]",
    "mov     dword [rsp+rcx*4+0x20], eax",
    "jmp     0x1400ceee2",
    "cmp     ecx, ebx",
    "je      0x1400cee20",
    "sub     r8d, esi",
    "mov     dword [rsp+r10*4+0x20], edx",
    "movsxd  rdx, r8d",
    "cmp     rdx, rbx",
    "jl      0x1400cee20",
    "cmp     dword [rsp+rax*4+0x20], ebx",
    "jne     0x1400cedb2",
    "jmp     0x1400cee20",
    "cmp     rcx, r8",
    "jl      0x1400ceede",
    "mov     r8d, ebx",
    "mov     ebx, edi",
    "jmp     0x1400cf05f",
    "sub     rcx, rsi",
    "sub     rdx, 0x4",
    "cmp     rcx, rbx",
    "jge     0x1400ceed1",
    "mov     eax, dword [rsp+rdx*4+0x20]",
    "mov     ecx, ebx",
    "lea     r8d, [rax+0x1]",
    "cmp     r8d, eax",
    "jb      0x1400cee14",
    "add     rax, rsi",
    "mov     ecx, esi",
    "cmp     r8d, esi",
    "jae     0x1400cee16",
    "mov     dword [rsp+rdx*4+0x20], r8d",
    "sub     rdx, rsi",
    "jns     0x1400cedfc"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}