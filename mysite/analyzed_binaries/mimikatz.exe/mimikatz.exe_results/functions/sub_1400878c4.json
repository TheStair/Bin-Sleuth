{
  "address": "0x1400878c4",
  "rules": [
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "open process",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x18], rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "sub     rsp, 0x80",
    "mov     edi, dword [rcx+0x50]",
    "and     qword [rax-0x78], 0x0",
    "and     qword [rax-0x70], 0x0",
    "mov     rbx, rdx",
    "mov     rbp, rcx",
    "cmp     edi, 0x4",
    "jbe     0x140087ad9",
    "lea     r11, [rsp+0x80]",
    "mov     eax, 0x1",
    "mov     rbx, qword [r11+0x28]",
    "mov     rbp, qword [r11+0x30]",
    "mov     rsp, r11",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "retn    ",
    "cmp     edi, dword [rdx+0xa4]",
    "je      0x140087ad9",
    "mov     r8d, edi",
    "xor     edx, edx",
    "mov     ecx, 0x80000000",
    "call    qword [rel OpenProcess]",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x140087ad9",
    "mov     edx, 0x10",
    "lea     ecx, [rdx+0x30]",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x28], rax",
    "test    rax, rax",
    "je      0x140087952",
    "xor     r11d, r11d",
    "lea     r8, [rsp+0x28]",
    "mov     rdx, rsi",
    "mov     ecx, 0x1",
    "call    sub_14000b584",
    "mov     r11d, eax",
    "mov     rax, qword [rsp+0x28]",
    "jmp     0x140087955",
    "mov     rcx, rsi",
    "call    qword [rel CloseHandle]",
    "lea     rdx, [rsp+0x50]",
    "xor     r8d, r8d",
    "mov     rcx, rax",
    "mov     qword [rbx], rax",
    "call    sub_14000d2f4",
    "test    eax, eax",
    "je      0x140087ac6",
    "test    r11d, r11d",
    "je      0x140087ad0",
    "mov     rcx, qword [rsp+0x28]",
    "call    sub_14000b660",
    "mov     rax, qword [rsp+0x60]",
    "lea     rdx, [rsp+0xa0]",
    "lea     rcx, [rsp+0x20]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_14000d408",
    "test    eax, eax",
    "je      0x140087ac6",
    "mov     rcx, qword [rsp+0x28]",
    "lea     r8, [rsp+0x30]",
    "lea     rdx, [rel data_1400f8a90]  {u\"rsaenh.dll\"}",
    "call    sub_14000d0e0",
    "mov     r12, qword [rsp+0xa0]",
    "test    eax, eax",
    "je      0x140087a4f",
    "cmp     dword [rel data_140140848], 0x5",
    "jbe     0x140087abd",
    "movzx   eax, word [r12+0x4]",
    "and     dword [rbx+0xa0], 0x0",
    "xor     edx, edx",
    "lea     r8d, [rdx+0x30]",
    "lea     rcx, [rbx+0xc]",
    "mov     word [rbx+0x8], ax",
    "call    memset",
    "xor     edx, edx",
    "lea     rcx, [rbx+0x40]",
    "lea     r8d, [rdx+0x60]",
    "call    memset",
    "mov     r11d, 0x8664",
    "lea     rax, [rel sub_14008755c]",
    "cmp     word [r12+0x4], r11w",
    "lea     rdx, [rel sub_1400873b0]",
    "lea     rcx, [rsp+0x30]",
    "cmove   rdx, rax",
    "mov     r8, rbx",
    "call    sub_14000d808",
    "test    eax, eax",
    "js      0x140087a4f",
    "mov     rcx, r12",
    "call    qword [rel LocalFree]",
    "cmp     dword [rel data_14014084c], 0x23f0",
    "mov     rcx, qword [rsp+0x28]",
    "lea     rax, [rel data_1400f8aa8]  {u\"bcrypt.dll\"}",
    "lea     rdx, [rel data_1400f8ac0]  {u\"bcryptprimitives.dll\"}",
    "lea     r8, [rsp+0x30]",
    "cmovb   rdx, rax",
    "call    sub_14000d0e0",
    "test    eax, eax",
    "je      0x140087abd",
    "cmp     dword [rbx+0xa0], 0x0",
    "je      0x140087a4f",
    "movzx   eax, word [r12+0x4]",
    "mov     rcx, qword [rsp+0x28]",
    "and     dword [rbx+0xa0], 0x0",
    "mov     word [rbx+0x8], ax",
    "lea     rax, [rbp+0x38]",
    "lea     rdx, [rel sub_140087734]",
    "mov     r8, rbx",
    "mov     dword [rbx+0xac], edi",
    "mov     qword [rbx+0xb0], rax",
    "call    sub_14000d14c",
    "mov     rcx, qword [rsp+0x28]",
    "lea     rax, [rbp+0x38]",
    "lea     rdx, [rel sub_140087218]",
    "mov     r8, rbx",
    "mov     qword [rbx+0xb0], rax",
    "mov     dword [rbx+0xac], edi",
    "call    sub_14000d14c"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}