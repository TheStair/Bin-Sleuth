{
  "address": "0x14000aa9c",
  "rules": [
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "encrypt data using RSA via embedded library/5013d5f9ed38420496e3af7e38d68d8f",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "enumerate PE sections/37617467c5214c6baaba4f94d0e06709/ea3c0a49a3254755ad3a849407094e90"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x20",
    "xor     r14d, r14d",
    "cmp     dword [r8], 0x32415352",
    "mov     r12d, r9d",
    "mov     rbp, r8",
    "mov     ebx, edx",
    "mov     rdi, rcx",
    "mov     r13d, r14d",
    "jne     0x14000abee",
    "cmp     rcx, r14",
    "je      0x14000ac6d",
    "mov     ebx, dword [r8+0x8]",
    "mov     rax, qword [rsp+0x70]",
    "lea     ecx, [rbx+rbx*8]",
    "shr     ecx, 0x4",
    "add     ecx, 0x14",
    "mov     dword [rax], ecx",
    "mov     edx, ecx",
    "lea     ecx, [r14+0x40]",
    "call    qword [rel LocalAlloc]",
    "mov     r12, rax",
    "mov     rax, qword [rsp+0x68]",
    "mov     qword [rax], r12",
    "cmp     r12, r14",
    "je      0x14000ac6d",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "mov     rdi, qword [rsp+0x58]",
    "mov     eax, r13d",
    "add     rsp, 0x20",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "cmp     ebx, r14d",
    "je      0x14000ac6d",
    "mov     eax, dword [rsp+0x60]",
    "mov     byte [r12], 0x7",
    "mov     byte [r12+0x1], 0x2",
    "mov     word [r12+0x2], r14w",
    "mov     dword [r12+0x4], eax",
    "mov     eax, dword [rbp]",
    "mov     dword [r12+0x8], eax",
    "mov     dword [r12+0xc], ebx",
    "mov     eax, dword [rbp+0x10]",
    "lea     rdi, [rbp+0x14]",
    "mov     dword [r12+0x10], eax",
    "mov     rsi, rbx",
    "add     r12, 0x14",
    "shr     rsi, 0x3",
    "mov     rdx, rdi",
    "mov     rcx, r12",
    "mov     r8, rsi",
    "lea     r13d, [r14+0x1]",
    "mov     rbp, rbx",
    "call    memcpy",
    "mov     eax, ebx",
    "shr     eax, 0x3",
    "add     r12, rsi",
    "shr     rbp, 0x4",
    "add     eax, 0x8",
    "mov     r8, rbp",
    "mov     rcx, r12",
    "add     rdi, rax",
    "mov     rdx, rdi",
    "call    memcpy",
    "shr     ebx, 0x4",
    "add     r12, rbp",
    "add     ebx, 0x4",
    "mov     r8, rbp",
    "mov     rcx, r12",
    "add     rdi, rbx",
    "mov     rdx, rdi",
    "call    memcpy",
    "add     r12, rbp",
    "add     rdi, rbx",
    "mov     rdx, rdi",
    "mov     rcx, r12",
    "mov     r8, rbp",
    "call    memcpy",
    "add     r12, rbp",
    "add     rdi, rbx",
    "mov     rdx, rdi",
    "mov     rcx, r12",
    "mov     r8, rbp",
    "call    memcpy",
    "add     r12, rbp",
    "add     rdi, rbx",
    "mov     rdx, rdi",
    "mov     rcx, r12",
    "mov     r8, rbp",
    "call    memcpy",
    "lea     rdx, [rbx+rdi]",
    "lea     rcx, [r12+rbp]",
    "mov     r8, rsi",
    "call    memcpy",
    "mov     r11, qword [rsp+0x78]",
    "mov     dword [r11], r13d",
    "jmp     0x14000ac6d",
    "cmp     byte [rcx], 0x7",
    "jne     0x14000ac6d",
    "cmp     byte [rcx+0x1], 0x3",
    "jne     0x14000ac6d",
    "cmp     dword [rcx+0x8], 0x34535344",
    "jne     0x14000ac6d",
    "mov     rax, qword [rsp+0x70]",
    "lea     ecx, [rbx+r12]",
    "mov     dword [rax], ecx",
    "mov     edx, ecx",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rsi, rax",
    "mov     rax, qword [rsp+0x68]",
    "mov     qword [rax], rsi",
    "cmp     rsi, r14",
    "je      0x14000ac6d",
    "mov     r8, rbx",
    "mov     rdx, rdi",
    "mov     rcx, rsi",
    "mov     r13d, 0x1",
    "call    memcpy",
    "lea     rcx, [rbx+rsi]",
    "mov     r8, r12",
    "mov     rdx, rbp",
    "call    memcpy",
    "mov     rcx, qword [rsp+0x78]",
    "mov     r11d, r12d",
    "shl     r11d, 0x3",
    "mov     dword [rcx], 0x3",
    "mov     dword [rsi+0x18], r11d"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}