{
  "address": "0x14005a74c",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211",
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rbp",
    "mov     qword [rsp+0x18], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     rdi, qword [rcx+0x88]",
    "mov     r14, qword [rcx+0x10]",
    "mov     r13, qword [rcx]",
    "mov     rbx, rcx",
    "test    rdi, rdi",
    "je      0x14005a856",
    "mov     rbx, qword [rsp+0x60]",
    "mov     rbp, qword [rsp+0x68]",
    "mov     rsi, qword [rsp+0x70]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     r15d, 0x8",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [rbx+0x1f], al",
    "mov     esi, dword [rbx+rax*4+0xbc]",
    "inc     dword [rbx+0x38]",
    "mov     esi, dword [rbx+0x38]",
    "jmp     0x14005a7b6",
    "lea     edx, [r12+0x1]",
    "lea     ecx, [r12-0x1]",
    "mov     dword [rax+0x3c], esi",
    "mov     dword [rax+0x50], esi",
    "mov     word [rax+0x4a], r15w",
    "mov     dword [rax+0x4], edx",
    "mov     dword [rax+0x20], edx",
    "mov     dword [rax+0x34], ecx",
    "mov     dword [rax+0x54], edx",
    "test    esi, esi",
    "je      0x14005a84a",
    "mov     r9d, dword [r14+0x90]",
    "lea     r8d, [r12+0x2]",
    "mov     edx, 0x37",
    "mov     rcx, r14",
    "add     r9d, 0x7",
    "mov     dword [rsp+0x20], r12d",
    "call    sub_140032364",
    "mov     r9, qword [rbp+0x18]",
    "mov     r8d, dword [rdi+0x10]",
    "mov     r9, qword [r9+0x68]",
    "xor     edx, edx",
    "mov     rcx, rbx",
    "mov     dword [rsp+0x20], 0x62",
    "call    sub_14005a1e8",
    "xor     r9d, r9d",
    "lea     r8, [rel data_1400d7578]",
    "lea     edx, [r9+0x5]",
    "mov     rcx, r14",
    "call    sub_1400328e8",
    "test    rax, rax",
    "je      0x14005a856",
    "mov     rdi, qword [rdi]",
    "test    rdi, rdi",
    "jne     0x14005a788",
    "cmp     byte [rbx+0x1f], r15b",
    "jae     0x14005a84a",
    "movsxd  rbp, dword [rdi+0x10]",
    "mov     al, byte [rbx+0x1f]",
    "mov     r12d, dword [rdi+0x14]",
    "shl     rbp, 0x5",
    "add     rbp, qword [r13+0x20]",
    "test    al, al",
    "jne     0x14005a7a7",
    "movzx   eax, byte [rbx+0x1f]",
    "mov     dword [rbx+rax*4+0xbc], esi",
    "inc     byte [rbx+0x1f]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}