{
  "address": "0x14005de80",
  "rules": [
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x18], r8",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "mov     rbp, qword [rcx]",
    "mov     r13, rdx",
    "mov     rdi, rcx",
    "xor     edx, edx",
    "mov     rcx, r13",
    "mov     rsi, r9",
    "mov     qword [rax+0x8], rdx",
    "mov     qword [rsp+0x98], rdx",
    "call    sub_140019074",
    "add     eax, 0x12c",
    "movsxd  r15, eax",
    "cmp     r9, rdx",
    "je      0x14005decc",
    "mov     eax, dword [rdi+0x30]",
    "bt      rax, 0x10",
    "jb      0x14005def4",
    "mov     qword [r9], rdx",
    "cmp     r8, rdx",
    "lea     r12, [rel data_1400f6308]  {\"sqlite3_extension_init\"}",
    "mov     rcx, rbp",
    "mov     rdx, r13",
    "cmovne  r12, r8",
    "call    qword [rbp+0x48]",
    "lea     rbx, [rel data_14013ddd8]",
    "mov     qword [rsp+0x30], 0x8",
    "mov     r14, rax",
    "cmp     r9, rdx",
    "je      0x14005deea",
    "mov     r8, r12",
    "mov     rdx, r14",
    "mov     rcx, rbp",
    "call    qword [rbp+0x58]",
    "mov     ebx, 0x1",
    "mov     qword [rsp+0x38], rax",
    "test    rax, rax",
    "jne     0x14005e16f",
    "mov     r8, qword [rbx]",
    "lea     rcx, [rel data_1400f5748]  {\"%s.%s\"}",
    "mov     rdx, r13",
    "call    sub_14001874c",
    "mov     qword [rsp+0x38], rax",
    "test    rax, rax",
    "je      0x14005dfbf",
    "mov     eax, 0x1",
    "jmp     0x14005e249",
    "lea     rcx, [rel data_1400f5778]  {\"not authorized\"}",
    "call    sub_14001874c",
    "mov     qword [rsi], rax",
    "mov     rcx, qword [rsp+0x98]",
    "call    sub_140016950",
    "lea     r8, [rel data_1400d7590]",
    "lea     rdx, [rsp+0x80]",
    "mov     rcx, rdi",
    "call    qword [rsp+0x38]",
    "test    eax, eax",
    "je      0x14005e1d7",
    "cmp     qword [rsp+0x90], rax",
    "jne     0x14005e100",
    "mov     eax, 0x7",
    "jmp     0x14005e249",
    "mov     rdx, rax",
    "mov     rcx, rbp",
    "call    qword [rbp+0x48]",
    "mov     rcx, qword [rsp+0x38]",
    "mov     r14, rax",
    "call    sub_140016950",
    "lea     rax, [rel data_14013dde0]",
    "add     rbx, 0x8",
    "cmp     rbx, rax",
    "jl      0x14005df1e",
    "mov     rbx, qword [rsp+0x88]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     eax, dword [rdi+0xdc]",
    "mov     rcx, rdi",
    "add     eax, ebx",
    "movsxd  rdx, eax",
    "shl     rdx, 0x3",
    "call    sub_140016ba8",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x14005dfbf",
    "cmp     eax, 0x100",
    "je      0x14005e247",
    "test    rsi, rsi",
    "je      0x14005e157",
    "mov     rcx, r13",
    "call    sub_140019074",
    "mov     r12d, eax",
    "add     eax, 0x1e",
    "movsxd  rcx, eax",
    "call    sub_1400168d8",
    "mov     qword [rsp+0x98], rax",
    "test    rax, rax",
    "jne     0x14005e021",
    "test    r14, r14",
    "jne     0x14005dfc9",
    "test    r14, r14",
    "jne     0x14005dfc9",
    "movsxd  rax, dword [rdi+0xdc]",
    "test    eax, eax",
    "jle     0x14005e21b",
    "xor     eax, eax",
    "test    rsi, rsi",
    "je      0x14005e1bd",
    "mov     rdx, r14",
    "mov     rcx, rbp",
    "call    qword [rbp+0x60]",
    "mov     rcx, qword [rsp+0x98]",
    "call    sub_140016950",
    "jmp     0x14005e1d3",
    "mov     rcx, r12",
    "call    sub_140019074",
    "movsxd  rcx, eax",
    "add     r15, rcx",
    "mov     rcx, r15",
    "call    sub_1400168d8",
    "mov     qword [rsp+0x80], rax",
    "mov     qword [rsi], rax",
    "test    rax, rax",
    "je      0x14005e157",
    "mov     rcx, 0x5f336574696c7173",
    "dec     r12d",
    "mov     qword [rax], rcx",
    "movsxd  rax, r12d",
    "js      0x14005e045",
    "lea     ebx, [rax+0x7]",
    "jmp     0x14005e1ca",
    "test    rsi, rsi",
    "je      0x14005deea",
    "mov     rdx, qword [rdi+0xe0]",
    "test    rdx, rdx",
    "je      0x14005e22f",
    "mov     rdx, qword [rdi+0xe0]",
    "mov     r8, rax",
    "mov     rcx, rsi",
    "shl     r8, 0x3",
    "call    memcpy",
    "mov     rcx, qword [rsp+0x80]",
    "call    sub_140016950",
    "mov     rdx, qword [rsp+0x80]",
    "lea     rcx, [rel data_1400f6380]  {\"error during initialization: %s\"}",
    "call    sub_14001874c",
    "mov     qword [rsi], rax",
    "mov     eax, ebx",
    "jmp     0x14005e249",
    "lea     r8, [rel data_1400f6350]  {\"no entry point [%s] in shared li\u2026\"}",
    "mov     r9, r12",
    "mov     rdx, rax",
    "mov     ecx, r15d",
    "mov     qword [rsp+0x20], r13",
    "call    _fprintf_p_l",
    "mov     r8, qword [rsp+0x80]",
    "lea     edx, [r15-0x1]",
    "mov     rcx, rbp",
    "call    qword [rbp+0x50]",
    "add     r12d, ebx",
    "lea     rdx, [rel data_1400f6344]",
    "mov     r8d, 0x3",
    "movsxd  rcx, r12d",
    "add     rcx, r13",
    "call    sub_1400192e8",
    "test    eax, eax",
    "jne     0x14005e068",
    "cmp     byte [rax+r13], 0x2f",
    "je      0x14005e045",
    "mov     rdx, r14",
    "mov     rcx, rbp",
    "call    qword [rbp+0x60]",
    "mov     rcx, r15",
    "call    sub_1400168d8",
    "mov     qword [rsp+0x80], rax",
    "mov     qword [rsi], rax",
    "test    rax, rax",
    "je      0x14005deea",
    "movsxd  rax, dword [rdi+0xdc]",
    "mov     qword [rdi+0xe0], rsi",
    "mov     qword [rsi+rax*8], r14",
    "add     dword [rdi+0xdc], ebx",
    "mov     rcx, rdi",
    "call    sub_1400169a8",
    "movsxd  rax, r12d",
    "lea     r10, [rel __dos_header]",
    "movsx   ecx, byte [rax+r13]",
    "test    ecx, ecx",
    "je      0x14005e0c3",
    "add     r12d, 0x3",
    "sub     r12d, ebx",
    "sub     rax, rbx",
    "jns     0x14005e036",
    "lea     r8, [rel data_1400f6320]  {\"unable to open shared library [%\u2026\"}",
    "mov     r9, r13",
    "mov     rdx, rax",
    "mov     ecx, r15d",
    "call    _fprintf_p_l",
    "mov     r8, qword [rsp+0x80]",
    "lea     edx, [r15-0x1]",
    "mov     rcx, rbp",
    "call    qword [rbp+0x50]",
    "jmp     0x14005deea",
    "mov     rdx, qword [rsp+0x98]",
    "mov     eax, dword [r10+0xf6348]",
    "movsxd  rcx, dword [rsp+0x30]",
    "mov     dword [rcx+rdx], eax",
    "movzx   eax, word [r10+0xf634c]",
    "mov     r12, rdx",
    "mov     word [rcx+rdx+0x4], ax",
    "mov     r8, rdx",
    "mov     rdx, r14",
    "mov     rcx, rbp",
    "call    qword [rbp+0x58]",
    "mov     qword [rsp+0x38], rax",
    "test    rax, rax",
    "jne     0x14005e16f",
    "mov     r9, qword [rsp+0x98]",
    "lea     r8, [rax+r13]",
    "mov     edx, 0x8",
    "add     r9, 0x8",
    "mov     qword [rsp+0x30], rdx",
    "movzx   eax, cl",
    "test    byte [rax+r10+0xd6500], 0x2",
    "je      0x14005e0b3",
    "add     r8, rbx",
    "movsx   ecx, byte [r8]",
    "test    ecx, ecx",
    "jne     0x14005e090",
    "mov     al, byte [rcx+r10+0xd6400]",
    "add     edx, ebx",
    "mov     byte [r9], al",
    "add     r9, rbx",
    "cmp     ecx, 0x2e",
    "je      0x14005e0be"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}