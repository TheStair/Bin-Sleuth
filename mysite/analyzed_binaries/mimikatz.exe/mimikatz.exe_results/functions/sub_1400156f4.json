{
  "address": "0x1400156f4",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x18], rbp",
    "mov     qword [rax+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x70",
    "movaps  xmmword [rax-0x38], xmm6",
    "movaps  xmmword [rax-0x48], xmm7",
    "movzx   eax, byte [rdx]",
    "lea     r14, [rel __dos_header]",
    "mov     r15d, 0x1",
    "mov     rdi, r9",
    "mov     cl, byte [rax+r14+0xd6400]",
    "mov     rbp, rdx",
    "mov     r12d, r15d",
    "cmp     cl, 0x2b",
    "je      0x140015998",
    "lea     r13, [rdx+0x1]",
    "xor     esi, esi",
    "mov     ebx, r15d",
    "mov     al, byte [r13]",
    "cmp     al, sil",
    "je      0x1400159cb",
    "cmp     cl, 0x2d",
    "je      0x140015998",
    "lea     rdx, [rsp+0xa8]",
    "mov     r9b, r15b",
    "mov     r8d, ebx",
    "mov     rcx, rbp",
    "call    sub_140019354",
    "cmp     eax, esi",
    "jle     0x140015c0b",
    "mov     rcx, r13",
    "cmp     cl, 0x2f",
    "jbe     0x140015c0b",
    "movaps  xmm6, xmmword [rsp+0x60]",
    "movaps  xmm7, xmmword [rsp+0x50]",
    "lea     r11, [rsp+0x70]",
    "mov     eax, r12d",
    "mov     rbx, qword [r11+0x30]",
    "mov     rbp, qword [r11+0x40]",
    "mov     rsi, qword [r11+0x48]",
    "mov     rsp, r11",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "movsxd  rbx, ebx",
    "add     rbx, rbp",
    "cmp     byte [rbx], 0x3a",
    "jne     0x140015a88",
    "movzx   eax, al",
    "test    byte [rax+r14+0xd6500], r15b",
    "jne     0x1400159cb",
    "cmp     cl, 0x39",
    "jbe     0x140015998",
    "movzx   eax, byte [rbx]",
    "test    byte [rax+r14+0xd6500], r15b",
    "jne     0x140015a85",
    "movzx   eax, byte [rbp]",
    "mov     rbx, rbp",
    "lea     rcx, [rsp+0x20]",
    "test    byte [rax+r14+0xd6500], 0x4",
    "cmove   rbx, r13",
    "xor     edx, edx",
    "lea     r8d, [rdx+0x30]",
    "call    memset",
    "lea     rdx, [rsp+0x20]",
    "mov     rcx, rbx",
    "call    sub_14001503c",
    "cmp     eax, esi",
    "jne     0x140015c0b",
    "add     rcx, r15",
    "add     ebx, r15d",
    "mov     al, byte [rcx]",
    "cmp     al, sil",
    "jne     0x1400159ad",
    "cmp     cl, 0x73",
    "je      0x1400158e5",
    "add     rbx, r15",
    "mov     rcx, rbx",
    "call    sub_140019074",
    "movsxd  rbp, eax",
    "lea     ecx, [rbp-0x3]",
    "cmp     ecx, 0x7",
    "ja      0x140015c0b",
    "lea     rcx, [rsp+0x20]",
    "call    sub_140015164",
    "mov     rbx, qword [rsp+0x20]",
    "mov     rax, 0x9c94578a02cc2379",
    "sub     rbx, 0x2932e00",
    "imul    rbx",
    "sar     rdx, 0x19",
    "mov     rax, rdx",
    "shr     rax, 0x3f",
    "add     rdx, rax",
    "imul    rdx, rdx, 0x5265c00",
    "add     rbx, rdx",
    "cmp     byte [rbp], 0x2d",
    "jne     0x140015a75",
    "cmp     al, 0x3a",
    "je      0x1400159cb",
    "lea     rdx, [rel data_1400f3798]  {\"start of \"}",
    "mov     r8d, 0x9",
    "mov     rcx, rbp",
    "call    sub_1400192e8",
    "xor     esi, esi",
    "cmp     eax, esi",
    "jne     0x140015c0b",
    "cmp     cl, 0x75",
    "je      0x14001587c",
    "movzx   ecx, byte [rbp+rbx-0x1]",
    "cmp     byte [rcx+r14+0xd6400], 0x73",
    "jne     0x140015abf",
    "mov     rcx, rdi",
    "call    sub_140015164",
    "add     qword [rdi], rbx",
    "jmp     0x140015bfc",
    "neg     rbx",
    "cmp     byte [rdi+0x28], sil",
    "jne     0x14001591a",
    "lea     rdx, [rel data_1400f3778]  {\"unixepoch\"}",
    "mov     rcx, rbp",
    "call    sub_1400192b0",
    "xor     esi, esi",
    "cmp     eax, esi",
    "jne     0x140015c0b",
    "cmp     cl, 0x77",
    "jne     0x140015c0b",
    "mov     rcx, rdi",
    "call    sub_140015164",
    "movsd   xmm6, qword [rsp+0xa8]",
    "comisd  xmm6, qword [rel data_1401300f0]",
    "jae     0x140015ae4",
    "sub     ebp, r15d",
    "mov     r12d, esi",
    "mov     rcx, rdi",
    "add     rbp, 0x9",
    "call    sub_1400154dc",
    "mov     byte [rdi+0x2b], r15b",
    "mov     dword [rdi+0x18], esi",
    "mov     dword [rdi+0x14], esi",
    "mov     qword [rdi+0x20], rsi",
    "mov     byte [rdi+0x29], sil",
    "mov     byte [rdi+0x2c], sil",
    "mov     byte [rdi+0x28], sil",
    "cmp     rbp, rsi",
    "je      0x140015c0b",
    "cmp     byte [rdi+0x2a], sil",
    "jne     0x14001591a",
    "cmp     byte [rdi+0x29], sil",
    "je      0x140015c0b",
    "lea     r8d, [r15+0x7]",
    "lea     rdx, [rel data_1400f3788]  {\"weekday \"}",
    "mov     rcx, rbp",
    "call    sub_1400192e8",
    "xor     esi, esi",
    "cmp     eax, esi",
    "jne     0x140015c0b",
    "movsd   xmm7, qword [rel data_140130110]",
    "movsd   xmm7, qword [rel data_1401301c0]",
    "jmp     0x140015aec",
    "lea     rdx, [rel data_1400f3594]  {\"month\"}",
    "mov     rcx, rbp",
    "call    sub_1400192b0",
    "cmp     eax, esi",
    "je      0x140015973",
    "cmp     byte [rdi+0x2b], sil",
    "je      0x140015c0b",
    "movsd   xmm0, qword [rdi+0x20]",
    "mulsd   xmm0, qword [rel data_1401301d8]",
    "addsd   xmm0, qword [rel data_1401301d0]",
    "comisd  xmm0, qword [rel data_1401300f0]",
    "jb      0x140015c0b",
    "lea     rcx, [rbp+0x8]",
    "call    sub_140019074",
    "lea     rdx, [rsp+0xa8]",
    "lea     rcx, [rbp+0x8]",
    "mov     r8d, eax",
    "mov     r9b, r15b",
    "call    sub_140019354",
    "cmp     eax, esi",
    "jle     0x140015c0b",
    "lea     rax, [rel data_1400d67b0]",
    "add     r13, 0x20",
    "add     r14d, r15d",
    "cmp     r13, rax",
    "jge     0x140015bff",
    "mov     rcx, qword [r13-0x8]",
    "mov     r8d, ebp",
    "mov     rdx, rbx",
    "call    sub_1400192e8",
    "cmp     eax, esi",
    "jne     0x140015b2e",
    "mov     r14d, esi",
    "lea     r13, [rel data_1400d66f0]",
    "mov     dword [rdi+0x10], r15d",
    "jmp     0x140015990",
    "lea     rdx, [rel data_1400f358c]  {\"year\"}",
    "mov     rcx, rbp",
    "call    sub_1400192b0",
    "cmp     eax, esi",
    "jne     0x140015979",
    "comisd  xmm0, qword [rel data_1401301c8]",
    "jae     0x140015c0b",
    "movsd   xmm1, qword [rsp+0xa8]",
    "cvttsd2si ebx, xmm1",
    "movd    xmm0, ebx",
    "cvtdq2pd xmm0, xmm0",
    "ucomisd xmm0, xmm1",
    "jne     0x140015c0b",
    "mov     byte [rdi+0x2c], sil",
    "mov     byte [rdi+0x2b], sil",
    "mov     byte [rdi+0x2a], sil",
    "jmp     0x140015af6",
    "movsd   xmm0, qword [r13]",
    "xorpd   xmm0, xmmword [rel data_1401300c0]",
    "comisd  xmm6, xmm0",
    "jbe     0x140015b2e",
    "mov     r12d, esi",
    "jmp     0x140015c0b",
    "lea     rdx, [rel data_1400f359c]",
    "mov     rcx, rbp",
    "call    sub_1400192b0",
    "cmp     eax, esi",
    "jne     0x140015c0b",
    "mov     dword [rdi+0xc], r15d",
    "cvttsd2si rax, xmm0",
    "mov     byte [rdi+0x28], r15b",
    "mov     byte [rdi+0x29], sil",
    "mov     qword [rdi], rax",
    "jmp     0x140015bfc",
    "cmp     ebx, esi",
    "jl      0x140015c0b",
    "movzx   eax, byte [r13-0xf]",
    "cmp     eax, ebp",
    "jne     0x140015b2e",
    "comisd  xmm6, qword [r13]",
    "jb      0x140015b47",
    "comisd  xmm1, qword [rel data_1401301e0]",
    "jae     0x140015c0b",
    "movsxd  rbx, r14d",
    "lea     rbp, [rel __dos_header]",
    "shl     rbx, 0x5",
    "movzx   ecx, byte [rbx+rbp+0xd66e0]",
    "sub     ecx, r15d",
    "je      0x140015b84",
    "mov     rcx, rdi",
    "call    sub_1400154dc",
    "mov     rcx, rdi",
    "call    sub_140015634",
    "mov     rcx, rdi",
    "mov     byte [rdi+0x2c], sil",
    "mov     byte [rdi+0x28], sil",
    "call    sub_140015164",
    "mov     r11, qword [rdi]",
    "lea     rcx, [r11+0x7b98a00]",
    "mov     rax, 0x636ba875fd33dc87",
    "imul    rcx",
    "mov     rcx, rdx",
    "sar     rcx, 0x19",
    "mov     rax, rcx",
    "shr     rax, 0x3f",
    "add     rcx, rax",
    "mov     rax, 0x4924924924924925",
    "imul    rcx",
    "sar     rdx, 0x1",
    "mov     rax, rdx",
    "shr     rax, 0x3f",
    "add     rdx, rax",
    "movsxd  rax, ebx",
    "imul    rdx, rdx, 0x7",
    "sub     rcx, rdx",
    "cmp     rcx, rax",
    "jle     0x140015867",
    "mov     rcx, rdi",
    "call    sub_1400154dc",
    "mov     rcx, rdi",
    "call    sub_140015634",
    "mov     eax, 0x2aaaaaab",
    "cvttsd2si r9d, xmm6",
    "add     dword [rdi+0xc], r9d",
    "mov     r8d, dword [rdi+0xc]",
    "cmp     r8d, esi",
    "lea     ecx, [r8-0x1]",
    "jg      0x140015bb3",
    "cmp     ecx, r15d",
    "jne     0x140015bdf",
    "sub     rax, rcx",
    "imul    rax, rax, 0x5265c00",
    "add     rax, r11",
    "mov     qword [rdi], rax",
    "jmp     0x140015bfc",
    "sub     rcx, 0x7",
    "imul    ecx",
    "movd    xmm0, r9d",
    "sar     edx, 0x1",
    "mov     eax, edx",
    "shr     eax, 0x1f",
    "add     edx, eax",
    "add     dword [rdi+0x8], edx",
    "lea     eax, [rdx+rdx*2]",
    "shl     eax, 0x2",
    "sub     r8d, eax",
    "mov     dword [rdi+0xc], r8d",
    "lea     ecx, [r8-0xc]",
    "mov     rcx, rdi",
    "call    sub_140015164",
    "mulsd   xmm6, qword [rbx+rbp+0xd66f8]",
    "addsd   xmm6, xmm7",
    "cvttsd2si rax, xmm6",
    "add     qword [rdi], rax",
    "mov     rcx, rdi",
    "call    sub_1400154dc",
    "mov     rcx, rdi",
    "call    sub_140015634",
    "cvttsd2si eax, xmm6",
    "add     dword [rdi+0x8], eax",
    "movd    xmm0, eax",
    "jmp     0x140015bd3",
    "cvtdq2pd xmm0, xmm0",
    "mov     byte [rdi+0x28], sil",
    "subsd   xmm6, xmm0"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}