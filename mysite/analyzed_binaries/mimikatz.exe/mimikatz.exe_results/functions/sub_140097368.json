{
  "address": "0x140097368",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x10], rbx",
    "mov     qword [r11+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x80",
    "xor     ebx, ebx",
    "xor     eax, eax",
    "lea     rdx, [r11-0x48]",
    "mov     ecx, r9d",
    "mov     dword [rsp+0x60], r9d",
    "mov     dword [rsp+0x40], 0x48",
    "lea     r15d, [rbx+0x4]",
    "mov     dword [rsp+0x44], ebx",
    "mov     qword [r11-0x50], rbx",
    "mov     rsi, rbx",
    "mov     qword [r11-0x60], rbx",
    "mov     word [rsp+0x55], ax",
    "mov     byte [rsp+0x57], al",
    "mov     dword [rsp+0x30], ebx",
    "mov     dword [rsp+0x38], ebx",
    "mov     r12d, ebx",
    "mov     dword [rsp+0x34], ebx",
    "mov     dword [rsp+0xd8], ebx",
    "call    CDLocateCheckSum",
    "cmp     eax, ebx",
    "jl      0x1400976a3",
    "mov     eax, dword [rsp+0x44]",
    "mov     rbx, qword [rsp+0xc8]",
    "add     rsp, 0x80",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rax, qword [rsp+0x70]",
    "lea     edi, [rbx+0x8]",
    "mov     r14d, dword [rax+0x4]",
    "add     r14d, r15d",
    "mov     ecx, r14d",
    "and     ecx, 0x7",
    "je      0x1400973f9",
    "mov     eax, ebx",
    "mov     eax, edi",
    "sub     eax, ecx",
    "jmp     0x1400973fb",
    "mov     rax, qword [rsp+0xc0]",
    "mov     qword [rsp+0x48], rax",
    "mov     r13, qword [rax+0x38]",
    "mov     rcx, r13",
    "call    qword [rel lstrlenW]",
    "mov     ecx, 0x40",
    "mov     ebx, eax",
    "add     ebx, ebx",
    "lea     eax, [rbx+0xa]",
    "mov     edx, eax",
    "mov     dword [rsp+0x50], eax",
    "call    qword [rel LocalAlloc]",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x1400974ba",
    "mov     edx, dword [rsp+0x30]",
    "mov     ecx, edx",
    "and     ecx, 0x7",
    "je      0x140097441",
    "lea     rcx, [rel sub_140012574]",
    "add     eax, r14d",
    "lea     r9, [rel sub_14001259c]",
    "mov     qword [rsp+0x20], rcx",
    "lea     r8, [rsp+0x30]",
    "lea     rdx, [rsp+0x68]",
    "lea     rcx, [rsp+0xc0]",
    "mov     dword [rsp+0x3c], eax",
    "call    sub_140010b04",
    "cmp     eax, ebx",
    "je      0x140097449",
    "mov     ebx, dword [rsp+0xd8]",
    "mov     rcx, qword [rsp+0x48]",
    "mov     r8d, ebx",
    "mov     rdx, r13",
    "mov     rcx, qword [rcx]",
    "mov     qword [rax], rcx",
    "lea     rcx, [rax+0xa]",
    "mov     word [rax+0x8], bx",
    "call    memcpy",
    "lea     r11d, [rbx+0xa]",
    "and     r11d, 0x7",
    "je      0x1400974b2",
    "mov     eax, ebx",
    "mov     eax, edi",
    "sub     eax, ecx",
    "jmp     0x140097443",
    "mov     ecx, esi",
    "lea     r8, [rsp+0x34]",
    "lea     rdx, [rsp+0x58]",
    "call    sub_1400972ac",
    "mov     r12d, dword [rsp+0x34]",
    "test    eax, eax",
    "je      0x140097519",
    "xor     eax, eax",
    "mov     eax, edi",
    "sub     eax, r11d",
    "jmp     0x1400974b4",
    "add     eax, edx",
    "mov     dword [rsp+0x38], eax",
    "test    rbp, rbp",
    "je      0x140097695",
    "test    rbp, rbp",
    "je      0x14009767e",
    "mov     rsi, qword [rsp+0x58]",
    "mov     ecx, dword [rsp+0xd8]",
    "jmp     0x140097529",
    "mov     ecx, r12d",
    "and     ecx, 0x7",
    "je      0x1400974f8",
    "mov     rcx, qword [rsp+0xe0]",
    "mov     dword [rsp+0x48], ebx",
    "test    rcx, rcx",
    "je      0x140097527",
    "lea     ebx, [rax+rbx+0xa]",
    "jmp     0x1400974c1",
    "test    rsi, rsi",
    "je      0x1400976a3",
    "mov     rcx, rbp",
    "call    qword [rel LocalFree]",
    "mov     rcx, r13",
    "call    qword [rel LocalFree]",
    "mov     eax, dword [rsp+0x3c]",
    "lea     eax, [rbx+rax*2]",
    "add     eax, edx",
    "add     eax, ecx",
    "mov     ecx, dword [rsp+0x38]",
    "add     ecx, eax",
    "mov     rax, qword [rsp+0xf0]",
    "mov     dword [rax], ecx",
    "mov     edx, ecx",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rcx, qword [rsp+0xe8]",
    "mov     qword [rcx], rax",
    "mov     rbx, rax",
    "test    rax, rax",
    "je      0x14009767e",
    "mov     edx, 0x48",
    "xor     eax, eax",
    "mov     eax, edi",
    "sub     eax, ecx",
    "jmp     0x1400974fa",
    "mov     rcx, rsi",
    "call    qword [rel LocalFree]",
    "and     dword [rax+0x4], 0x0",
    "mov     ecx, dword [rsp+0x40]",
    "mov     dword [rax], r15d",
    "mov     eax, dword [rsp+0x30]",
    "mov     rdx, r13",
    "mov     dword [rbx+0xc], eax",
    "mov     eax, 0x1",
    "mov     dword [rbx+0x8], eax",
    "mov     qword [rbx+0x10], rcx",
    "mov     r8d, dword [rbx+0xc]",
    "add     rcx, rbx",
    "mov     dword [rsp+0x44], eax",
    "call    memcpy",
    "mov     eax, dword [rsp+0x50]",
    "mov     edx, dword [rsp+0x38]",
    "mov     dword [rbx+0x1c], eax",
    "mov     dword [rbx+0x18], 0xa",
    "add     rdx, qword [rbx+0x10]",
    "mov     qword [rbx+0x20], rdx",
    "mov     r8d, dword [rbx+0x1c]",
    "lea     rcx, [rdx+rbx]",
    "mov     rdx, rbp",
    "call    memcpy",
    "mov     eax, dword [rsp+0xd8]",
    "test    eax, eax",
    "je      0x140097611",
    "mov     r13, qword [rsp+0x68]",
    "test    r13, r13",
    "je      0x140097687",
    "mov     rsi, qword [rsp+0x58]",
    "mov     edx, 0x58",
    "lea     ecx, [rax+r12]",
    "mov     dword [rsp+0xd8], ecx",
    "lea     r15d, [rdx-0x53]",
    "mov     dword [rsp+0x40], edx",
    "jmp     0x14009752e",
    "lea     r9d, [r15-0x2]",
    "lea     edx, [r15-0x3]",
    "add     r9, r9",
    "add     rdx, rdx",
    "mov     dword [rbx+r9*8+0xc], r14d",
    "mov     dword [rbx+r9*8+0x8], 0x6",
    "mov     ecx, dword [rbx+rdx*8+0xc]",
    "mov     eax, ecx",
    "and     eax, 0x7",
    "je      0x14009763c",
    "mov     edx, dword [rsp+0x48]",
    "mov     dword [rbx+0x2c], r12d",
    "mov     dword [rbx+0x28], 0xd",
    "add     rdx, qword [rbx+0x20]",
    "mov     qword [rbx+0x30], rdx",
    "mov     r8d, dword [rbx+0x2c]",
    "lea     rcx, [rdx+rbx]",
    "mov     rdx, rsi",
    "call    memcpy",
    "xor     edi, edi",
    "sub     edi, eax",
    "jmp     0x14009763e",
    "mov     rax, qword [rbx+rdx*8+0x10]",
    "mov     r10d, dword [rsp+0x60]",
    "add     ecx, edi",
    "lea     rdx, [rcx+rax]",
    "lea     r8d, [r15-0x1]",
    "mov     qword [rbx+r9*8+0x10], rdx",
    "mov     dword [rdx+rbx], r10d",
    "mov     edx, dword [rsp+0x3c]",
    "add     r8, r8",
    "mov     dword [rbx+r8*8+0xc], r14d",
    "mov     dword [rbx+r8*8+0x8], 0x7",
    "add     rdx, qword [rbx+r9*8+0x10]",
    "mov     qword [rbx+r8*8+0x10], rdx",
    "mov     dword [rdx+rbx], r10d"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}