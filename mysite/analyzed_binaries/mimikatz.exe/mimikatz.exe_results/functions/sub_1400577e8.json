{
  "address": "0x1400577e8",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "encrypt data using Curve25519/ba11e775237f4334901cb73b0f61e10d",
    "write file on Windows/035d57bed47747649158312e9532f27d"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x8], rcx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x40",
    "mov     rbp, rcx",
    "mov     rcx, qword [r8]",
    "mov     esi, edx",
    "movzx   eax, word [rcx+0x8]",
    "lea     rdx, [rel data_1400d7190]",
    "mov     rdi, r8",
    "and     eax, 0x3f",
    "cmp     byte [rax+rdx], 0x5",
    "je      0x140057a62",
    "mov     rbx, qword [rsp+0x88]",
    "add     rsp, 0x40",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     dl, 0x1",
    "call    sub_140031c84",
    "mov     qword [rsp+0x30], rax",
    "test    rax, rax",
    "je      0x140057a62",
    "mov     rcx, qword [rdi]",
    "call    sub_140035e5c",
    "mov     ebx, eax",
    "cmp     esi, 0x1",
    "jne     0x14005786e",
    "mov     rcx, qword [rdi+0x8]",
    "mov     dl, 0x1",
    "call    sub_140031c84",
    "mov     r13, rax",
    "mov     qword [rsp+0x38], rax",
    "test    rax, rax",
    "je      0x140057a62",
    "lea     r9, [rel data_1400d3fc3]",
    "xor     r13d, r13d",
    "mov     r12d, esi",
    "mov     qword [rsp+0x98], r9",
    "lea     r14, [rel data_1400d7538]",
    "mov     qword [rsp+0x38], r13",
    "jmp     0x140057941",
    "xor     r8d, r8d",
    "mov     rdx, rax",
    "cmp     byte [rax], r8b",
    "je      0x140057a3b",
    "mov     rax, qword [rbp+0x8]",
    "movsxd  r15, r12d",
    "mov     eax, dword [rax+0x8]",
    "mov     dword [rsp+0x90], eax",
    "test    al, 0x1",
    "je      0x1400579c2",
    "mov     rdx, qword [rsp+0x30]",
    "mov     rcx, qword [rbp]",
    "or      qword [rsp+0x20], 0xffffffffffffffff",
    "mov     r9b, 0x1",
    "mov     r8d, ebx",
    "call    sub_140031820",
    "cmp     eax, 0x12",
    "jne     0x140057a62",
    "mov     sil, 0xc0",
    "mov     r15b, 0x80",
    "test    al, 0x2",
    "je      0x140057a26",
    "test    ebx, ebx",
    "jle     0x1400579c2",
    "mov     rcx, rbp",
    "call    sub_1400363a8",
    "inc     r8d",
    "cmp     byte [rdx], 0x0",
    "jne     0x14005789f",
    "jmp     0x1400578ae",
    "test    r13, r13",
    "je      0x140057a33",
    "test    ebx, ebx",
    "jle     0x140057a26",
    "mov     r13, qword [rsp+0x30]",
    "mov     cl, byte [rdx]",
    "inc     rdx",
    "cmp     cl, sil",
    "jb      0x1400578b8",
    "test    r8d, r8d",
    "jle     0x140057a3b",
    "mov     al, byte [rdx]",
    "and     al, sil",
    "cmp     al, r15b",
    "je      0x1400578ab",
    "mov     rbp, qword [rsp+0x80]",
    "mov     rcx, r14",
    "call    sub_140016950",
    "mov     r13, qword [rsp+0x30]",
    "cmp     ebp, r12d",
    "jge     0x1400579b1",
    "movzx   esi, byte [rdi+r9]",
    "cmp     esi, ebx",
    "jg      0x14005798e",
    "movsxd  rdi, r8d",
    "mov     rcx, rbp",
    "lea     rdx, [rdi+rdi*8]",
    "call    sub_140056624",
    "mov     r14, rax",
    "test    rax, rax",
    "je      0x140057a62",
    "inc     rdx",
    "cmp     ebp, r12d",
    "jge     0x140057a21",
    "mov     rax, qword [rsp+0x98]",
    "mov     eax, dword [rsp+0x90]",
    "mov     qword [rsp+0x30], r13",
    "mov     r13, qword [rsp+0x38]",
    "mov     r9, qword [rsp+0x98]",
    "movsxd  rax, esi",
    "sub     ebx, esi",
    "add     r13, rax",
    "test    ebx, ebx",
    "jg      0x14005795f",
    "inc     rdi",
    "inc     ebp",
    "cmp     rdi, r15",
    "jl      0x14005796a",
    "mov     rdx, qword [r14+rdi*8]",
    "mov     r8, rsi",
    "mov     rcx, r13",
    "call    memcmp",
    "test    eax, eax",
    "je      0x140057998",
    "lea     r9, [rax+rdi*8]",
    "xor     r12d, r12d",
    "mov     rcx, r13",
    "mov     qword [rsp+0x98], r9",
    "cmp     byte [r13], r12b",
    "je      0x140057a3b",
    "mov     r13, qword [rsp+0x38]",
    "sub     ebx, esi",
    "test    ebx, ebx",
    "jg      0x1400579cf",
    "inc     rdi",
    "inc     ebp",
    "cmp     rdi, r15",
    "jl      0x1400579e2",
    "mov     rdx, qword [r14+rdi*8]",
    "mov     eax, ebx",
    "mov     r8, rsi",
    "sub     eax, esi",
    "movsxd  rcx, eax",
    "add     rcx, r13",
    "call    memcmp",
    "test    eax, eax",
    "je      0x140057a16",
    "xor     esi, esi",
    "xor     ebp, ebp",
    "xor     edi, edi",
    "test    r12d, r12d",
    "jle     0x140057998",
    "mov     r9, qword [rsp+0x98]",
    "mov     r8, r9",
    "mov     rdx, rax",
    "xor     esi, esi",
    "xor     ebp, ebp",
    "xor     edi, edi",
    "test    r12d, r12d",
    "jle     0x140057a16",
    "movzx   esi, byte [rdi+rax]",
    "cmp     esi, ebx",
    "jg      0x140057a0c",
    "mov     rax, qword [rsp+0x98]",
    "mov     al, cl",
    "inc     r12d",
    "sub     al, byte [rdx]",
    "add     rdx, 0x8",
    "mov     byte [r8], al",
    "inc     r8",
    "cmp     byte [rcx], 0x0",
    "jne     0x140057906",
    "jmp     0x140057918",
    "mov     qword [rdx], rcx",
    "mov     al, byte [rcx]",
    "inc     rcx",
    "cmp     al, sil",
    "jb      0x140057922",
    "test    r12d, r12d",
    "jle     0x140057a3b",
    "mov     al, byte [rcx]",
    "and     al, sil",
    "cmp     al, r15b",
    "je      0x140057915",
    "inc     rcx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}