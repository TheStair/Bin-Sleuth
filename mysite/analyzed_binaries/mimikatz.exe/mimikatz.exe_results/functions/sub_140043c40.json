{
  "address": "0x140043c40",
  "rules": [
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "load assembly via IAssembly/08d07504566140e580f88ed84a643e72",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     qword [rsp+0x10], rbx",
    "mov     qword [rsp+0x18], rbp",
    "mov     qword [rsp+0x20], rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x30",
    "mov     r12, qword [rcx]",
    "mov     r15d, r8d",
    "xor     r8d, r8d",
    "mov     r14, rdx",
    "mov     rbx, rcx",
    "cmp     rdx, r8",
    "je      0x140043dc6",
    "mov     rbx, qword [rsp+0x68]",
    "mov     rbp, qword [rsp+0x70]",
    "mov     rsi, qword [rsp+0x78]",
    "add     rsp, 0x30",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "retn    ",
    "mov     r13, qword [rdx+0x8]",
    "lea     rcx, [r13+0x1]",
    "cmp     byte [rcx], r8b",
    "jne     0x140043c98",
    "cmp     byte [r13], 0x3f",
    "jne     0x140043d55",
    "lea     esi, [r8+0x1]",
    "add     word [rbx+0x100], si",
    "mov     di, word [rbx+0x100]",
    "jmp     0x140043da5",
    "mov     rcx, qword [rbx+0x118]",
    "mov     r8d, r15d",
    "mov     rdx, r13",
    "call    sub_14001a1e8",
    "mov     di, ax",
    "xor     eax, eax",
    "cmp     di, ax",
    "jne     0x140043da5",
    "mov     esi, 0x1",
    "lea     ebp, [rsi+0x1]",
    "cmp     r15d, ebp",
    "jne     0x140043cbb",
    "movsx   eax, di",
    "mov     word [r14+0x2c], di",
    "cmp     eax, dword [r12+0xa0]",
    "jle     0x140043dc6",
    "lea     esi, [rax+0x1]",
    "add     word [rbx+0x100], si",
    "mov     di, word [rbx+0x100]",
    "lea     r8d, [r15-0x1]",
    "lea     rdx, [rsp+0x60]",
    "mov     r9b, sil",
    "call    sub_140019740",
    "xor     r8d, r8d",
    "cmp     eax, r8d",
    "mov     ecx, r8d",
    "sete    cl",
    "cmp     ecx, r8d",
    "je      0x140043d3c",
    "movsx   eax, byte [rcx]",
    "sub     eax, 0x30",
    "movsxd  rdi, eax",
    "jmp     0x140043ce2",
    "lea     rdx, [rel data_1400f4a78]  {\"too many SQL variables\"}",
    "mov     rcx, rbx",
    "call    sub_1400191b8",
    "mov     r8d, dword [r12+0xa0]",
    "lea     rdx, [rel data_1400f4a48]  {\"variable number must be between \u2026\"}",
    "mov     rcx, rbx",
    "call    sub_1400191b8",
    "jmp     0x140043dc6",
    "mov     rdi, qword [rsp+0x60]",
    "cmp     rdi, rsi",
    "jl      0x140043d3c",
    "movsxd  rax, dword [r12+0xa0]",
    "cmp     rdi, rax",
    "jg      0x140043d3c",
    "cmp     di, word [rbx+0x100]",
    "jle     0x140043d06",
    "mov     rdx, qword [rbx+0x118]",
    "cmp     rdx, r8",
    "je      0x140043d82",
    "mov     word [rbx+0x100], di",
    "jmp     0x140043d82",
    "mov     rdx, qword [rbx+0x118]",
    "movsx   eax, di",
    "mov     r9d, r15d",
    "mov     r8, r13",
    "mov     rcx, r12",
    "mov     dword [rsp+0x20], eax",
    "call    sub_14001a118",
    "mov     qword [rbx+0x118], rax",
    "movsx   ecx, di",
    "lea     eax, [rbp+0x2]",
    "movsxd  rcx, eax",
    "lea     rax, [rdx+rcx*4]",
    "add     ebp, dword [rdx+rax*4+0x4]",
    "cmp     ebp, dword [rdx+0x4]",
    "jl      0x140043d15",
    "jmp     0x140043d82",
    "movsxd  rax, ebp",
    "cmp     dword [rdx+rax*4], ecx",
    "je      0x140043d2b",
    "mov     rax, r8",
    "jmp     0x140043d35",
    "cmp     rax, r8",
    "jne     0x140043da5"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}