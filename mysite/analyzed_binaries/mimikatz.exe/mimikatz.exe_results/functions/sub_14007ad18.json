{
  "address": "0x14007ad18",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "encrypt data using Curve25519/4be2ead1b08a4c049dae9c8694881d76",
    "write file on Windows/035d57bed47747649158312e9532f27d"
  ],
  "disassembly": [
    "mov     qword [rsp+0x8], rbx",
    "mov     qword [rsp+0x10], rdx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x90",
    "xor     esi, esi",
    "mov     rbx, rdx",
    "mov     rdi, rcx",
    "mov     r14d, esi",
    "mov     dword [rsp+0xe0], esi",
    "cmp     qword [rdx+0x70], rsi",
    "je      0x14007b15e",
    "mov     eax, r14d",
    "cmp     qword [rdx+0x50], rsi",
    "jne     0x14007b15e",
    "call    sub_140065300",
    "mov     r15, qword [rdi]",
    "mov     rbp, qword [rbx+0x70]",
    "mov     qword [rsp+0x58], rax",
    "mov     rax, qword [rbx+0x28]",
    "mov     edx, 0x80",
    "mov     qword [rsp+0x50], rax",
    "mov     rax, qword [rbx+0x30]",
    "mov     rcx, r15",
    "mov     qword [rsp+0x78], rax",
    "mov     rax, qword [rbx+0x38]",
    "mov     qword [rsp+0xe8], rsi",
    "mov     qword [rsp+0x70], rax",
    "mov     rax, qword [rbx+0x40]",
    "mov     qword [rsp+0x80], rbp",
    "mov     qword [rsp+0x68], rax",
    "call    sub_140016ba8",
    "mov     r13, rax",
    "cmp     rax, rsi",
    "jne     0x14007adbc",
    "and     dword [rbx+0xc], 0xfffffff7",
    "mov     qword [rbx+0x28], rsi",
    "mov     qword [rbx+0x30], rsi",
    "mov     qword [rbx+0x38], rsi",
    "mov     qword [rbx+0x40], rsi",
    "mov     rdx, qword [rbp+0x10]",
    "xor     r8d, r8d",
    "mov     rcx, r15",
    "call    sub_140044284",
    "mov     r8, qword [rbp+0x18]",
    "mov     r9d, 0x1",
    "mov     rdx, rax",
    "mov     rcx, rdi",
    "call    sub_14007ac40",
    "mov     r12, rax",
    "mov     qword [rsp+0x60], rax",
    "cmp     rax, rsi",
    "je      0x14007ae45",
    "lea     eax, [rsi+0x7]",
    "jmp     0x14007b161",
    "mov     eax, dword [rdi+0x34]",
    "mov     rsi, qword [rsp+0x50]",
    "mov     rdx, rbp",
    "mov     dword [rbp+0x58], eax",
    "add     dword [rdi+0x34], 0x4",
    "mov     r9, qword [rbx]",
    "lea     rax, [rsp+0xe8]",
    "mov     r8, rsi",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], rax",
    "mov     qword [rsp+0x20], r13",
    "call    sub_14007ab70",
    "mov     r9, qword [rbx+0x48]",
    "lea     r11, [rsp+0xe8]",
    "mov     r8, rsi",
    "mov     qword [rsp+0x28], r11",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], r13",
    "call    sub_14007ab70",
    "mov     rdx, qword [rsp+0xe8]",
    "test    rdx, rdx",
    "je      0x14007aeac",
    "mov     rax, qword [rbx+0x48]",
    "cmp     rax, rsi",
    "je      0x14007ae45",
    "mov     rbx, qword [rsp+0xd0]",
    "add     rsp, 0x90",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "xor     eax, eax",
    "mov     eax, dword [rdx]",
    "jmp     0x14007aeae",
    "mov     ecx, dword [rax]",
    "mov     esi, dword [r12]",
    "cmp     ecx, esi",
    "jg      0x14007ae45",
    "test    r12, r12",
    "je      0x14007af4c",
    "lea     rax, [rsp+0xe8]",
    "mov     r9, r8",
    "mov     rdx, rbp",
    "mov     qword [rsp+0x28], rax",
    "mov     r8, rbx",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x20], r13",
    "call    sub_14007ab70",
    "mov     r12, qword [rsp+0xe8]",
    "test    r12, r12",
    "je      0x14007af33",
    "mov     r8, qword [rbp+0x10]",
    "xor     r9d, r9d",
    "mov     rcx, rdi",
    "mov     dword [rbp+0x78], eax",
    "call    sub_14007ac40",
    "mov     r8, qword [rbp+0x18]",
    "mov     rdx, rax",
    "xor     r9d, r9d",
    "mov     rcx, rdi",
    "call    sub_14007ac40",
    "mov     r14, qword [rsp+0x58]",
    "mov     rbx, qword [rsp+0x50]",
    "mov     r12, rax",
    "mov     qword [rsp+0xe8], rax",
    "mov     rsi, rbp",
    "mov     dword [r12], ecx",
    "mov     rdx, qword [rbx+0x48]",
    "or      r8d, 0xffffffff",
    "mov     rcx, r12",
    "call    sub_140048d24",
    "test    eax, eax",
    "jne     0x14007ae41",
    "xor     eax, eax",
    "mov     eax, dword [r12]",
    "jmp     0x14007af4e",
    "xor     eax, eax",
    "mov     eax, dword [r12]",
    "jmp     0x14007af35",
    "mov     dword [r12], esi",
    "mov     rdx, qword [rbx+0x48]",
    "test    rdx, rdx",
    "je      0x14007ae3d",
    "inc     dword [rdi+0x38]",
    "mov     eax, dword [rdi+0x38]",
    "and     dword [rsp+0x20], 0x0",
    "mov     dword [rsi+0x5c], eax",
    "inc     dword [rdi+0x38]",
    "mov     eax, dword [rdi+0x38]",
    "mov     r9d, dword [rsi+0x5c]",
    "xor     r8d, r8d",
    "mov     rcx, r14",
    "lea     edx, [r8+0x49]",
    "mov     dword [rsi+0x60], eax",
    "call    sub_140032364",
    "mov     rsi, qword [rsi+0x40]",
    "test    rsi, rsi",
    "jne     0x14007aeea",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "mov     rcx, r15",
    "call    sub_140043fa4",
    "mov     rdx, r12",
    "mov     rcx, rdi",
    "mov     r8, rax",
    "call    sub_140044974",
    "mov     r12, rax",
    "mov     qword [rsp+0xe8], rax",
    "xor     r9d, r9d",
    "mov     rdx, r12",
    "mov     rcx, rdi",
    "mov     dword [rsi+0x7c], eax",
    "call    sub_14007ac40",
    "mov     r12, rax",
    "mov     qword [rsp+0xe8], rax",
    "mov     rdx, qword [rsi+0x48]",
    "test    rdx, rdx",
    "je      0x14007af9a",
    "mov     dword [rsi+0x7c], eax",
    "mov     byte [rsi+0x8c], 0x1",
    "jmp     0x14007af6a",
    "and     qword [rbx+0x48], r14",
    "mov     rcx, r15",
    "call    sub_140044bf4",
    "mov     rax, qword [rsi+0x70]",
    "mov     r8, qword [rax+0x20]",
    "mov     rax, qword [rsi+0x50]",
    "bt      dword [rax+0x4], 0x14",
    "jae     0x14007af41",
    "mov     rbx, qword [rsp+0xd8]",
    "mov     r14d, dword [rsp+0xe0]",
    "test    r12, r12",
    "jne     0x14007b00a",
    "and     qword [rsp+0x40], r14",
    "and     dword [rsp+0x38], r14d",
    "mov     rax, qword [rsp+0x60]",
    "mov     r9, qword [rsp+0x78]",
    "mov     r8, qword [rsp+0x50]",
    "mov     qword [rsp+0x30], rax",
    "mov     rax, qword [rsp+0x68]",
    "mov     rdx, r12",
    "mov     rcx, rdi",
    "mov     qword [rsp+0x28], rax",
    "mov     rax, qword [rsp+0x70]",
    "mov     qword [rsp+0x20], rax",
    "call    sub_140062cac",
    "xor     r9d, r9d",
    "xor     r8d, r8d",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "mov     rbp, rax",
    "call    sub_1400532cc",
    "mov     esi, 0x7",
    "mov     qword [rbx+0x28], rax",
    "test    rax, rax",
    "je      0x14007b12f",
    "lea     r8, [rel data_1400f4a1c]",
    "mov     edx, 0x96",
    "mov     rcx, r15",
    "call    sub_14004397c",
    "xor     edx, edx",
    "mov     rcx, rdi",
    "mov     r8, rax",
    "call    sub_140044974",
    "mov     r12, rax",
    "test    rbp, rbp",
    "je      0x14007b145",
    "mov     qword [rax+0x30], rbp",
    "mov     rdx, qword [rbx+0x28]",
    "mov     rcx, rdi",
    "call    sub_1400533c8",
    "or      dword [rbp+0xc], 0x40",
    "mov     r8b, 0x40",
    "mov     rdx, rbp",
    "mov     rcx, rdi",
    "call    sub_1400651f4",
    "mov     rdi, rax",
    "test    rax, rax",
    "jne     0x14007b09b",
    "cmp     byte [r15+0x61], 0x0",
    "cmovne  r14d, esi",
    "test    r13, r13",
    "je      0x14007b15e",
    "mov     r8d, 0x1",
    "mov     rdx, rbp",
    "mov     rcx, r15",
    "call    sub_140062ba0",
    "mov     rcx, r13",
    "mov     rdx, rax",
    "mov     r8d, 0x80",
    "call    memcpy",
    "or      dword [r13+0x40], 0x2",
    "mov     rax, qword [rbx+0x28]",
    "mov     qword [rax+0x28], r13",
    "mov     r13, rdi",
    "mov     r14d, esi",
    "jmp     0x14007b0bc",
    "mov     rdx, r13",
    "mov     rcx, r15",
    "call    sub_1400169a8",
    "mov     rbx, qword [rsp+0x80]",
    "mov     rdi, qword [rsp+0x58]",
    "mov     r9d, dword [r12]",
    "mov     r8d, dword [rbx+0x58]",
    "and     dword [rsp+0x20], 0x0",
    "mov     edx, 0x70",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     r9d, dword [rbx+0x58]",
    "and     dword [rsp+0x20], 0x0",
    "mov     ebp, 0x6d",
    "lea     r8d, [r9+0x1]",
    "mov     rcx, rdi",
    "mov     edx, ebp",
    "call    sub_140032364",
    "mov     r9d, dword [rbx+0x58]",
    "and     dword [rsp+0x20], 0x0",
    "lea     r8d, [r9+0x2]",
    "mov     edx, ebp",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "mov     r9d, dword [rbx+0x58]",
    "and     dword [rsp+0x20], 0x0",
    "lea     r8d, [r9+0x3]",
    "mov     edx, ebp",
    "mov     rcx, rdi",
    "call    sub_140032364",
    "jmp     0x14007b145"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}