{
  "address": "0x14001d808",
  "rules": [
    "encrypt data using HC-128/86aaff13b46c4951b9ca4e0a9171c391",
    "hash data using aphash/c01783ca846f48c3a4751b50c0c12749",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/0d7bc900a8ea48098fc469578ae14b88",
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "decrypt data using TEA/b1609112b4574d7d84a6736fb833fd96/7a997b34591146dbbd4411d920ff141c",
    "encrypt data using XXTEA/3026d94f6eda43e0bed136bd89733650/14b9db6dcaf34a3e86e9217d3cc476a8",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "encrypt data using TEA/a99f0fb4fab7434084917883a6622883/5d37b64795ca4da78dcc19574a757de4",
    "encrypt data using XTEA/4b6117a2d51f4354afd7eb58ab16e151/2ee106c7c5d34df799b377fb04fb2ee1",
    "hash data using aphash/98bdcb90423346b7a1fc9c166925c881"
  ],
  "disassembly": [
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "sub     rsp, 0x20",
    "lea     rbp, [rsp+0x20]",
    "mov     qword [rbp+0x28], rbx",
    "mov     esi, edx",
    "mov     rdi, rcx",
    "test    rcx, rcx",
    "je      0x14001d9b0",
    "xor     eax, eax",
    "mov     eax, 0xf80",
    "dec     esi",
    "cmp     dword [rcx], eax",
    "mov     eax, esi",
    "and     esi, 0x7",
    "mov     edx, 0x1",
    "mov     cl, sil",
    "shr     rax, 0x3",
    "shl     dl, cl",
    "or      byte [rax+rdi+0x10], dl",
    "mov     ebx, dword [rdi+0x8]",
    "test    ebx, ebx",
    "je      0x14001d87f",
    "cmp     dword [rdi], eax",
    "jbe     0x14001d999",
    "mov     eax, esi",
    "xor     edx, edx",
    "div     ebx",
    "mov     esi, edx",
    "lea     rdi, [rdi+rax*8+0x10]",
    "cmp     qword [rdi], 0x0",
    "jne     0x14001d869",
    "mov     ecx, esi",
    "mov     rax, 0x842108421084211",
    "mul     rcx",
    "mov     eax, esi",
    "sub     rax, rdx",
    "shr     rax, 0x1",
    "add     rax, rdx",
    "mov     edx, 0x1",
    "shr     rax, 0x6",
    "add     esi, edx",
    "imul    rax, rax, 0x7c",
    "sub     rcx, rax",
    "mov     eax, ecx",
    "cmp     dword [rdi+rax*4+0x10], 0x0",
    "jne     0x14001d8d4",
    "mov     rdi, qword [rdi]",
    "mov     eax, 0xf80",
    "cmp     dword [rdi], eax",
    "jmp     0x14001d830",
    "mov     ecx, 0x200",
    "call    sub_140016b70",
    "test    rax, rax",
    "je      0x14001d861",
    "movsxd  rax, ecx",
    "mov     eax, dword [rdi+0x4]",
    "cmp     eax, 0x7b",
    "jae     0x14001d8f6",
    "jbe     0x14001d999",
    "mov     qword [rdi], rax",
    "test    rax, rax",
    "je      0x14001d875",
    "mov     dword [rax], ebx",
    "add     ecx, edx",
    "add     rax, rdx",
    "cmp     ecx, 0x7c",
    "jb      0x14001d8ef",
    "mov     eax, dword [rdi+0x4]",
    "cmp     eax, 0x3e",
    "jb      0x14001d8c4",
    "inc     eax",
    "mov     dword [rdi+0x4], eax",
    "mov     eax, ecx",
    "mov     dword [rdi+rax*4+0x10], esi",
    "jmp     0x14001d9b0",
    "\u2753\ufe0fmov     eax, 0x7",
    "jmp     0x14001d9b2",
    "cmp     dword [rdi+rax*4+0x10], 0x0",
    "jne     0x14001d8d7",
    "xor     ecx, ecx",
    "xor     eax, eax",
    "mov     eax, dword [rsp]",
    "mov     r8d, 0x1f0",
    "sub     rsp, r8",
    "lea     rcx, [rsp+0x20]",
    "mov     qword [rbp+0x30], rcx",
    "mov     eax, dword [rcx]",
    "test    rcx, rcx",
    "je      0x14001d875",
    "\u2753\ufe0fmov     rbx, qword [rbp+0x28]",
    "mov     rsp, rbp",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "cmp     dword [rdi+rax*4+0x10], esi",
    "je      0x14001d9b0",
    "lea     rdx, [rdi+0x10]",
    "call    memcpy",
    "lea     rcx, [rdi+0x10]",
    "xor     edx, edx",
    "mov     r8d, 0x1f0",
    "call    memset",
    "mov     r11d, dword [rdi]",
    "mov     rax, 0x842108421084211",
    "add     r11, 0x3d",
    "mov     rcx, rdi",
    "mul     r11",
    "sub     r11, rdx",
    "shr     r11, 0x1",
    "add     r11, rdx",
    "mov     edx, esi",
    "shr     r11, 0x5",
    "mov     dword [rdi+0x8], r11d",
    "call    sub_14001d808",
    "mov     rbx, qword [rbp+0x30]",
    "mov     ecx, eax",
    "mov     dword [rbp+0x20], eax",
    "mov     esi, 0x7c",
    "add     rbx, 0x4",
    "sub     rsi, 0x1",
    "jne     0x14001d975",
    "mov     rcx, rdi",
    "call    sub_14001d808",
    "mov     ecx, dword [rbp+0x20]",
    "or      ecx, eax",
    "mov     dword [rbp+0x20], ecx",
    "mov     edx, dword [rbx]",
    "test    edx, edx",
    "je      0x14001d98b",
    "mov     eax, ecx",
    "jmp     0x14001d9b2"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}