{
  "address": "0x14003f48c",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "contain loop",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x20",
    "cmp     qword [rcx+0x18], 0x0",
    "mov     r13, rdx",
    "mov     rbx, rcx",
    "jne     0x14003f4e4",
    "mov     rax, qword [rbx+0x10]",
    "mov     rdi, qword [r13]",
    "mov     cl, byte [rax+0x5c]",
    "cmp     cl, 0x1",
    "jne     0x14003f507",
    "mov     rcx, qword [rcx+0x10]",
    "mov     rcx, qword [rcx+0x28]",
    "call    sub_140034bdc",
    "mov     qword [rbx+0x18], rax",
    "test    rax, rax",
    "je      0x14003f4fd",
    "lea     rax, [rel sub_14003eccc]",
    "lea     rdx, [rel sub_14003ed38]",
    "cmp     cl, 0x2",
    "cmove   rax, rdx",
    "lea     rax, [rel sub_14003ee54]",
    "jmp     0x14003f51c",
    "mov     eax, 0x7",
    "jmp     0x14003f5db",
    "mov     rcx, qword [rbx+0x10]",
    "mov     rdx, qword [rcx+0x28]",
    "movzx   ecx, word [rdx+0x6]",
    "mov     word [rax+0x10], cx",
    "mov     rax, qword [rbx+0x18]",
    "mov     byte [rax+0x13], 0x0",
    "test    rdi, rdi",
    "je      0x14003f597",
    "mov     ecx, 0x200",
    "mov     qword [rbx+0x40], rax",
    "call    sub_140016b70",
    "mov     rbp, rax",
    "test    rax, rax",
    "je      0x14003f4fd",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "mov     rdi, qword [rsp+0x58]",
    "add     rsp, 0x20",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "xor     eax, eax",
    "xor     edi, edi",
    "mov     rax, qword [r13+0x8]",
    "test    rax, rax",
    "je      0x14003f552",
    "inc     rdi",
    "cmp     rdi, 0x40",
    "jl      0x14003f59b",
    "test    rax, rax",
    "je      0x14003f5ba",
    "mov     rsi, qword [rdi+0x8]",
    "cmp     rdi, rax",
    "jne     0x14003f549",
    "mov     rcx, qword [rbp+rdi*8]",
    "test    rcx, rcx",
    "je      0x14003f5bd",
    "mov     rcx, rbp",
    "mov     qword [r13], rax",
    "call    sub_140016950",
    "mov     r11, qword [rbx+0x18]",
    "movzx   eax, byte [r11+0x13]",
    "mov     rax, rcx",
    "mov     r8, rcx",
    "mov     rdx, rax",
    "mov     rcx, rbx",
    "call    sub_14003f404",
    "jmp     0x14003f5bd",
    "mov     qword [rbp+r12*8], rdi",
    "mov     rdi, rsi",
    "test    rsi, rsi",
    "jne     0x14003f537",
    "mov     r14, rbp",
    "movsxd  rsi, dword [rdi+0x8]",
    "add     rsi, rax",
    "jmp     0x14003f556",
    "xor     esi, esi",
    "jmp     0x14003f556",
    "mov     r8, qword [r14]",
    "mov     rdx, rdi",
    "mov     rcx, rbx",
    "call    sub_14003f404",
    "and     qword [r14], 0x0",
    "inc     r12",
    "lea     r14, [rbp+r12*8]",
    "mov     rdi, rax",
    "cmp     qword [r14], 0x0",
    "jne     0x14003f567",
    "and     qword [rdi+0x8], 0x0",
    "xor     r12d, r12d",
    "cmp     qword [rbp], r12",
    "je      0x14003f58a"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}