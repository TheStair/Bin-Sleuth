{
  "address": "0x1400c6880",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "push    rdi",
    "sub     rsp, 0x70",
    "xor     esi, esi",
    "mov     rdi, rcx",
    "mov     rbx, rdx",
    "lea     rcx, [rax-0x36]",
    "lea     r8d, [rsi+0x2e]",
    "xor     edx, edx",
    "mov     word [rax-0x38], si",
    "call    memset",
    "movsxd  rdx, dword [rel data_1401404c0]",
    "mov     r9, qword [rbx]",
    "mov     qword [rsp+0x30], rsi",
    "imul    rdx, rdx, 0xa8",
    "lea     rax, [rel data_140140240]",
    "lea     rbp, [rel data_1400d2d10]",
    "mov     qword [rsp+0x38], rax",
    "movsxd  rax, dword [rdx+rbp+0x14]",
    "mov     rcx, qword [rax+r9]",
    "mov     qword [rsp+0x20], rcx",
    "mov     rcx, qword [rdi]",
    "mov     rax, qword [rcx]",
    "mov     qword [rsp+0x28], rax",
    "cmp     dword [rcx+0x10], 0x2800",
    "jae     0x1400c68ff",
    "cmp     dword [rcx+0x10], 0x3839",
    "sbb     r8d, r8d",
    "and     r8d, 0xf0000",
    "add     r8d, 0x10000",
    "mov     r8d, esi",
    "jmp     0x1400c6917",
    "lea     r11, [rsp+0x70]",
    "mov     rbx, qword [r11+0x10]",
    "mov     rbp, qword [r11+0x18]",
    "mov     rsi, qword [r11+0x20]",
    "mov     rsp, r11",
    "pop     rdi",
    "retn    ",
    "movsxd  rdx, dword [rel data_1401404c0]",
    "mov     ecx, 0x40",
    "imul    rdx, rdx, 0xa8",
    "mov     rdx, qword [rdx+rbp+0x90]",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "cmp     rax, rsi",
    "je      0x1400c6a5f",
    "movsxd  rcx, dword [rdx+rbp+0x4]",
    "mov     rdx, rdi",
    "add     rcx, r9",
    "call    sub_1400c4674",
    "cmp     qword [rsp+0x20], rsi",
    "je      0x1400c6a5f",
    "movsxd  r8, dword [rel data_1401404c0]",
    "lea     rdx, [rsp+0x20]",
    "lea     rcx, [rsp+0x30]",
    "mov     qword [rsp+0x30], rax",
    "imul    r8, r8, 0xa8",
    "mov     r8, qword [r8+rbp+0x90]",
    "call    sub_14000b6d8",
    "cmp     eax, esi",
    "je      0x1400c6a56",
    "mov     rcx, rbx",
    "call    qword [rel LocalFree]",
    "movsxd  rdx, dword [rel data_1401404c0]",
    "movdqu  xmm0, xmmword [rbx]",
    "movdqu  xmmword [rsp+0x40], xmm0",
    "imul    rdx, rdx, 0xa8",
    "movsxd  rax, dword [rdx+rbp+0x88]",
    "mov     r8d, dword [rax+rbx]",
    "cmp     r8d, esi",
    "je      0x1400c6a20",
    "mov     rax, qword [rdi]",
    "lea     rcx, [rsp+0x40]",
    "mov     rdx, rdi",
    "cmp     dword [rax+0x10], 0xece",
    "sbb     r8d, r8d",
    "and     r8d, 0x10000000",
    "bts     r8d, 0x17",
    "call    sub_1400c4674",
    "mov     rcx, qword [rsp+0x58]",
    "cmp     rcx, rsi",
    "je      0x1400c6a56",
    "movzx   eax, word [rdx+rbp+0x90]",
    "mov     ecx, 0x40",
    "sub     ax, word [rdx+rbp+0x8c]",
    "add     ax, r8w",
    "movzx   edx, ax",
    "mov     word [rsp+0x50], ax",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x58], rax",
    "cmp     rax, rsi",
    "je      0x1400c6a20",
    "call    qword [rel LocalFree]",
    "movsxd  rcx, dword [rel data_1401404c0]",
    "movzx   r8d, word [rsp+0x50]",
    "lea     rdx, [rsp+0x20]",
    "imul    rcx, rcx, 0xa8",
    "movsxd  rcx, dword [rcx+rbp+0x8c]",
    "mov     qword [rsp+0x30], rax",
    "add     qword [rsp+0x20], rcx",
    "lea     rcx, [rsp+0x30]",
    "call    sub_14000b6d8"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}