{
  "address": "0x140098af0",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440"
  ],
  "disassembly": [
    "mov     r11, rsp {__return_addr}",
    "mov     qword [r11+0x8 {__saved_rbx}], rbx",
    "push    rdi {__saved_rdi}",
    "sub     rsp, 0x70",
    "xor     ebx, ebx  {0x0}",
    "mov     eax, 0xa",
    "lea     rcx, [rel data_1401407e0]",
    "mov     dword [rsp+0x48 {var_30}], ebx  {0x0}",
    "mov     word [r11+0x18 {arg_18}], ax  {0xa}",
    "lea     rax, [r11+0x18 {arg_18}]",
    "mov     qword [r11-0x38 {var_38}], rax {arg_18}",
    "lea     rax, [r11-0x20 {var_20}]",
    "mov     r9b, 0x48",
    "mov     qword [r11-0x40 {var_40}], rax {var_20}",
    "mov     word [rsp+0x30 {var_48}], bx  {0x0}",
    "mov     qword [r11-0x50], rbx  {0x0}",
    "xor     r8d, r8d  {0x0}",
    "mov     dl, 0xff",
    "mov     byte [rsp+0x20 {var_58}], bl  {0x0}",
    "call    sub_140001000",
    "cmp     eax, ebx",
    "je      0x140098b5a",
    "lea     rax, [rsp+0x98 {arg_20}]",
    "lea     rcx, [rel data_140140800]",
    "mov     edi, 0x4",
    "mov     qword [rsp+0x28 {var_50}], rax {arg_20}",
    "lea     rax, [rsp+0x50 {var_28}]",
    "xor     r9d, r9d  {0x0}",
    "xor     r8d, r8d  {0x0}",
    "mov     dl, 0x2",
    "mov     word [rsp+0x98 {arg_20}], di  {0x4}",
    "mov     qword [rsp+0x20 {var_58}], rax {var_28}",
    "call    sub_14000c66c",
    "cmp     eax, ebx",
    "je      0x140098c0b",
    "movzx   edx, word [rsp+0x90 {arg_18}]",
    "lea     r8, [rsp+0x58 {var_20}]",
    "lea     rcx, [rel data_1401062d0]  {u\"ACR firmware: %.*S\\n\"}",
    "call    sub_14000c030",
    "xor     eax, eax  {0x0}",
    "mov     rbx, qword [rsp+0x80 {__saved_rbx}]",
    "add     rsp, 0x70",
    "pop     rdi {__saved_rdi}",
    "retn     {__return_addr}",
    "cmp     word [rsp+0x98 {arg_20}], di",
    "mov     eax, ebx  {0x0}",
    "sete    al",
    "cmp     eax, ebx",
    "je      0x140098c0b",
    "movzx   r9d, byte [rsp+0x52 {var_26}]",
    "movzx   r8d, byte [rsp+0x51 {var_27}]",
    "movzx   edx, byte [rsp+0x50 {var_28}]",
    "lea     rcx, [rel data_140106300]  {u\"PN532 chip\\n version    : 0x%02x\u2026\"}",
    "call    sub_14000c030",
    "inc     bl",
    "cmp     bl, 0x8",
    "jb      0x140098bc4",
    "cmp     bl, 0x3",
    "jae     0x140098be5",
    "mov     al, byte [rsp+0x53 {var_25}]",
    "mov     cl, bl",
    "shr     al, cl",
    "test    al, 0x1",
    "je      0x140098bf8",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     rdx, [rel data_140106390]",
    "lea     rdx, [rel data_1400d5d88]",
    "movzx   eax, bl",
    "mov     rdx, qword [rdx+rax*8]",
    "jmp     0x140098bec",
    "lea     rcx, [rel data_1400e69c8]  {u\"%s ; \"}",
    "call    sub_14000c030"
  ],
  "high_level_IL": [
    "char i = 0",
    "int32_t var_30 = 0",
    "arg_18 = 0xa",
    "int16_t* var_38 = &arg_18",
    "int64_t r9",
    "r9.b = 0x48",
    "uint64_t rdx",
    "rdx.b = 0xff",
    "char var_58 = 0",
    "void var_20",
    "int32_t rax",
    "int64_t rdx_1",
    "rax, rdx_1 = sub_140001000(&data_1401407e0, rdx, 0, r9, 0, nullptr, nullptr, &var_20)",
    "if (rax != 0)",
    "sub_14000c030(u\"ACR firmware: %.*S\\n\", zx.q(arg_18))",
    "rdx_1.b = 2",
    "arg_20 = 4",
    "char var_28",
    "var_58.q = &var_28",
    "if (sub_14000c66c(&data_140140800, rdx_1, 0, 0, var_58, &arg_20) != 0)",
    "int32_t rax_2",
    "rax_2.b = arg_20 == 4",
    "if (rax_2 != 0)",
    "int64_t rdx_4 = sub_14000c030(u\"PN532 chip\\n version    : 0x%02x\u2026\", zx.q(var_28))",
    "uint8_t var_25",
    "if ((var_25 u>> i & 1) != 0)",
    "void* const rdx_5",
    "if (i u>= 3)",
    "rdx_5 = &data_140106390",
    "rdx_5 = (&data_1400d5d88)[zx.q(i)]",
    "rdx_4 = sub_14000c030(u\"%s ; \", rdx_5)",
    "i += 1",
    "do while (i u< 8)",
    "sub_14000c030(U\"\\n\", rdx_4)",
    "return 0"
  ]
}