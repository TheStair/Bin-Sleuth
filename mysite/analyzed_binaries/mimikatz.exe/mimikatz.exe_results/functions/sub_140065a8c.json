{
  "address": "0x140065a8c",
  "rules": [
    "encrypt data using XXTEA/031815fb14e94f2fb59fa9eb4980d745/dc118f3b61184df4a511ed4919cf656f",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "encrypt data using RC4 KSA/ce2c5ff22cc84a5d8021901651b76a23",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop",
    "encrypt data using TEA/2e46a442f8994747bcdba3ad7ba7dd19/5f4c97f31ce341008ea23885a97305d8",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "empty recycle bin quietly/a401764de4c44240956dc7f3c78baebd",
    "decrypt data using TEA/171baf30f6564bc494c3539bab277577/5f4855375d6b45e9bd6b2a189e856211"
  ],
  "disassembly": [
    "mov     qword [rsp+0x18], r8",
    "push    rbx",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0xb8",
    "mov     rsi, qword [rcx]",
    "mov     rbx, qword [rdx+0x50]",
    "xor     r15d, r15d",
    "mov     rbp, rdx",
    "mov     rdi, r8",
    "mov     r12, rcx",
    "mov     rdx, r8",
    "lea     r8d, [r15+0x20]",
    "lea     rcx, [rsp+0x48]",
    "mov     r13d, r15d",
    "mov     qword [rsp+0x118], r15",
    "mov     qword [rsp+0x108], rsi",
    "call    memcpy",
    "mov     r11, qword [rbx+0x48]",
    "cmp     r11, r15",
    "jne     0x1400662b8",
    "movzx   ecx, byte [rbp+0x8]",
    "call    sub_1400645bc",
    "cmp     r11, r15",
    "lea     r8, [rel data_1400f69ac]  {\"LIMIT\"}",
    "mov     r9, rax",
    "lea     rax, [rel data_1400f69a0]  {\"ORDER BY\"}",
    "lea     rdx, [rel data_1400f69b8]  {\"%s clause should come after %s n\u2026\"}",
    "cmovne  r8, rax",
    "mov     rcx, r12",
    "call    sub_1400191b8",
    "mov     r13d, 0x1",
    "jmp     0x1400661c2",
    "cmp     qword [rbx+0x60], r15",
    "jne     0x1400662b8",
    "mov     eax, dword [rsp+0x50]",
    "mov     rcx, qword [rsp+0x110]",
    "mov     dword [rcx+0x8], eax",
    "mov     eax, dword [rsp+0x54]",
    "mov     dword [rcx+0xc], eax",
    "mov     rax, qword [rsp+0x118]",
    "cmp     rax, r15",
    "je      0x1400661fb",
    "mov     rcx, r12",
    "call    sub_140065300",
    "mov     dl, byte [rsp+0x48]",
    "mov     r14, rax",
    "mov     qword [rsp+0x40], rax",
    "cmp     dl, 0xc",
    "jne     0x140065b2e",
    "mov     eax, r13d",
    "mov     rcx, qword [rsp+0x108]",
    "mov     r8d, 0x1",
    "mov     rdx, rax",
    "call    sub_140062ba0",
    "bt      dword [rbp+0xc], 0xa",
    "jae     0x140065b4d",
    "mov     rax, qword [rbp]",
    "mov     r8d, dword [rsp+0x4c]",
    "lea     edx, [r15+0x70]",
    "mov     r9d, dword [rax]",
    "mov     rcx, r14",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "mov     dl, 0xe",
    "mov     byte [rsp+0x48], dl",
    "bt      dword [rbp+0xc], 0xd",
    "jae     0x140065b69",
    "lea     r8, [rsp+0x48]",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_1400659b8",
    "mov     r13d, eax",
    "jmp     0x1400661c2",
    "cmp     qword [rbp+0x48], r15",
    "je      0x140065b82",
    "lea     r8, [rsp+0x48]",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_1400655bc",
    "jmp     0x140066195",
    "cmp     qword [rbx+0x50], r15",
    "jne     0x140065bb4",
    "mov     r8, rdi",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_140066718",
    "jmp     0x1400661fe",
    "test    byte [rbp+0xc], 0x20",
    "je      0x1400661c2",
    "movzx   ecx, byte [rbp+0x8]",
    "sub     ecx, 0x82",
    "je      0x140065f6c",
    "lea     r8, [rel data_1400f69e8]  {\"COMPOUND QUERY\"}",
    "mov     edx, 0x1",
    "mov     rcx, r12",
    "call    sub_140032580",
    "lea     r8, [rel data_1400f69f8]  {\"LEFT-MOST SUBQUERY\"}",
    "mov     edx, 0x1",
    "mov     rcx, r12",
    "call    sub_140032580",
    "mov     dl, byte [rsp+0x48]",
    "add     rsp, 0xb8",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "pop     rbx",
    "retn    ",
    "mov     rax, qword [rbp]",
    "mov     r8d, 0x1",
    "mov     rcx, rsi",
    "mov     r15d, dword [rax]",
    "mov     edx, r15d",
    "call    sub_140064468",
    "mov     rbx, rax",
    "test    rax, rax",
    "jne     0x140066212",
    "xor     edi, edi",
    "cmp     dl, 0x1",
    "jne     0x140065f7a",
    "sub     ecx, 0x1",
    "je      0x140065e36",
    "xor     esi, esi",
    "lea     rdi, [rax+0x20]",
    "test    r15d, r15d",
    "jle     0x140066252",
    "lea     r13d, [rax+0x7]",
    "mov     r15d, dword [r12+0x34]",
    "xor     r9d, r9d",
    "mov     rcx, r14",
    "lea     eax, [r15+0x1]",
    "lea     edx, [r9+0x70]",
    "mov     r8d, r15d",
    "mov     dword [r12+0x34], eax",
    "mov     dword [rsp+0x20], edi",
    "call    sub_140032364",
    "mov     dword [rbp+0x1c], eax",
    "mov     rcx, qword [rbp+0x58]",
    "mov     rax, rbp",
    "jmp     0x140065fb1",
    "mov     r15d, dword [rsp+0x4c]",
    "jmp     0x140065fba",
    "mov     eax, dword [rbp+0x10]",
    "lea     r8, [rsp+0x48]",
    "mov     rdx, rbx",
    "mov     dword [rbx+0x10], eax",
    "mov     eax, dword [rbp+0x14]",
    "mov     rcx, r12",
    "mov     dword [rbx+0x14], eax",
    "mov     rax, qword [rbp+0x60]",
    "mov     edi, r15d",
    "mov     qword [rbx+0x60], rax",
    "call    sub_1400692cc",
    "mov     qword [rbp+0x60], r15",
    "mov     r13d, eax",
    "cmp     eax, r15d",
    "jne     0x1400661c2",
    "cmp     ecx, 0x1",
    "je      0x140065f6c",
    "xor     esi, esi",
    "lea     rdi, [rbp+0x1c]",
    "mov     r14, qword [rsp+0x108]",
    "cmp     rcx, rdi",
    "jne     0x140065faa",
    "lea     r8, [rsp+0x88]",
    "mov     rdx, rbx",
    "mov     rcx, r12",
    "mov     byte [rsp+0x88], 0x1",
    "mov     dword [rsp+0x8c], r15d",
    "mov     qword [rsp+0x98], rdi",
    "mov     dword [rsp+0x90], edi",
    "mov     dword [rsp+0x94], edi",
    "call    sub_1400692cc",
    "mov     r13d, eax",
    "cmp     eax, edi",
    "jne     0x1400661bf",
    "mov     qword [rbp+0x50], r15",
    "mov     r8d, dword [rbx+0x10]",
    "mov     dword [rbp+0x10], r8d",
    "mov     eax, dword [rbx+0x14]",
    "mov     dword [rbp+0x14], eax",
    "cmp     r8d, r15d",
    "je      0x140065ebb",
    "mov     edi, dword [r12+0x34]",
    "xor     r9d, r9d",
    "mov     rcx, r14",
    "lea     esi, [rdi+0x1]",
    "lea     edx, [r9+0x70]",
    "mov     r8d, edi",
    "lea     eax, [rsi+0x1]",
    "mov     dword [rsp+0x20], r15d",
    "mov     dword [r12+0x34], eax",
    "call    sub_140032364",
    "mov     dword [rbp+0x1c], eax",
    "mov     rcx, qword [rbp+0x58]",
    "mov     rax, rbp",
    "jmp     0x140065c10",
    "mov     rbp, qword [rbp+0x50]",
    "test    rbp, rbp",
    "jne     0x140066252",
    "mov     edx, r10d",
    "mov     rcx, r14",
    "call    sub_140032d34",
    "mov     r9d, 0xfffffff7",
    "mov     r8, rbx",
    "mov     dword [rax+0x8], r15d",
    "inc     dword [rbx]",
    "mov     edx, r10d",
    "mov     rcx, r14",
    "call    sub_140032c40",
    "or      dword [rdi], 0xffffffff",
    "inc     rsi",
    "add     rdi, 0x4",
    "cmp     rsi, 0x2",
    "jl      0x140066258",
    "inc     esi",
    "add     rdi, 0x8",
    "cmp     esi, r15d",
    "jl      0x140066225",
    "mov     rax, qword [r14+0x10]",
    "mov     qword [rdi], rax",
    "mov     rax, rcx",
    "mov     rcx, qword [rcx+0x58]",
    "or      dword [rax+0xc], 0x20",
    "xor     r15d, r15d",
    "cmp     byte [rbp+0x8], 0x84",
    "movzx   ecx, byte [rbp+0x8]",
    "mov     qword [rbp+0x50], rdi",
    "mov     rdi, qword [rbp+0x60]",
    "sete    al",
    "and     qword [rbp+0x60], 0x0",
    "inc     al",
    "mov     byte [rsp+0x88], al",
    "call    sub_1400645bc",
    "lea     r8, [rel data_1400f6a10]  {\"%s USING TEMP B-TREE\"}",
    "mov     edx, 0x1",
    "mov     rcx, r12",
    "mov     r9, rax",
    "call    sub_140032580",
    "lea     r8, [rsp+0x88]",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_1400692cc",
    "mov     rdx, qword [rbp+0x48]",
    "mov     r13d, eax",
    "test    rdx, rdx",
    "je      0x140066062",
    "lea     r8, [rel data_1400f68a0]  {\"UNION ALL\"}",
    "mov     edx, 0x1",
    "mov     rcx, r12",
    "call    sub_140032580",
    "lea     r8, [rsp+0x48]",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_1400692cc",
    "mov     r11, qword [rbp+0x50]",
    "movzx   ecx, word [rbp+0xa]",
    "mov     qword [rbp+0x50], rbx",
    "movzx   edx, word [rbx+0xa]",
    "mov     r13d, eax",
    "mov     qword [rsp+0x118], r11",
    "call    sub_14001a04c",
    "mov     word [rbp+0xa], ax",
    "mov     rcx, qword [rbx+0x60]",
    "movzx   r10d, ax",
    "cmp     rcx, r15",
    "je      0x140065f4a",
    "xor     r9d, r9d",
    "mov     rcx, r14",
    "mov     dword [rsp+0x20], r15d",
    "lea     edx, [r9+0x14]",
    "call    sub_140032364",
    "mov     ecx, dword [rbp+0x14]",
    "mov     edi, eax",
    "cmp     ecx, r15d",
    "je      0x140065ebb",
    "cmp     rcx, r15",
    "jne     0x140065c09",
    "add     dword [rbx], 0xffffffff",
    "jne     0x1400661bf",
    "mov     r10d, dword [rdi]",
    "test    r10d, r10d",
    "js      0x140066295",
    "mov     r8d, esi",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_140065484",
    "mov     qword [rdi], rax",
    "test    rax, rax",
    "jne     0x140066242",
    "mov     r14, qword [rsp+0x40]",
    "mov     rax, qword [rbp+0x50]",
    "and     qword [rbp+0x48], 0x0",
    "cmp     byte [rbp+0x8], 0x82",
    "mov     qword [rsp+0x118], rax",
    "mov     qword [rbp+0x50], rbx",
    "jne     0x14006608e",
    "mov     rcx, rsi",
    "call    sub_140044bf4",
    "cmp     edi, r15d",
    "je      0x140066168",
    "mov     rcx, qword [rcx+0x10]",
    "cmp     rcx, r15",
    "je      0x140065f4a",
    "mov     r8d, dword [rbp+0x10]",
    "lea     r9d, [rcx+0x1]",
    "mov     dword [rsp+0x20], ecx",
    "mov     edx, 0x98",
    "mov     rcx, r14",
    "call    sub_140032364",
    "mov     rax, rcx",
    "mov     rcx, qword [rcx+0x58]",
    "or      dword [rax+0xc], 0x20",
    "lea     r8, [rsp+0x68]",
    "mov     rdx, rbx",
    "mov     rcx, r12",
    "mov     byte [rsp+0x68], 0x1",
    "mov     dword [rsp+0x6c], edi",
    "mov     qword [rsp+0x78], r15",
    "mov     dword [rsp+0x70], r15d",
    "mov     dword [rsp+0x74], r15d",
    "call    sub_1400692cc",
    "mov     r13d, eax",
    "cmp     eax, r15d",
    "jne     0x1400661c2",
    "mov     rcx, qword [rbx+0x10]",
    "mov     rdx, rbx",
    "call    sub_1400169a8",
    "jmp     0x1400661bf",
    "mov     rdx, qword [rbp+0x60]",
    "xor     ebx, ebx",
    "cmp     rdx, rbx",
    "je      0x1400660a1",
    "movzx   edx, word [rbx+0xa]",
    "movzx   ecx, word [rbp+0xa]",
    "call    sub_14001a04c",
    "mov     word [rbp+0xa], ax",
    "cmp     qword [rbp+0x58], r15",
    "jne     0x140066195",
    "mov     edx, edi",
    "mov     rcx, r14",
    "call    sub_140032d34",
    "mov     ecx, dword [r14+0x90]",
    "mov     dword [rax+0x8], ecx",
    "jmp     0x140066168",
    "lea     rdx, [rsp+0x100]",
    "call    sub_140044f2c",
    "cmp     eax, r15d",
    "je      0x140065f4a",
    "xor     r9d, r9d",
    "mov     r8d, esi",
    "mov     rcx, r14",
    "lea     edx, [r9+0x70]",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "movzx   ecx, byte [rbp+0x8]",
    "mov     qword [rbp+0x50], r15",
    "mov     r15, qword [rbp+0x60]",
    "and     qword [rbp+0x60], 0x0",
    "mov     dword [rbp+0x20], eax",
    "mov     dword [rsp+0x6c], esi",
    "call    sub_1400645bc",
    "lea     r8, [rel data_1400f6a10]  {\"%s USING TEMP B-TREE\"}",
    "mov     edx, 0x1",
    "mov     rcx, r12",
    "mov     r9, rax",
    "call    sub_140032580",
    "lea     r8, [rsp+0x68]",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_1400692cc",
    "mov     r13d, eax",
    "mov     rax, qword [rbp+0x50]",
    "mov     qword [rbp+0x50], rbx",
    "mov     qword [rsp+0x118], rax",
    "movzx   eax, word [rbx+0xa]",
    "cmp     word [rbp+0xa], ax",
    "jle     0x140065cc9",
    "cmp     byte [rsp+0x48], 0x1",
    "mov     qword [rbp+0x60], rdi",
    "mov     dword [rbp+0x10], ebx",
    "mov     dword [rbp+0x14], ebx",
    "je      0x140066165",
    "mov     rcx, rsi",
    "call    sub_140043de4",
    "mov     edx, dword [r12+0x110]",
    "cmp     edx, r15d",
    "jne     0x140066180",
    "movsxd  rax, dword [rsp+0x100]",
    "cmp     eax, r15d",
    "jle     0x140065f4a",
    "mov     rdx, qword [rbp+0x60]",
    "test    rdx, rdx",
    "je      0x140065cdf",
    "mov     word [rbp+0xa], ax",
    "xor     r15d, r15d",
    "mov     esi, dword [r12+0x44]",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "dec     esi",
    "mov     r8d, esi",
    "lea     edi, [rsi-0x1]",
    "mov     dword [r12+0x44], edi",
    "call    sub_140065330",
    "mov     r9d, esi",
    "mov     r8d, r15d",
    "mov     edx, 0x24",
    "mov     rcx, r14",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032364",
    "mov     ebx, dword [r14+0x90]",
    "mov     dword [rsp+0x38], esi",
    "lea     rax, [rsp+0x48]",
    "mov     dword [rsp+0x30], edi",
    "mov     qword [rsp+0x28], rax",
    "and     qword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, r15d",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_1400639f0",
    "mov     edx, edi",
    "mov     rcx, r14",
    "call    sub_14003278c",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, ebx",
    "mov     r8d, r15d",
    "mov     edx, 0x5",
    "mov     rcx, r14",
    "call    sub_140032364",
    "mov     edx, esi",
    "mov     rcx, r14",
    "call    sub_14003278c",
    "and     dword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "lea     edx, [r9+0x75]",
    "mov     r8d, r15d",
    "mov     rcx, r14",
    "call    sub_140032364",
    "mov     rsi, qword [rsp+0x108]",
    "mov     rcx, qword [r12+0x10]",
    "call    sub_140032d34",
    "mov     eax, dword [rax+0x8]",
    "mov     eax, r15d",
    "jmp     0x14006618d",
    "mov     rcx, rax",
    "call    sub_14001a0b8",
    "cmp     r10w, ax",
    "jle     0x140065f4a",
    "mov     qword [rbp+0x60], r15",
    "mov     eax, dword [r12+0x44]",
    "mov     rdx, rbp",
    "lea     esi, [rax-0x1]",
    "mov     rcx, r12",
    "lea     r15d, [rsi-0x1]",
    "mov     r8d, esi",
    "mov     dword [r12+0x44], r15d",
    "call    sub_140065330",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, esi",
    "mov     r8d, edi",
    "mov     edx, 0x24",
    "mov     rcx, r14",
    "call    sub_140032364",
    "mov     al, byte [r12+0x1f]",
    "test    al, al",
    "jne     0x140065d2f",
    "mov     rcx, qword [rsp+0x108]",
    "call    sub_140043de4",
    "mov     dword [r12+0x110], eax",
    "mov     word [rbp+0xa], ax",
    "dec     al",
    "movzx   eax, al",
    "mov     byte [r12+0x1f], al",
    "mov     ebx, dword [r12+rax*4+0xbc]",
    "inc     dword [r12+0x38]",
    "mov     ebx, dword [r12+0x38]",
    "jmp     0x140065d41",
    "mov     dword [rsp+0x38], esi",
    "lea     rax, [rsp+0x48]",
    "mov     dword [rsp+0x30], r15d",
    "mov     qword [rsp+0x28], rax",
    "and     qword [rsp+0x20], 0x0",
    "xor     r9d, r9d",
    "mov     r8d, edi",
    "mov     rdx, rbp",
    "mov     rcx, r12",
    "call    sub_1400639f0",
    "mov     edx, r15d",
    "mov     rcx, r14",
    "call    sub_14003278c",
    "mov     r9d, dword [rsp+0x100]",
    "xor     r15d, r15d",
    "lea     edx, [r15+0x5]",
    "mov     r8d, edi",
    "mov     rcx, r14",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "mov     edx, esi",
    "mov     rcx, r14",
    "call    sub_14003278c",
    "lea     r8d, [rdi+0x1]",
    "lea     edx, [r15+0x75]",
    "xor     r9d, r9d",
    "mov     rcx, r14",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "lea     edx, [r15+0x75]",
    "xor     r9d, r9d",
    "mov     r8d, edi",
    "mov     rcx, r14",
    "mov     dword [rsp+0x20], r15d",
    "call    sub_140032364",
    "mov     rsi, qword [rsp+0x108]",
    "jmp     0x140066168",
    "cmp     byte [r12+0x1f], 0x8",
    "jae     0x140065d9c",
    "and     dword [rsp+0x20], 0x0",
    "mov     r9d, ebx",
    "mov     r8d, edi",
    "mov     edx, 0x7f",
    "mov     rcx, r14",
    "call    sub_140032364",
    "and     dword [rsp+0x28], 0x0",
    "lea     r8d, [rdi+0x1]",
    "mov     r9d, r15d",
    "mov     edx, 0x1c",
    "mov     rcx, r14",
    "mov     dword [rsp+0x100], eax",
    "mov     dword [rsp+0x20], ebx",
    "call    sub_140032678",
    "test    ebx, ebx",
    "je      0x140065d9c",
    "movzx   eax, byte [r12+0x1f]",
    "mov     dword [r12+rax*4+0xbc], ebx",
    "inc     byte [r12+0x1f]"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}