{
  "address": "0x1400b454c",
  "rules": [
    "decompress data using aPLib/88da69e00a6e49ce8c080be3a0beeb89",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "check OS version/0dbc6332c9724004b686b44a39c40b94",
    "allocate or change RW memory/f065d51335ee4137b486ba2a6434de57",
    "contain loop",
    "hash data with CRC32/dc8063c9cb1c41b9a5bafe66f5117ac4",
    "allocate or change RWX memory/e5d60c23edee4683a25ac882b99be25c/be08ffa5ddd942e8ab0706a663121e4b",
    "check OS version/fa26a21322994ec4bdbe5020e62bd777",
    "write file on Windows/035d57bed47747649158312e9532f27d",
    "check Internet connectivity via WinINet/e5536f56688049548c83e5cf372d25ac",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "check OS version/e331473c09f0419eb22f4786f6872060"
  ],
  "disassembly": [
    "mov     r11, rsp",
    "mov     qword [r11+0x8], rbx",
    "mov     qword [r11+0x10], rbp",
    "mov     qword [r11+0x18], rsi",
    "mov     qword [r11+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x60",
    "and     qword [r11-0x28], 0x0",
    "and     qword [r11-0x38], 0x0",
    "lea     rax, [rel data_140140240]",
    "mov     r12d, r8d",
    "mov     qword [r11-0x40], rcx",
    "mov     qword [r11-0x48], rdx",
    "lea     rbx, [r12+r12*8]",
    "xor     r13d, r13d",
    "mov     r14d, r9d",
    "shl     rbx, 0x3",
    "lea     ecx, [r13+0x40]",
    "mov     qword [r11-0x20], rax",
    "mov     rdx, rbx",
    "mov     qword [r11-0x30], rax",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x50], rax",
    "test    rax, rax",
    "je      0x1400b48e0",
    "lea     r11, [rsp+0x60]",
    "mov     rbx, qword [r11+0x20]",
    "mov     rbp, qword [r11+0x28]",
    "mov     rsi, qword [r11+0x30]",
    "mov     rdi, qword [r11+0x38]",
    "mov     rsp, r11",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "lea     rdx, [rsp+0x30]",
    "lea     rcx, [rsp+0x50]",
    "mov     r8, rbx",
    "call    sub_14000b6d8",
    "test    eax, eax",
    "je      0x1400b48d5",
    "mov     rcx, qword [rsp+0x50]",
    "call    qword [rel LocalFree]",
    "xor     ebp, ebp",
    "test    r12d, r12d",
    "je      0x1400b48d5",
    "mov     rbx, qword [rsp+0x50]",
    "add     rbx, 0x38",
    "cmp     dword [rbx-0x30], 0x0",
    "jbe     0x1400b48d5",
    "cmp     dword [rbx-0x30], 0x14",
    "jae     0x1400b48d5",
    "lea     rcx, [rsp+0x30]",
    "mov     qword [rsp+0x30], rax",
    "call    sub_14000d9a4",
    "mov     rdi, rax",
    "test    rax, rax",
    "je      0x1400b48d5",
    "test    r14d, r14d",
    "jne     0x1400b4701",
    "test    r13d, r13d",
    "jne     0x1400b4718",
    "lea     rcx, [rel data_140121db8]  {\"ServerName\"}",
    "mov     rdx, rax",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "lea     rcx, [rel data_140121e80]  {u\"%-40S  \"}",
    "mov     rdx, rdi",
    "call    sub_14000c030",
    "mov     edx, dword [rbx-0x30]",
    "mov     eax, edx",
    "sub     eax, 0x1",
    "je      0x1400b489f",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "mov     r13d, 0x1",
    "lea     rcx, [rel data_140121dc8]  {\"ServerFqdn\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "mov     edx, dword [rbx-0x28]",
    "lea     rcx, [rel data_140121e90]  {u\"[ dword ] %u (0x%08x)\"}",
    "sub     eax, 0x1",
    "je      0x1400b4892",
    "lea     rcx, [rel data_140121dd8]  {\"ServerNameUsedForAuthentication\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "mov     rax, qword [rbx-0x38]",
    "test    rax, rax",
    "je      0x1400b48d5",
    "movzx   edx, word [rbx-0x28]",
    "lea     rcx, [rel data_140121ec0]  {u\"[ word? ] %u (0x%04x)\"}",
    "jmp     0x1400b48a9",
    "sub     eax, 0x1",
    "je      0x1400b486e",
    "lea     rcx, [rel data_140121df8]  {\"UserSpecifiedServerName\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "mov     r8d, edx",
    "call    sub_14000c030",
    "cmp     dword [rbx-0x28], 0x0",
    "lea     rax, [rel data_140121ef0]  {u\"TRUE\"}",
    "lea     rdx, [rel data_140121f00]  {u\"FALSE\"}",
    "lea     rcx, [rel data_140121f10]  {u\"[ bool  ] %s\"}",
    "cmovne  rdx, rax",
    "call    sub_14000c030",
    "jmp     0x1400b48b1",
    "sub     eax, 0x1",
    "je      0x1400b4828",
    "lea     rcx, [rel data_140121e10]  {\"UserName\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "lea     rcx, [rel data_1400d27a8]",
    "call    sub_14000c030",
    "lea     rcx, [rel data_140121f30]  {u\"[wstring] \"}",
    "call    sub_14000c030",
    "mov     r11, qword [rbx-0x28]",
    "lea     rcx, [rsp+0x30]",
    "mov     edx, 0x400",
    "mov     qword [rsp+0x30], r11",
    "call    sub_14000ddb0",
    "mov     rsi, rax",
    "test    rax, rax",
    "je      0x1400b48b1",
    "cmp     eax, 0x2",
    "je      0x1400b476a",
    "lea     rcx, [rel data_140121e1c]  {\"Domain\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "lea     rcx, [rel data_140121f48]  {u\"'%s'\"}",
    "mov     rdx, rax",
    "call    sub_14000c030",
    "mov     rcx, rsi",
    "lea     rcx, [rel data_140121f58]  {u\"[protect] \"}",
    "call    sub_14000c030",
    "cmp     qword [rbx-0x28], 0x0",
    "je      0x1400b48b1",
    "mov     r8, qword [rbx-0x28]",
    "lea     rcx, [rel data_140122010]  {u\"[unk - %u] 0x%p\"}",
    "call    sub_14000c030",
    "jmp     0x1400b48b1",
    "lea     rcx, [rel data_140121e28]  {\"Password\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "cmp     dword [rbx], 0x0",
    "je      0x1400b48b1",
    "lea     rcx, [rel data_140121e38]  {\"SmartCardReaderName\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "mov     edx, dword [rbx]",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     qword [rsp+0x40], rax",
    "test    rax, rax",
    "je      0x1400b48b1",
    "lea     rcx, [rel data_140121e50]  {\"RDmiUsername\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "je      0x1400b4701",
    "mov     rax, qword [rbx-0x28]",
    "lea     rdx, [rsp+0x30]",
    "lea     rcx, [rsp+0x40]",
    "mov     qword [rsp+0x30], rax",
    "mov     r8d, dword [rbx]",
    "call    sub_14000b6d8",
    "test    eax, eax",
    "je      0x1400b4821",
    "lea     rcx, [rel data_140121e60]  {\"PasswordContainsSCardPin\"}",
    "mov     rdx, rdi",
    "call    qword [rel _strcmpi]",
    "test    eax, eax",
    "jne     0x1400b48bd",
    "mov     rcx, qword [rsp+0x40]",
    "jmp     0x1400b4866",
    "bt      dword [rbx-0x14], 0xb",
    "jae     0x1400b4812",
    "mov     rcx, rdi",
    "call    qword [rel LocalFree]",
    "inc     ebp",
    "add     rbx, 0x48",
    "cmp     ebp, r12d",
    "jb      0x1400b45e4",
    "call    qword [rel LocalFree]",
    "jmp     0x1400b48b1",
    "mov     edx, dword [rbx]",
    "mov     rcx, qword [rsp+0x40]",
    "xor     r8d, r8d",
    "call    sub_140012f68",
    "mov     r9d, dword [rbx]",
    "mov     r8, qword [rsp+0x40]",
    "mov     rcx, qword [rsp+0x38]",
    "and     dword [rsp+0x20], 0x0",
    "xor     edx, edx",
    "call    sub_1400067e0",
    "test    eax, eax",
    "je      0x1400b4804",
    "lea     rcx, [rel data_140121f80]  {u\"ERROR kuhl_m_ts_mstsc_MemoryAnal\u2026\"}",
    "call    sub_14000c030",
    "jmp     0x1400b4821",
    "mov     rax, qword [rsp+0x40]",
    "lea     rcx, [rel data_140121f70]  {u\"'%.*s'\"}",
    "mov     edx, dword [rax]",
    "lea     r8, [rax+0x4]",
    "shr     rdx, 0x1",
    "call    sub_14000c030",
    "jmp     0x1400b4821"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}