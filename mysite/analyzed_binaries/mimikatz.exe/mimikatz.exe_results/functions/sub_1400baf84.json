{
  "address": "0x1400baf84",
  "rules": [
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x8], rbx",
    "mov     qword [rax+0x10], rbp",
    "mov     qword [rax+0x18], rsi",
    "mov     qword [rax+0x20], rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "sub     rsp, 0x20",
    "xor     edi, edi",
    "mov     rsi, r8",
    "mov     rbp, rdx",
    "mov     r13, rcx",
    "cmp     rdx, rdi",
    "jne     0x1400bafba",
    "call    qword [rel lstrlenW]",
    "mov     rcx, qword [rsp+0x68]",
    "mov     r12d, eax",
    "add     r12d, r12d",
    "lea     eax, [r12+0x18]",
    "mov     dword [rcx], eax",
    "cmp     rbp, rdi",
    "je      0x1400bafdc",
    "cmp     r8, rdi",
    "je      0x1400bb0d8",
    "cmp     rsi, rdi",
    "je      0x1400bafe4",
    "add     eax, 0x38",
    "mov     dword [rcx], eax",
    "mov     rbx, qword [rsp+0x40]",
    "mov     rbp, qword [rsp+0x48]",
    "mov     rsi, qword [rsp+0x50]",
    "mov     eax, edi",
    "mov     rdi, qword [rsp+0x58]",
    "add     rsp, 0x20",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "retn    ",
    "mov     edx, dword [rcx]",
    "mov     ecx, 0x40",
    "call    qword [rel LocalAlloc]",
    "mov     rbx, rax",
    "mov     rax, qword [rsp+0x60]",
    "mov     qword [rax], rbx",
    "cmp     rbx, rdi",
    "je      0x1400bb0d8",
    "add     dword [rcx], 0x28",
    "mov     eax, 0x4",
    "mov     word [rbx], ax",
    "lea     r14d, [rax-0x3]",
    "cmp     rbp, rdi",
    "je      0x1400bb01b",
    "cmp     rsi, rdi",
    "je      0x1400bb025",
    "add     word [rbx+0x4], r14w",
    "mov     word [rbx+0xe], r12w",
    "mov     word [rbx+0xc], r12w",
    "movzx   eax, word [rbx+0x4]",
    "add     eax, r14d",
    "mov     r12d, 0x1000",
    "mov     rdx, r13",
    "lea     eax, [rax+rax*2]",
    "shl     eax, 0x3",
    "mov     dword [rbx+0x10], eax",
    "mov     dword [rbx+0x14], r12d",
    "mov     ecx, dword [rbx+0x10]",
    "movzx   r8d, word [rbx+0xe]",
    "add     rcx, rbx",
    "call    memcpy",
    "mov     dword [rbx+0x20], r12d",
    "mov     rax, rbp",
    "neg     rax",
    "mov     rax, rbp",
    "mov     rdx, rsi",
    "sbb     ecx, ecx",
    "neg     ecx",
    "add     ecx, 0x11",
    "neg     rax",
    "mov     dword [rbx+0x24], ecx",
    "sbb     ecx, ecx",
    "and     ecx, 0x10",
    "lea     r8d, [rcx+0x10]",
    "mov     dword [rbx+0x28], r8d",
    "movzx   r9d, word [rbx+0xe]",
    "add     r9d, dword [rbx+0x10]",
    "cmp     rbp, rdi",
    "mov     ecx, r9d",
    "cmovne  rdx, rbp",
    "mov     dword [rbx+0x2c], r9d",
    "add     rcx, rbx",
    "call    memcpy",
    "cmp     rsi, rdi",
    "je      0x1400bb0d5",
    "add     word [rbx+0x4], r14w",
    "mov     edi, r14d",
    "mov     edx, dword [rbx+0x2c]",
    "mov     dword [rbx+0x38], r12d",
    "mov     dword [rbx+0x3c], 0x11",
    "add     edx, dword [rbx+0x28]",
    "mov     dword [rbx+0x40], 0x10",
    "mov     dword [rbx+0x44], edx",
    "mov     rax, qword [rsi]",
    "mov     qword [rdx+rbx], rax",
    "mov     rax, qword [rsi+0x8]",
    "mov     qword [rdx+rbx+0x8], rax"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}