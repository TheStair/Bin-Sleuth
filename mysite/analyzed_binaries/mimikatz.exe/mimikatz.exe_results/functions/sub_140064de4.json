{
  "address": "0x140064de4",
  "rules": [
    "encrypt data using chaskey/4b6f9d91d05f46dd9aa3662f80cb6278",
    "hash data using djb2/1485ed9954f84e3481d22b64bc4cfca7",
    "hash data using jshash/79354a2ef36a4036b42806ea4b41f8bd",
    "check for time delay via GetTickCount/dcdc41ab318e4e618f624ba5aeac30b2",
    "connect to WMI namespace via WbemLocator/50f8c95bd151440fa4fe29260efaf440",
    "validate payment card number using luhn algorithm with no lookup table/f595b07566ee46b3ba7870816078c34e",
    "contain loop"
  ],
  "disassembly": [
    "mov     rax, rsp",
    "mov     qword [rax+0x10], rbx",
    "mov     qword [rax+0x20], r9",
    "mov     qword [rax+0x18], r8",
    "push    rbp",
    "push    rsi",
    "push    rdi",
    "push    r12",
    "push    r13",
    "push    r14",
    "push    r15",
    "sub     rsp, 0x50",
    "mov     rsi, qword [rcx]",
    "mov     r12, r9",
    "xor     r9d, r9d",
    "mov     r14, r8",
    "mov     rbx, rdx",
    "mov     qword [rax-0x50], r9",
    "mov     dword [rax-0x54], r9d",
    "mov     dword [rax-0x58], r9d",
    "mov     qword [rax-0x48], r9",
    "cmp     rdx, r9",
    "je      0x140064e4b",
    "mov     edi, r9d",
    "mov     rbp, r9",
    "movsxd  rdi, dword [rdx]",
    "mov     rcx, rsi",
    "mov     rdx, rdi",
    "shl     rdx, 0x5",
    "call    sub_140016ba8",
    "xor     r9d, r9d",
    "mov     rbp, rax",
    "mov     eax, 0x7fff",
    "cmp     edi, eax",
    "jle     0x140064e51",
    "lea     rcx, [rsp+0x30]",
    "call    sub_14001a268",
    "xor     r15d, r15d",
    "cmp     byte [rsi+0x61], r15b",
    "je      0x14006505a",
    "lea     r14, [rbx+0x8]",
    "cmp     edi, r9d",
    "mov     word [r14], di",
    "mov     r13d, r9d",
    "mov     qword [r12], rbp",
    "mov     r15, rbp",
    "jle     0x140065003",
    "mov     edi, eax",
    "jmp     0x140064e51",
    "xor     eax, eax",
    "movsxd  rdi, r13d",
    "cmp     rdi, r15",
    "jle     0x14006503b",
    "mov     r12, qword [rsp+0xa8]",
    "mov     r14, qword [rsp+0xa0]",
    "mov     rdx, qword [r14+0x8]",
    "cmp     rdx, r9",
    "jne     0x140064ef0",
    "cmp     rbp, r15",
    "je      0x14006504b",
    "mov     rbx, rbp",
    "mov     rcx, rsi",
    "call    sub_140016dac",
    "mov     rcx, qword [r14]",
    "call    sub_1400430a8",
    "jmp     0x140064e8d",
    "mov     qword [r12], r15",
    "mov     eax, 0x7",
    "mov     word [r14], r15w",
    "jmp     0x14006505c",
    "mov     rdx, rbp",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "add     rbx, 0x20",
    "sub     rdi, 0x1",
    "jne     0x140065021",
    "mov     rcx, rsi",
    "call    sub_1400169a8",
    "cmp     rbx, r9",
    "jne     0x140064f06",
    "cmp     byte [rax], 0x89",
    "je      0x140064e89",
    "mov     rbx, qword [rsp+0x98]",
    "add     rsp, 0x50",
    "pop     r15",
    "pop     r14",
    "pop     r13",
    "pop     r12",
    "pop     rdi",
    "pop     rsi",
    "pop     rbp",
    "retn    ",
    "mov     rdx, qword [rbx]",
    "cmp     rdx, r15",
    "je      0x140065031",
    "lea     rcx, [rsp+0x30]",
    "xor     r8d, r8d",
    "mov     rdx, rbx",
    "call    sub_14001a410",
    "xor     r9d, r9d",
    "cmp     qword [rax+0x10], r9",
    "je      0x140064fb7",
    "mov     qword [r15], rbx",
    "cmp     rbx, r9",
    "je      0x140064fdf",
    "mov     rax, qword [rax+0x18]",
    "cmp     byte [rax], 0xa2",
    "jne     0x140064ec7",
    "mov     rcx, rbx",
    "call    sub_140019074",
    "cmp     eax, r9d",
    "mov     r10d, eax",
    "jle     0x140064f63",
    "inc     r13d",
    "add     r14, 0x28",
    "add     r15, 0x20",
    "cmp     r13d, edi",
    "jl      0x140064e6c",
    "lea     rcx, [rsp+0x30]",
    "mov     r8, r15",
    "mov     rdx, rbx",
    "call    sub_14001a4ac",
    "cmp     rax, r15",
    "jne     0x140064fdc",
    "cmp     byte [rax], 0x3b",
    "jne     0x140064ed2",
    "movsx   ecx, word [rax+0x2c]",
    "mov     rax, qword [rax+0x40]",
    "cmp     ecx, r9d",
    "jge     0x140064eb6",
    "inc     r12d",
    "lea     rdx, [rel data_1400f68f8]  {\"%.*z:%u\"}",
    "mov     r9, rbx",
    "mov     r8d, r10d",
    "mov     rcx, rsi",
    "mov     dword [rsp+0x90], r12d",
    "mov     dword [rsp+0x20], r12d",
    "call    _printf_p_l",
    "mov     rbx, rax",
    "cmp     r12d, 0x3",
    "jbe     0x140064fab",
    "lea     r8d, [rax-0x1]",
    "movsxd  rdx, r8d",
    "jmp     0x140064f53",
    "cmp     byte [rsi+0x61], r9b",
    "jne     0x140064ff3",
    "xor     r9d, r9d",
    "mov     rcx, rsi",
    "call    sub_140016efc",
    "mov     rdx, qword [r14+0x10]",
    "mov     rdx, qword [rax+0x8]",
    "jmp     0x140064ed6",
    "mov     rax, qword [rax+0x8]",
    "movsxd  rcx, ecx",
    "shl     rcx, 0x5",
    "mov     rdx, qword [rcx+rax]",
    "jmp     0x140064ed6",
    "movsx   ecx, word [rax+0x44]",
    "cmp     ecx, r9d",
    "jge     0x140064eb6",
    "xor     r9d, r9d",
    "lea     rdx, [rsp+0x90]",
    "mov     ecx, 0x4",
    "call    sub_1400188ac",
    "mov     r12d, dword [rsp+0x90]",
    "cmp     rdx, r9",
    "jg      0x140064f3c",
    "lea     r8d, [r13+0x1]",
    "lea     rdx, [rel data_1400f68e8]  {\"column%d\"}",
    "mov     rcx, rsi",
    "call    _printf_p_l",
    "jmp     0x140064ef8",
    "cmp     rdx, r9",
    "jne     0x140064ef0",
    "lea     rdx, [rel data_1400f2314]  {\"rowid\"}",
    "jmp     0x140064ed6",
    "movzx   ecx, byte [rdx+rbx]",
    "lea     rax, [rel data_1400d6500]",
    "test    byte [rcx+rax], 0x4",
    "je      0x140064f58",
    "movsxd  rax, r8d",
    "cmp     byte [rax+rbx], 0x3a",
    "cmove   r10d, r8d",
    "xor     r9d, r9d",
    "mov     rbx, rax",
    "mov     r12d, r9d",
    "jmp     0x140064fae",
    "dec     r8d",
    "dec     rdx"
  ],
  "high_level_IL": [
    "No High Level IL Loaded"
  ]
}